/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 29361:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"branches":[{"name":"main","docs":{"dest":".","options":{"add":true}}},{"name":"next","prerelease":"rc","skipChangeLog":true,"docs":{"dest":"next"}}],"docs":{"dir":"docs"},"bundles":[{"type":"npm","folder":"dist"}]}');

/***/ }),

/***/ 80285:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"vars":"bump-and-release-github-action","version":"0.0.0","description":"Export branch names as environment variables","main":"index.js","scripts":{"lint":"eslint index.js","package":"ncc build index.js -o dist","test":"eslint index.js && jest","prepublishOnly":"cpy \'package*.json\' dist"},"repository":{"type":"git","url":"git+https://github.com/bvkimball/bump-and-release.git"},"keywords":["GitHub","Actions","JavaScript"],"author":"Brian Kimball<bvkimball@gmail.com>","license":"MIT","bugs":{"url":"https://github.com/bvkimball/bump-and-release/issues"},"homepage":"https://github.com/bvkimball/bump-and-release#readme","dependencies":{"@actions/core":"^1.6.0","child-process-promise":"^2.2.1","fast-glob":"^3.2.7","gh-pages":"^3.2.3","got":"^11.8.2","replace":"^1.2.1","semver":"^7.3.5","simple-git":"^2.47.0"},"devDependencies":{"@vercel/ncc":"^0.31.1","eslint":"^7.32.0","cpy-cli":"3.1.1"}}');

/***/ }),

/***/ 26981:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@actions/core@1.6.0","_id":"@actions/core@1.6.0","_inBundle":false,"_integrity":"sha512-NB1UAZomZlCV/LmJqkLhNTqtKfFXJZAUPcfl/zqG7EfsQdeUJtaWO98SGbuQ3pydJ3fHl2CvI/51OKYlCYYcaw==","_location":"/@actions/core","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"@actions/core@1.6.0","name":"@actions/core","escapedName":"@actions%2fcore","scope":"@actions","rawSpec":"1.6.0","saveSpec":null,"fetchSpec":"1.6.0"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/@actions/core/-/core-1.6.0.tgz","_shasum":"0568e47039bfb6a9170393a73f3b7eb3b22462cb","_spec":"@actions/core@1.6.0","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/actions/toolkit/issues"},"bundleDependencies":false,"dependencies":{"@actions/http-client":"^1.0.11"},"deprecated":false,"description":"Actions core lib","devDependencies":{"@types/node":"^12.0.2"},"directories":{"lib":"lib","test":"__tests__"},"files":["lib","!.DS_Store"],"homepage":"https://github.com/actions/toolkit/tree/main/packages/core","keywords":["github","actions","core"],"license":"MIT","main":"lib/core.js","name":"@actions/core","publishConfig":{"access":"public"},"repository":{"type":"git","url":"git+https://github.com/actions/toolkit.git","directory":"packages/core"},"scripts":{"audit-moderate":"npm install && npm audit --json --audit-level=moderate > audit.json","test":"echo \\"Error: run tests from root\\" && exit 1","tsc":"tsc"},"types":"lib/core.d.ts","version":"1.6.0"}');

/***/ }),

/***/ 21768:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@actions/http-client@^1.0.11","_id":"@actions/http-client@1.0.11","_inBundle":false,"_integrity":"sha512-VRYHGQV1rqnROJqdMvGUbY/Kn8vriQe/F9HR2AlYHzmKuM/p3kjNuXhmdBfcVgsvRWTz5C5XW5xvndZrVBuAYg==","_location":"/@actions/http-client","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@actions/http-client@^1.0.11","name":"@actions/http-client","escapedName":"@actions%2fhttp-client","scope":"@actions","rawSpec":"^1.0.11","saveSpec":null,"fetchSpec":"^1.0.11"},"_requiredBy":["/@actions/core"],"_resolved":"https://registry.npmjs.org/@actions/http-client/-/http-client-1.0.11.tgz","_shasum":"c58b12e9aa8b159ee39e7dd6cbd0e91d905633c0","_spec":"@actions/http-client@^1.0.11","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@actions/core","author":{"name":"GitHub, Inc."},"bugs":{"url":"https://github.com/actions/http-client/issues"},"bundleDependencies":false,"dependencies":{"tunnel":"0.0.6"},"deprecated":false,"description":"Actions Http Client","devDependencies":{"@types/jest":"^25.1.4","@types/node":"^12.12.31","jest":"^25.1.0","prettier":"^2.0.4","proxy":"^1.0.1","ts-jest":"^25.2.1","typescript":"^3.8.3"},"homepage":"https://github.com/actions/http-client#readme","keywords":["Actions","Http"],"license":"MIT","main":"index.js","name":"@actions/http-client","repository":{"type":"git","url":"git+https://github.com/actions/http-client.git"},"scripts":{"audit-check":"npm audit --audit-level=moderate","build":"rm -Rf ./_out && tsc && cp package*.json ./_out && cp *.md ./_out && cp LICENSE ./_out && cp actions.png ./_out","format":"prettier --write *.ts && prettier --write **/*.ts","format-check":"prettier --check *.ts && prettier --check **/*.ts","test":"jest"},"version":"1.0.11"}');

/***/ }),

/***/ 23474:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["@babel/code-frame@7.12.11","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"@babel/code-frame@7.12.11","_id":"@babel/code-frame@7.12.11","_inBundle":false,"_integrity":"sha512-Zt1yodBx1UcyiePMSkWnU4hPqhwq7hGi2nFL1LeA3EUl+q2LQx16MISgJ0+z7dnmgvP9QtIleuETGOiOH1RcIw==","_location":"/@babel/code-frame","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"@babel/code-frame@7.12.11","name":"@babel/code-frame","escapedName":"@babel%2fcode-frame","scope":"@babel","rawSpec":"7.12.11","saveSpec":null,"fetchSpec":"7.12.11"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.12.11.tgz","_spec":"7.12.11","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sebastian McKenzie","email":"sebmck@gmail.com"},"bugs":{"url":"https://github.com/babel/babel/issues"},"dependencies":{"@babel/highlight":"^7.10.4"},"description":"Generate errors that contain a code frame that point to source locations.","devDependencies":{"@types/chalk":"^2.0.0","chalk":"^2.0.0","strip-ansi":"^4.0.0"},"homepage":"https://babeljs.io/","license":"MIT","main":"lib/index.js","name":"@babel/code-frame","publishConfig":{"access":"public"},"repository":{"type":"git","url":"git+https://github.com/babel/babel.git","directory":"packages/babel-code-frame"},"version":"7.12.11"}');

/***/ }),

/***/ 93534:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@babel/helper-validator-identifier@^7.15.7","_id":"@babel/helper-validator-identifier@7.15.7","_inBundle":false,"_integrity":"sha512-K4JvCtQqad9OY2+yTU8w+E82ywk/fe+ELNlt1G8z3bVGlZfn/hOcQQsUhGhW/N+tb3fxK800wLtKOE/aM0m72w==","_location":"/@babel/helper-validator-identifier","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@babel/helper-validator-identifier@^7.15.7","name":"@babel/helper-validator-identifier","escapedName":"@babel%2fhelper-validator-identifier","scope":"@babel","rawSpec":"^7.15.7","saveSpec":null,"fetchSpec":"^7.15.7"},"_requiredBy":["/@babel/highlight"],"_resolved":"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.15.7.tgz","_shasum":"220df993bfe904a4a6b02ab4f3385a5ebf6e2389","_spec":"@babel/helper-validator-identifier@^7.15.7","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@babel/highlight","author":{"name":"The Babel Team","url":"https://babel.dev/team"},"bugs":{"url":"https://github.com/babel/babel/issues"},"bundleDependencies":false,"deprecated":false,"description":"Validate identifier/keywords name","devDependencies":{"@unicode/unicode-14.0.0":"^1.2.1","charcodes":"^0.2.0"},"engines":{"node":">=6.9.0"},"exports":"./lib/index.js","homepage":"https://github.com/babel/babel#readme","license":"MIT","main":"./lib/index.js","name":"@babel/helper-validator-identifier","publishConfig":{"access":"public"},"repository":{"type":"git","url":"git+https://github.com/babel/babel.git","directory":"packages/babel-helper-validator-identifier"},"version":"7.15.7"}');

/***/ }),

/***/ 3850:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["chalk@2.4.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"chalk@2.4.2","_id":"chalk@2.4.2","_inBundle":false,"_integrity":"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==","_location":"/@babel/highlight/chalk","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"chalk@2.4.2","name":"chalk","escapedName":"chalk","rawSpec":"2.4.2","saveSpec":null,"fetchSpec":"2.4.2"},"_requiredBy":["/@babel/highlight"],"_resolved":"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz","_spec":"2.4.2","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/chalk/chalk/issues"},"dependencies":{"ansi-styles":"^3.2.1","escape-string-regexp":"^1.0.5","supports-color":"^5.3.0"},"description":"Terminal string styling done right","devDependencies":{"ava":"*","coveralls":"^3.0.0","execa":"^0.9.0","flow-bin":"^0.68.0","import-fresh":"^2.0.0","matcha":"^0.7.0","nyc":"^11.0.2","resolve-from":"^4.0.0","typescript":"^2.5.3","xo":"*"},"engines":{"node":">=4"},"files":["index.js","templates.js","types/index.d.ts","index.js.flow"],"homepage":"https://github.com/chalk/chalk#readme","keywords":["color","colour","colors","terminal","console","cli","string","str","ansi","style","styles","tty","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"chalk","repository":{"type":"git","url":"git+https://github.com/chalk/chalk.git"},"scripts":{"bench":"matcha benchmark.js","coveralls":"nyc report --reporter=text-lcov | coveralls","test":"xo && tsc --project types && flow --max-warnings=0 && nyc ava"},"types":"types/index.d.ts","version":"2.4.2","xo":{"envs":["node","mocha"],"ignores":["test/_flow.js"]}}');

/***/ }),

/***/ 98918:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@babel/highlight@^7.10.4","_id":"@babel/highlight@7.16.0","_inBundle":false,"_integrity":"sha512-t8MH41kUQylBtu2+4IQA3atqevA2lRgqA2wyVB/YiWmsDSuylZZuXOUy9ric30hfzauEFfdsuk/eXTRrGrfd0g==","_location":"/@babel/highlight","_phantomChildren":{"ansi-styles":"3.2.1","escape-string-regexp":"1.0.5","supports-color":"5.5.0"},"_requested":{"type":"range","registry":true,"raw":"@babel/highlight@^7.10.4","name":"@babel/highlight","escapedName":"@babel%2fhighlight","scope":"@babel","rawSpec":"^7.10.4","saveSpec":null,"fetchSpec":"^7.10.4"},"_requiredBy":["/@babel/code-frame"],"_resolved":"https://registry.npmjs.org/@babel/highlight/-/highlight-7.16.0.tgz","_shasum":"6ceb32b2ca4b8f5f361fb7fd821e3fddf4a1725a","_spec":"@babel/highlight@^7.10.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@babel/code-frame","author":{"name":"The Babel Team","url":"https://babel.dev/team"},"bugs":{"url":"https://github.com/babel/babel/issues"},"bundleDependencies":false,"dependencies":{"@babel/helper-validator-identifier":"^7.15.7","chalk":"^2.0.0","js-tokens":"^4.0.0"},"deprecated":false,"description":"Syntax highlight JavaScript strings for output in terminals.","devDependencies":{"@types/chalk":"^2.0.0","strip-ansi":"^4.0.0"},"engines":{"node":">=6.9.0"},"homepage":"https://babel.dev/docs/en/next/babel-highlight","license":"MIT","main":"./lib/index.js","name":"@babel/highlight","publishConfig":{"access":"public"},"repository":{"type":"git","url":"git+https://github.com/babel/babel.git","directory":"packages/babel-highlight"},"version":"7.16.0"}');

/***/ }),

/***/ 42012:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@eslint/eslintrc@^0.4.3","_id":"@eslint/eslintrc@0.4.3","_inBundle":false,"_integrity":"sha512-J6KFFz5QCYUJq3pf0mjEcCJVERbzv71PUIDczuh9JkwGEzced6CO5ADLHB1rbf/+oPBtoPfMYNOpGDzCANlbXw==","_location":"/@eslint/eslintrc","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@eslint/eslintrc@^0.4.3","name":"@eslint/eslintrc","escapedName":"@eslint%2feslintrc","scope":"@eslint","rawSpec":"^0.4.3","saveSpec":null,"fetchSpec":"^0.4.3"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-0.4.3.tgz","_shasum":"9e42981ef035beb3dd49add17acb96e8ff6f394c","_spec":"@eslint/eslintrc@^0.4.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"Nicholas C. Zakas"},"bugs":{"url":"https://github.com/eslint/eslintrc/issues"},"bundleDependencies":false,"dependencies":{"ajv":"^6.12.4","debug":"^4.1.1","espree":"^7.3.0","globals":"^13.9.0","ignore":"^4.0.6","import-fresh":"^3.2.1","js-yaml":"^3.13.1","minimatch":"^3.0.4","strip-json-comments":"^3.1.1"},"deprecated":false,"description":"The legacy ESLintRC config file format for ESLint","devDependencies":{"chai":"^4.2.0","eslint":"^7.21.0","eslint-config-eslint":"^7.0.0","eslint-plugin-jsdoc":"^32.2.0","eslint-plugin-node":"^11.1.0","eslint-release":"^3.1.2","fs-teardown":"0.1.1","mocha":"^8.1.1","shelljs":"^0.8.4","sinon":"^9.2.0","temp-dir":"^2.0.0"},"engines":{"node":"^10.12.0 || >=12.0.0"},"files":["lib","conf","LICENSE"],"homepage":"https://github.com/eslint/eslintrc#readme","keywords":["ESLint","ESLintRC","Configuration"],"license":"MIT","main":"lib/index.js","name":"@eslint/eslintrc","publishConfig":{"access":"public"},"repository":{"type":"git","url":"git+https://github.com/eslint/eslintrc.git"},"scripts":{"fix":"npm run lint -- --fix","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","generate-release":"eslint-generate-release","lint":"eslint . --report-unused-disable-directives","publish-release":"eslint-publish-release","test":"mocha -R progress -c \'tests/lib/**/*.js\'"},"version":"0.4.3"}');

/***/ }),

/***/ 12170:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@humanwhocodes/config-array@^0.5.0","_id":"@humanwhocodes/config-array@0.5.0","_inBundle":false,"_integrity":"sha512-FagtKFz74XrTl7y6HCzQpwDfXP0yhxe9lHLD1UZxjvZIcbyRz8zTFF/yYNfSfzU414eDwZ1SrO0Qvtyf+wFMQg==","_location":"/@humanwhocodes/config-array","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@humanwhocodes/config-array@^0.5.0","name":"@humanwhocodes/config-array","escapedName":"@humanwhocodes%2fconfig-array","scope":"@humanwhocodes","rawSpec":"^0.5.0","saveSpec":null,"fetchSpec":"^0.5.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.5.0.tgz","_shasum":"1407967d4c6eecd7388f83acf1eaf4d0c6e58ef9","_spec":"@humanwhocodes/config-array@^0.5.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"Nicholas C. Zakas"},"bugs":{"url":"https://github.com/humanwhocodes/config-array/issues"},"bundleDependencies":false,"dependencies":{"@humanwhocodes/object-schema":"^1.2.0","debug":"^4.1.1","minimatch":"^3.0.4"},"deprecated":false,"description":"Glob-based configuration matching.","devDependencies":{"@nitpik/javascript":"^0.3.3","@nitpik/node":"0.0.5","chai":"^4.2.0","eslint":"^6.7.1","esm":"^3.2.25","lint-staged":"^10.2.8","mocha":"^6.1.4","nyc":"^14.1.1","rollup":"^1.12.3","yorkie":"^2.0.0"},"engines":{"node":">=10.10.0"},"files":["api.js"],"gitHooks":{"pre-commit":"lint-staged"},"homepage":"https://github.com/humanwhocodes/config-array#readme","keywords":["configuration","configarray","config file"],"license":"Apache-2.0","lint-staged":{"*.js":["nitpik","eslint --fix --ignore-pattern \'!.eslintrc.js\'"]},"main":"api.js","name":"@humanwhocodes/config-array","repository":{"type":"git","url":"git+https://github.com/humanwhocodes/config-array.git"},"scripts":{"build":"rollup -c","format":"nitpik","lint":"eslint *.config.js src/*.js tests/*.js","prepublish":"npm run build","test":"mocha -r esm tests/ --recursive","test:coverage":"nyc --include src/*.js npm run test"},"version":"0.5.0"}');

/***/ }),

/***/ 53233:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@humanwhocodes/object-schema@^1.2.0","_id":"@humanwhocodes/object-schema@1.2.1","_inBundle":false,"_integrity":"sha512-ZnQMnLV4e7hDlUvw8H+U8ASL02SS2Gn6+9Ac3wGGLIe7+je2AeAOxPY+izIPJDfFDb7eDjev0Us8MO1iFRN8hA==","_location":"/@humanwhocodes/object-schema","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@humanwhocodes/object-schema@^1.2.0","name":"@humanwhocodes/object-schema","escapedName":"@humanwhocodes%2fobject-schema","scope":"@humanwhocodes","rawSpec":"^1.2.0","saveSpec":null,"fetchSpec":"^1.2.0"},"_requiredBy":["/@humanwhocodes/config-array"],"_resolved":"https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-1.2.1.tgz","_shasum":"b520529ec21d8e5945a1851dfd1c32e94e39ff45","_spec":"@humanwhocodes/object-schema@^1.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@humanwhocodes/config-array","author":{"name":"Nicholas C. Zakas"},"bugs":{"url":"https://github.com/humanwhocodes/object-schema/issues"},"bundleDependencies":false,"deprecated":false,"description":"An object schema merger/validator","devDependencies":{"chai":"^4.2.0","eslint":"^5.13.0","mocha":"^5.2.0"},"directories":{"test":"tests"},"homepage":"https://github.com/humanwhocodes/object-schema#readme","keywords":["object","validation","schema","merge"],"license":"BSD-3-Clause","main":"src/index.js","name":"@humanwhocodes/object-schema","repository":{"type":"git","url":"git+https://github.com/humanwhocodes/object-schema.git"},"scripts":{"test":"mocha tests/"},"version":"1.2.1"}');

/***/ }),

/***/ 21028:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@kwsites/file-exists@^1.1.1","_id":"@kwsites/file-exists@1.1.1","_inBundle":false,"_integrity":"sha512-m9/5YGR18lIwxSFDwfE3oA7bWuq9kdau6ugN4H2rJeyhFQZcG9AgSHkQtSD15a8WvTgfz9aikZMrKPHvbpqFiw==","_location":"/@kwsites/file-exists","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@kwsites/file-exists@^1.1.1","name":"@kwsites/file-exists","escapedName":"@kwsites%2ffile-exists","scope":"@kwsites","rawSpec":"^1.1.1","saveSpec":null,"fetchSpec":"^1.1.1"},"_requiredBy":["/simple-git"],"_resolved":"https://registry.npmjs.org/@kwsites/file-exists/-/file-exists-1.1.1.tgz","_shasum":"ad1efcac13e1987d8dbaf235ef3be5b0d96faa99","_spec":"@kwsites/file-exists@^1.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/simple-git","author":{"name":"Steve King","email":"steve@mydev.co"},"bugs":{"url":"https://github.com/kwsites/file-exists/issues"},"bundleDependencies":false,"contributors":[{"name":"Steve King","email":"steve@mydev.co"}],"dependencies":{"debug":"^4.1.1"},"deprecated":false,"description":"Synchronous validation of a path existing either as a file or as a directory.","devDependencies":{"@babel/core":"^7.10.1","@babel/preset-env":"^7.10.1","@babel/preset-typescript":"^7.10.1","@types/debug":"^4.1.5","@types/jest":"^26.0.0","@types/node":"^10.12.0","babel-jest":"^26.0.1","jest":"^25.3.0","rimraf":"^2.6.2","ts-node":"^8.10.2","typescript":"^3.1.3"},"files":["dist/**/*.*"],"homepage":"https://github.com/kwsites/file-exists#readme","license":"MIT","main":"./dist/index.js","name":"@kwsites/file-exists","repository":{"type":"git","url":"git+ssh://git@github.com/kwsites/file-exists.git"},"scripts":{"build":"yarn run clean && tsc","clean":"rimraf ./dist","postversion":"npm publish --access=public && git push && git push --tags","preversion":"yarn run clean && yarn run build && yarn test","test":"jest --coverage","tsc":"tsc"},"types":"./dist/index.d.ts","version":"1.1.1"}');

/***/ }),

/***/ 82336:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@kwsites/promise-deferred@^1.1.1","_id":"@kwsites/promise-deferred@1.1.1","_inBundle":false,"_integrity":"sha512-GaHYm+c0O9MjZRu0ongGBRbinu8gVAMd2UZjji6jVmqKtZluZnptXGWhz1E8j8D2HJ3f/yMxKAUC0b+57wncIw==","_location":"/@kwsites/promise-deferred","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@kwsites/promise-deferred@^1.1.1","name":"@kwsites/promise-deferred","escapedName":"@kwsites%2fpromise-deferred","scope":"@kwsites","rawSpec":"^1.1.1","saveSpec":null,"fetchSpec":"^1.1.1"},"_requiredBy":["/simple-git"],"_resolved":"https://registry.npmjs.org/@kwsites/promise-deferred/-/promise-deferred-1.1.1.tgz","_shasum":"8ace5259254426ccef57f3175bc64ed7095ed919","_spec":"@kwsites/promise-deferred@^1.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/simple-git","author":{"name":"Steve King","email":"steve@mydev.co"},"bugs":{"url":"https://github.com/kwsites/promise-deferred/issues"},"bundleDependencies":false,"contributors":[{"name":"Steve King","email":"steve@mydev.co"}],"deprecated":false,"description":"Minimalist creation of promise wrappers, exposing the ability to resolve or reject the inner promise","devDependencies":{"@babel/core":"^7.10.3","@babel/preset-env":"^7.10.3","@babel/preset-typescript":"^7.10.1","@types/jest":"^26.0.0","@types/node":"^14.0.13","babel-jest":"^26.1.0","babel-preset-env":"^1.7.0","jest":"^26.1.0","ts-node":"^8.10.2","typescript":"^3.9.5"},"files":["LICENSE","dist/**/*.*"],"homepage":"https://github.com/kwsites/promise-deferred#readme","license":"MIT","main":"./dist/index","name":"@kwsites/promise-deferred","private":false,"repository":{"type":"git","url":"git://github.com/kwsites/promise-deferred.git"},"scripts":{"build":"tsc --build","build:clean":"yarn run clean && tsc","clean":"git clean -fxd -e .idea -e node_modules","clean:modules":"git clean -fxd node_modules","postversion":"npm publish --access=public && git push && git push --tags","preversion":"yarn run build:clean && yarn test","test":"jest --coverage","tsc":"tsc"},"types":"./dist/index","version":"1.1.1"}');

/***/ }),

/***/ 30004:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@mrmlnc/readdir-enhanced@^2.2.1","_id":"@mrmlnc/readdir-enhanced@2.2.1","_inBundle":false,"_integrity":"sha512-bPHp6Ji8b41szTOcaP63VlnbbO5Ny6dwAATtY6JTjh5N2OLrb5Qk/Th5cRkRQhkWCt+EJsYrNB0MiL+Gpn6e3g==","_location":"/@mrmlnc/readdir-enhanced","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@mrmlnc/readdir-enhanced@^2.2.1","name":"@mrmlnc/readdir-enhanced","escapedName":"@mrmlnc%2freaddir-enhanced","scope":"@mrmlnc","rawSpec":"^2.2.1","saveSpec":null,"fetchSpec":"^2.2.1"},"_requiredBy":["/cpy/fast-glob"],"_resolved":"https://registry.npmjs.org/@mrmlnc/readdir-enhanced/-/readdir-enhanced-2.2.1.tgz","_shasum":"524af240d1a360527b730475ecfa1344aa540dde","_spec":"@mrmlnc/readdir-enhanced@^2.2.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fast-glob","author":{"name":"James Messinger","url":"http://bigstickcarpet.com"},"bugs":{"url":"https://github.com/bigstickcarpet/readdir-enhanced/issues"},"bundleDependencies":false,"dependencies":{"call-me-maybe":"^1.0.1","glob-to-regexp":"^0.3.0"},"deprecated":false,"description":"fs.readdir with sync, async, and streaming APIs + filtering, recursion, absolute paths, etc.","devDependencies":{"chai":"^4.1.2","codacy-coverage":"^2.0.3","coveralls":"^3.0.0","del":"^3.0.0","eslint":"^4.15.0","eslint-config-modular":"^4.1.1","istanbul":"^0.4.5","mkdirp":"^0.5.1","mocha":"^4.1.0","npm-check":"^5.5.2","through2":"^2.0.3","version-bump-prompt":"^4.0.0"},"engines":{"node":">=4"},"files":["lib","types.d.ts"],"homepage":"https://github.com/bigstickcarpet/readdir-enhanced","keywords":["fs","readdir","stream","event","recursive","deep","filter","absolute"],"license":"MIT","main":"lib/index.js","name":"@mrmlnc/readdir-enhanced","repository":{"type":"git","url":"git+https://github.com/bigstickcarpet/readdir-enhanced.git"},"scripts":{"bump":"bump --prompt --tag --push --all","cover":"istanbul cover _mocha","lint":"eslint lib test --fix","release":"npm run upgrade && npm test && npm run bump && npm publish","test":"mocha && npm run lint","upgrade":"npm-check -u"},"typings":"types.d.ts","version":"2.2.1"}');

/***/ }),

/***/ 72697:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@nodelib/fs.scandir@2.1.5","_id":"@nodelib/fs.scandir@2.1.5","_inBundle":false,"_integrity":"sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==","_location":"/@nodelib/fs.scandir","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"@nodelib/fs.scandir@2.1.5","name":"@nodelib/fs.scandir","escapedName":"@nodelib%2ffs.scandir","scope":"@nodelib","rawSpec":"2.1.5","saveSpec":null,"fetchSpec":"2.1.5"},"_requiredBy":["/@nodelib/fs.walk"],"_resolved":"https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz","_shasum":"7619c2eb21b25483f6d167548b4cfd5a7488c3d5","_spec":"@nodelib/fs.scandir@2.1.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@nodelib/fs.walk","bundleDependencies":false,"dependencies":{"@nodelib/fs.stat":"2.0.5","run-parallel":"^1.1.9"},"deprecated":false,"description":"List files and directories inside the specified directory","devDependencies":{"@nodelib/fs.macchiato":"1.0.4","@types/run-parallel":"^1.1.0"},"engines":{"node":">= 8"},"files":["out/**","!out/**/*.map","!out/**/*.spec.*"],"gitHead":"d6a7960d5281d3dd5f8e2efba49bb552d090f562","keywords":["NodeLib","fs","FileSystem","file system","scandir","readdir","dirent"],"license":"MIT","main":"out/index.js","name":"@nodelib/fs.scandir","repository":{"type":"git","url":"https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.scandir"},"scripts":{"build":"npm run clean && npm run compile && npm run lint && npm test","clean":"rimraf {tsconfig.tsbuildinfo,out}","compile":"tsc -b .","compile:watch":"tsc -p . --watch --sourceMap","lint":"eslint \\"src/**/*.ts\\" --cache","test":"mocha \\"out/**/*.spec.js\\" -s 0","watch":"npm run clean && npm run compile:watch"},"typings":"out/index.d.ts","version":"2.1.5"}');

/***/ }),

/***/ 16888:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@nodelib/fs.stat@^2.0.2","_id":"@nodelib/fs.stat@2.0.5","_inBundle":false,"_integrity":"sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==","_location":"/@nodelib/fs.stat","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@nodelib/fs.stat@^2.0.2","name":"@nodelib/fs.stat","escapedName":"@nodelib%2ffs.stat","scope":"@nodelib","rawSpec":"^2.0.2","saveSpec":null,"fetchSpec":"^2.0.2"},"_requiredBy":["/@nodelib/fs.scandir","/fast-glob"],"_resolved":"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz","_shasum":"5bd262af94e9d25bd1e71b05deed44876a222e8b","_spec":"@nodelib/fs.stat@^2.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fast-glob","bundleDependencies":false,"deprecated":false,"description":"Get the status of a file with some features","devDependencies":{"@nodelib/fs.macchiato":"1.0.4"},"engines":{"node":">= 8"},"files":["out/**","!out/**/*.map","!out/**/*.spec.*"],"gitHead":"d6a7960d5281d3dd5f8e2efba49bb552d090f562","keywords":["NodeLib","fs","FileSystem","file system","stat"],"license":"MIT","main":"out/index.js","name":"@nodelib/fs.stat","repository":{"type":"git","url":"https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.stat"},"scripts":{"build":"npm run clean && npm run compile && npm run lint && npm test","clean":"rimraf {tsconfig.tsbuildinfo,out}","compile":"tsc -b .","compile:watch":"tsc -p . --watch --sourceMap","lint":"eslint \\"src/**/*.ts\\" --cache","test":"mocha \\"out/**/*.spec.js\\" -s 0","watch":"npm run clean && npm run compile:watch"},"typings":"out/index.d.ts","version":"2.0.5"}');

/***/ }),

/***/ 8900:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@nodelib/fs.walk@^1.2.3","_id":"@nodelib/fs.walk@1.2.8","_inBundle":false,"_integrity":"sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==","_location":"/@nodelib/fs.walk","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@nodelib/fs.walk@^1.2.3","name":"@nodelib/fs.walk","escapedName":"@nodelib%2ffs.walk","scope":"@nodelib","rawSpec":"^1.2.3","saveSpec":null,"fetchSpec":"^1.2.3"},"_requiredBy":["/fast-glob"],"_resolved":"https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz","_shasum":"e95737e8bb6746ddedf69c556953494f196fe69a","_spec":"@nodelib/fs.walk@^1.2.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fast-glob","bundleDependencies":false,"dependencies":{"@nodelib/fs.scandir":"2.1.5","fastq":"^1.6.0"},"deprecated":false,"description":"A library for efficiently walking a directory recursively","devDependencies":{"@nodelib/fs.macchiato":"1.0.4"},"engines":{"node":">= 8"},"files":["out/**","!out/**/*.map","!out/**/*.spec.*","!out/**/tests/**"],"gitHead":"1e5bad48565da2b06b8600e744324ea240bf49d8","keywords":["NodeLib","fs","FileSystem","file system","walk","scanner","crawler"],"license":"MIT","main":"out/index.js","name":"@nodelib/fs.walk","repository":{"type":"git","url":"https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.walk"},"scripts":{"build":"npm run clean && npm run compile && npm run lint && npm test","clean":"rimraf {tsconfig.tsbuildinfo,out}","compile":"tsc -b .","compile:watch":"tsc -p . --watch --sourceMap","lint":"eslint \\"src/**/*.ts\\" --cache","test":"mocha \\"out/**/*.spec.js\\" -s 0","watch":"npm run clean && npm run compile:watch"},"typings":"out/index.d.ts","version":"1.2.8"}');

/***/ }),

/***/ 55683:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@sindresorhus/is@^4.0.0","_id":"@sindresorhus/is@4.2.0","_inBundle":false,"_integrity":"sha512-VkE3KLBmJwcCaVARtQpfuKcKv8gcBmUubrfHGF84dXuuW6jgsRYxPtzcIhPyK9WAPpRt2/xY6zkD9MnRaJzSyw==","_location":"/@sindresorhus/is","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@sindresorhus/is@^4.0.0","name":"@sindresorhus/is","escapedName":"@sindresorhus%2fis","scope":"@sindresorhus","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/@sindresorhus/is/-/is-4.2.0.tgz","_shasum":"667bfc6186ae7c9e0b45a08960c551437176e1ca","_spec":"@sindresorhus/is@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"ava":{"extensions":["ts"],"require":["ts-node/register"]},"bugs":{"url":"https://github.com/sindresorhus/is/issues"},"bundleDependencies":false,"deprecated":false,"description":"Type check values","devDependencies":{"@sindresorhus/tsconfig":"^0.7.0","@types/jsdom":"^16.1.0","@types/node":"^14.0.13","@types/zen-observable":"^0.8.0","@typescript-eslint/eslint-plugin":"^2.20.0","@typescript-eslint/parser":"^2.20.0","ava":"^3.3.0","del-cli":"^2.0.0","eslint-config-xo-typescript":"^0.26.0","jsdom":"^16.0.1","rxjs":"^6.4.0","tempy":"^0.4.0","ts-node":"^8.3.0","typescript":"~3.8.2","xo":"^0.26.1","zen-observable":"^0.8.8"},"engines":{"node":">=10"},"files":["dist"],"funding":"https://github.com/sindresorhus/is?sponsor=1","homepage":"https://github.com/sindresorhus/is#readme","keywords":["type","types","is","check","checking","validate","validation","utility","util","typeof","instanceof","object","assert","assertion","test","kind","primitive","verify","compare","typescript","typeguards","types"],"license":"MIT","main":"dist/index.js","name":"@sindresorhus/is","repository":{"type":"git","url":"git+https://github.com/sindresorhus/is.git"},"scripts":{"build":"del dist && tsc","prepare":"npm run build","test":"xo && ava"},"sideEffects":false,"types":"dist/index.d.ts","version":"4.2.0","xo":{"extends":"xo-typescript","extensions":["ts"],"parserOptions":{"project":"./tsconfig.xo.json"},"globals":["BigInt","BigInt64Array","BigUint64Array"],"rules":{"@typescript-eslint/promise-function-async":"off","@typescript-eslint/no-empty-function":"off","@typescript-eslint/explicit-function-return-type":"off"}}}');

/***/ }),

/***/ 3579:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@szmarczak/http-timer@^4.0.5","_id":"@szmarczak/http-timer@4.0.6","_inBundle":false,"_integrity":"sha512-4BAffykYOgO+5nzBWYwE3W90sBgLJoUPRWWcL8wlyiM8IB8ipJz3UMJ9KXQd1RKQXpKp8Tutn80HZtWsu2u76w==","_location":"/@szmarczak/http-timer","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@szmarczak/http-timer@^4.0.5","name":"@szmarczak/http-timer","escapedName":"@szmarczak%2fhttp-timer","scope":"@szmarczak","rawSpec":"^4.0.5","saveSpec":null,"fetchSpec":"^4.0.5"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/@szmarczak/http-timer/-/http-timer-4.0.6.tgz","_shasum":"b4a914bb62e7c272d4e5989fe4440f812ab1d807","_spec":"@szmarczak/http-timer@^4.0.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Szymon Marczak"},"ava":{"typescript":{"compile":false,"rewritePaths":{"tests/":"dist/tests/"}}},"bugs":{"url":"https://github.com/szmarczak/http-timer/issues"},"bundleDependencies":false,"dependencies":{"defer-to-connect":"^2.0.0"},"deprecated":false,"description":"Timings for HTTP requests","devDependencies":{"@ava/typescript":"^2.0.0","@sindresorhus/tsconfig":"^1.0.2","@types/node":"^16.3.1","ava":"^3.15.0","coveralls":"^3.1.1","del-cli":"^3.0.1","http2-wrapper":"^2.0.7","nyc":"^15.1.0","p-event":"^4.2.0","typescript":"^4.3.5","xo":"^0.39.1"},"engines":{"node":">=10"},"files":["dist/source"],"homepage":"https://github.com/szmarczak/http-timer#readme","keywords":["http","https","timer","timings"],"license":"MIT","main":"dist/source","name":"@szmarczak/http-timer","nyc":{"extension":[".ts"],"exclude":["**/tests/**"]},"repository":{"type":"git","url":"git+https://github.com/szmarczak/http-timer.git"},"scripts":{"build":"del-cli dist && tsc","coveralls":"nyc report --reporter=text-lcov | coveralls","prepare":"npm run build","test":"xo && tsc --noEmit && nyc ava"},"types":"dist/source","version":"4.0.6","xo":{"rules":{"@typescript-eslint/no-non-null-assertion":"off"}}}');

/***/ }),

/***/ 82770:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/cacheable-request@^6.0.1","_id":"@types/cacheable-request@6.0.2","_inBundle":false,"_integrity":"sha512-B3xVo+dlKM6nnKTcmm5ZtY/OL8bOAOd2Olee9M1zft65ox50OzjEHW91sDiU9j6cvW8Ejg1/Qkf4xd2kugApUA==","_location":"/@types/cacheable-request","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/cacheable-request@^6.0.1","name":"@types/cacheable-request","escapedName":"@types%2fcacheable-request","scope":"@types","rawSpec":"^6.0.1","saveSpec":null,"fetchSpec":"^6.0.1"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/@types/cacheable-request/-/cacheable-request-6.0.2.tgz","_shasum":"c324da0197de0a98a2312156536ae262429ff6b9","_spec":"@types/cacheable-request@^6.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"BendingBender","url":"https://github.com/BendingBender"},{"name":"Paul Melnikow","url":"https://github.com/paulmelnikow"}],"dependencies":{"@types/http-cache-semantics":"*","@types/keyv":"*","@types/node":"*","@types/responselike":"*"},"deprecated":false,"description":"TypeScript definitions for cacheable-request","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/cacheable-request","license":"MIT","main":"","name":"@types/cacheable-request","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/cacheable-request"},"scripts":{},"typeScriptVersion":"3.6","types":"index.d.ts","typesPublisherContentHash":"5bc07db78df7c21a4d6250dbb806ad088df376f7ed46c63b60bb0e08488dcdc4","version":"6.0.2"}');

/***/ }),

/***/ 14739:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/glob@^7.1.1","_id":"@types/glob@7.2.0","_inBundle":false,"_integrity":"sha512-ZUxbzKl0IfJILTS6t7ip5fQQM/J3TJYubDm3nMbgubNNYS62eXeUpoLUC8/7fJNiFYHTrGPQn7hspDUzIHX3UA==","_location":"/@types/glob","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/glob@^7.1.1","name":"@types/glob","escapedName":"@types%2fglob","scope":"@types","rawSpec":"^7.1.1","saveSpec":null,"fetchSpec":"^7.1.1"},"_requiredBy":["/cpy/globby"],"_resolved":"https://registry.npmjs.org/@types/glob/-/glob-7.2.0.tgz","_shasum":"bc1b5bf3aa92f25bd5dd39f35c57361bdce5b2eb","_spec":"@types/glob@^7.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/globby","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"vvakame","url":"https://github.com/vvakame"},{"name":"voy","url":"https://github.com/voy"},{"name":"Klaus Meinhardt","url":"https://github.com/ajafff"},{"name":"Piotr Błażejewicz","url":"https://github.com/peterblazejewicz"}],"dependencies":{"@types/minimatch":"*","@types/node":"*"},"deprecated":false,"description":"TypeScript definitions for Glob","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/glob","license":"MIT","main":"","name":"@types/glob","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/glob"},"scripts":{},"typeScriptVersion":"3.7","types":"index.d.ts","typesPublisherContentHash":"436848b740c6ebcf1bfea5b5542b494eb73ed390b43a18c3dffa26ce9bad0aa8","version":"7.2.0"}');

/***/ }),

/***/ 60527:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/http-cache-semantics@*","_id":"@types/http-cache-semantics@4.0.1","_inBundle":false,"_integrity":"sha512-SZs7ekbP8CN0txVG2xVRH6EgKmEm31BOxA07vkFaETzZz1xh+cbt8BcI0slpymvwhx5dlFnQG2rTlPVQn+iRPQ==","_location":"/@types/http-cache-semantics","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/http-cache-semantics@*","name":"@types/http-cache-semantics","escapedName":"@types%2fhttp-cache-semantics","scope":"@types","rawSpec":"*","saveSpec":null,"fetchSpec":"*"},"_requiredBy":["/@types/cacheable-request"],"_resolved":"https://registry.npmjs.org/@types/http-cache-semantics/-/http-cache-semantics-4.0.1.tgz","_shasum":"0ea7b61496902b95890dc4c3a116b60cb8dae812","_spec":"@types/http-cache-semantics@*","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@types/cacheable-request","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"BendingBender","url":"https://github.com/BendingBender"}],"dependencies":{},"deprecated":false,"description":"TypeScript definitions for http-cache-semantics","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/http-cache-semantics","license":"MIT","main":"","name":"@types/http-cache-semantics","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/http-cache-semantics"},"scripts":{},"typeScriptVersion":"3.6","types":"index.d.ts","typesPublisherContentHash":"9ecb3137d8c0ede7c06f5d90c7d4759e560a26effb8846bc51a99b63f03dd2d1","version":"4.0.1"}');

/***/ }),

/***/ 85975:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/keyv@*","_id":"@types/keyv@3.1.3","_inBundle":false,"_integrity":"sha512-FXCJgyyN3ivVgRoml4h94G/p3kY+u/B86La+QptcqJaWtBWtmc6TtkNfS40n9bIvyLteHh7zXOtgbobORKPbDg==","_location":"/@types/keyv","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/keyv@*","name":"@types/keyv","escapedName":"@types%2fkeyv","scope":"@types","rawSpec":"*","saveSpec":null,"fetchSpec":"*"},"_requiredBy":["/@types/cacheable-request"],"_resolved":"https://registry.npmjs.org/@types/keyv/-/keyv-3.1.3.tgz","_shasum":"1c9aae32872ec1f20dcdaee89a9f3ba88f465e41","_spec":"@types/keyv@*","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@types/cacheable-request","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"AryloYeung","url":"https://github.com/Arylo"},{"name":"BendingBender","url":"https://github.com/BendingBender"}],"dependencies":{"@types/node":"*"},"deprecated":false,"description":"TypeScript definitions for keyv","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/keyv","license":"MIT","main":"","name":"@types/keyv","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/keyv"},"scripts":{},"typeScriptVersion":"3.7","types":"index.d.ts","typesPublisherContentHash":"f8d3aab62b87448dca0f22f85932aed615f961053f7cc2604aad6c374e62c692","version":"3.1.3"}');

/***/ }),

/***/ 5518:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/minimatch@*","_id":"@types/minimatch@3.0.5","_inBundle":false,"_integrity":"sha512-Klz949h02Gz2uZCMGwDUSDS1YBlTdDDgbWHi+81l29tQALUtvz4rAYi5uoVhE5Lagoq6DeqAUlbrHvW/mXDgdQ==","_location":"/@types/minimatch","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/minimatch@*","name":"@types/minimatch","escapedName":"@types%2fminimatch","scope":"@types","rawSpec":"*","saveSpec":null,"fetchSpec":"*"},"_requiredBy":["/@types/glob"],"_resolved":"https://registry.npmjs.org/@types/minimatch/-/minimatch-3.0.5.tgz","_shasum":"1001cc5e6a3704b83c236027e77f2f58ea010f40","_spec":"@types/minimatch@*","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@types/glob","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"vvakame","url":"https://github.com/vvakame"},{"name":"Shant Marouti","url":"https://github.com/shantmarouti"}],"dependencies":{},"deprecated":false,"description":"TypeScript definitions for Minimatch","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/minimatch","license":"MIT","main":"","name":"@types/minimatch","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/minimatch"},"scripts":{},"typeScriptVersion":"3.6","types":"index.d.ts","typesPublisherContentHash":"ce8670ab7ddb0b32136aa0f819c3e7d791e75f04ff991f2f1baa3a9967dd61c0","version":"3.0.5"}');

/***/ }),

/***/ 63802:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/minimist@^1.2.0","_id":"@types/minimist@1.2.2","_inBundle":false,"_integrity":"sha512-jhuKLIRrhvCPLqwPcx6INqmKeiA5EWrsCOPhrlFSrbrmU4ZMPjj5Ul/oLCMDO98XRUIwVm78xICz4EPCektzeQ==","_location":"/@types/minimist","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/minimist@^1.2.0","name":"@types/minimist","escapedName":"@types%2fminimist","scope":"@types","rawSpec":"^1.2.0","saveSpec":null,"fetchSpec":"^1.2.0"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/@types/minimist/-/minimist-1.2.2.tgz","_shasum":"ee771e2ba4b3dc5b372935d549fd9617bf345b8c","_spec":"@types/minimist@^1.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"Bart van der Schoor","url":"https://github.com/Bartvds"},{"name":"Necroskillz","url":"https://github.com/Necroskillz"},{"name":"kamranayub","url":"https://github.com/kamranayub"},{"name":"Piotr Błażejewicz","url":"https://github.com/peterblazejewicz"}],"dependencies":{},"deprecated":false,"description":"TypeScript definitions for minimist","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/minimist","license":"MIT","main":"","name":"@types/minimist","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/minimist"},"scripts":{},"typeScriptVersion":"3.6","types":"index.d.ts","typesPublisherContentHash":"9032205d52417d0f537f1e52af6f7ac447acb4b87dca0ab5840b83ec7818232e","version":"1.2.2"}');

/***/ }),

/***/ 73685:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/node@*","_id":"@types/node@16.11.7","_inBundle":false,"_integrity":"sha512-QB5D2sqfSjCmTuWcBWyJ+/44bcjO7VbjSbOE0ucoVbAsSNQc4Lt6QkgkVXkTDwkL4z/beecZNDvVX15D4P8Jbw==","_location":"/@types/node","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/node@*","name":"@types/node","escapedName":"@types%2fnode","scope":"@types","rawSpec":"*","saveSpec":null,"fetchSpec":"*"},"_requiredBy":["/@types/cacheable-request","/@types/keyv","/@types/responselike"],"_resolved":"https://registry.npmjs.org/@types/node/-/node-16.11.7.tgz","_shasum":"36820945061326978c42a01e56b61cd223dfdc42","_spec":"@types/node@*","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@types/cacheable-request","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"Microsoft TypeScript","url":"https://github.com/Microsoft"},{"name":"DefinitelyTyped","url":"https://github.com/DefinitelyTyped"},{"name":"Alberto Schiabel","url":"https://github.com/jkomyno"},{"name":"Alvis HT Tang","url":"https://github.com/alvis"},{"name":"Andrew Makarov","url":"https://github.com/r3nya"},{"name":"Benjamin Toueg","url":"https://github.com/btoueg"},{"name":"Chigozirim C.","url":"https://github.com/smac89"},{"name":"David Junger","url":"https://github.com/touffy"},{"name":"Deividas Bakanas","url":"https://github.com/DeividasBakanas"},{"name":"Eugene Y. Q. Shen","url":"https://github.com/eyqs"},{"name":"Hannes Magnusson","url":"https://github.com/Hannes-Magnusson-CK"},{"name":"Huw","url":"https://github.com/hoo29"},{"name":"Kelvin Jin","url":"https://github.com/kjin"},{"name":"Klaus Meinhardt","url":"https://github.com/ajafff"},{"name":"Lishude","url":"https://github.com/islishude"},{"name":"Mariusz Wiktorczyk","url":"https://github.com/mwiktorczyk"},{"name":"Mohsen Azimi","url":"https://github.com/mohsen1"},{"name":"Nicolas Even","url":"https://github.com/n-e"},{"name":"Nikita Galkin","url":"https://github.com/galkin"},{"name":"Parambir Singh","url":"https://github.com/parambirs"},{"name":"Sebastian Silbermann","url":"https://github.com/eps1lon"},{"name":"Simon Schick","url":"https://github.com/SimonSchick"},{"name":"Thomas den Hollander","url":"https://github.com/ThomasdenH"},{"name":"Wilco Bakker","url":"https://github.com/WilcoBakker"},{"name":"wwwy3y3","url":"https://github.com/wwwy3y3"},{"name":"Samuel Ainsworth","url":"https://github.com/samuela"},{"name":"Kyle Uehlein","url":"https://github.com/kuehlein"},{"name":"Thanik Bhongbhibhat","url":"https://github.com/bhongy"},{"name":"Marcin Kopacz","url":"https://github.com/chyzwar"},{"name":"Trivikram Kamat","url":"https://github.com/trivikr"},{"name":"Junxiao Shi","url":"https://github.com/yoursunny"},{"name":"Ilia Baryshnikov","url":"https://github.com/qwelias"},{"name":"ExE Boss","url":"https://github.com/ExE-Boss"},{"name":"Surasak Chaisurin","url":"https://github.com/Ryan-Willpower"},{"name":"Piotr Błażejewicz","url":"https://github.com/peterblazejewicz"},{"name":"Anna Henningsen","url":"https://github.com/addaleax"},{"name":"Victor Perin","url":"https://github.com/victorperin"},{"name":"Yongsheng Zhang","url":"https://github.com/ZYSzys"},{"name":"NodeJS Contributors","url":"https://github.com/NodeJS"},{"name":"Linus Unnebäck","url":"https://github.com/LinusU"},{"name":"wafuwafu13","url":"https://github.com/wafuwafu13"}],"dependencies":{},"deprecated":false,"description":"TypeScript definitions for Node.js","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node","license":"MIT","main":"","name":"@types/node","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/node"},"scripts":{},"typeScriptVersion":"3.7","types":"index.d.ts","typesPublisherContentHash":"f35526242fcaf9fa8ad50a3aadb0bb8c2e9aba5a332ca0523451167ec6a19f2e","version":"16.11.7"}');

/***/ }),

/***/ 24551:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/normalize-package-data@^2.4.0","_id":"@types/normalize-package-data@2.4.1","_inBundle":false,"_integrity":"sha512-Gj7cI7z+98M282Tqmp2K5EIsoouUEzbBJhQQzDE3jSIRk6r9gsz0oUokqIUR4u1R3dMHo0pDHM7sNOHyhulypw==","_location":"/@types/normalize-package-data","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/normalize-package-data@^2.4.0","name":"@types/normalize-package-data","escapedName":"@types%2fnormalize-package-data","scope":"@types","rawSpec":"^2.4.0","saveSpec":null,"fetchSpec":"^2.4.0"},"_requiredBy":["/read-pkg"],"_resolved":"https://registry.npmjs.org/@types/normalize-package-data/-/normalize-package-data-2.4.1.tgz","_shasum":"d3357479a0fdfdd5907fe67e17e0a85c906e1301","_spec":"@types/normalize-package-data@^2.4.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/read-pkg","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"Jeff Dickey","url":"https://github.com/jdxcode"}],"dependencies":{},"deprecated":false,"description":"TypeScript definitions for normalize-package-data","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/normalize-package-data","license":"MIT","main":"","name":"@types/normalize-package-data","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git","directory":"types/normalize-package-data"},"scripts":{},"typeScriptVersion":"3.6","types":"index.d.ts","typesPublisherContentHash":"10653410655e204616118acfbe2900dc09227bc3a80c532a93d44b46be54db36","version":"2.4.1"}');

/***/ }),

/***/ 15990:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@types/responselike@^1.0.0","_id":"@types/responselike@1.0.0","_inBundle":false,"_integrity":"sha512-85Y2BjiufFzaMIlvJDvTTB8Fxl2xfLo4HgmHzVBz08w4wDePCTjYw66PdrolO0kzli3yam/YCgRufyo1DdQVTA==","_location":"/@types/responselike","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@types/responselike@^1.0.0","name":"@types/responselike","escapedName":"@types%2fresponselike","scope":"@types","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/@types/cacheable-request","/got"],"_resolved":"https://registry.npmjs.org/@types/responselike/-/responselike-1.0.0.tgz","_shasum":"251f4fe7d154d2bad125abe1b429b23afd262e29","_spec":"@types/responselike@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","bugs":{"url":"https://github.com/DefinitelyTyped/DefinitelyTyped/issues"},"bundleDependencies":false,"contributors":[{"name":"BendingBender","url":"https://github.com/BendingBender"}],"dependencies":{"@types/node":"*"},"deprecated":false,"description":"TypeScript definitions for responselike","homepage":"https://github.com/DefinitelyTyped/DefinitelyTyped#readme","license":"MIT","main":"","name":"@types/responselike","repository":{"type":"git","url":"git+https://github.com/DefinitelyTyped/DefinitelyTyped.git"},"scripts":{},"typeScriptVersion":"2.0","types":"index","typesPublisherContentHash":"38ee8db1511cdb4a9133ff67b8bc16901de733aa4dc1efffdb5064b7daaa3f21","version":"1.0.0"}');

/***/ }),

/***/ 87351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(12087));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 42186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(87351);
const file_command_1 = __nccwpck_require__(717);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(12087));
const path = __importStar(__nccwpck_require__(85622));
const oidc_utils_1 = __nccwpck_require__(98041);
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        const delimiter = '_GitHubActionsFileCommandDelimeter_';
        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;
        file_command_1.issueCommand('ENV', commandValue);
    }
    else {
        command_1.issueCommand('set-env', { name }, convertedVal);
    }
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the values of an multiline input.  Each value is also trimmed.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string[]
 *
 */
function getMultilineInput(name, options) {
    const inputs = getInput(name, options)
        .split('\n')
        .filter(x => x !== '');
    return inputs;
}
exports.getMultilineInput = getMultilineInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, value);
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function error(message, properties = {}) {
    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds a warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function warning(message, properties = {}) {
    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Adds a notice issue
 * @param message notice issue message. Errors will be converted to string via toString()
 * @param properties optional properties to add to the annotation.
 */
function notice(message, properties = {}) {
    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);
}
exports.notice = notice;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    command_1.issueCommand('save-state', { name }, value);
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
function getIDToken(aud) {
    return __awaiter(this, void 0, void 0, function* () {
        return yield oidc_utils_1.OidcClient.getIDToken(aud);
    });
}
exports.getIDToken = getIDToken;
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 717:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issueCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(35747));
const os = __importStar(__nccwpck_require__(12087));
const utils_1 = __nccwpck_require__(5278);
function issueCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueCommand = issueCommand;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 98041:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OidcClient = void 0;
const http_client_1 = __nccwpck_require__(39925);
const auth_1 = __nccwpck_require__(23702);
const core_1 = __nccwpck_require__(42186);
class OidcClient {
    static createHttpClient(allowRetry = true, maxRetry = 10) {
        const requestOptions = {
            allowRetries: allowRetry,
            maxRetries: maxRetry
        };
        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);
    }
    static getRequestToken() {
        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];
        if (!token) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');
        }
        return token;
    }
    static getIDTokenUrl() {
        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];
        if (!runtimeUrl) {
            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');
        }
        return runtimeUrl;
    }
    static getCall(id_token_url) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const httpclient = OidcClient.createHttpClient();
            const res = yield httpclient
                .getJson(id_token_url)
                .catch(error => {
                throw new Error(`Failed to get ID Token. \n 
        Error Code : ${error.statusCode}\n 
        Error Message: ${error.result.message}`);
            });
            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;
            if (!id_token) {
                throw new Error('Response json body do not have ID Token field');
            }
            return id_token;
        });
    }
    static getIDToken(audience) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                // New ID Token is requested from action service
                let id_token_url = OidcClient.getIDTokenUrl();
                if (audience) {
                    const encodedAudience = encodeURIComponent(audience);
                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;
                }
                core_1.debug(`ID token url is ${id_token_url}`);
                const id_token = yield OidcClient.getCall(id_token_url);
                core_1.setSecret(id_token);
                return id_token;
            }
            catch (error) {
                throw new Error(`Error message: ${error.message}`);
            }
        });
    }
}
exports.OidcClient = OidcClient;
//# sourceMappingURL=oidc-utils.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandProperties = exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
/**
 *
 * @param annotationProperties
 * @returns The command properties to send with the actual annotation command
 * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646
 */
function toCommandProperties(annotationProperties) {
    if (!Object.keys(annotationProperties).length) {
        return {};
    }
    return {
        title: annotationProperties.title,
        file: annotationProperties.file,
        line: annotationProperties.startLine,
        endLine: annotationProperties.endLine,
        col: annotationProperties.startColumn,
        endColumn: annotationProperties.endColumn
    };
}
exports.toCommandProperties = toCommandProperties;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 23702:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
class BasicCredentialHandler {
    constructor(username, password) {
        this.username = username;
        this.password = password;
    }
    prepareRequest(options) {
        options.headers['Authorization'] =
            'Basic ' +
                Buffer.from(this.username + ':' + this.password).toString('base64');
    }
    // This handler cannot handle 401
    canHandleAuthentication(response) {
        return false;
    }
    handleAuthentication(httpClient, requestInfo, objs) {
        return null;
    }
}
exports.BasicCredentialHandler = BasicCredentialHandler;
class BearerCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        options.headers['Authorization'] = 'Bearer ' + this.token;
    }
    // This handler cannot handle 401
    canHandleAuthentication(response) {
        return false;
    }
    handleAuthentication(httpClient, requestInfo, objs) {
        return null;
    }
}
exports.BearerCredentialHandler = BearerCredentialHandler;
class PersonalAccessTokenCredentialHandler {
    constructor(token) {
        this.token = token;
    }
    // currently implements pre-authorization
    // TODO: support preAuth = false where it hooks on 401
    prepareRequest(options) {
        options.headers['Authorization'] =
            'Basic ' + Buffer.from('PAT:' + this.token).toString('base64');
    }
    // This handler cannot handle 401
    canHandleAuthentication(response) {
        return false;
    }
    handleAuthentication(httpClient, requestInfo, objs) {
        return null;
    }
}
exports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;


/***/ }),

/***/ 39925:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const http = __nccwpck_require__(98605);
const https = __nccwpck_require__(57211);
const pm = __nccwpck_require__(16443);
let tunnel;
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return new Promise(async (resolve, reject) => {
            let output = Buffer.alloc(0);
            this.message.on('data', (chunk) => {
                output = Buffer.concat([output, chunk]);
            });
            this.message.on('end', () => {
                resolve(output.toString());
            });
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    let parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
    }
    get(requestUrl, additionalHeaders) {
        return this.request('GET', requestUrl, null, additionalHeaders || {});
    }
    del(requestUrl, additionalHeaders) {
        return this.request('DELETE', requestUrl, null, additionalHeaders || {});
    }
    post(requestUrl, data, additionalHeaders) {
        return this.request('POST', requestUrl, data, additionalHeaders || {});
    }
    patch(requestUrl, data, additionalHeaders) {
        return this.request('PATCH', requestUrl, data, additionalHeaders || {});
    }
    put(requestUrl, data, additionalHeaders) {
        return this.request('PUT', requestUrl, data, additionalHeaders || {});
    }
    head(requestUrl, additionalHeaders) {
        return this.request('HEAD', requestUrl, null, additionalHeaders || {});
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return this.request(verb, requestUrl, stream, additionalHeaders);
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    async getJson(requestUrl, additionalHeaders = {}) {
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        let res = await this.get(requestUrl, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async postJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.post(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async putJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.put(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async patchJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.patch(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    async request(verb, requestUrl, data, headers) {
        if (this._disposed) {
            throw new Error('Client has already been disposed.');
        }
        let parsedUrl = new URL(requestUrl);
        let info = this._prepareRequest(verb, parsedUrl, headers);
        // Only perform retries on reads since writes may not be idempotent.
        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1
            ? this._maxRetries + 1
            : 1;
        let numTries = 0;
        let response;
        while (numTries < maxTries) {
            response = await this.requestRaw(info, data);
            // Check if it's an authentication challenge
            if (response &&
                response.message &&
                response.message.statusCode === HttpCodes.Unauthorized) {
                let authenticationHandler;
                for (let i = 0; i < this.handlers.length; i++) {
                    if (this.handlers[i].canHandleAuthentication(response)) {
                        authenticationHandler = this.handlers[i];
                        break;
                    }
                }
                if (authenticationHandler) {
                    return authenticationHandler.handleAuthentication(this, info, data);
                }
                else {
                    // We have received an unauthorized response but have no handlers to handle it.
                    // Let the response return to the caller.
                    return response;
                }
            }
            let redirectsRemaining = this._maxRedirects;
            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&
                this._allowRedirects &&
                redirectsRemaining > 0) {
                const redirectUrl = response.message.headers['location'];
                if (!redirectUrl) {
                    // if there's no location to redirect to, we won't
                    break;
                }
                let parsedRedirectUrl = new URL(redirectUrl);
                if (parsedUrl.protocol == 'https:' &&
                    parsedUrl.protocol != parsedRedirectUrl.protocol &&
                    !this._allowRedirectDowngrade) {
                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                }
                // we need to finish reading the response before reassigning response
                // which will leak the open socket.
                await response.readBody();
                // strip authorization header if redirected to a different hostname
                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                    for (let header in headers) {
                        // header names are case insensitive
                        if (header.toLowerCase() === 'authorization') {
                            delete headers[header];
                        }
                    }
                }
                // let's make the request with the new redirectUrl
                info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                response = await this.requestRaw(info, data);
                redirectsRemaining--;
            }
            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {
                // If not a retry code, return immediately instead of retrying
                return response;
            }
            numTries += 1;
            if (numTries < maxTries) {
                await response.readBody();
                await this._performExponentialBackoff(numTries);
            }
        }
        return response;
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return new Promise((resolve, reject) => {
            let callbackForResult = function (err, res) {
                if (err) {
                    reject(err);
                }
                resolve(res);
            };
            this.requestRawWithCallback(info, data, callbackForResult);
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        let socket;
        if (typeof data === 'string') {
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        let handleResult = (err, res) => {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        };
        let req = info.httpModule.request(info.options, (msg) => {
            let res = new HttpClientResponse(msg);
            handleResult(null, res);
        });
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error('Request timeout: ' + info.options.path), null);
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err, null);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        let parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            this.handlers.forEach(handler => {
                handler.prepareRequest(info.options);
            });
        }
        return info;
    }
    _mergeHeaders(headers) {
        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        let proxyUrl = pm.getProxyUrl(parsedUrl);
        let useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (!!agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (!!this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        if (useProxy) {
            // If using proxy, need tunnel
            if (!tunnel) {
                tunnel = __nccwpck_require__(74294);
            }
            const agentOptions = {
                maxSockets: maxSockets,
                keepAlive: this._keepAlive,
                proxy: {
                    ...((proxyUrl.username || proxyUrl.password) && {
                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                    }),
                    host: proxyUrl.hostname,
                    port: proxyUrl.port
                }
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
        return new Promise(resolve => setTimeout(() => resolve(), ms));
    }
    static dateTimeDeserializer(key, value) {
        if (typeof value === 'string') {
            let a = new Date(value);
            if (!isNaN(a.valueOf())) {
                return a;
            }
        }
        return value;
    }
    async _processResponse(res, options) {
        return new Promise(async (resolve, reject) => {
            const statusCode = res.message.statusCode;
            const response = {
                statusCode: statusCode,
                result: null,
                headers: {}
            };
            // not found leads to null obj returned
            if (statusCode == HttpCodes.NotFound) {
                resolve(response);
            }
            let obj;
            let contents;
            // get the result from the body
            try {
                contents = await res.readBody();
                if (contents && contents.length > 0) {
                    if (options && options.deserializeDates) {
                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);
                    }
                    else {
                        obj = JSON.parse(contents);
                    }
                    response.result = obj;
                }
                response.headers = res.message.headers;
            }
            catch (err) {
                // Invalid resource (contents not json);  leaving result obj null
            }
            // note that 3xx redirects are handled by the http layer.
            if (statusCode > 299) {
                let msg;
                // if exception/error in body, attempt to get better error
                if (obj && obj.message) {
                    msg = obj.message;
                }
                else if (contents && contents.length > 0) {
                    // it may be the case that the exception is in the body message as string
                    msg = contents;
                }
                else {
                    msg = 'Failed request: (' + statusCode + ')';
                }
                let err = new HttpClientError(msg, statusCode);
                err.result = response.result;
                reject(err);
            }
            else {
                resolve(response);
            }
        });
    }
}
exports.HttpClient = HttpClient;


/***/ }),

/***/ 16443:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function getProxyUrl(reqUrl) {
    let usingSsl = reqUrl.protocol === 'https:';
    let proxyUrl;
    if (checkBypass(reqUrl)) {
        return proxyUrl;
    }
    let proxyVar;
    if (usingSsl) {
        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];
    }
    else {
        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];
    }
    if (proxyVar) {
        proxyUrl = new URL(proxyVar);
    }
    return proxyUrl;
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    let upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (let upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperReqHosts.some(x => x === upperNoProxyItem)) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;


/***/ }),

/***/ 54751:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", ({ value: true }));
__export(__nccwpck_require__(42825));
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 42825:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const fs_1 = __nccwpck_require__(35747);
const debug_1 = __importDefault(__nccwpck_require__(38237));
const log = debug_1.default('@kwsites/file-exists');
function check(path, isFile, isDirectory) {
    log(`checking %s`, path);
    try {
        const stat = fs_1.statSync(path);
        if (stat.isFile() && isFile) {
            log(`[OK] path represents a file`);
            return true;
        }
        if (stat.isDirectory() && isDirectory) {
            log(`[OK] path represents a directory`);
            return true;
        }
        log(`[FAIL] path represents something other than a file or directory`);
        return false;
    }
    catch (e) {
        if (e.code === 'ENOENT') {
            log(`[FAIL] path is not accessible: %o`, e);
            return false;
        }
        log(`[FATAL] %o`, e);
        throw e;
    }
}
/**
 * Synchronous validation of a path existing either as a file or as a directory.
 *
 * @param {string} path The path to check
 * @param {number} type One or both of the exported numeric constants
 */
function exists(path, type = exports.READABLE) {
    return check(path, (type & exports.FILE) > 0, (type & exports.FOLDER) > 0);
}
exports.exists = exists;
/**
 * Constant representing a file
 */
exports.FILE = 1;
/**
 * Constant representing a folder
 */
exports.FOLDER = 2;
/**
 * Constant representing either a file or a folder
 */
exports.READABLE = exports.FILE + exports.FOLDER;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 49819:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createDeferred = exports.deferred = void 0;
/**
 * Creates a new `DeferredPromise`
 *
 * ```typescript
 import {deferred} from '@kwsites/promise-deferred`;
 ```
 */
function deferred() {
    let done;
    let fail;
    let status = 'pending';
    const promise = new Promise((_done, _fail) => {
        done = _done;
        fail = _fail;
    });
    return {
        promise,
        done(result) {
            if (status === 'pending') {
                status = 'resolved';
                done(result);
            }
        },
        fail(error) {
            if (status === 'pending') {
                status = 'rejected';
                fail(error);
            }
        },
        get fulfilled() {
            return status !== 'pending';
        },
        get status() {
            return status;
        },
    };
}
exports.deferred = deferred;
/**
 * Alias of the exported `deferred` function, to help consumers wanting to use `deferred` as the
 * local variable name rather than the factory import name, without needing to rename on import.
 *
 * ```typescript
 import {createDeferred} from '@kwsites/promise-deferred`;
 ```
 */
exports.createDeferred = deferred;
/**
 * Default export allows use as:
 *
 * ```typescript
 import deferred from '@kwsites/promise-deferred`;
 ```
 */
exports.default = deferred;
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 63803:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;
const fs = __nccwpck_require__(35747);
exports.FILE_SYSTEM_ADAPTER = {
    lstat: fs.lstat,
    stat: fs.stat,
    lstatSync: fs.lstatSync,
    statSync: fs.statSync,
    readdir: fs.readdir,
    readdirSync: fs.readdirSync
};
function createFileSystemAdapter(fsMethods) {
    if (fsMethods === undefined) {
        return exports.FILE_SYSTEM_ADAPTER;
    }
    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);
}
exports.createFileSystemAdapter = createFileSystemAdapter;


/***/ }),

/***/ 18838:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;
const NODE_PROCESS_VERSION_PARTS = process.versions.node.split('.');
if (NODE_PROCESS_VERSION_PARTS[0] === undefined || NODE_PROCESS_VERSION_PARTS[1] === undefined) {
    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);
}
const MAJOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[0], 10);
const MINOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[1], 10);
const SUPPORTED_MAJOR_VERSION = 10;
const SUPPORTED_MINOR_VERSION = 10;
const IS_MATCHED_BY_MAJOR = MAJOR_VERSION > SUPPORTED_MAJOR_VERSION;
const IS_MATCHED_BY_MAJOR_AND_MINOR = MAJOR_VERSION === SUPPORTED_MAJOR_VERSION && MINOR_VERSION >= SUPPORTED_MINOR_VERSION;
/**
 * IS `true` for Node.js 10.10 and greater.
 */
exports.IS_SUPPORT_READDIR_WITH_FILE_TYPES = IS_MATCHED_BY_MAJOR || IS_MATCHED_BY_MAJOR_AND_MINOR;


/***/ }),

/***/ 75667:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Settings = exports.scandirSync = exports.scandir = void 0;
const async = __nccwpck_require__(84507);
const sync = __nccwpck_require__(69560);
const settings_1 = __nccwpck_require__(88662);
exports.Settings = settings_1.default;
function scandir(path, optionsOrSettingsOrCallback, callback) {
    if (typeof optionsOrSettingsOrCallback === 'function') {
        async.read(path, getSettings(), optionsOrSettingsOrCallback);
        return;
    }
    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);
}
exports.scandir = scandir;
function scandirSync(path, optionsOrSettings) {
    const settings = getSettings(optionsOrSettings);
    return sync.read(path, settings);
}
exports.scandirSync = scandirSync;
function getSettings(settingsOrOptions = {}) {
    if (settingsOrOptions instanceof settings_1.default) {
        return settingsOrOptions;
    }
    return new settings_1.default(settingsOrOptions);
}


/***/ }),

/***/ 84507:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readdir = exports.readdirWithFileTypes = exports.read = void 0;
const fsStat = __nccwpck_require__(70109);
const rpl = __nccwpck_require__(75288);
const constants_1 = __nccwpck_require__(18838);
const utils = __nccwpck_require__(16297);
const common = __nccwpck_require__(3847);
function read(directory, settings, callback) {
    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {
        readdirWithFileTypes(directory, settings, callback);
        return;
    }
    readdir(directory, settings, callback);
}
exports.read = read;
function readdirWithFileTypes(directory, settings, callback) {
    settings.fs.readdir(directory, { withFileTypes: true }, (readdirError, dirents) => {
        if (readdirError !== null) {
            callFailureCallback(callback, readdirError);
            return;
        }
        const entries = dirents.map((dirent) => ({
            dirent,
            name: dirent.name,
            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)
        }));
        if (!settings.followSymbolicLinks) {
            callSuccessCallback(callback, entries);
            return;
        }
        const tasks = entries.map((entry) => makeRplTaskEntry(entry, settings));
        rpl(tasks, (rplError, rplEntries) => {
            if (rplError !== null) {
                callFailureCallback(callback, rplError);
                return;
            }
            callSuccessCallback(callback, rplEntries);
        });
    });
}
exports.readdirWithFileTypes = readdirWithFileTypes;
function makeRplTaskEntry(entry, settings) {
    return (done) => {
        if (!entry.dirent.isSymbolicLink()) {
            done(null, entry);
            return;
        }
        settings.fs.stat(entry.path, (statError, stats) => {
            if (statError !== null) {
                if (settings.throwErrorOnBrokenSymbolicLink) {
                    done(statError);
                    return;
                }
                done(null, entry);
                return;
            }
            entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);
            done(null, entry);
        });
    };
}
function readdir(directory, settings, callback) {
    settings.fs.readdir(directory, (readdirError, names) => {
        if (readdirError !== null) {
            callFailureCallback(callback, readdirError);
            return;
        }
        const tasks = names.map((name) => {
            const path = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);
            return (done) => {
                fsStat.stat(path, settings.fsStatSettings, (error, stats) => {
                    if (error !== null) {
                        done(error);
                        return;
                    }
                    const entry = {
                        name,
                        path,
                        dirent: utils.fs.createDirentFromStats(name, stats)
                    };
                    if (settings.stats) {
                        entry.stats = stats;
                    }
                    done(null, entry);
                });
            };
        });
        rpl(tasks, (rplError, entries) => {
            if (rplError !== null) {
                callFailureCallback(callback, rplError);
                return;
            }
            callSuccessCallback(callback, entries);
        });
    });
}
exports.readdir = readdir;
function callFailureCallback(callback, error) {
    callback(error);
}
function callSuccessCallback(callback, result) {
    callback(null, result);
}


/***/ }),

/***/ 3847:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joinPathSegments = void 0;
function joinPathSegments(a, b, separator) {
    /**
     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).
     */
    if (a.endsWith(separator)) {
        return a + b;
    }
    return a + separator + b;
}
exports.joinPathSegments = joinPathSegments;


/***/ }),

/***/ 69560:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.readdir = exports.readdirWithFileTypes = exports.read = void 0;
const fsStat = __nccwpck_require__(70109);
const constants_1 = __nccwpck_require__(18838);
const utils = __nccwpck_require__(16297);
const common = __nccwpck_require__(3847);
function read(directory, settings) {
    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {
        return readdirWithFileTypes(directory, settings);
    }
    return readdir(directory, settings);
}
exports.read = read;
function readdirWithFileTypes(directory, settings) {
    const dirents = settings.fs.readdirSync(directory, { withFileTypes: true });
    return dirents.map((dirent) => {
        const entry = {
            dirent,
            name: dirent.name,
            path: common.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)
        };
        if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {
            try {
                const stats = settings.fs.statSync(entry.path);
                entry.dirent = utils.fs.createDirentFromStats(entry.name, stats);
            }
            catch (error) {
                if (settings.throwErrorOnBrokenSymbolicLink) {
                    throw error;
                }
            }
        }
        return entry;
    });
}
exports.readdirWithFileTypes = readdirWithFileTypes;
function readdir(directory, settings) {
    const names = settings.fs.readdirSync(directory);
    return names.map((name) => {
        const entryPath = common.joinPathSegments(directory, name, settings.pathSegmentSeparator);
        const stats = fsStat.statSync(entryPath, settings.fsStatSettings);
        const entry = {
            name,
            path: entryPath,
            dirent: utils.fs.createDirentFromStats(name, stats)
        };
        if (settings.stats) {
            entry.stats = stats;
        }
        return entry;
    });
}
exports.readdir = readdir;


/***/ }),

/***/ 88662:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const path = __nccwpck_require__(85622);
const fsStat = __nccwpck_require__(70109);
const fs = __nccwpck_require__(63803);
class Settings {
    constructor(_options = {}) {
        this._options = _options;
        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, false);
        this.fs = fs.createFileSystemAdapter(this._options.fs);
        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);
        this.stats = this._getValue(this._options.stats, false);
        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);
        this.fsStatSettings = new fsStat.Settings({
            followSymbolicLink: this.followSymbolicLinks,
            fs: this.fs,
            throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink
        });
    }
    _getValue(option, value) {
        return option !== null && option !== void 0 ? option : value;
    }
}
exports.default = Settings;


/***/ }),

/***/ 60883:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createDirentFromStats = void 0;
class DirentFromStats {
    constructor(name, stats) {
        this.name = name;
        this.isBlockDevice = stats.isBlockDevice.bind(stats);
        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);
        this.isDirectory = stats.isDirectory.bind(stats);
        this.isFIFO = stats.isFIFO.bind(stats);
        this.isFile = stats.isFile.bind(stats);
        this.isSocket = stats.isSocket.bind(stats);
        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);
    }
}
function createDirentFromStats(name, stats) {
    return new DirentFromStats(name, stats);
}
exports.createDirentFromStats = createDirentFromStats;


/***/ }),

/***/ 16297:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fs = void 0;
const fs = __nccwpck_require__(60883);
exports.fs = fs;


/***/ }),

/***/ 32987:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;
const fs = __nccwpck_require__(35747);
exports.FILE_SYSTEM_ADAPTER = {
    lstat: fs.lstat,
    stat: fs.stat,
    lstatSync: fs.lstatSync,
    statSync: fs.statSync
};
function createFileSystemAdapter(fsMethods) {
    if (fsMethods === undefined) {
        return exports.FILE_SYSTEM_ADAPTER;
    }
    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);
}
exports.createFileSystemAdapter = createFileSystemAdapter;


/***/ }),

/***/ 70109:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.statSync = exports.stat = exports.Settings = void 0;
const async = __nccwpck_require__(34147);
const sync = __nccwpck_require__(34527);
const settings_1 = __nccwpck_require__(12410);
exports.Settings = settings_1.default;
function stat(path, optionsOrSettingsOrCallback, callback) {
    if (typeof optionsOrSettingsOrCallback === 'function') {
        async.read(path, getSettings(), optionsOrSettingsOrCallback);
        return;
    }
    async.read(path, getSettings(optionsOrSettingsOrCallback), callback);
}
exports.stat = stat;
function statSync(path, optionsOrSettings) {
    const settings = getSettings(optionsOrSettings);
    return sync.read(path, settings);
}
exports.statSync = statSync;
function getSettings(settingsOrOptions = {}) {
    if (settingsOrOptions instanceof settings_1.default) {
        return settingsOrOptions;
    }
    return new settings_1.default(settingsOrOptions);
}


/***/ }),

/***/ 34147:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.read = void 0;
function read(path, settings, callback) {
    settings.fs.lstat(path, (lstatError, lstat) => {
        if (lstatError !== null) {
            callFailureCallback(callback, lstatError);
            return;
        }
        if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {
            callSuccessCallback(callback, lstat);
            return;
        }
        settings.fs.stat(path, (statError, stat) => {
            if (statError !== null) {
                if (settings.throwErrorOnBrokenSymbolicLink) {
                    callFailureCallback(callback, statError);
                    return;
                }
                callSuccessCallback(callback, lstat);
                return;
            }
            if (settings.markSymbolicLink) {
                stat.isSymbolicLink = () => true;
            }
            callSuccessCallback(callback, stat);
        });
    });
}
exports.read = read;
function callFailureCallback(callback, error) {
    callback(error);
}
function callSuccessCallback(callback, result) {
    callback(null, result);
}


/***/ }),

/***/ 34527:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.read = void 0;
function read(path, settings) {
    const lstat = settings.fs.lstatSync(path);
    if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {
        return lstat;
    }
    try {
        const stat = settings.fs.statSync(path);
        if (settings.markSymbolicLink) {
            stat.isSymbolicLink = () => true;
        }
        return stat;
    }
    catch (error) {
        if (!settings.throwErrorOnBrokenSymbolicLink) {
            return lstat;
        }
        throw error;
    }
}
exports.read = read;


/***/ }),

/***/ 12410:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const fs = __nccwpck_require__(32987);
class Settings {
    constructor(_options = {}) {
        this._options = _options;
        this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, true);
        this.fs = fs.createFileSystemAdapter(this._options.fs);
        this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, false);
        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);
    }
    _getValue(option, value) {
        return option !== null && option !== void 0 ? option : value;
    }
}
exports.default = Settings;


/***/ }),

/***/ 26026:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Settings = exports.walkStream = exports.walkSync = exports.walk = void 0;
const async_1 = __nccwpck_require__(77523);
const stream_1 = __nccwpck_require__(96737);
const sync_1 = __nccwpck_require__(13068);
const settings_1 = __nccwpck_require__(50141);
exports.Settings = settings_1.default;
function walk(directory, optionsOrSettingsOrCallback, callback) {
    if (typeof optionsOrSettingsOrCallback === 'function') {
        new async_1.default(directory, getSettings()).read(optionsOrSettingsOrCallback);
        return;
    }
    new async_1.default(directory, getSettings(optionsOrSettingsOrCallback)).read(callback);
}
exports.walk = walk;
function walkSync(directory, optionsOrSettings) {
    const settings = getSettings(optionsOrSettings);
    const provider = new sync_1.default(directory, settings);
    return provider.read();
}
exports.walkSync = walkSync;
function walkStream(directory, optionsOrSettings) {
    const settings = getSettings(optionsOrSettings);
    const provider = new stream_1.default(directory, settings);
    return provider.read();
}
exports.walkStream = walkStream;
function getSettings(settingsOrOptions = {}) {
    if (settingsOrOptions instanceof settings_1.default) {
        return settingsOrOptions;
    }
    return new settings_1.default(settingsOrOptions);
}


/***/ }),

/***/ 77523:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const async_1 = __nccwpck_require__(55732);
class AsyncProvider {
    constructor(_root, _settings) {
        this._root = _root;
        this._settings = _settings;
        this._reader = new async_1.default(this._root, this._settings);
        this._storage = [];
    }
    read(callback) {
        this._reader.onError((error) => {
            callFailureCallback(callback, error);
        });
        this._reader.onEntry((entry) => {
            this._storage.push(entry);
        });
        this._reader.onEnd(() => {
            callSuccessCallback(callback, this._storage);
        });
        this._reader.read();
    }
}
exports.default = AsyncProvider;
function callFailureCallback(callback, error) {
    callback(error);
}
function callSuccessCallback(callback, entries) {
    callback(null, entries);
}


/***/ }),

/***/ 96737:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const stream_1 = __nccwpck_require__(92413);
const async_1 = __nccwpck_require__(55732);
class StreamProvider {
    constructor(_root, _settings) {
        this._root = _root;
        this._settings = _settings;
        this._reader = new async_1.default(this._root, this._settings);
        this._stream = new stream_1.Readable({
            objectMode: true,
            read: () => { },
            destroy: () => {
                if (!this._reader.isDestroyed) {
                    this._reader.destroy();
                }
            }
        });
    }
    read() {
        this._reader.onError((error) => {
            this._stream.emit('error', error);
        });
        this._reader.onEntry((entry) => {
            this._stream.push(entry);
        });
        this._reader.onEnd(() => {
            this._stream.push(null);
        });
        this._reader.read();
        return this._stream;
    }
}
exports.default = StreamProvider;


/***/ }),

/***/ 13068:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const sync_1 = __nccwpck_require__(13595);
class SyncProvider {
    constructor(_root, _settings) {
        this._root = _root;
        this._settings = _settings;
        this._reader = new sync_1.default(this._root, this._settings);
    }
    read() {
        return this._reader.read();
    }
}
exports.default = SyncProvider;


/***/ }),

/***/ 55732:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const events_1 = __nccwpck_require__(28614);
const fsScandir = __nccwpck_require__(75667);
const fastq = __nccwpck_require__(7340);
const common = __nccwpck_require__(97988);
const reader_1 = __nccwpck_require__(88311);
class AsyncReader extends reader_1.default {
    constructor(_root, _settings) {
        super(_root, _settings);
        this._settings = _settings;
        this._scandir = fsScandir.scandir;
        this._emitter = new events_1.EventEmitter();
        this._queue = fastq(this._worker.bind(this), this._settings.concurrency);
        this._isFatalError = false;
        this._isDestroyed = false;
        this._queue.drain = () => {
            if (!this._isFatalError) {
                this._emitter.emit('end');
            }
        };
    }
    read() {
        this._isFatalError = false;
        this._isDestroyed = false;
        setImmediate(() => {
            this._pushToQueue(this._root, this._settings.basePath);
        });
        return this._emitter;
    }
    get isDestroyed() {
        return this._isDestroyed;
    }
    destroy() {
        if (this._isDestroyed) {
            throw new Error('The reader is already destroyed');
        }
        this._isDestroyed = true;
        this._queue.killAndDrain();
    }
    onEntry(callback) {
        this._emitter.on('entry', callback);
    }
    onError(callback) {
        this._emitter.once('error', callback);
    }
    onEnd(callback) {
        this._emitter.once('end', callback);
    }
    _pushToQueue(directory, base) {
        const queueItem = { directory, base };
        this._queue.push(queueItem, (error) => {
            if (error !== null) {
                this._handleError(error);
            }
        });
    }
    _worker(item, done) {
        this._scandir(item.directory, this._settings.fsScandirSettings, (error, entries) => {
            if (error !== null) {
                done(error, undefined);
                return;
            }
            for (const entry of entries) {
                this._handleEntry(entry, item.base);
            }
            done(null, undefined);
        });
    }
    _handleError(error) {
        if (this._isDestroyed || !common.isFatalError(this._settings, error)) {
            return;
        }
        this._isFatalError = true;
        this._isDestroyed = true;
        this._emitter.emit('error', error);
    }
    _handleEntry(entry, base) {
        if (this._isDestroyed || this._isFatalError) {
            return;
        }
        const fullpath = entry.path;
        if (base !== undefined) {
            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);
        }
        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {
            this._emitEntry(entry);
        }
        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {
            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);
        }
    }
    _emitEntry(entry) {
        this._emitter.emit('entry', entry);
    }
}
exports.default = AsyncReader;


/***/ }),

/***/ 97988:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joinPathSegments = exports.replacePathSegmentSeparator = exports.isAppliedFilter = exports.isFatalError = void 0;
function isFatalError(settings, error) {
    if (settings.errorFilter === null) {
        return true;
    }
    return !settings.errorFilter(error);
}
exports.isFatalError = isFatalError;
function isAppliedFilter(filter, value) {
    return filter === null || filter(value);
}
exports.isAppliedFilter = isAppliedFilter;
function replacePathSegmentSeparator(filepath, separator) {
    return filepath.split(/[/\\]/).join(separator);
}
exports.replacePathSegmentSeparator = replacePathSegmentSeparator;
function joinPathSegments(a, b, separator) {
    if (a === '') {
        return b;
    }
    /**
     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).
     */
    if (a.endsWith(separator)) {
        return a + b;
    }
    return a + separator + b;
}
exports.joinPathSegments = joinPathSegments;


/***/ }),

/***/ 88311:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const common = __nccwpck_require__(97988);
class Reader {
    constructor(_root, _settings) {
        this._root = _root;
        this._settings = _settings;
        this._root = common.replacePathSegmentSeparator(_root, _settings.pathSegmentSeparator);
    }
}
exports.default = Reader;


/***/ }),

/***/ 13595:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const fsScandir = __nccwpck_require__(75667);
const common = __nccwpck_require__(97988);
const reader_1 = __nccwpck_require__(88311);
class SyncReader extends reader_1.default {
    constructor() {
        super(...arguments);
        this._scandir = fsScandir.scandirSync;
        this._storage = [];
        this._queue = new Set();
    }
    read() {
        this._pushToQueue(this._root, this._settings.basePath);
        this._handleQueue();
        return this._storage;
    }
    _pushToQueue(directory, base) {
        this._queue.add({ directory, base });
    }
    _handleQueue() {
        for (const item of this._queue.values()) {
            this._handleDirectory(item.directory, item.base);
        }
    }
    _handleDirectory(directory, base) {
        try {
            const entries = this._scandir(directory, this._settings.fsScandirSettings);
            for (const entry of entries) {
                this._handleEntry(entry, base);
            }
        }
        catch (error) {
            this._handleError(error);
        }
    }
    _handleError(error) {
        if (!common.isFatalError(this._settings, error)) {
            return;
        }
        throw error;
    }
    _handleEntry(entry, base) {
        const fullpath = entry.path;
        if (base !== undefined) {
            entry.path = common.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);
        }
        if (common.isAppliedFilter(this._settings.entryFilter, entry)) {
            this._pushToStorage(entry);
        }
        if (entry.dirent.isDirectory() && common.isAppliedFilter(this._settings.deepFilter, entry)) {
            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);
        }
    }
    _pushToStorage(entry) {
        this._storage.push(entry);
    }
}
exports.default = SyncReader;


/***/ }),

/***/ 50141:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const path = __nccwpck_require__(85622);
const fsScandir = __nccwpck_require__(75667);
class Settings {
    constructor(_options = {}) {
        this._options = _options;
        this.basePath = this._getValue(this._options.basePath, undefined);
        this.concurrency = this._getValue(this._options.concurrency, Number.POSITIVE_INFINITY);
        this.deepFilter = this._getValue(this._options.deepFilter, null);
        this.entryFilter = this._getValue(this._options.entryFilter, null);
        this.errorFilter = this._getValue(this._options.errorFilter, null);
        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path.sep);
        this.fsScandirSettings = new fsScandir.Settings({
            followSymbolicLinks: this._options.followSymbolicLinks,
            fs: this._options.fs,
            pathSegmentSeparator: this._options.pathSegmentSeparator,
            stats: this._options.stats,
            throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink
        });
    }
    _getValue(option, value) {
        return option !== null && option !== void 0 ? option : value;
    }
}
exports.default = Settings;


/***/ }),

/***/ 7678:
/***/ ((module, exports) => {

"use strict";

/// <reference lib="es2018"/>
/// <reference lib="dom"/>
/// <reference types="node"/>
Object.defineProperty(exports, "__esModule", ({ value: true }));
const typedArrayTypeNames = [
    'Int8Array',
    'Uint8Array',
    'Uint8ClampedArray',
    'Int16Array',
    'Uint16Array',
    'Int32Array',
    'Uint32Array',
    'Float32Array',
    'Float64Array',
    'BigInt64Array',
    'BigUint64Array'
];
function isTypedArrayName(name) {
    return typedArrayTypeNames.includes(name);
}
const objectTypeNames = [
    'Function',
    'Generator',
    'AsyncGenerator',
    'GeneratorFunction',
    'AsyncGeneratorFunction',
    'AsyncFunction',
    'Observable',
    'Array',
    'Buffer',
    'Object',
    'RegExp',
    'Date',
    'Error',
    'Map',
    'Set',
    'WeakMap',
    'WeakSet',
    'ArrayBuffer',
    'SharedArrayBuffer',
    'DataView',
    'Promise',
    'URL',
    'FormData',
    'URLSearchParams',
    'HTMLElement',
    ...typedArrayTypeNames
];
function isObjectTypeName(name) {
    return objectTypeNames.includes(name);
}
const primitiveTypeNames = [
    'null',
    'undefined',
    'string',
    'number',
    'bigint',
    'boolean',
    'symbol'
];
function isPrimitiveTypeName(name) {
    return primitiveTypeNames.includes(name);
}
// eslint-disable-next-line @typescript-eslint/ban-types
function isOfType(type) {
    return (value) => typeof value === type;
}
const { toString } = Object.prototype;
const getObjectType = (value) => {
    const objectTypeName = toString.call(value).slice(8, -1);
    if (/HTML\w+Element/.test(objectTypeName) && is.domElement(value)) {
        return 'HTMLElement';
    }
    if (isObjectTypeName(objectTypeName)) {
        return objectTypeName;
    }
    return undefined;
};
const isObjectOfType = (type) => (value) => getObjectType(value) === type;
function is(value) {
    if (value === null) {
        return 'null';
    }
    switch (typeof value) {
        case 'undefined':
            return 'undefined';
        case 'string':
            return 'string';
        case 'number':
            return 'number';
        case 'boolean':
            return 'boolean';
        case 'function':
            return 'Function';
        case 'bigint':
            return 'bigint';
        case 'symbol':
            return 'symbol';
        default:
    }
    if (is.observable(value)) {
        return 'Observable';
    }
    if (is.array(value)) {
        return 'Array';
    }
    if (is.buffer(value)) {
        return 'Buffer';
    }
    const tagType = getObjectType(value);
    if (tagType) {
        return tagType;
    }
    if (value instanceof String || value instanceof Boolean || value instanceof Number) {
        throw new TypeError('Please don\'t use object wrappers for primitive types');
    }
    return 'Object';
}
is.undefined = isOfType('undefined');
is.string = isOfType('string');
const isNumberType = isOfType('number');
is.number = (value) => isNumberType(value) && !is.nan(value);
is.bigint = isOfType('bigint');
// eslint-disable-next-line @typescript-eslint/ban-types
is.function_ = isOfType('function');
is.null_ = (value) => value === null;
is.class_ = (value) => is.function_(value) && value.toString().startsWith('class ');
is.boolean = (value) => value === true || value === false;
is.symbol = isOfType('symbol');
is.numericString = (value) => is.string(value) && !is.emptyStringOrWhitespace(value) && !Number.isNaN(Number(value));
is.array = (value, assertion) => {
    if (!Array.isArray(value)) {
        return false;
    }
    if (!is.function_(assertion)) {
        return true;
    }
    return value.every(assertion);
};
is.buffer = (value) => { var _a, _b, _c, _d; return (_d = (_c = (_b = (_a = value) === null || _a === void 0 ? void 0 : _a.constructor) === null || _b === void 0 ? void 0 : _b.isBuffer) === null || _c === void 0 ? void 0 : _c.call(_b, value)) !== null && _d !== void 0 ? _d : false; };
is.nullOrUndefined = (value) => is.null_(value) || is.undefined(value);
is.object = (value) => !is.null_(value) && (typeof value === 'object' || is.function_(value));
is.iterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.iterator]); };
is.asyncIterable = (value) => { var _a; return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a[Symbol.asyncIterator]); };
is.generator = (value) => is.iterable(value) && is.function_(value.next) && is.function_(value.throw);
is.asyncGenerator = (value) => is.asyncIterable(value) && is.function_(value.next) && is.function_(value.throw);
is.nativePromise = (value) => isObjectOfType('Promise')(value);
const hasPromiseAPI = (value) => {
    var _a, _b;
    return is.function_((_a = value) === null || _a === void 0 ? void 0 : _a.then) &&
        is.function_((_b = value) === null || _b === void 0 ? void 0 : _b.catch);
};
is.promise = (value) => is.nativePromise(value) || hasPromiseAPI(value);
is.generatorFunction = isObjectOfType('GeneratorFunction');
is.asyncGeneratorFunction = (value) => getObjectType(value) === 'AsyncGeneratorFunction';
is.asyncFunction = (value) => getObjectType(value) === 'AsyncFunction';
// eslint-disable-next-line no-prototype-builtins, @typescript-eslint/ban-types
is.boundFunction = (value) => is.function_(value) && !value.hasOwnProperty('prototype');
is.regExp = isObjectOfType('RegExp');
is.date = isObjectOfType('Date');
is.error = isObjectOfType('Error');
is.map = (value) => isObjectOfType('Map')(value);
is.set = (value) => isObjectOfType('Set')(value);
is.weakMap = (value) => isObjectOfType('WeakMap')(value);
is.weakSet = (value) => isObjectOfType('WeakSet')(value);
is.int8Array = isObjectOfType('Int8Array');
is.uint8Array = isObjectOfType('Uint8Array');
is.uint8ClampedArray = isObjectOfType('Uint8ClampedArray');
is.int16Array = isObjectOfType('Int16Array');
is.uint16Array = isObjectOfType('Uint16Array');
is.int32Array = isObjectOfType('Int32Array');
is.uint32Array = isObjectOfType('Uint32Array');
is.float32Array = isObjectOfType('Float32Array');
is.float64Array = isObjectOfType('Float64Array');
is.bigInt64Array = isObjectOfType('BigInt64Array');
is.bigUint64Array = isObjectOfType('BigUint64Array');
is.arrayBuffer = isObjectOfType('ArrayBuffer');
is.sharedArrayBuffer = isObjectOfType('SharedArrayBuffer');
is.dataView = isObjectOfType('DataView');
is.directInstanceOf = (instance, class_) => Object.getPrototypeOf(instance) === class_.prototype;
is.urlInstance = (value) => isObjectOfType('URL')(value);
is.urlString = (value) => {
    if (!is.string(value)) {
        return false;
    }
    try {
        new URL(value); // eslint-disable-line no-new
        return true;
    }
    catch (_a) {
        return false;
    }
};
// TODO: Use the `not` operator with a type guard here when it's available.
// Example: `is.truthy = (value: unknown): value is (not false | not 0 | not '' | not undefined | not null) => Boolean(value);`
is.truthy = (value) => Boolean(value);
// Example: `is.falsy = (value: unknown): value is (not true | 0 | '' | undefined | null) => Boolean(value);`
is.falsy = (value) => !value;
is.nan = (value) => Number.isNaN(value);
is.primitive = (value) => is.null_(value) || isPrimitiveTypeName(typeof value);
is.integer = (value) => Number.isInteger(value);
is.safeInteger = (value) => Number.isSafeInteger(value);
is.plainObject = (value) => {
    // From: https://github.com/sindresorhus/is-plain-obj/blob/main/index.js
    if (toString.call(value) !== '[object Object]') {
        return false;
    }
    const prototype = Object.getPrototypeOf(value);
    return prototype === null || prototype === Object.getPrototypeOf({});
};
is.typedArray = (value) => isTypedArrayName(getObjectType(value));
const isValidLength = (value) => is.safeInteger(value) && value >= 0;
is.arrayLike = (value) => !is.nullOrUndefined(value) && !is.function_(value) && isValidLength(value.length);
is.inRange = (value, range) => {
    if (is.number(range)) {
        return value >= Math.min(0, range) && value <= Math.max(range, 0);
    }
    if (is.array(range) && range.length === 2) {
        return value >= Math.min(...range) && value <= Math.max(...range);
    }
    throw new TypeError(`Invalid range: ${JSON.stringify(range)}`);
};
const NODE_TYPE_ELEMENT = 1;
const DOM_PROPERTIES_TO_CHECK = [
    'innerHTML',
    'ownerDocument',
    'style',
    'attributes',
    'nodeValue'
];
is.domElement = (value) => {
    return is.object(value) &&
        value.nodeType === NODE_TYPE_ELEMENT &&
        is.string(value.nodeName) &&
        !is.plainObject(value) &&
        DOM_PROPERTIES_TO_CHECK.every(property => property in value);
};
is.observable = (value) => {
    var _a, _b, _c, _d;
    if (!value) {
        return false;
    }
    // eslint-disable-next-line no-use-extend-native/no-use-extend-native
    if (value === ((_b = (_a = value)[Symbol.observable]) === null || _b === void 0 ? void 0 : _b.call(_a))) {
        return true;
    }
    if (value === ((_d = (_c = value)['@@observable']) === null || _d === void 0 ? void 0 : _d.call(_c))) {
        return true;
    }
    return false;
};
is.nodeStream = (value) => is.object(value) && is.function_(value.pipe) && !is.observable(value);
is.infinite = (value) => value === Infinity || value === -Infinity;
const isAbsoluteMod2 = (remainder) => (value) => is.integer(value) && Math.abs(value % 2) === remainder;
is.evenInteger = isAbsoluteMod2(0);
is.oddInteger = isAbsoluteMod2(1);
is.emptyArray = (value) => is.array(value) && value.length === 0;
is.nonEmptyArray = (value) => is.array(value) && value.length > 0;
is.emptyString = (value) => is.string(value) && value.length === 0;
// TODO: Use `not ''` when the `not` operator is available.
is.nonEmptyString = (value) => is.string(value) && value.length > 0;
const isWhiteSpaceString = (value) => is.string(value) && !/\S/.test(value);
is.emptyStringOrWhitespace = (value) => is.emptyString(value) || isWhiteSpaceString(value);
is.emptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length === 0;
// TODO: Use `not` operator here to remove `Map` and `Set` from type guard:
// - https://github.com/Microsoft/TypeScript/pull/29317
is.nonEmptyObject = (value) => is.object(value) && !is.map(value) && !is.set(value) && Object.keys(value).length > 0;
is.emptySet = (value) => is.set(value) && value.size === 0;
is.nonEmptySet = (value) => is.set(value) && value.size > 0;
is.emptyMap = (value) => is.map(value) && value.size === 0;
is.nonEmptyMap = (value) => is.map(value) && value.size > 0;
// `PropertyKey` is any value that can be used as an object key (string, number, or symbol)
is.propertyKey = (value) => is.any([is.string, is.number, is.symbol], value);
is.formData = (value) => isObjectOfType('FormData')(value);
is.urlSearchParams = (value) => isObjectOfType('URLSearchParams')(value);
const predicateOnArray = (method, predicate, values) => {
    if (!is.function_(predicate)) {
        throw new TypeError(`Invalid predicate: ${JSON.stringify(predicate)}`);
    }
    if (values.length === 0) {
        throw new TypeError('Invalid number of values');
    }
    return method.call(values, predicate);
};
is.any = (predicate, ...values) => {
    const predicates = is.array(predicate) ? predicate : [predicate];
    return predicates.some(singlePredicate => predicateOnArray(Array.prototype.some, singlePredicate, values));
};
is.all = (predicate, ...values) => predicateOnArray(Array.prototype.every, predicate, values);
const assertType = (condition, description, value, options = {}) => {
    if (!condition) {
        const { multipleValues } = options;
        const valuesMessage = multipleValues ?
            `received values of types ${[
                ...new Set(value.map(singleValue => `\`${is(singleValue)}\``))
            ].join(', ')}` :
            `received value of type \`${is(value)}\``;
        throw new TypeError(`Expected value which is \`${description}\`, ${valuesMessage}.`);
    }
};
exports.assert = {
    // Unknowns.
    undefined: (value) => assertType(is.undefined(value), 'undefined', value),
    string: (value) => assertType(is.string(value), 'string', value),
    number: (value) => assertType(is.number(value), 'number', value),
    bigint: (value) => assertType(is.bigint(value), 'bigint', value),
    // eslint-disable-next-line @typescript-eslint/ban-types
    function_: (value) => assertType(is.function_(value), 'Function', value),
    null_: (value) => assertType(is.null_(value), 'null', value),
    class_: (value) => assertType(is.class_(value), "Class" /* class_ */, value),
    boolean: (value) => assertType(is.boolean(value), 'boolean', value),
    symbol: (value) => assertType(is.symbol(value), 'symbol', value),
    numericString: (value) => assertType(is.numericString(value), "string with a number" /* numericString */, value),
    array: (value, assertion) => {
        const assert = assertType;
        assert(is.array(value), 'Array', value);
        if (assertion) {
            value.forEach(assertion);
        }
    },
    buffer: (value) => assertType(is.buffer(value), 'Buffer', value),
    nullOrUndefined: (value) => assertType(is.nullOrUndefined(value), "null or undefined" /* nullOrUndefined */, value),
    object: (value) => assertType(is.object(value), 'Object', value),
    iterable: (value) => assertType(is.iterable(value), "Iterable" /* iterable */, value),
    asyncIterable: (value) => assertType(is.asyncIterable(value), "AsyncIterable" /* asyncIterable */, value),
    generator: (value) => assertType(is.generator(value), 'Generator', value),
    asyncGenerator: (value) => assertType(is.asyncGenerator(value), 'AsyncGenerator', value),
    nativePromise: (value) => assertType(is.nativePromise(value), "native Promise" /* nativePromise */, value),
    promise: (value) => assertType(is.promise(value), 'Promise', value),
    generatorFunction: (value) => assertType(is.generatorFunction(value), 'GeneratorFunction', value),
    asyncGeneratorFunction: (value) => assertType(is.asyncGeneratorFunction(value), 'AsyncGeneratorFunction', value),
    // eslint-disable-next-line @typescript-eslint/ban-types
    asyncFunction: (value) => assertType(is.asyncFunction(value), 'AsyncFunction', value),
    // eslint-disable-next-line @typescript-eslint/ban-types
    boundFunction: (value) => assertType(is.boundFunction(value), 'Function', value),
    regExp: (value) => assertType(is.regExp(value), 'RegExp', value),
    date: (value) => assertType(is.date(value), 'Date', value),
    error: (value) => assertType(is.error(value), 'Error', value),
    map: (value) => assertType(is.map(value), 'Map', value),
    set: (value) => assertType(is.set(value), 'Set', value),
    weakMap: (value) => assertType(is.weakMap(value), 'WeakMap', value),
    weakSet: (value) => assertType(is.weakSet(value), 'WeakSet', value),
    int8Array: (value) => assertType(is.int8Array(value), 'Int8Array', value),
    uint8Array: (value) => assertType(is.uint8Array(value), 'Uint8Array', value),
    uint8ClampedArray: (value) => assertType(is.uint8ClampedArray(value), 'Uint8ClampedArray', value),
    int16Array: (value) => assertType(is.int16Array(value), 'Int16Array', value),
    uint16Array: (value) => assertType(is.uint16Array(value), 'Uint16Array', value),
    int32Array: (value) => assertType(is.int32Array(value), 'Int32Array', value),
    uint32Array: (value) => assertType(is.uint32Array(value), 'Uint32Array', value),
    float32Array: (value) => assertType(is.float32Array(value), 'Float32Array', value),
    float64Array: (value) => assertType(is.float64Array(value), 'Float64Array', value),
    bigInt64Array: (value) => assertType(is.bigInt64Array(value), 'BigInt64Array', value),
    bigUint64Array: (value) => assertType(is.bigUint64Array(value), 'BigUint64Array', value),
    arrayBuffer: (value) => assertType(is.arrayBuffer(value), 'ArrayBuffer', value),
    sharedArrayBuffer: (value) => assertType(is.sharedArrayBuffer(value), 'SharedArrayBuffer', value),
    dataView: (value) => assertType(is.dataView(value), 'DataView', value),
    urlInstance: (value) => assertType(is.urlInstance(value), 'URL', value),
    urlString: (value) => assertType(is.urlString(value), "string with a URL" /* urlString */, value),
    truthy: (value) => assertType(is.truthy(value), "truthy" /* truthy */, value),
    falsy: (value) => assertType(is.falsy(value), "falsy" /* falsy */, value),
    nan: (value) => assertType(is.nan(value), "NaN" /* nan */, value),
    primitive: (value) => assertType(is.primitive(value), "primitive" /* primitive */, value),
    integer: (value) => assertType(is.integer(value), "integer" /* integer */, value),
    safeInteger: (value) => assertType(is.safeInteger(value), "integer" /* safeInteger */, value),
    plainObject: (value) => assertType(is.plainObject(value), "plain object" /* plainObject */, value),
    typedArray: (value) => assertType(is.typedArray(value), "TypedArray" /* typedArray */, value),
    arrayLike: (value) => assertType(is.arrayLike(value), "array-like" /* arrayLike */, value),
    domElement: (value) => assertType(is.domElement(value), "HTMLElement" /* domElement */, value),
    observable: (value) => assertType(is.observable(value), 'Observable', value),
    nodeStream: (value) => assertType(is.nodeStream(value), "Node.js Stream" /* nodeStream */, value),
    infinite: (value) => assertType(is.infinite(value), "infinite number" /* infinite */, value),
    emptyArray: (value) => assertType(is.emptyArray(value), "empty array" /* emptyArray */, value),
    nonEmptyArray: (value) => assertType(is.nonEmptyArray(value), "non-empty array" /* nonEmptyArray */, value),
    emptyString: (value) => assertType(is.emptyString(value), "empty string" /* emptyString */, value),
    nonEmptyString: (value) => assertType(is.nonEmptyString(value), "non-empty string" /* nonEmptyString */, value),
    emptyStringOrWhitespace: (value) => assertType(is.emptyStringOrWhitespace(value), "empty string or whitespace" /* emptyStringOrWhitespace */, value),
    emptyObject: (value) => assertType(is.emptyObject(value), "empty object" /* emptyObject */, value),
    nonEmptyObject: (value) => assertType(is.nonEmptyObject(value), "non-empty object" /* nonEmptyObject */, value),
    emptySet: (value) => assertType(is.emptySet(value), "empty set" /* emptySet */, value),
    nonEmptySet: (value) => assertType(is.nonEmptySet(value), "non-empty set" /* nonEmptySet */, value),
    emptyMap: (value) => assertType(is.emptyMap(value), "empty map" /* emptyMap */, value),
    nonEmptyMap: (value) => assertType(is.nonEmptyMap(value), "non-empty map" /* nonEmptyMap */, value),
    propertyKey: (value) => assertType(is.propertyKey(value), 'PropertyKey', value),
    formData: (value) => assertType(is.formData(value), 'FormData', value),
    urlSearchParams: (value) => assertType(is.urlSearchParams(value), 'URLSearchParams', value),
    // Numbers.
    evenInteger: (value) => assertType(is.evenInteger(value), "even integer" /* evenInteger */, value),
    oddInteger: (value) => assertType(is.oddInteger(value), "odd integer" /* oddInteger */, value),
    // Two arguments.
    directInstanceOf: (instance, class_) => assertType(is.directInstanceOf(instance, class_), "T" /* directInstanceOf */, instance),
    inRange: (value, range) => assertType(is.inRange(value, range), "in range" /* inRange */, value),
    // Variadic functions.
    any: (predicate, ...values) => {
        return assertType(is.any(predicate, ...values), "predicate returns truthy for any value" /* any */, values, { multipleValues: true });
    },
    all: (predicate, ...values) => assertType(is.all(predicate, ...values), "predicate returns truthy for all values" /* all */, values, { multipleValues: true })
};
// Some few keywords are reserved, but we'll populate them for Node.js users
// See https://github.com/Microsoft/TypeScript/issues/2536
Object.defineProperties(is, {
    class: {
        value: is.class_
    },
    function: {
        value: is.function_
    },
    null: {
        value: is.null_
    }
});
Object.defineProperties(exports.assert, {
    class: {
        value: exports.assert.class_
    },
    function: {
        value: exports.assert.function_
    },
    null: {
        value: exports.assert.null_
    }
});
exports.default = is;
// For CommonJS default export support
module.exports = is;
module.exports.default = is;
module.exports.assert = exports.assert;


/***/ }),

/***/ 48097:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const defer_to_connect_1 = __nccwpck_require__(96214);
const util_1 = __nccwpck_require__(31669);
const nodejsMajorVersion = Number(process.versions.node.split('.')[0]);
const timer = (request) => {
    if (request.timings) {
        return request.timings;
    }
    const timings = {
        start: Date.now(),
        socket: undefined,
        lookup: undefined,
        connect: undefined,
        secureConnect: undefined,
        upload: undefined,
        response: undefined,
        end: undefined,
        error: undefined,
        abort: undefined,
        phases: {
            wait: undefined,
            dns: undefined,
            tcp: undefined,
            tls: undefined,
            request: undefined,
            firstByte: undefined,
            download: undefined,
            total: undefined
        }
    };
    request.timings = timings;
    const handleError = (origin) => {
        const emit = origin.emit.bind(origin);
        origin.emit = (event, ...args) => {
            // Catches the `error` event
            if (event === 'error') {
                timings.error = Date.now();
                timings.phases.total = timings.error - timings.start;
                origin.emit = emit;
            }
            // Saves the original behavior
            return emit(event, ...args);
        };
    };
    handleError(request);
    const onAbort = () => {
        timings.abort = Date.now();
        // Let the `end` response event be responsible for setting the total phase,
        // unless the Node.js major version is >= 13.
        if (!timings.response || nodejsMajorVersion >= 13) {
            timings.phases.total = Date.now() - timings.start;
        }
    };
    request.prependOnceListener('abort', onAbort);
    const onSocket = (socket) => {
        timings.socket = Date.now();
        timings.phases.wait = timings.socket - timings.start;
        if (util_1.types.isProxy(socket)) {
            return;
        }
        const lookupListener = () => {
            timings.lookup = Date.now();
            timings.phases.dns = timings.lookup - timings.socket;
        };
        socket.prependOnceListener('lookup', lookupListener);
        defer_to_connect_1.default(socket, {
            connect: () => {
                timings.connect = Date.now();
                if (timings.lookup === undefined) {
                    socket.removeListener('lookup', lookupListener);
                    timings.lookup = timings.connect;
                    timings.phases.dns = timings.lookup - timings.socket;
                }
                timings.phases.tcp = timings.connect - timings.lookup;
                // This callback is called before flushing any data,
                // so we don't need to set `timings.phases.request` here.
            },
            secureConnect: () => {
                timings.secureConnect = Date.now();
                timings.phases.tls = timings.secureConnect - timings.connect;
            }
        });
    };
    if (request.socket) {
        onSocket(request.socket);
    }
    else {
        request.prependOnceListener('socket', onSocket);
    }
    const onUpload = () => {
        var _a;
        timings.upload = Date.now();
        timings.phases.request = timings.upload - ((_a = timings.secureConnect) !== null && _a !== void 0 ? _a : timings.connect);
    };
    const writableFinished = () => {
        if (typeof request.writableFinished === 'boolean') {
            return request.writableFinished;
        }
        // Node.js doesn't have `request.writableFinished` property
        return request.finished && request.outputSize === 0 && (!request.socket || request.socket.writableLength === 0);
    };
    if (writableFinished()) {
        onUpload();
    }
    else {
        request.prependOnceListener('finish', onUpload);
    }
    request.prependOnceListener('response', (response) => {
        timings.response = Date.now();
        timings.phases.firstByte = timings.response - timings.upload;
        response.timings = timings;
        handleError(response);
        response.prependOnceListener('end', () => {
            timings.end = Date.now();
            timings.phases.download = timings.end - timings.response;
            timings.phases.total = timings.end - timings.start;
        });
        response.prependOnceListener('aborted', onAbort);
    });
    return timings;
};
exports.default = timer;
// For CommonJS default export support
module.exports = timer;
module.exports.default = timer;


/***/ }),

/***/ 52068:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
/* module decorator */ module = __nccwpck_require__.nmd(module);

const colorConvert = __nccwpck_require__(86931);

const wrapAnsi16 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${code + offset}m`;
};

const wrapAnsi256 = (fn, offset) => function () {
	const code = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};5;${code}m`;
};

const wrapAnsi16m = (fn, offset) => function () {
	const rgb = fn.apply(colorConvert, arguments);
	return `\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
};

function assembleStyles() {
	const codes = new Map();
	const styles = {
		modifier: {
			reset: [0, 0],
			// 21 isn't widely supported and 22 does the same thing
			bold: [1, 22],
			dim: [2, 22],
			italic: [3, 23],
			underline: [4, 24],
			inverse: [7, 27],
			hidden: [8, 28],
			strikethrough: [9, 29]
		},
		color: {
			black: [30, 39],
			red: [31, 39],
			green: [32, 39],
			yellow: [33, 39],
			blue: [34, 39],
			magenta: [35, 39],
			cyan: [36, 39],
			white: [37, 39],
			gray: [90, 39],

			// Bright color
			redBright: [91, 39],
			greenBright: [92, 39],
			yellowBright: [93, 39],
			blueBright: [94, 39],
			magentaBright: [95, 39],
			cyanBright: [96, 39],
			whiteBright: [97, 39]
		},
		bgColor: {
			bgBlack: [40, 49],
			bgRed: [41, 49],
			bgGreen: [42, 49],
			bgYellow: [43, 49],
			bgBlue: [44, 49],
			bgMagenta: [45, 49],
			bgCyan: [46, 49],
			bgWhite: [47, 49],

			// Bright color
			bgBlackBright: [100, 49],
			bgRedBright: [101, 49],
			bgGreenBright: [102, 49],
			bgYellowBright: [103, 49],
			bgBlueBright: [104, 49],
			bgMagentaBright: [105, 49],
			bgCyanBright: [106, 49],
			bgWhiteBright: [107, 49]
		}
	};

	// Fix humans
	styles.color.grey = styles.color.gray;

	for (const groupName of Object.keys(styles)) {
		const group = styles[groupName];

		for (const styleName of Object.keys(group)) {
			const style = group[styleName];

			styles[styleName] = {
				open: `\u001B[${style[0]}m`,
				close: `\u001B[${style[1]}m`
			};

			group[styleName] = styles[styleName];

			codes.set(style[0], style[1]);
		}

		Object.defineProperty(styles, groupName, {
			value: group,
			enumerable: false
		});

		Object.defineProperty(styles, 'codes', {
			value: codes,
			enumerable: false
		});
	}

	const ansi2ansi = n => n;
	const rgb2rgb = (r, g, b) => [r, g, b];

	styles.color.close = '\u001B[39m';
	styles.bgColor.close = '\u001B[49m';

	styles.color.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 0)
	};
	styles.color.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 0)
	};
	styles.color.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 0)
	};

	styles.bgColor.ansi = {
		ansi: wrapAnsi16(ansi2ansi, 10)
	};
	styles.bgColor.ansi256 = {
		ansi256: wrapAnsi256(ansi2ansi, 10)
	};
	styles.bgColor.ansi16m = {
		rgb: wrapAnsi16m(rgb2rgb, 10)
	};

	for (let key of Object.keys(colorConvert)) {
		if (typeof colorConvert[key] !== 'object') {
			continue;
		}

		const suite = colorConvert[key];

		if (key === 'ansi16') {
			key = 'ansi';
		}

		if ('ansi16' in suite) {
			styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);
			styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);
		}

		if ('ansi256' in suite) {
			styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);
			styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);
		}

		if ('rgb' in suite) {
			styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);
			styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);
		}
	}

	return styles;
}

// Make the export immutable
Object.defineProperty(module, 'exports', {
	enumerable: true,
	get: assembleStyles
});


/***/ }),

/***/ 99600:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

var arrayUniq = __nccwpck_require__(41530);

module.exports = function () {
	return arrayUniq([].concat.apply([], arguments));
};


/***/ }),

/***/ 41530:
/***/ ((module) => {

"use strict";


// there's 3 implementations written in increasing order of efficiency

// 1 - no Set type is defined
function uniqNoSet(arr) {
	var ret = [];

	for (var i = 0; i < arr.length; i++) {
		if (ret.indexOf(arr[i]) === -1) {
			ret.push(arr[i]);
		}
	}

	return ret;
}

// 2 - a simple Set type is defined
function uniqSet(arr) {
	var seen = new Set();
	return arr.filter(function (el) {
		if (!seen.has(el)) {
			seen.add(el);
			return true;
		}

		return false;
	});
}

// 3 - a standard Set type is defined and it has a forEach method
function uniqSetWithForEach(arr) {
	var ret = [];

	(new Set(arr)).forEach(function (el) {
		ret.push(el);
	});

	return ret;
}

// V8 currently has a broken implementation
// https://github.com/joyent/node/issues/8449
function doesForEachActuallyWork() {
	var ret = false;

	(new Set([true])).forEach(function (el) {
		ret = el;
	});

	return ret === true;
}

if ('Set' in global) {
	if (typeof Set.prototype.forEach === 'function' && doesForEachActuallyWork()) {
		module.exports = uniqSetWithForEach;
	} else {
		module.exports = uniqSet;
	}
} else {
	module.exports = uniqNoSet;
}


/***/ }),

/***/ 57888:
/***/ (function(module, exports, __nccwpck_require__) {

/* module decorator */ module = __nccwpck_require__.nmd(module);
(function (global, factory) {
   true ? factory(exports) :
  0;
}(this, (function (exports) { 'use strict';

function slice(arrayLike, start) {
    start = start|0;
    var newLen = Math.max(arrayLike.length - start, 0);
    var newArr = Array(newLen);
    for(var idx = 0; idx < newLen; idx++)  {
        newArr[idx] = arrayLike[start + idx];
    }
    return newArr;
}

/**
 * Creates a continuation function with some arguments already applied.
 *
 * Useful as a shorthand when combined with other control flow functions. Any
 * arguments passed to the returned function are added to the arguments
 * originally passed to apply.
 *
 * @name apply
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {Function} fn - The function you want to eventually apply all
 * arguments to. Invokes with (arguments...).
 * @param {...*} arguments... - Any number of arguments to automatically apply
 * when the continuation is called.
 * @returns {Function} the partially-applied function
 * @example
 *
 * // using apply
 * async.parallel([
 *     async.apply(fs.writeFile, 'testfile1', 'test1'),
 *     async.apply(fs.writeFile, 'testfile2', 'test2')
 * ]);
 *
 *
 * // the same process without using apply
 * async.parallel([
 *     function(callback) {
 *         fs.writeFile('testfile1', 'test1', callback);
 *     },
 *     function(callback) {
 *         fs.writeFile('testfile2', 'test2', callback);
 *     }
 * ]);
 *
 * // It's possible to pass any number of additional arguments when calling the
 * // continuation:
 *
 * node> var fn = async.apply(sys.puts, 'one');
 * node> fn('two', 'three');
 * one
 * two
 * three
 */
var apply = function(fn/*, ...args*/) {
    var args = slice(arguments, 1);
    return function(/*callArgs*/) {
        var callArgs = slice(arguments);
        return fn.apply(null, args.concat(callArgs));
    };
};

var initialParams = function (fn) {
    return function (/*...args, callback*/) {
        var args = slice(arguments);
        var callback = args.pop();
        fn.call(this, args, callback);
    };
};

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return value != null && (type == 'object' || type == 'function');
}

var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;
var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';

function fallback(fn) {
    setTimeout(fn, 0);
}

function wrap(defer) {
    return function (fn/*, ...args*/) {
        var args = slice(arguments, 1);
        defer(function () {
            fn.apply(null, args);
        });
    };
}

var _defer;

if (hasSetImmediate) {
    _defer = setImmediate;
} else if (hasNextTick) {
    _defer = process.nextTick;
} else {
    _defer = fallback;
}

var setImmediate$1 = wrap(_defer);

/**
 * Take a sync function and make it async, passing its return value to a
 * callback. This is useful for plugging sync functions into a waterfall,
 * series, or other async functions. Any arguments passed to the generated
 * function will be passed to the wrapped function (except for the final
 * callback argument). Errors thrown will be passed to the callback.
 *
 * If the function passed to `asyncify` returns a Promise, that promises's
 * resolved/rejected state will be used to call the callback, rather than simply
 * the synchronous return value.
 *
 * This also means you can asyncify ES2017 `async` functions.
 *
 * @name asyncify
 * @static
 * @memberOf module:Utils
 * @method
 * @alias wrapSync
 * @category Util
 * @param {Function} func - The synchronous function, or Promise-returning
 * function to convert to an {@link AsyncFunction}.
 * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be
 * invoked with `(args..., callback)`.
 * @example
 *
 * // passing a regular synchronous function
 * async.waterfall([
 *     async.apply(fs.readFile, filename, "utf8"),
 *     async.asyncify(JSON.parse),
 *     function (data, next) {
 *         // data is the result of parsing the text.
 *         // If there was a parsing error, it would have been caught.
 *     }
 * ], callback);
 *
 * // passing a function returning a promise
 * async.waterfall([
 *     async.apply(fs.readFile, filename, "utf8"),
 *     async.asyncify(function (contents) {
 *         return db.model.create(contents);
 *     }),
 *     function (model, next) {
 *         // `model` is the instantiated model object.
 *         // If there was an error, this function would be skipped.
 *     }
 * ], callback);
 *
 * // es2017 example, though `asyncify` is not needed if your JS environment
 * // supports async functions out of the box
 * var q = async.queue(async.asyncify(async function(file) {
 *     var intermediateStep = await processFile(file);
 *     return await somePromise(intermediateStep)
 * }));
 *
 * q.push(files);
 */
function asyncify(func) {
    return initialParams(function (args, callback) {
        var result;
        try {
            result = func.apply(this, args);
        } catch (e) {
            return callback(e);
        }
        // if result is Promise object
        if (isObject(result) && typeof result.then === 'function') {
            result.then(function(value) {
                invokeCallback(callback, null, value);
            }, function(err) {
                invokeCallback(callback, err.message ? err : new Error(err));
            });
        } else {
            callback(null, result);
        }
    });
}

function invokeCallback(callback, error, value) {
    try {
        callback(error, value);
    } catch (e) {
        setImmediate$1(rethrow, e);
    }
}

function rethrow(error) {
    throw error;
}

var supportsSymbol = typeof Symbol === 'function';

function isAsync(fn) {
    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';
}

function wrapAsync(asyncFn) {
    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;
}

function applyEach$1(eachfn) {
    return function(fns/*, ...args*/) {
        var args = slice(arguments, 1);
        var go = initialParams(function(args, callback) {
            var that = this;
            return eachfn(fns, function (fn, cb) {
                wrapAsync(fn).apply(that, args.concat(cb));
            }, callback);
        });
        if (args.length) {
            return go.apply(this, args);
        }
        else {
            return go;
        }
    };
}

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/** Built-in value references. */
var Symbol$1 = root.Symbol;

/** Used for built-in method references. */
var objectProto = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString = objectProto.toString;

/** Built-in value references. */
var symToStringTag$1 = Symbol$1 ? Symbol$1.toStringTag : undefined;

/**
 * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the raw `toStringTag`.
 */
function getRawTag(value) {
  var isOwn = hasOwnProperty.call(value, symToStringTag$1),
      tag = value[symToStringTag$1];

  try {
    value[symToStringTag$1] = undefined;
    var unmasked = true;
  } catch (e) {}

  var result = nativeObjectToString.call(value);
  if (unmasked) {
    if (isOwn) {
      value[symToStringTag$1] = tag;
    } else {
      delete value[symToStringTag$1];
    }
  }
  return result;
}

/** Used for built-in method references. */
var objectProto$1 = Object.prototype;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var nativeObjectToString$1 = objectProto$1.toString;

/**
 * Converts `value` to a string using `Object.prototype.toString`.
 *
 * @private
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 */
function objectToString(value) {
  return nativeObjectToString$1.call(value);
}

/** `Object#toString` result references. */
var nullTag = '[object Null]';
var undefinedTag = '[object Undefined]';

/** Built-in value references. */
var symToStringTag = Symbol$1 ? Symbol$1.toStringTag : undefined;

/**
 * The base implementation of `getTag` without fallbacks for buggy environments.
 *
 * @private
 * @param {*} value The value to query.
 * @returns {string} Returns the `toStringTag`.
 */
function baseGetTag(value) {
  if (value == null) {
    return value === undefined ? undefinedTag : nullTag;
  }
  return (symToStringTag && symToStringTag in Object(value))
    ? getRawTag(value)
    : objectToString(value);
}

/** `Object#toString` result references. */
var asyncTag = '[object AsyncFunction]';
var funcTag = '[object Function]';
var genTag = '[object GeneratorFunction]';
var proxyTag = '[object Proxy]';

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  if (!isObject(value)) {
    return false;
  }
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 9 which returns 'object' for typed arrays and other constructors.
  var tag = baseGetTag(value);
  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
}

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER = 9007199254740991;

/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */
function isLength(value) {
  return typeof value == 'number' &&
    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}

/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */
function isArrayLike(value) {
  return value != null && isLength(value.length) && !isFunction(value);
}

// A temporary value used to identify if the loop should be broken.
// See #1064, #1293
var breakLoop = {};

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

function once(fn) {
    return function () {
        if (fn === null) return;
        var callFn = fn;
        fn = null;
        callFn.apply(this, arguments);
    };
}

var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;

var getIterator = function (coll) {
    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();
};

/**
 * The base implementation of `_.times` without support for iteratee shorthands
 * or max array length checks.
 *
 * @private
 * @param {number} n The number of times to invoke `iteratee`.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the array of results.
 */
function baseTimes(n, iteratee) {
  var index = -1,
      result = Array(n);

  while (++index < n) {
    result[index] = iteratee(index);
  }
  return result;
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return value != null && typeof value == 'object';
}

/** `Object#toString` result references. */
var argsTag = '[object Arguments]';

/**
 * The base implementation of `_.isArguments`.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 */
function baseIsArguments(value) {
  return isObjectLike(value) && baseGetTag(value) == argsTag;
}

/** Used for built-in method references. */
var objectProto$3 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$2 = objectProto$3.hasOwnProperty;

/** Built-in value references. */
var propertyIsEnumerable = objectProto$3.propertyIsEnumerable;

/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */
var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
  return isObjectLike(value) && hasOwnProperty$2.call(value, 'callee') &&
    !propertyIsEnumerable.call(value, 'callee');
};

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * This method returns `false`.
 *
 * @static
 * @memberOf _
 * @since 4.13.0
 * @category Util
 * @returns {boolean} Returns `false`.
 * @example
 *
 * _.times(2, _.stubFalse);
 * // => [false, false]
 */
function stubFalse() {
  return false;
}

/** Detect free variable `exports`. */
var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule = freeExports && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports = freeModule && freeModule.exports === freeExports;

/** Built-in value references. */
var Buffer = moduleExports ? root.Buffer : undefined;

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;

/**
 * Checks if `value` is a buffer.
 *
 * @static
 * @memberOf _
 * @since 4.3.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
 * @example
 *
 * _.isBuffer(new Buffer(2));
 * // => true
 *
 * _.isBuffer(new Uint8Array(2));
 * // => false
 */
var isBuffer = nativeIsBuffer || stubFalse;

/** Used as references for various `Number` constants. */
var MAX_SAFE_INTEGER$1 = 9007199254740991;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  var type = typeof value;
  length = length == null ? MAX_SAFE_INTEGER$1 : length;

  return !!length &&
    (type == 'number' ||
      (type != 'symbol' && reIsUint.test(value))) &&
        (value > -1 && value % 1 == 0 && value < length);
}

/** `Object#toString` result references. */
var argsTag$1 = '[object Arguments]';
var arrayTag = '[object Array]';
var boolTag = '[object Boolean]';
var dateTag = '[object Date]';
var errorTag = '[object Error]';
var funcTag$1 = '[object Function]';
var mapTag = '[object Map]';
var numberTag = '[object Number]';
var objectTag = '[object Object]';
var regexpTag = '[object RegExp]';
var setTag = '[object Set]';
var stringTag = '[object String]';
var weakMapTag = '[object WeakMap]';

var arrayBufferTag = '[object ArrayBuffer]';
var dataViewTag = '[object DataView]';
var float32Tag = '[object Float32Array]';
var float64Tag = '[object Float64Array]';
var int8Tag = '[object Int8Array]';
var int16Tag = '[object Int16Array]';
var int32Tag = '[object Int32Array]';
var uint8Tag = '[object Uint8Array]';
var uint8ClampedTag = '[object Uint8ClampedArray]';
var uint16Tag = '[object Uint16Array]';
var uint32Tag = '[object Uint32Array]';

/** Used to identify `toStringTag` values of typed arrays. */
var typedArrayTags = {};
typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
typedArrayTags[uint32Tag] = true;
typedArrayTags[argsTag$1] = typedArrayTags[arrayTag] =
typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
typedArrayTags[errorTag] = typedArrayTags[funcTag$1] =
typedArrayTags[mapTag] = typedArrayTags[numberTag] =
typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
typedArrayTags[setTag] = typedArrayTags[stringTag] =
typedArrayTags[weakMapTag] = false;

/**
 * The base implementation of `_.isTypedArray` without Node.js optimizations.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 */
function baseIsTypedArray(value) {
  return isObjectLike(value) &&
    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
}

/**
 * The base implementation of `_.unary` without support for storing metadata.
 *
 * @private
 * @param {Function} func The function to cap arguments for.
 * @returns {Function} Returns the new capped function.
 */
function baseUnary(func) {
  return function(value) {
    return func(value);
  };
}

/** Detect free variable `exports`. */
var freeExports$1 = typeof exports == 'object' && exports && !exports.nodeType && exports;

/** Detect free variable `module`. */
var freeModule$1 = freeExports$1 && "object" == 'object' && module && !module.nodeType && module;

/** Detect the popular CommonJS extension `module.exports`. */
var moduleExports$1 = freeModule$1 && freeModule$1.exports === freeExports$1;

/** Detect free variable `process` from Node.js. */
var freeProcess = moduleExports$1 && freeGlobal.process;

/** Used to access faster Node.js helpers. */
var nodeUtil = (function() {
  try {
    // Use `util.types` for Node.js 10+.
    var types = freeModule$1 && freeModule$1.require && freeModule$1.require('util').types;

    if (types) {
      return types;
    }

    // Legacy `process.binding('util')` for Node.js < 10.
    return freeProcess && freeProcess.binding && freeProcess.binding('util');
  } catch (e) {}
}());

/* Node.js helper references. */
var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

/**
 * Checks if `value` is classified as a typed array.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
 * @example
 *
 * _.isTypedArray(new Uint8Array);
 * // => true
 *
 * _.isTypedArray([]);
 * // => false
 */
var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

/** Used for built-in method references. */
var objectProto$2 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$1 = objectProto$2.hasOwnProperty;

/**
 * Creates an array of the enumerable property names of the array-like `value`.
 *
 * @private
 * @param {*} value The value to query.
 * @param {boolean} inherited Specify returning inherited property names.
 * @returns {Array} Returns the array of property names.
 */
function arrayLikeKeys(value, inherited) {
  var isArr = isArray(value),
      isArg = !isArr && isArguments(value),
      isBuff = !isArr && !isArg && isBuffer(value),
      isType = !isArr && !isArg && !isBuff && isTypedArray(value),
      skipIndexes = isArr || isArg || isBuff || isType,
      result = skipIndexes ? baseTimes(value.length, String) : [],
      length = result.length;

  for (var key in value) {
    if ((inherited || hasOwnProperty$1.call(value, key)) &&
        !(skipIndexes && (
           // Safari 9 has enumerable `arguments.length` in strict mode.
           key == 'length' ||
           // Node.js 0.10 has enumerable non-index properties on buffers.
           (isBuff && (key == 'offset' || key == 'parent')) ||
           // PhantomJS 2 has enumerable non-index properties on typed arrays.
           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
           // Skip index properties.
           isIndex(key, length)
        ))) {
      result.push(key);
    }
  }
  return result;
}

/** Used for built-in method references. */
var objectProto$5 = Object.prototype;

/**
 * Checks if `value` is likely a prototype object.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
 */
function isPrototype(value) {
  var Ctor = value && value.constructor,
      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto$5;

  return value === proto;
}

/**
 * Creates a unary function that invokes `func` with its argument transformed.
 *
 * @private
 * @param {Function} func The function to wrap.
 * @param {Function} transform The argument transform.
 * @returns {Function} Returns the new function.
 */
function overArg(func, transform) {
  return function(arg) {
    return func(transform(arg));
  };
}

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeKeys = overArg(Object.keys, Object);

/** Used for built-in method references. */
var objectProto$4 = Object.prototype;

/** Used to check objects for own properties. */
var hasOwnProperty$3 = objectProto$4.hasOwnProperty;

/**
 * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
 *
 * @private
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 */
function baseKeys(object) {
  if (!isPrototype(object)) {
    return nativeKeys(object);
  }
  var result = [];
  for (var key in Object(object)) {
    if (hasOwnProperty$3.call(object, key) && key != 'constructor') {
      result.push(key);
    }
  }
  return result;
}

/**
 * Creates an array of the own enumerable property names of `object`.
 *
 * **Note:** Non-object values are coerced to objects. See the
 * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
 * for more details.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Object
 * @param {Object} object The object to query.
 * @returns {Array} Returns the array of property names.
 * @example
 *
 * function Foo() {
 *   this.a = 1;
 *   this.b = 2;
 * }
 *
 * Foo.prototype.c = 3;
 *
 * _.keys(new Foo);
 * // => ['a', 'b'] (iteration order is not guaranteed)
 *
 * _.keys('hi');
 * // => ['0', '1']
 */
function keys(object) {
  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
}

function createArrayIterator(coll) {
    var i = -1;
    var len = coll.length;
    return function next() {
        return ++i < len ? {value: coll[i], key: i} : null;
    }
}

function createES2015Iterator(iterator) {
    var i = -1;
    return function next() {
        var item = iterator.next();
        if (item.done)
            return null;
        i++;
        return {value: item.value, key: i};
    }
}

function createObjectIterator(obj) {
    var okeys = keys(obj);
    var i = -1;
    var len = okeys.length;
    return function next() {
        var key = okeys[++i];
        return i < len ? {value: obj[key], key: key} : null;
    };
}

function iterator(coll) {
    if (isArrayLike(coll)) {
        return createArrayIterator(coll);
    }

    var iterator = getIterator(coll);
    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);
}

function onlyOnce(fn) {
    return function() {
        if (fn === null) throw new Error("Callback was already called.");
        var callFn = fn;
        fn = null;
        callFn.apply(this, arguments);
    };
}

function _eachOfLimit(limit) {
    return function (obj, iteratee, callback) {
        callback = once(callback || noop);
        if (limit <= 0 || !obj) {
            return callback(null);
        }
        var nextElem = iterator(obj);
        var done = false;
        var running = 0;
        var looping = false;

        function iterateeCallback(err, value) {
            running -= 1;
            if (err) {
                done = true;
                callback(err);
            }
            else if (value === breakLoop || (done && running <= 0)) {
                done = true;
                return callback(null);
            }
            else if (!looping) {
                replenish();
            }
        }

        function replenish () {
            looping = true;
            while (running < limit && !done) {
                var elem = nextElem();
                if (elem === null) {
                    done = true;
                    if (running <= 0) {
                        callback(null);
                    }
                    return;
                }
                running += 1;
                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));
            }
            looping = false;
        }

        replenish();
    };
}

/**
 * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name eachOfLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.eachOf]{@link module:Collections.eachOf}
 * @alias forEachOfLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each
 * item in `coll`. The `key` is the item's key, or index in the case of an
 * array.
 * Invoked with (item, key, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 */
function eachOfLimit(coll, limit, iteratee, callback) {
    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);
}

function doLimit(fn, limit) {
    return function (iterable, iteratee, callback) {
        return fn(iterable, limit, iteratee, callback);
    };
}

// eachOf implementation optimized for array-likes
function eachOfArrayLike(coll, iteratee, callback) {
    callback = once(callback || noop);
    var index = 0,
        completed = 0,
        length = coll.length;
    if (length === 0) {
        callback(null);
    }

    function iteratorCallback(err, value) {
        if (err) {
            callback(err);
        } else if ((++completed === length) || value === breakLoop) {
            callback(null);
        }
    }

    for (; index < length; index++) {
        iteratee(coll[index], index, onlyOnce(iteratorCallback));
    }
}

// a generic version of eachOf which can handle array, object, and iterator cases.
var eachOfGeneric = doLimit(eachOfLimit, Infinity);

/**
 * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument
 * to the iteratee.
 *
 * @name eachOf
 * @static
 * @memberOf module:Collections
 * @method
 * @alias forEachOf
 * @category Collection
 * @see [async.each]{@link module:Collections.each}
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each
 * item in `coll`.
 * The `key` is the item's key, or index in the case of an array.
 * Invoked with (item, key, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 * @example
 *
 * var obj = {dev: "/dev.json", test: "/test.json", prod: "/prod.json"};
 * var configs = {};
 *
 * async.forEachOf(obj, function (value, key, callback) {
 *     fs.readFile(__dirname + value, "utf8", function (err, data) {
 *         if (err) return callback(err);
 *         try {
 *             configs[key] = JSON.parse(data);
 *         } catch (e) {
 *             return callback(e);
 *         }
 *         callback();
 *     });
 * }, function (err) {
 *     if (err) console.error(err.message);
 *     // configs is now a map of JSON data
 *     doSomethingWith(configs);
 * });
 */
var eachOf = function(coll, iteratee, callback) {
    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;
    eachOfImplementation(coll, wrapAsync(iteratee), callback);
};

function doParallel(fn) {
    return function (obj, iteratee, callback) {
        return fn(eachOf, obj, wrapAsync(iteratee), callback);
    };
}

function _asyncMap(eachfn, arr, iteratee, callback) {
    callback = callback || noop;
    arr = arr || [];
    var results = [];
    var counter = 0;
    var _iteratee = wrapAsync(iteratee);

    eachfn(arr, function (value, _, callback) {
        var index = counter++;
        _iteratee(value, function (err, v) {
            results[index] = v;
            callback(err);
        });
    }, function (err) {
        callback(err, results);
    });
}

/**
 * Produces a new collection of values by mapping each value in `coll` through
 * the `iteratee` function. The `iteratee` is called with an item from `coll`
 * and a callback for when it has finished processing. Each of these callback
 * takes 2 arguments: an `error`, and the transformed item from `coll`. If
 * `iteratee` passes an error to its callback, the main `callback` (for the
 * `map` function) is immediately called with the error.
 *
 * Note, that since this function applies the `iteratee` to each item in
 * parallel, there is no guarantee that the `iteratee` functions will complete
 * in order. However, the results array will be in the same order as the
 * original `coll`.
 *
 * If `map` is passed an Object, the results will be an Array.  The results
 * will roughly be in the order of the original Objects' keys (but this can
 * vary across JavaScript engines).
 *
 * @name map
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with the transformed item.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Results is an Array of the
 * transformed items from the `coll`. Invoked with (err, results).
 * @example
 *
 * async.map(['file1','file2','file3'], fs.stat, function(err, results) {
 *     // results is now an array of stats for each file
 * });
 */
var map = doParallel(_asyncMap);

/**
 * Applies the provided arguments to each function in the array, calling
 * `callback` after all functions have completed. If you only provide the first
 * argument, `fns`, then it will return a function which lets you pass in the
 * arguments as if it were a single function call. If more arguments are
 * provided, `callback` is required while `args` is still optional.
 *
 * @name applyEach
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s
 * to all call with the same arguments
 * @param {...*} [args] - any number of separate arguments to pass to the
 * function.
 * @param {Function} [callback] - the final argument should be the callback,
 * called when all functions have completed processing.
 * @returns {Function} - If only the first argument, `fns`, is provided, it will
 * return a function which lets you pass in the arguments as if it were a single
 * function call. The signature is `(..args, callback)`. If invoked with any
 * arguments, `callback` is required.
 * @example
 *
 * async.applyEach([enableSearch, updateSchema], 'bucket', callback);
 *
 * // partial application example:
 * async.each(
 *     buckets,
 *     async.applyEach([enableSearch, updateSchema]),
 *     callback
 * );
 */
var applyEach = applyEach$1(map);

function doParallelLimit(fn) {
    return function (obj, limit, iteratee, callback) {
        return fn(_eachOfLimit(limit), obj, wrapAsync(iteratee), callback);
    };
}

/**
 * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.
 *
 * @name mapLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.map]{@link module:Collections.map}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with the transformed item.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Results is an array of the
 * transformed items from the `coll`. Invoked with (err, results).
 */
var mapLimit = doParallelLimit(_asyncMap);

/**
 * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.
 *
 * @name mapSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.map]{@link module:Collections.map}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with the transformed item.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Results is an array of the
 * transformed items from the `coll`. Invoked with (err, results).
 */
var mapSeries = doLimit(mapLimit, 1);

/**
 * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.
 *
 * @name applyEachSeries
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.applyEach]{@link module:ControlFlow.applyEach}
 * @category Control Flow
 * @param {Array|Iterable|Object} fns - A collection of {@link AsyncFunction}s to all
 * call with the same arguments
 * @param {...*} [args] - any number of separate arguments to pass to the
 * function.
 * @param {Function} [callback] - the final argument should be the callback,
 * called when all functions have completed processing.
 * @returns {Function} - If only the first argument is provided, it will return
 * a function which lets you pass in the arguments as if it were a single
 * function call.
 */
var applyEachSeries = applyEach$1(mapSeries);

/**
 * A specialized version of `_.forEach` for arrays without support for
 * iteratee shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns `array`.
 */
function arrayEach(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length;

  while (++index < length) {
    if (iteratee(array[index], index, array) === false) {
      break;
    }
  }
  return array;
}

/**
 * Creates a base function for methods like `_.forIn` and `_.forOwn`.
 *
 * @private
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Function} Returns the new base function.
 */
function createBaseFor(fromRight) {
  return function(object, iteratee, keysFunc) {
    var index = -1,
        iterable = Object(object),
        props = keysFunc(object),
        length = props.length;

    while (length--) {
      var key = props[fromRight ? length : ++index];
      if (iteratee(iterable[key], key, iterable) === false) {
        break;
      }
    }
    return object;
  };
}

/**
 * The base implementation of `baseForOwn` which iterates over `object`
 * properties returned by `keysFunc` and invokes `iteratee` for each property.
 * Iteratee functions may exit iteration early by explicitly returning `false`.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @param {Function} keysFunc The function to get the keys of `object`.
 * @returns {Object} Returns `object`.
 */
var baseFor = createBaseFor();

/**
 * The base implementation of `_.forOwn` without support for iteratee shorthands.
 *
 * @private
 * @param {Object} object The object to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Object} Returns `object`.
 */
function baseForOwn(object, iteratee) {
  return object && baseFor(object, iteratee, keys);
}

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/**
 * A specialized version of `_.indexOf` which performs strict equality
 * comparisons of values, i.e. `===`.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function strictIndexOf(array, value, fromIndex) {
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  return value === value
    ? strictIndexOf(array, value, fromIndex)
    : baseFindIndex(array, baseIsNaN, fromIndex);
}

/**
 * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on
 * their requirements. Each function can optionally depend on other functions
 * being completed first, and each function is run as soon as its requirements
 * are satisfied.
 *
 * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence
 * will stop. Further tasks will not execute (so any other functions depending
 * on it will not run), and the main `callback` is immediately called with the
 * error.
 *
 * {@link AsyncFunction}s also receive an object containing the results of functions which
 * have completed so far as the first argument, if they have dependencies. If a
 * task function has no dependencies, it will only be passed a callback.
 *
 * @name auto
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Object} tasks - An object. Each of its properties is either a
 * function or an array of requirements, with the {@link AsyncFunction} itself the last item
 * in the array. The object's key of a property serves as the name of the task
 * defined by that property, i.e. can be used when specifying requirements for
 * other tasks. The function receives one or two arguments:
 * * a `results` object, containing the results of the previously executed
 *   functions, only passed if the task has any dependencies,
 * * a `callback(err, result)` function, which must be called when finished,
 *   passing an `error` (which can be `null`) and the result of the function's
 *   execution.
 * @param {number} [concurrency=Infinity] - An optional `integer` for
 * determining the maximum number of tasks that can be run in parallel. By
 * default, as many as possible.
 * @param {Function} [callback] - An optional callback which is called when all
 * the tasks have been completed. It receives the `err` argument if any `tasks`
 * pass an error to their callback. Results are always returned; however, if an
 * error occurs, no further `tasks` will be performed, and the results object
 * will only contain partial results. Invoked with (err, results).
 * @returns undefined
 * @example
 *
 * async.auto({
 *     // this function will just be passed a callback
 *     readData: async.apply(fs.readFile, 'data.txt', 'utf-8'),
 *     showData: ['readData', function(results, cb) {
 *         // results.readData is the file's contents
 *         // ...
 *     }]
 * }, callback);
 *
 * async.auto({
 *     get_data: function(callback) {
 *         console.log('in get_data');
 *         // async code to get some data
 *         callback(null, 'data', 'converted to array');
 *     },
 *     make_folder: function(callback) {
 *         console.log('in make_folder');
 *         // async code to create a directory to store a file in
 *         // this is run at the same time as getting the data
 *         callback(null, 'folder');
 *     },
 *     write_file: ['get_data', 'make_folder', function(results, callback) {
 *         console.log('in write_file', JSON.stringify(results));
 *         // once there is some data and the directory exists,
 *         // write the data to a file in the directory
 *         callback(null, 'filename');
 *     }],
 *     email_link: ['write_file', function(results, callback) {
 *         console.log('in email_link', JSON.stringify(results));
 *         // once the file is written let's email a link to it...
 *         // results.write_file contains the filename returned by write_file.
 *         callback(null, {'file':results.write_file, 'email':'user@example.com'});
 *     }]
 * }, function(err, results) {
 *     console.log('err = ', err);
 *     console.log('results = ', results);
 * });
 */
var auto = function (tasks, concurrency, callback) {
    if (typeof concurrency === 'function') {
        // concurrency is optional, shift the args.
        callback = concurrency;
        concurrency = null;
    }
    callback = once(callback || noop);
    var keys$$1 = keys(tasks);
    var numTasks = keys$$1.length;
    if (!numTasks) {
        return callback(null);
    }
    if (!concurrency) {
        concurrency = numTasks;
    }

    var results = {};
    var runningTasks = 0;
    var hasError = false;

    var listeners = Object.create(null);

    var readyTasks = [];

    // for cycle detection:
    var readyToCheck = []; // tasks that have been identified as reachable
    // without the possibility of returning to an ancestor task
    var uncheckedDependencies = {};

    baseForOwn(tasks, function (task, key) {
        if (!isArray(task)) {
            // no dependencies
            enqueueTask(key, [task]);
            readyToCheck.push(key);
            return;
        }

        var dependencies = task.slice(0, task.length - 1);
        var remainingDependencies = dependencies.length;
        if (remainingDependencies === 0) {
            enqueueTask(key, task);
            readyToCheck.push(key);
            return;
        }
        uncheckedDependencies[key] = remainingDependencies;

        arrayEach(dependencies, function (dependencyName) {
            if (!tasks[dependencyName]) {
                throw new Error('async.auto task `' + key +
                    '` has a non-existent dependency `' +
                    dependencyName + '` in ' +
                    dependencies.join(', '));
            }
            addListener(dependencyName, function () {
                remainingDependencies--;
                if (remainingDependencies === 0) {
                    enqueueTask(key, task);
                }
            });
        });
    });

    checkForDeadlocks();
    processQueue();

    function enqueueTask(key, task) {
        readyTasks.push(function () {
            runTask(key, task);
        });
    }

    function processQueue() {
        if (readyTasks.length === 0 && runningTasks === 0) {
            return callback(null, results);
        }
        while(readyTasks.length && runningTasks < concurrency) {
            var run = readyTasks.shift();
            run();
        }

    }

    function addListener(taskName, fn) {
        var taskListeners = listeners[taskName];
        if (!taskListeners) {
            taskListeners = listeners[taskName] = [];
        }

        taskListeners.push(fn);
    }

    function taskComplete(taskName) {
        var taskListeners = listeners[taskName] || [];
        arrayEach(taskListeners, function (fn) {
            fn();
        });
        processQueue();
    }


    function runTask(key, task) {
        if (hasError) return;

        var taskCallback = onlyOnce(function(err, result) {
            runningTasks--;
            if (arguments.length > 2) {
                result = slice(arguments, 1);
            }
            if (err) {
                var safeResults = {};
                baseForOwn(results, function(val, rkey) {
                    safeResults[rkey] = val;
                });
                safeResults[key] = result;
                hasError = true;
                listeners = Object.create(null);

                callback(err, safeResults);
            } else {
                results[key] = result;
                taskComplete(key);
            }
        });

        runningTasks++;
        var taskFn = wrapAsync(task[task.length - 1]);
        if (task.length > 1) {
            taskFn(results, taskCallback);
        } else {
            taskFn(taskCallback);
        }
    }

    function checkForDeadlocks() {
        // Kahn's algorithm
        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm
        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html
        var currentTask;
        var counter = 0;
        while (readyToCheck.length) {
            currentTask = readyToCheck.pop();
            counter++;
            arrayEach(getDependents(currentTask), function (dependent) {
                if (--uncheckedDependencies[dependent] === 0) {
                    readyToCheck.push(dependent);
                }
            });
        }

        if (counter !== numTasks) {
            throw new Error(
                'async.auto cannot execute tasks due to a recursive dependency'
            );
        }
    }

    function getDependents(taskName) {
        var result = [];
        baseForOwn(tasks, function (task, key) {
            if (isArray(task) && baseIndexOf(task, taskName, 0) >= 0) {
                result.push(key);
            }
        });
        return result;
    }
};

/**
 * A specialized version of `_.map` for arrays without support for iteratee
 * shorthands.
 *
 * @private
 * @param {Array} [array] The array to iterate over.
 * @param {Function} iteratee The function invoked per iteration.
 * @returns {Array} Returns the new mapped array.
 */
function arrayMap(array, iteratee) {
  var index = -1,
      length = array == null ? 0 : array.length,
      result = Array(length);

  while (++index < length) {
    result[index] = iteratee(array[index], index, array);
  }
  return result;
}

/** `Object#toString` result references. */
var symbolTag = '[object Symbol]';

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && baseGetTag(value) == symbolTag);
}

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol$1 ? Symbol$1.prototype : undefined;
var symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isArray(value)) {
    // Recursively convert values (susceptible to call stack limits).
    return arrayMap(value, baseToString) + '';
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * The base implementation of `_.slice` without an iteratee call guard.
 *
 * @private
 * @param {Array} array The array to slice.
 * @param {number} [start=0] The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the slice of `array`.
 */
function baseSlice(array, start, end) {
  var index = -1,
      length = array.length;

  if (start < 0) {
    start = -start > length ? 0 : (length + start);
  }
  end = end > length ? length : end;
  if (end < 0) {
    end += length;
  }
  length = start > end ? 0 : ((end - start) >>> 0);
  start >>>= 0;

  var result = Array(length);
  while (++index < length) {
    result[index] = array[index + start];
  }
  return result;
}

/**
 * Casts `array` to a slice if it's needed.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {number} start The start position.
 * @param {number} [end=array.length] The end position.
 * @returns {Array} Returns the cast slice.
 */
function castSlice(array, start, end) {
  var length = array.length;
  end = end === undefined ? length : end;
  return (!start && end >= length) ? array : baseSlice(array, start, end);
}

/**
 * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the last unmatched string symbol.
 */
function charsEndIndex(strSymbols, chrSymbols) {
  var index = strSymbols.length;

  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/**
 * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
 * that is not found in the character symbols.
 *
 * @private
 * @param {Array} strSymbols The string symbols to inspect.
 * @param {Array} chrSymbols The character symbols to find.
 * @returns {number} Returns the index of the first unmatched string symbol.
 */
function charsStartIndex(strSymbols, chrSymbols) {
  var index = -1,
      length = strSymbols.length;

  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
  return index;
}

/**
 * Converts an ASCII `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function asciiToArray(string) {
  return string.split('');
}

/** Used to compose unicode character classes. */
var rsAstralRange = '\\ud800-\\udfff';
var rsComboMarksRange = '\\u0300-\\u036f';
var reComboHalfMarksRange = '\\ufe20-\\ufe2f';
var rsComboSymbolsRange = '\\u20d0-\\u20ff';
var rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;
var rsVarRange = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsZWJ = '\\u200d';

/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

/**
 * Checks if `string` contains Unicode symbols.
 *
 * @private
 * @param {string} string The string to inspect.
 * @returns {boolean} Returns `true` if a symbol is found, else `false`.
 */
function hasUnicode(string) {
  return reHasUnicode.test(string);
}

/** Used to compose unicode character classes. */
var rsAstralRange$1 = '\\ud800-\\udfff';
var rsComboMarksRange$1 = '\\u0300-\\u036f';
var reComboHalfMarksRange$1 = '\\ufe20-\\ufe2f';
var rsComboSymbolsRange$1 = '\\u20d0-\\u20ff';
var rsComboRange$1 = rsComboMarksRange$1 + reComboHalfMarksRange$1 + rsComboSymbolsRange$1;
var rsVarRange$1 = '\\ufe0e\\ufe0f';

/** Used to compose unicode capture groups. */
var rsAstral = '[' + rsAstralRange$1 + ']';
var rsCombo = '[' + rsComboRange$1 + ']';
var rsFitz = '\\ud83c[\\udffb-\\udfff]';
var rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')';
var rsNonAstral = '[^' + rsAstralRange$1 + ']';
var rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}';
var rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]';
var rsZWJ$1 = '\\u200d';

/** Used to compose unicode regexes. */
var reOptMod = rsModifier + '?';
var rsOptVar = '[' + rsVarRange$1 + ']?';
var rsOptJoin = '(?:' + rsZWJ$1 + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*';
var rsSeq = rsOptVar + reOptMod + rsOptJoin;
var rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

/**
 * Converts a Unicode `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function unicodeToArray(string) {
  return string.match(reUnicode) || [];
}

/**
 * Converts `string` to an array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the converted array.
 */
function stringToArray(string) {
  return hasUnicode(string)
    ? unicodeToArray(string)
    : asciiToArray(string);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to convert.
 * @returns {string} Returns the converted string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/** Used to match leading and trailing whitespace. */
var reTrim = /^\s+|\s+$/g;

/**
 * Removes leading and trailing whitespace or specified characters from `string`.
 *
 * @static
 * @memberOf _
 * @since 3.0.0
 * @category String
 * @param {string} [string=''] The string to trim.
 * @param {string} [chars=whitespace] The characters to trim.
 * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
 * @returns {string} Returns the trimmed string.
 * @example
 *
 * _.trim('  abc  ');
 * // => 'abc'
 *
 * _.trim('-_-abc-_-', '_-');
 * // => 'abc'
 *
 * _.map(['  foo  ', '  bar  '], _.trim);
 * // => ['foo', 'bar']
 */
function trim(string, chars, guard) {
  string = toString(string);
  if (string && (guard || chars === undefined)) {
    return string.replace(reTrim, '');
  }
  if (!string || !(chars = baseToString(chars))) {
    return string;
  }
  var strSymbols = stringToArray(string),
      chrSymbols = stringToArray(chars),
      start = charsStartIndex(strSymbols, chrSymbols),
      end = charsEndIndex(strSymbols, chrSymbols) + 1;

  return castSlice(strSymbols, start, end).join('');
}

var FN_ARGS = /^(?:async\s+)?(function)?\s*[^\(]*\(\s*([^\)]*)\)/m;
var FN_ARG_SPLIT = /,/;
var FN_ARG = /(=.+)?(\s*)$/;
var STRIP_COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;

function parseParams(func) {
    func = func.toString().replace(STRIP_COMMENTS, '');
    func = func.match(FN_ARGS)[2].replace(' ', '');
    func = func ? func.split(FN_ARG_SPLIT) : [];
    func = func.map(function (arg){
        return trim(arg.replace(FN_ARG, ''));
    });
    return func;
}

/**
 * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent
 * tasks are specified as parameters to the function, after the usual callback
 * parameter, with the parameter names matching the names of the tasks it
 * depends on. This can provide even more readable task graphs which can be
 * easier to maintain.
 *
 * If a final callback is specified, the task results are similarly injected,
 * specified as named parameters after the initial error parameter.
 *
 * The autoInject function is purely syntactic sugar and its semantics are
 * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.
 *
 * @name autoInject
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.auto]{@link module:ControlFlow.auto}
 * @category Control Flow
 * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of
 * the form 'func([dependencies...], callback). The object's key of a property
 * serves as the name of the task defined by that property, i.e. can be used
 * when specifying requirements for other tasks.
 * * The `callback` parameter is a `callback(err, result)` which must be called
 *   when finished, passing an `error` (which can be `null`) and the result of
 *   the function's execution. The remaining parameters name other tasks on
 *   which the task is dependent, and the results from those tasks are the
 *   arguments of those parameters.
 * @param {Function} [callback] - An optional callback which is called when all
 * the tasks have been completed. It receives the `err` argument if any `tasks`
 * pass an error to their callback, and a `results` object with any completed
 * task results, similar to `auto`.
 * @example
 *
 * //  The example from `auto` can be rewritten as follows:
 * async.autoInject({
 *     get_data: function(callback) {
 *         // async code to get some data
 *         callback(null, 'data', 'converted to array');
 *     },
 *     make_folder: function(callback) {
 *         // async code to create a directory to store a file in
 *         // this is run at the same time as getting the data
 *         callback(null, 'folder');
 *     },
 *     write_file: function(get_data, make_folder, callback) {
 *         // once there is some data and the directory exists,
 *         // write the data to a file in the directory
 *         callback(null, 'filename');
 *     },
 *     email_link: function(write_file, callback) {
 *         // once the file is written let's email a link to it...
 *         // write_file contains the filename returned by write_file.
 *         callback(null, {'file':write_file, 'email':'user@example.com'});
 *     }
 * }, function(err, results) {
 *     console.log('err = ', err);
 *     console.log('email_link = ', results.email_link);
 * });
 *
 * // If you are using a JS minifier that mangles parameter names, `autoInject`
 * // will not work with plain functions, since the parameter names will be
 * // collapsed to a single letter identifier.  To work around this, you can
 * // explicitly specify the names of the parameters your task function needs
 * // in an array, similar to Angular.js dependency injection.
 *
 * // This still has an advantage over plain `auto`, since the results a task
 * // depends on are still spread into arguments.
 * async.autoInject({
 *     //...
 *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {
 *         callback(null, 'filename');
 *     }],
 *     email_link: ['write_file', function(write_file, callback) {
 *         callback(null, {'file':write_file, 'email':'user@example.com'});
 *     }]
 *     //...
 * }, function(err, results) {
 *     console.log('err = ', err);
 *     console.log('email_link = ', results.email_link);
 * });
 */
function autoInject(tasks, callback) {
    var newTasks = {};

    baseForOwn(tasks, function (taskFn, key) {
        var params;
        var fnIsAsync = isAsync(taskFn);
        var hasNoDeps =
            (!fnIsAsync && taskFn.length === 1) ||
            (fnIsAsync && taskFn.length === 0);

        if (isArray(taskFn)) {
            params = taskFn.slice(0, -1);
            taskFn = taskFn[taskFn.length - 1];

            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);
        } else if (hasNoDeps) {
            // no dependencies, use the function as-is
            newTasks[key] = taskFn;
        } else {
            params = parseParams(taskFn);
            if (taskFn.length === 0 && !fnIsAsync && params.length === 0) {
                throw new Error("autoInject task functions require explicit parameters.");
            }

            // remove callback param
            if (!fnIsAsync) params.pop();

            newTasks[key] = params.concat(newTask);
        }

        function newTask(results, taskCb) {
            var newArgs = arrayMap(params, function (name) {
                return results[name];
            });
            newArgs.push(taskCb);
            wrapAsync(taskFn).apply(null, newArgs);
        }
    });

    auto(newTasks, callback);
}

// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation
// used for queues. This implementation assumes that the node provided by the user can be modified
// to adjust the next and last properties. We implement only the minimal functionality
// for queue support.
function DLL() {
    this.head = this.tail = null;
    this.length = 0;
}

function setInitial(dll, node) {
    dll.length = 1;
    dll.head = dll.tail = node;
}

DLL.prototype.removeLink = function(node) {
    if (node.prev) node.prev.next = node.next;
    else this.head = node.next;
    if (node.next) node.next.prev = node.prev;
    else this.tail = node.prev;

    node.prev = node.next = null;
    this.length -= 1;
    return node;
};

DLL.prototype.empty = function () {
    while(this.head) this.shift();
    return this;
};

DLL.prototype.insertAfter = function(node, newNode) {
    newNode.prev = node;
    newNode.next = node.next;
    if (node.next) node.next.prev = newNode;
    else this.tail = newNode;
    node.next = newNode;
    this.length += 1;
};

DLL.prototype.insertBefore = function(node, newNode) {
    newNode.prev = node.prev;
    newNode.next = node;
    if (node.prev) node.prev.next = newNode;
    else this.head = newNode;
    node.prev = newNode;
    this.length += 1;
};

DLL.prototype.unshift = function(node) {
    if (this.head) this.insertBefore(this.head, node);
    else setInitial(this, node);
};

DLL.prototype.push = function(node) {
    if (this.tail) this.insertAfter(this.tail, node);
    else setInitial(this, node);
};

DLL.prototype.shift = function() {
    return this.head && this.removeLink(this.head);
};

DLL.prototype.pop = function() {
    return this.tail && this.removeLink(this.tail);
};

DLL.prototype.toArray = function () {
    var arr = Array(this.length);
    var curr = this.head;
    for(var idx = 0; idx < this.length; idx++) {
        arr[idx] = curr.data;
        curr = curr.next;
    }
    return arr;
};

DLL.prototype.remove = function (testFn) {
    var curr = this.head;
    while(!!curr) {
        var next = curr.next;
        if (testFn(curr)) {
            this.removeLink(curr);
        }
        curr = next;
    }
    return this;
};

function queue(worker, concurrency, payload) {
    if (concurrency == null) {
        concurrency = 1;
    }
    else if(concurrency === 0) {
        throw new Error('Concurrency must not be zero');
    }

    var _worker = wrapAsync(worker);
    var numRunning = 0;
    var workersList = [];

    var processingScheduled = false;
    function _insert(data, insertAtFront, callback) {
        if (callback != null && typeof callback !== 'function') {
            throw new Error('task callback must be a function');
        }
        q.started = true;
        if (!isArray(data)) {
            data = [data];
        }
        if (data.length === 0 && q.idle()) {
            // call drain immediately if there are no tasks
            return setImmediate$1(function() {
                q.drain();
            });
        }

        for (var i = 0, l = data.length; i < l; i++) {
            var item = {
                data: data[i],
                callback: callback || noop
            };

            if (insertAtFront) {
                q._tasks.unshift(item);
            } else {
                q._tasks.push(item);
            }
        }

        if (!processingScheduled) {
            processingScheduled = true;
            setImmediate$1(function() {
                processingScheduled = false;
                q.process();
            });
        }
    }

    function _next(tasks) {
        return function(err){
            numRunning -= 1;

            for (var i = 0, l = tasks.length; i < l; i++) {
                var task = tasks[i];

                var index = baseIndexOf(workersList, task, 0);
                if (index === 0) {
                    workersList.shift();
                } else if (index > 0) {
                    workersList.splice(index, 1);
                }

                task.callback.apply(task, arguments);

                if (err != null) {
                    q.error(err, task.data);
                }
            }

            if (numRunning <= (q.concurrency - q.buffer) ) {
                q.unsaturated();
            }

            if (q.idle()) {
                q.drain();
            }
            q.process();
        };
    }

    var isProcessing = false;
    var q = {
        _tasks: new DLL(),
        concurrency: concurrency,
        payload: payload,
        saturated: noop,
        unsaturated:noop,
        buffer: concurrency / 4,
        empty: noop,
        drain: noop,
        error: noop,
        started: false,
        paused: false,
        push: function (data, callback) {
            _insert(data, false, callback);
        },
        kill: function () {
            q.drain = noop;
            q._tasks.empty();
        },
        unshift: function (data, callback) {
            _insert(data, true, callback);
        },
        remove: function (testFn) {
            q._tasks.remove(testFn);
        },
        process: function () {
            // Avoid trying to start too many processing operations. This can occur
            // when callbacks resolve synchronously (#1267).
            if (isProcessing) {
                return;
            }
            isProcessing = true;
            while(!q.paused && numRunning < q.concurrency && q._tasks.length){
                var tasks = [], data = [];
                var l = q._tasks.length;
                if (q.payload) l = Math.min(l, q.payload);
                for (var i = 0; i < l; i++) {
                    var node = q._tasks.shift();
                    tasks.push(node);
                    workersList.push(node);
                    data.push(node.data);
                }

                numRunning += 1;

                if (q._tasks.length === 0) {
                    q.empty();
                }

                if (numRunning === q.concurrency) {
                    q.saturated();
                }

                var cb = onlyOnce(_next(tasks));
                _worker(data, cb);
            }
            isProcessing = false;
        },
        length: function () {
            return q._tasks.length;
        },
        running: function () {
            return numRunning;
        },
        workersList: function () {
            return workersList;
        },
        idle: function() {
            return q._tasks.length + numRunning === 0;
        },
        pause: function () {
            q.paused = true;
        },
        resume: function () {
            if (q.paused === false) { return; }
            q.paused = false;
            setImmediate$1(q.process);
        }
    };
    return q;
}

/**
 * A cargo of tasks for the worker function to complete. Cargo inherits all of
 * the same methods and event callbacks as [`queue`]{@link module:ControlFlow.queue}.
 * @typedef {Object} CargoObject
 * @memberOf module:ControlFlow
 * @property {Function} length - A function returning the number of items
 * waiting to be processed. Invoke like `cargo.length()`.
 * @property {number} payload - An `integer` for determining how many tasks
 * should be process per round. This property can be changed after a `cargo` is
 * created to alter the payload on-the-fly.
 * @property {Function} push - Adds `task` to the `queue`. The callback is
 * called once the `worker` has finished processing the task. Instead of a
 * single task, an array of `tasks` can be submitted. The respective callback is
 * used for every task in the list. Invoke like `cargo.push(task, [callback])`.
 * @property {Function} saturated - A callback that is called when the
 * `queue.length()` hits the concurrency and further tasks will be queued.
 * @property {Function} empty - A callback that is called when the last item
 * from the `queue` is given to a `worker`.
 * @property {Function} drain - A callback that is called when the last item
 * from the `queue` has returned from the `worker`.
 * @property {Function} idle - a function returning false if there are items
 * waiting or being processed, or true if not. Invoke like `cargo.idle()`.
 * @property {Function} pause - a function that pauses the processing of tasks
 * until `resume()` is called. Invoke like `cargo.pause()`.
 * @property {Function} resume - a function that resumes the processing of
 * queued tasks when the queue is paused. Invoke like `cargo.resume()`.
 * @property {Function} kill - a function that removes the `drain` callback and
 * empties remaining tasks from the queue forcing it to go idle. Invoke like `cargo.kill()`.
 */

/**
 * Creates a `cargo` object with the specified payload. Tasks added to the
 * cargo will be processed altogether (up to the `payload` limit). If the
 * `worker` is in progress, the task is queued until it becomes available. Once
 * the `worker` has completed some tasks, each callback of those tasks is
 * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)
 * for how `cargo` and `queue` work.
 *
 * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers
 * at a time, cargo passes an array of tasks to a single worker, repeating
 * when the worker is finished.
 *
 * @name cargo
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.queue]{@link module:ControlFlow.queue}
 * @category Control Flow
 * @param {AsyncFunction} worker - An asynchronous function for processing an array
 * of queued tasks. Invoked with `(tasks, callback)`.
 * @param {number} [payload=Infinity] - An optional `integer` for determining
 * how many tasks should be processed per round; if omitted, the default is
 * unlimited.
 * @returns {module:ControlFlow.CargoObject} A cargo object to manage the tasks. Callbacks can
 * attached as certain properties to listen for specific events during the
 * lifecycle of the cargo and inner queue.
 * @example
 *
 * // create a cargo object with payload 2
 * var cargo = async.cargo(function(tasks, callback) {
 *     for (var i=0; i<tasks.length; i++) {
 *         console.log('hello ' + tasks[i].name);
 *     }
 *     callback();
 * }, 2);
 *
 * // add some items
 * cargo.push({name: 'foo'}, function(err) {
 *     console.log('finished processing foo');
 * });
 * cargo.push({name: 'bar'}, function(err) {
 *     console.log('finished processing bar');
 * });
 * cargo.push({name: 'baz'}, function(err) {
 *     console.log('finished processing baz');
 * });
 */
function cargo(worker, payload) {
    return queue(worker, 1, payload);
}

/**
 * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.
 *
 * @name eachOfSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.eachOf]{@link module:Collections.eachOf}
 * @alias forEachOfSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * Invoked with (item, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Invoked with (err).
 */
var eachOfSeries = doLimit(eachOfLimit, 1);

/**
 * Reduces `coll` into a single value using an async `iteratee` to return each
 * successive step. `memo` is the initial state of the reduction. This function
 * only operates in series.
 *
 * For performance reasons, it may make sense to split a call to this function
 * into a parallel map, and then use the normal `Array.prototype.reduce` on the
 * results. This function is for situations where each step in the reduction
 * needs to be async; if you can get the data before reducing it, then it's
 * probably a good idea to do so.
 *
 * @name reduce
 * @static
 * @memberOf module:Collections
 * @method
 * @alias inject
 * @alias foldl
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {*} memo - The initial state of the reduction.
 * @param {AsyncFunction} iteratee - A function applied to each item in the
 * array to produce the next step in the reduction.
 * The `iteratee` should complete with the next state of the reduction.
 * If the iteratee complete with an error, the reduction is stopped and the
 * main `callback` is immediately called with the error.
 * Invoked with (memo, item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result is the reduced value. Invoked with
 * (err, result).
 * @example
 *
 * async.reduce([1,2,3], 0, function(memo, item, callback) {
 *     // pointless async:
 *     process.nextTick(function() {
 *         callback(null, memo + item)
 *     });
 * }, function(err, result) {
 *     // result is now equal to the last value of memo, which is 6
 * });
 */
function reduce(coll, memo, iteratee, callback) {
    callback = once(callback || noop);
    var _iteratee = wrapAsync(iteratee);
    eachOfSeries(coll, function(x, i, callback) {
        _iteratee(memo, x, function(err, v) {
            memo = v;
            callback(err);
        });
    }, function(err) {
        callback(err, memo);
    });
}

/**
 * Version of the compose function that is more natural to read. Each function
 * consumes the return value of the previous function. It is the equivalent of
 * [compose]{@link module:ControlFlow.compose} with the arguments reversed.
 *
 * Each function is executed with the `this` binding of the composed function.
 *
 * @name seq
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.compose]{@link module:ControlFlow.compose}
 * @category Control Flow
 * @param {...AsyncFunction} functions - the asynchronous functions to compose
 * @returns {Function} a function that composes the `functions` in order
 * @example
 *
 * // Requires lodash (or underscore), express3 and dresende's orm2.
 * // Part of an app, that fetches cats of the logged user.
 * // This example uses `seq` function to avoid overnesting and error
 * // handling clutter.
 * app.get('/cats', function(request, response) {
 *     var User = request.models.User;
 *     async.seq(
 *         _.bind(User.get, User),  // 'User.get' has signature (id, callback(err, data))
 *         function(user, fn) {
 *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))
 *         }
 *     )(req.session.user_id, function (err, cats) {
 *         if (err) {
 *             console.error(err);
 *             response.json({ status: 'error', message: err.message });
 *         } else {
 *             response.json({ status: 'ok', message: 'Cats found', data: cats });
 *         }
 *     });
 * });
 */
function seq(/*...functions*/) {
    var _functions = arrayMap(arguments, wrapAsync);
    return function(/*...args*/) {
        var args = slice(arguments);
        var that = this;

        var cb = args[args.length - 1];
        if (typeof cb == 'function') {
            args.pop();
        } else {
            cb = noop;
        }

        reduce(_functions, args, function(newargs, fn, cb) {
            fn.apply(that, newargs.concat(function(err/*, ...nextargs*/) {
                var nextargs = slice(arguments, 1);
                cb(err, nextargs);
            }));
        },
        function(err, results) {
            cb.apply(that, [err].concat(results));
        });
    };
}

/**
 * Creates a function which is a composition of the passed asynchronous
 * functions. Each function consumes the return value of the function that
 * follows. Composing functions `f()`, `g()`, and `h()` would produce the result
 * of `f(g(h()))`, only this version uses callbacks to obtain the return values.
 *
 * Each function is executed with the `this` binding of the composed function.
 *
 * @name compose
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {...AsyncFunction} functions - the asynchronous functions to compose
 * @returns {Function} an asynchronous function that is the composed
 * asynchronous `functions`
 * @example
 *
 * function add1(n, callback) {
 *     setTimeout(function () {
 *         callback(null, n + 1);
 *     }, 10);
 * }
 *
 * function mul3(n, callback) {
 *     setTimeout(function () {
 *         callback(null, n * 3);
 *     }, 10);
 * }
 *
 * var add1mul3 = async.compose(mul3, add1);
 * add1mul3(4, function (err, result) {
 *     // result now equals 15
 * });
 */
var compose = function(/*...args*/) {
    return seq.apply(null, slice(arguments).reverse());
};

var _concat = Array.prototype.concat;

/**
 * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.
 *
 * @name concatLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.concat]{@link module:Collections.concat}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,
 * which should use an array as its result. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is an array
 * containing the concatenated results of the `iteratee` function. Invoked with
 * (err, results).
 */
var concatLimit = function(coll, limit, iteratee, callback) {
    callback = callback || noop;
    var _iteratee = wrapAsync(iteratee);
    mapLimit(coll, limit, function(val, callback) {
        _iteratee(val, function(err /*, ...args*/) {
            if (err) return callback(err);
            return callback(null, slice(arguments, 1));
        });
    }, function(err, mapResults) {
        var result = [];
        for (var i = 0; i < mapResults.length; i++) {
            if (mapResults[i]) {
                result = _concat.apply(result, mapResults[i]);
            }
        }

        return callback(err, result);
    });
};

/**
 * Applies `iteratee` to each item in `coll`, concatenating the results. Returns
 * the concatenated list. The `iteratee`s are called in parallel, and the
 * results are concatenated as they return. There is no guarantee that the
 * results array will be returned in the original order of `coll` passed to the
 * `iteratee` function.
 *
 * @name concat
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,
 * which should use an array as its result. Invoked with (item, callback).
 * @param {Function} [callback(err)] - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is an array
 * containing the concatenated results of the `iteratee` function. Invoked with
 * (err, results).
 * @example
 *
 * async.concat(['dir1','dir2','dir3'], fs.readdir, function(err, files) {
 *     // files is now a list of filenames that exist in the 3 directories
 * });
 */
var concat = doLimit(concatLimit, Infinity);

/**
 * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.
 *
 * @name concatSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.concat]{@link module:Collections.concat}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.
 * The iteratee should complete with an array an array of results.
 * Invoked with (item, callback).
 * @param {Function} [callback(err)] - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is an array
 * containing the concatenated results of the `iteratee` function. Invoked with
 * (err, results).
 */
var concatSeries = doLimit(concatLimit, 1);

/**
 * Returns a function that when called, calls-back with the values provided.
 * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to
 * [`auto`]{@link module:ControlFlow.auto}.
 *
 * @name constant
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {...*} arguments... - Any number of arguments to automatically invoke
 * callback with.
 * @returns {AsyncFunction} Returns a function that when invoked, automatically
 * invokes the callback with the previous given arguments.
 * @example
 *
 * async.waterfall([
 *     async.constant(42),
 *     function (value, next) {
 *         // value === 42
 *     },
 *     //...
 * ], callback);
 *
 * async.waterfall([
 *     async.constant(filename, "utf8"),
 *     fs.readFile,
 *     function (fileData, next) {
 *         //...
 *     }
 *     //...
 * ], callback);
 *
 * async.auto({
 *     hostname: async.constant("https://server.net/"),
 *     port: findFreePort,
 *     launchServer: ["hostname", "port", function (options, cb) {
 *         startServer(options, cb);
 *     }],
 *     //...
 * }, callback);
 */
var constant = function(/*...values*/) {
    var values = slice(arguments);
    var args = [null].concat(values);
    return function (/*...ignoredArgs, callback*/) {
        var callback = arguments[arguments.length - 1];
        return callback.apply(this, args);
    };
};

/**
 * This method returns the first argument it receives.
 *
 * @static
 * @since 0.1.0
 * @memberOf _
 * @category Util
 * @param {*} value Any value.
 * @returns {*} Returns `value`.
 * @example
 *
 * var object = { 'a': 1 };
 *
 * console.log(_.identity(object) === object);
 * // => true
 */
function identity(value) {
  return value;
}

function _createTester(check, getResult) {
    return function(eachfn, arr, iteratee, cb) {
        cb = cb || noop;
        var testPassed = false;
        var testResult;
        eachfn(arr, function(value, _, callback) {
            iteratee(value, function(err, result) {
                if (err) {
                    callback(err);
                } else if (check(result) && !testResult) {
                    testPassed = true;
                    testResult = getResult(true, value);
                    callback(null, breakLoop);
                } else {
                    callback();
                }
            });
        }, function(err) {
            if (err) {
                cb(err);
            } else {
                cb(null, testPassed ? testResult : getResult(false));
            }
        });
    };
}

function _findGetResult(v, x) {
    return x;
}

/**
 * Returns the first value in `coll` that passes an async truth test. The
 * `iteratee` is applied in parallel, meaning the first iteratee to return
 * `true` will fire the detect `callback` with that result. That means the
 * result might not be the first item in the original `coll` (in terms of order)
 * that passes the test.

 * If order within the original `coll` is important, then look at
 * [`detectSeries`]{@link module:Collections.detectSeries}.
 *
 * @name detect
 * @static
 * @memberOf module:Collections
 * @method
 * @alias find
 * @category Collections
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.
 * The iteratee must complete with a boolean value as its result.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the `iteratee` functions have finished.
 * Result will be the first item in the array that passes the truth test
 * (iteratee) or the value `undefined` if none passed. Invoked with
 * (err, result).
 * @example
 *
 * async.detect(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, result) {
 *     // result now equals the first file in the list that exists
 * });
 */
var detect = doParallel(_createTester(identity, _findGetResult));

/**
 * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name detectLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.detect]{@link module:Collections.detect}
 * @alias findLimit
 * @category Collections
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.
 * The iteratee must complete with a boolean value as its result.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the `iteratee` functions have finished.
 * Result will be the first item in the array that passes the truth test
 * (iteratee) or the value `undefined` if none passed. Invoked with
 * (err, result).
 */
var detectLimit = doParallelLimit(_createTester(identity, _findGetResult));

/**
 * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.
 *
 * @name detectSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.detect]{@link module:Collections.detect}
 * @alias findSeries
 * @category Collections
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.
 * The iteratee must complete with a boolean value as its result.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the `iteratee` functions have finished.
 * Result will be the first item in the array that passes the truth test
 * (iteratee) or the value `undefined` if none passed. Invoked with
 * (err, result).
 */
var detectSeries = doLimit(detectLimit, 1);

function consoleFunc(name) {
    return function (fn/*, ...args*/) {
        var args = slice(arguments, 1);
        args.push(function (err/*, ...args*/) {
            var args = slice(arguments, 1);
            if (typeof console === 'object') {
                if (err) {
                    if (console.error) {
                        console.error(err);
                    }
                } else if (console[name]) {
                    arrayEach(args, function (x) {
                        console[name](x);
                    });
                }
            }
        });
        wrapAsync(fn).apply(null, args);
    };
}

/**
 * Logs the result of an [`async` function]{@link AsyncFunction} to the
 * `console` using `console.dir` to display the properties of the resulting object.
 * Only works in Node.js or in browsers that support `console.dir` and
 * `console.error` (such as FF and Chrome).
 * If multiple arguments are returned from the async function,
 * `console.dir` is called on each argument in order.
 *
 * @name dir
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} function - The function you want to eventually apply
 * all arguments to.
 * @param {...*} arguments... - Any number of arguments to apply to the function.
 * @example
 *
 * // in a module
 * var hello = function(name, callback) {
 *     setTimeout(function() {
 *         callback(null, {hello: name});
 *     }, 1000);
 * };
 *
 * // in the node repl
 * node> async.dir(hello, 'world');
 * {hello: 'world'}
 */
var dir = consoleFunc('dir');

/**
 * The post-check version of [`during`]{@link module:ControlFlow.during}. To reflect the difference in
 * the order of operations, the arguments `test` and `fn` are switched.
 *
 * Also a version of [`doWhilst`]{@link module:ControlFlow.doWhilst} with asynchronous `test` function.
 * @name doDuring
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.during]{@link module:ControlFlow.during}
 * @category Control Flow
 * @param {AsyncFunction} fn - An async function which is called each time
 * `test` passes. Invoked with (callback).
 * @param {AsyncFunction} test - asynchronous truth test to perform before each
 * execution of `fn`. Invoked with (...args, callback), where `...args` are the
 * non-error args from the previous callback of `fn`.
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `fn` has stopped. `callback`
 * will be passed an error if one occurred, otherwise `null`.
 */
function doDuring(fn, test, callback) {
    callback = onlyOnce(callback || noop);
    var _fn = wrapAsync(fn);
    var _test = wrapAsync(test);

    function next(err/*, ...args*/) {
        if (err) return callback(err);
        var args = slice(arguments, 1);
        args.push(check);
        _test.apply(this, args);
    }

    function check(err, truth) {
        if (err) return callback(err);
        if (!truth) return callback(null);
        _fn(next);
    }

    check(null, true);

}

/**
 * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in
 * the order of operations, the arguments `test` and `iteratee` are switched.
 *
 * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.
 *
 * @name doWhilst
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.whilst]{@link module:ControlFlow.whilst}
 * @category Control Flow
 * @param {AsyncFunction} iteratee - A function which is called each time `test`
 * passes. Invoked with (callback).
 * @param {Function} test - synchronous truth test to perform after each
 * execution of `iteratee`. Invoked with any non-error callback results of
 * `iteratee`.
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `iteratee` has stopped.
 * `callback` will be passed an error and any arguments passed to the final
 * `iteratee`'s callback. Invoked with (err, [results]);
 */
function doWhilst(iteratee, test, callback) {
    callback = onlyOnce(callback || noop);
    var _iteratee = wrapAsync(iteratee);
    var next = function(err/*, ...args*/) {
        if (err) return callback(err);
        var args = slice(arguments, 1);
        if (test.apply(this, args)) return _iteratee(next);
        callback.apply(null, [null].concat(args));
    };
    _iteratee(next);
}

/**
 * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the
 * argument ordering differs from `until`.
 *
 * @name doUntil
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}
 * @category Control Flow
 * @param {AsyncFunction} iteratee - An async function which is called each time
 * `test` fails. Invoked with (callback).
 * @param {Function} test - synchronous truth test to perform after each
 * execution of `iteratee`. Invoked with any non-error callback results of
 * `iteratee`.
 * @param {Function} [callback] - A callback which is called after the test
 * function has passed and repeated execution of `iteratee` has stopped. `callback`
 * will be passed an error and any arguments passed to the final `iteratee`'s
 * callback. Invoked with (err, [results]);
 */
function doUntil(iteratee, test, callback) {
    doWhilst(iteratee, function() {
        return !test.apply(this, arguments);
    }, callback);
}

/**
 * Like [`whilst`]{@link module:ControlFlow.whilst}, except the `test` is an asynchronous function that
 * is passed a callback in the form of `function (err, truth)`. If error is
 * passed to `test` or `fn`, the main callback is immediately called with the
 * value of the error.
 *
 * @name during
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.whilst]{@link module:ControlFlow.whilst}
 * @category Control Flow
 * @param {AsyncFunction} test - asynchronous truth test to perform before each
 * execution of `fn`. Invoked with (callback).
 * @param {AsyncFunction} fn - An async function which is called each time
 * `test` passes. Invoked with (callback).
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `fn` has stopped. `callback`
 * will be passed an error, if one occurred, otherwise `null`.
 * @example
 *
 * var count = 0;
 *
 * async.during(
 *     function (callback) {
 *         return callback(null, count < 5);
 *     },
 *     function (callback) {
 *         count++;
 *         setTimeout(callback, 1000);
 *     },
 *     function (err) {
 *         // 5 seconds have passed
 *     }
 * );
 */
function during(test, fn, callback) {
    callback = onlyOnce(callback || noop);
    var _fn = wrapAsync(fn);
    var _test = wrapAsync(test);

    function next(err) {
        if (err) return callback(err);
        _test(check);
    }

    function check(err, truth) {
        if (err) return callback(err);
        if (!truth) return callback(null);
        _fn(next);
    }

    _test(check);
}

function _withoutIndex(iteratee) {
    return function (value, index, callback) {
        return iteratee(value, callback);
    };
}

/**
 * Applies the function `iteratee` to each item in `coll`, in parallel.
 * The `iteratee` is called with an item from the list, and a callback for when
 * it has finished. If the `iteratee` passes an error to its `callback`, the
 * main `callback` (for the `each` function) is immediately called with the
 * error.
 *
 * Note, that since this function applies `iteratee` to each item in parallel,
 * there is no guarantee that the iteratee functions will complete in order.
 *
 * @name each
 * @static
 * @memberOf module:Collections
 * @method
 * @alias forEach
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to
 * each item in `coll`. Invoked with (item, callback).
 * The array index is not passed to the iteratee.
 * If you need the index, use `eachOf`.
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 * @example
 *
 * // assuming openFiles is an array of file names and saveFile is a function
 * // to save the modified contents of that file:
 *
 * async.each(openFiles, saveFile, function(err){
 *   // if any of the saves produced an error, err would equal that error
 * });
 *
 * // assuming openFiles is an array of file names
 * async.each(openFiles, function(file, callback) {
 *
 *     // Perform operation on file here.
 *     console.log('Processing file ' + file);
 *
 *     if( file.length > 32 ) {
 *       console.log('This file name is too long');
 *       callback('File name too long');
 *     } else {
 *       // Do work to process file here
 *       console.log('File processed');
 *       callback();
 *     }
 * }, function(err) {
 *     // if any of the file processing produced an error, err would equal that error
 *     if( err ) {
 *       // One of the iterations produced an error.
 *       // All processing will now stop.
 *       console.log('A file failed to process');
 *     } else {
 *       console.log('All files have been processed successfully');
 *     }
 * });
 */
function eachLimit(coll, iteratee, callback) {
    eachOf(coll, _withoutIndex(wrapAsync(iteratee)), callback);
}

/**
 * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.
 *
 * @name eachLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.each]{@link module:Collections.each}
 * @alias forEachLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The array index is not passed to the iteratee.
 * If you need the index, use `eachOfLimit`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 */
function eachLimit$1(coll, limit, iteratee, callback) {
    _eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);
}

/**
 * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.
 *
 * @name eachSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.each]{@link module:Collections.each}
 * @alias forEachSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each
 * item in `coll`.
 * The array index is not passed to the iteratee.
 * If you need the index, use `eachOfSeries`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called when all
 * `iteratee` functions have finished, or an error occurs. Invoked with (err).
 */
var eachSeries = doLimit(eachLimit$1, 1);

/**
 * Wrap an async function and ensure it calls its callback on a later tick of
 * the event loop.  If the function already calls its callback on a next tick,
 * no extra deferral is added. This is useful for preventing stack overflows
 * (`RangeError: Maximum call stack size exceeded`) and generally keeping
 * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)
 * contained. ES2017 `async` functions are returned as-is -- they are immune
 * to Zalgo's corrupting influences, as they always resolve on a later tick.
 *
 * @name ensureAsync
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} fn - an async function, one that expects a node-style
 * callback as its last argument.
 * @returns {AsyncFunction} Returns a wrapped function with the exact same call
 * signature as the function passed in.
 * @example
 *
 * function sometimesAsync(arg, callback) {
 *     if (cache[arg]) {
 *         return callback(null, cache[arg]); // this would be synchronous!!
 *     } else {
 *         doSomeIO(arg, callback); // this IO would be asynchronous
 *     }
 * }
 *
 * // this has a risk of stack overflows if many results are cached in a row
 * async.mapSeries(args, sometimesAsync, done);
 *
 * // this will defer sometimesAsync's callback if necessary,
 * // preventing stack overflows
 * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);
 */
function ensureAsync(fn) {
    if (isAsync(fn)) return fn;
    return initialParams(function (args, callback) {
        var sync = true;
        args.push(function () {
            var innerArgs = arguments;
            if (sync) {
                setImmediate$1(function () {
                    callback.apply(null, innerArgs);
                });
            } else {
                callback.apply(null, innerArgs);
            }
        });
        fn.apply(this, args);
        sync = false;
    });
}

function notId(v) {
    return !v;
}

/**
 * Returns `true` if every element in `coll` satisfies an async test. If any
 * iteratee call returns `false`, the main `callback` is immediately called.
 *
 * @name every
 * @static
 * @memberOf module:Collections
 * @method
 * @alias all
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collection in parallel.
 * The iteratee must complete with a boolean result value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result will be either `true` or `false`
 * depending on the values of the async tests. Invoked with (err, result).
 * @example
 *
 * async.every(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, result) {
 *     // if result is true then every file exists
 * });
 */
var every = doParallel(_createTester(notId, notId));

/**
 * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.
 *
 * @name everyLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.every]{@link module:Collections.every}
 * @alias allLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collection in parallel.
 * The iteratee must complete with a boolean result value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result will be either `true` or `false`
 * depending on the values of the async tests. Invoked with (err, result).
 */
var everyLimit = doParallelLimit(_createTester(notId, notId));

/**
 * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.
 *
 * @name everySeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.every]{@link module:Collections.every}
 * @alias allSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collection in series.
 * The iteratee must complete with a boolean result value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result will be either `true` or `false`
 * depending on the values of the async tests. Invoked with (err, result).
 */
var everySeries = doLimit(everyLimit, 1);

/**
 * The base implementation of `_.property` without support for deep paths.
 *
 * @private
 * @param {string} key The key of the property to get.
 * @returns {Function} Returns the new accessor function.
 */
function baseProperty(key) {
  return function(object) {
    return object == null ? undefined : object[key];
  };
}

function filterArray(eachfn, arr, iteratee, callback) {
    var truthValues = new Array(arr.length);
    eachfn(arr, function (x, index, callback) {
        iteratee(x, function (err, v) {
            truthValues[index] = !!v;
            callback(err);
        });
    }, function (err) {
        if (err) return callback(err);
        var results = [];
        for (var i = 0; i < arr.length; i++) {
            if (truthValues[i]) results.push(arr[i]);
        }
        callback(null, results);
    });
}

function filterGeneric(eachfn, coll, iteratee, callback) {
    var results = [];
    eachfn(coll, function (x, index, callback) {
        iteratee(x, function (err, v) {
            if (err) {
                callback(err);
            } else {
                if (v) {
                    results.push({index: index, value: x});
                }
                callback();
            }
        });
    }, function (err) {
        if (err) {
            callback(err);
        } else {
            callback(null, arrayMap(results.sort(function (a, b) {
                return a.index - b.index;
            }), baseProperty('value')));
        }
    });
}

function _filter(eachfn, coll, iteratee, callback) {
    var filter = isArrayLike(coll) ? filterArray : filterGeneric;
    filter(eachfn, coll, wrapAsync(iteratee), callback || noop);
}

/**
 * Returns a new array of all the values in `coll` which pass an async truth
 * test. This operation is performed in parallel, but the results array will be
 * in the same order as the original.
 *
 * @name filter
 * @static
 * @memberOf module:Collections
 * @method
 * @alias select
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - A truth test to apply to each item in `coll`.
 * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
 * with a boolean argument once it has completed. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 * @example
 *
 * async.filter(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, results) {
 *     // results now equals an array of the existing files
 * });
 */
var filter = doParallel(_filter);

/**
 * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name filterLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.filter]{@link module:Collections.filter}
 * @alias selectLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {Function} iteratee - A truth test to apply to each item in `coll`.
 * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
 * with a boolean argument once it has completed. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 */
var filterLimit = doParallelLimit(_filter);

/**
 * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.
 *
 * @name filterSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.filter]{@link module:Collections.filter}
 * @alias selectSeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - A truth test to apply to each item in `coll`.
 * The `iteratee` is passed a `callback(err, truthValue)`, which must be called
 * with a boolean argument once it has completed. Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results)
 */
var filterSeries = doLimit(filterLimit, 1);

/**
 * Calls the asynchronous function `fn` with a callback parameter that allows it
 * to call itself again, in series, indefinitely.

 * If an error is passed to the callback then `errback` is called with the
 * error, and execution stops, otherwise it will never be called.
 *
 * @name forever
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {AsyncFunction} fn - an async function to call repeatedly.
 * Invoked with (next).
 * @param {Function} [errback] - when `fn` passes an error to it's callback,
 * this function will be called, and execution stops. Invoked with (err).
 * @example
 *
 * async.forever(
 *     function(next) {
 *         // next is suitable for passing to things that need a callback(err [, whatever]);
 *         // it will result in this function being called again.
 *     },
 *     function(err) {
 *         // if next is called with a value in its first parameter, it will appear
 *         // in here as 'err', and execution will stop.
 *     }
 * );
 */
function forever(fn, errback) {
    var done = onlyOnce(errback || noop);
    var task = wrapAsync(ensureAsync(fn));

    function next(err) {
        if (err) return done(err);
        task(next);
    }
    next();
}

/**
 * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.
 *
 * @name groupByLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.groupBy]{@link module:Collections.groupBy}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 */
var groupByLimit = function(coll, limit, iteratee, callback) {
    callback = callback || noop;
    var _iteratee = wrapAsync(iteratee);
    mapLimit(coll, limit, function(val, callback) {
        _iteratee(val, function(err, key) {
            if (err) return callback(err);
            return callback(null, {key: key, val: val});
        });
    }, function(err, mapResults) {
        var result = {};
        // from MDN, handle object having an `hasOwnProperty` prop
        var hasOwnProperty = Object.prototype.hasOwnProperty;

        for (var i = 0; i < mapResults.length; i++) {
            if (mapResults[i]) {
                var key = mapResults[i].key;
                var val = mapResults[i].val;

                if (hasOwnProperty.call(result, key)) {
                    result[key].push(val);
                } else {
                    result[key] = [val];
                }
            }
        }

        return callback(err, result);
    });
};

/**
 * Returns a new object, where each value corresponds to an array of items, from
 * `coll`, that returned the corresponding key. That is, the keys of the object
 * correspond to the values passed to the `iteratee` callback.
 *
 * Note: Since this function applies the `iteratee` to each item in parallel,
 * there is no guarantee that the `iteratee` functions will complete in order.
 * However, the values for each key in the `result` will be in the same order as
 * the original `coll`. For Objects, the values will roughly be in the order of
 * the original Objects' keys (but this can vary across JavaScript engines).
 *
 * @name groupBy
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 * @example
 *
 * async.groupBy(['userId1', 'userId2', 'userId3'], function(userId, callback) {
 *     db.findById(userId, function(err, user) {
 *         if (err) return callback(err);
 *         return callback(null, user.age);
 *     });
 * }, function(err, result) {
 *     // result is object containing the userIds grouped by age
 *     // e.g. { 30: ['userId1', 'userId3'], 42: ['userId2']};
 * });
 */
var groupBy = doLimit(groupByLimit, Infinity);

/**
 * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.
 *
 * @name groupBySeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.groupBy]{@link module:Collections.groupBy}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a `key` to group the value under.
 * Invoked with (value, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. Result is an `Object` whoses
 * properties are arrays of values which returned the corresponding key.
 */
var groupBySeries = doLimit(groupByLimit, 1);

/**
 * Logs the result of an `async` function to the `console`. Only works in
 * Node.js or in browsers that support `console.log` and `console.error` (such
 * as FF and Chrome). If multiple arguments are returned from the async
 * function, `console.log` is called on each argument in order.
 *
 * @name log
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} function - The function you want to eventually apply
 * all arguments to.
 * @param {...*} arguments... - Any number of arguments to apply to the function.
 * @example
 *
 * // in a module
 * var hello = function(name, callback) {
 *     setTimeout(function() {
 *         callback(null, 'hello ' + name);
 *     }, 1000);
 * };
 *
 * // in the node repl
 * node> async.log(hello, 'world');
 * 'hello world'
 */
var log = consoleFunc('log');

/**
 * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name mapValuesLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.mapValues]{@link module:Collections.mapValues}
 * @category Collection
 * @param {Object} obj - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - A function to apply to each value and key
 * in `coll`.
 * The iteratee should complete with the transformed value as its result.
 * Invoked with (value, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. `result` is a new object consisting
 * of each key from `obj`, with each transformed value on the right-hand side.
 * Invoked with (err, result).
 */
function mapValuesLimit(obj, limit, iteratee, callback) {
    callback = once(callback || noop);
    var newObj = {};
    var _iteratee = wrapAsync(iteratee);
    eachOfLimit(obj, limit, function(val, key, next) {
        _iteratee(val, key, function (err, result) {
            if (err) return next(err);
            newObj[key] = result;
            next();
        });
    }, function (err) {
        callback(err, newObj);
    });
}

/**
 * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.
 *
 * Produces a new Object by mapping each value of `obj` through the `iteratee`
 * function. The `iteratee` is called each `value` and `key` from `obj` and a
 * callback for when it has finished processing. Each of these callbacks takes
 * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`
 * passes an error to its callback, the main `callback` (for the `mapValues`
 * function) is immediately called with the error.
 *
 * Note, the order of the keys in the result is not guaranteed.  The keys will
 * be roughly in the order they complete, (but this is very engine-specific)
 *
 * @name mapValues
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Object} obj - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each value and key
 * in `coll`.
 * The iteratee should complete with the transformed value as its result.
 * Invoked with (value, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. `result` is a new object consisting
 * of each key from `obj`, with each transformed value on the right-hand side.
 * Invoked with (err, result).
 * @example
 *
 * async.mapValues({
 *     f1: 'file1',
 *     f2: 'file2',
 *     f3: 'file3'
 * }, function (file, key, callback) {
 *   fs.stat(file, callback);
 * }, function(err, result) {
 *     // result is now a map of stats for each file, e.g.
 *     // {
 *     //     f1: [stats for file1],
 *     //     f2: [stats for file2],
 *     //     f3: [stats for file3]
 *     // }
 * });
 */

var mapValues = doLimit(mapValuesLimit, Infinity);

/**
 * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.
 *
 * @name mapValuesSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.mapValues]{@link module:Collections.mapValues}
 * @category Collection
 * @param {Object} obj - A collection to iterate over.
 * @param {AsyncFunction} iteratee - A function to apply to each value and key
 * in `coll`.
 * The iteratee should complete with the transformed value as its result.
 * Invoked with (value, key, callback).
 * @param {Function} [callback] - A callback which is called when all `iteratee`
 * functions have finished, or an error occurs. `result` is a new object consisting
 * of each key from `obj`, with each transformed value on the right-hand side.
 * Invoked with (err, result).
 */
var mapValuesSeries = doLimit(mapValuesLimit, 1);

function has(obj, key) {
    return key in obj;
}

/**
 * Caches the results of an async function. When creating a hash to store
 * function results against, the callback is omitted from the hash and an
 * optional hash function can be used.
 *
 * If no hash function is specified, the first argument is used as a hash key,
 * which may work reasonably if it is a string or a data type that converts to a
 * distinct string. Note that objects and arrays will not behave reasonably.
 * Neither will cases where the other arguments are significant. In such cases,
 * specify your own hash function.
 *
 * The cache of results is exposed as the `memo` property of the function
 * returned by `memoize`.
 *
 * @name memoize
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} fn - The async function to proxy and cache results from.
 * @param {Function} hasher - An optional function for generating a custom hash
 * for storing results. It has all the arguments applied to it apart from the
 * callback, and must be synchronous.
 * @returns {AsyncFunction} a memoized version of `fn`
 * @example
 *
 * var slow_fn = function(name, callback) {
 *     // do something
 *     callback(null, result);
 * };
 * var fn = async.memoize(slow_fn);
 *
 * // fn can now be used as if it were slow_fn
 * fn('some name', function() {
 *     // callback
 * });
 */
function memoize(fn, hasher) {
    var memo = Object.create(null);
    var queues = Object.create(null);
    hasher = hasher || identity;
    var _fn = wrapAsync(fn);
    var memoized = initialParams(function memoized(args, callback) {
        var key = hasher.apply(null, args);
        if (has(memo, key)) {
            setImmediate$1(function() {
                callback.apply(null, memo[key]);
            });
        } else if (has(queues, key)) {
            queues[key].push(callback);
        } else {
            queues[key] = [callback];
            _fn.apply(null, args.concat(function(/*args*/) {
                var args = slice(arguments);
                memo[key] = args;
                var q = queues[key];
                delete queues[key];
                for (var i = 0, l = q.length; i < l; i++) {
                    q[i].apply(null, args);
                }
            }));
        }
    });
    memoized.memo = memo;
    memoized.unmemoized = fn;
    return memoized;
}

/**
 * Calls `callback` on a later loop around the event loop. In Node.js this just
 * calls `process.nextTick`.  In the browser it will use `setImmediate` if
 * available, otherwise `setTimeout(callback, 0)`, which means other higher
 * priority events may precede the execution of `callback`.
 *
 * This is used internally for browser-compatibility purposes.
 *
 * @name nextTick
 * @static
 * @memberOf module:Utils
 * @method
 * @see [async.setImmediate]{@link module:Utils.setImmediate}
 * @category Util
 * @param {Function} callback - The function to call on a later loop around
 * the event loop. Invoked with (args...).
 * @param {...*} args... - any number of additional arguments to pass to the
 * callback on the next tick.
 * @example
 *
 * var call_order = [];
 * async.nextTick(function() {
 *     call_order.push('two');
 *     // call_order now equals ['one','two']
 * });
 * call_order.push('one');
 *
 * async.setImmediate(function (a, b, c) {
 *     // a, b, and c equal 1, 2, and 3
 * }, 1, 2, 3);
 */
var _defer$1;

if (hasNextTick) {
    _defer$1 = process.nextTick;
} else if (hasSetImmediate) {
    _defer$1 = setImmediate;
} else {
    _defer$1 = fallback;
}

var nextTick = wrap(_defer$1);

function _parallel(eachfn, tasks, callback) {
    callback = callback || noop;
    var results = isArrayLike(tasks) ? [] : {};

    eachfn(tasks, function (task, key, callback) {
        wrapAsync(task)(function (err, result) {
            if (arguments.length > 2) {
                result = slice(arguments, 1);
            }
            results[key] = result;
            callback(err);
        });
    }, function (err) {
        callback(err, results);
    });
}

/**
 * Run the `tasks` collection of functions in parallel, without waiting until
 * the previous function has completed. If any of the functions pass an error to
 * its callback, the main `callback` is immediately called with the value of the
 * error. Once the `tasks` have completed, the results are passed to the final
 * `callback` as an array.
 *
 * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about
 * parallel execution of code.  If your tasks do not use any timers or perform
 * any I/O, they will actually be executed in series.  Any synchronous setup
 * sections for each task will happen one after the other.  JavaScript remains
 * single-threaded.
 *
 * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the
 * execution of other tasks when a task fails.
 *
 * It is also possible to use an object instead of an array. Each property will
 * be run as a function and the results will be passed to the final `callback`
 * as an object instead of an array. This can be a more readable way of handling
 * results from {@link async.parallel}.
 *
 * @name parallel
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection of
 * [async functions]{@link AsyncFunction} to run.
 * Each async function can complete with any number of optional `result` values.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed successfully. This function gets a results array
 * (or object) containing all the result arguments passed to the task callbacks.
 * Invoked with (err, results).
 *
 * @example
 * async.parallel([
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'two');
 *         }, 100);
 *     }
 * ],
 * // optional callback
 * function(err, results) {
 *     // the results array will equal ['one','two'] even though
 *     // the second function had a shorter timeout.
 * });
 *
 * // an example using an object instead of an array
 * async.parallel({
 *     one: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 1);
 *         }, 200);
 *     },
 *     two: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 2);
 *         }, 100);
 *     }
 * }, function(err, results) {
 *     // results is now equals to: {one: 1, two: 2}
 * });
 */
function parallelLimit(tasks, callback) {
    _parallel(eachOf, tasks, callback);
}

/**
 * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name parallelLimit
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.parallel]{@link module:ControlFlow.parallel}
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection of
 * [async functions]{@link AsyncFunction} to run.
 * Each async function can complete with any number of optional `result` values.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed successfully. This function gets a results array
 * (or object) containing all the result arguments passed to the task callbacks.
 * Invoked with (err, results).
 */
function parallelLimit$1(tasks, limit, callback) {
    _parallel(_eachOfLimit(limit), tasks, callback);
}

/**
 * A queue of tasks for the worker function to complete.
 * @typedef {Object} QueueObject
 * @memberOf module:ControlFlow
 * @property {Function} length - a function returning the number of items
 * waiting to be processed. Invoke with `queue.length()`.
 * @property {boolean} started - a boolean indicating whether or not any
 * items have been pushed and processed by the queue.
 * @property {Function} running - a function returning the number of items
 * currently being processed. Invoke with `queue.running()`.
 * @property {Function} workersList - a function returning the array of items
 * currently being processed. Invoke with `queue.workersList()`.
 * @property {Function} idle - a function returning false if there are items
 * waiting or being processed, or true if not. Invoke with `queue.idle()`.
 * @property {number} concurrency - an integer for determining how many `worker`
 * functions should be run in parallel. This property can be changed after a
 * `queue` is created to alter the concurrency on-the-fly.
 * @property {Function} push - add a new task to the `queue`. Calls `callback`
 * once the `worker` has finished processing the task. Instead of a single task,
 * a `tasks` array can be submitted. The respective callback is used for every
 * task in the list. Invoke with `queue.push(task, [callback])`,
 * @property {Function} unshift - add a new task to the front of the `queue`.
 * Invoke with `queue.unshift(task, [callback])`.
 * @property {Function} remove - remove items from the queue that match a test
 * function.  The test function will be passed an object with a `data` property,
 * and a `priority` property, if this is a
 * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.
 * Invoked with `queue.remove(testFn)`, where `testFn` is of the form
 * `function ({data, priority}) {}` and returns a Boolean.
 * @property {Function} saturated - a callback that is called when the number of
 * running workers hits the `concurrency` limit, and further tasks will be
 * queued.
 * @property {Function} unsaturated - a callback that is called when the number
 * of running workers is less than the `concurrency` & `buffer` limits, and
 * further tasks will not be queued.
 * @property {number} buffer - A minimum threshold buffer in order to say that
 * the `queue` is `unsaturated`.
 * @property {Function} empty - a callback that is called when the last item
 * from the `queue` is given to a `worker`.
 * @property {Function} drain - a callback that is called when the last item
 * from the `queue` has returned from the `worker`.
 * @property {Function} error - a callback that is called when a task errors.
 * Has the signature `function(error, task)`.
 * @property {boolean} paused - a boolean for determining whether the queue is
 * in a paused state.
 * @property {Function} pause - a function that pauses the processing of tasks
 * until `resume()` is called. Invoke with `queue.pause()`.
 * @property {Function} resume - a function that resumes the processing of
 * queued tasks when the queue is paused. Invoke with `queue.resume()`.
 * @property {Function} kill - a function that removes the `drain` callback and
 * empties remaining tasks from the queue forcing it to go idle. No more tasks
 * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.
 */

/**
 * Creates a `queue` object with the specified `concurrency`. Tasks added to the
 * `queue` are processed in parallel (up to the `concurrency` limit). If all
 * `worker`s are in progress, the task is queued until one becomes available.
 * Once a `worker` completes a `task`, that `task`'s callback is called.
 *
 * @name queue
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {AsyncFunction} worker - An async function for processing a queued task.
 * If you want to handle errors from an individual task, pass a callback to
 * `q.push()`. Invoked with (task, callback).
 * @param {number} [concurrency=1] - An `integer` for determining how many
 * `worker` functions should be run in parallel.  If omitted, the concurrency
 * defaults to `1`.  If the concurrency is `0`, an error is thrown.
 * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can
 * attached as certain properties to listen for specific events during the
 * lifecycle of the queue.
 * @example
 *
 * // create a queue object with concurrency 2
 * var q = async.queue(function(task, callback) {
 *     console.log('hello ' + task.name);
 *     callback();
 * }, 2);
 *
 * // assign a callback
 * q.drain = function() {
 *     console.log('all items have been processed');
 * };
 *
 * // add some items to the queue
 * q.push({name: 'foo'}, function(err) {
 *     console.log('finished processing foo');
 * });
 * q.push({name: 'bar'}, function (err) {
 *     console.log('finished processing bar');
 * });
 *
 * // add some items to the queue (batch-wise)
 * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {
 *     console.log('finished processing item');
 * });
 *
 * // add some items to the front of the queue
 * q.unshift({name: 'bar'}, function (err) {
 *     console.log('finished processing bar');
 * });
 */
var queue$1 = function (worker, concurrency) {
    var _worker = wrapAsync(worker);
    return queue(function (items, cb) {
        _worker(items[0], cb);
    }, concurrency, 1);
};

/**
 * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and
 * completed in ascending priority order.
 *
 * @name priorityQueue
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.queue]{@link module:ControlFlow.queue}
 * @category Control Flow
 * @param {AsyncFunction} worker - An async function for processing a queued task.
 * If you want to handle errors from an individual task, pass a callback to
 * `q.push()`.
 * Invoked with (task, callback).
 * @param {number} concurrency - An `integer` for determining how many `worker`
 * functions should be run in parallel.  If omitted, the concurrency defaults to
 * `1`.  If the concurrency is `0`, an error is thrown.
 * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two
 * differences between `queue` and `priorityQueue` objects:
 * * `push(task, priority, [callback])` - `priority` should be a number. If an
 *   array of `tasks` is given, all tasks will be assigned the same priority.
 * * The `unshift` method was removed.
 */
var priorityQueue = function(worker, concurrency) {
    // Start with a normal queue
    var q = queue$1(worker, concurrency);

    // Override push to accept second parameter representing priority
    q.push = function(data, priority, callback) {
        if (callback == null) callback = noop;
        if (typeof callback !== 'function') {
            throw new Error('task callback must be a function');
        }
        q.started = true;
        if (!isArray(data)) {
            data = [data];
        }
        if (data.length === 0) {
            // call drain immediately if there are no tasks
            return setImmediate$1(function() {
                q.drain();
            });
        }

        priority = priority || 0;
        var nextNode = q._tasks.head;
        while (nextNode && priority >= nextNode.priority) {
            nextNode = nextNode.next;
        }

        for (var i = 0, l = data.length; i < l; i++) {
            var item = {
                data: data[i],
                priority: priority,
                callback: callback
            };

            if (nextNode) {
                q._tasks.insertBefore(nextNode, item);
            } else {
                q._tasks.push(item);
            }
        }
        setImmediate$1(q.process);
    };

    // Remove unshift function
    delete q.unshift;

    return q;
};

/**
 * Runs the `tasks` array of functions in parallel, without waiting until the
 * previous function has completed. Once any of the `tasks` complete or pass an
 * error to its callback, the main `callback` is immediately called. It's
 * equivalent to `Promise.race()`.
 *
 * @name race
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}
 * to run. Each function can complete with an optional `result` value.
 * @param {Function} callback - A callback to run once any of the functions have
 * completed. This function gets an error or result from the first function that
 * completed. Invoked with (err, result).
 * @returns undefined
 * @example
 *
 * async.race([
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'two');
 *         }, 100);
 *     }
 * ],
 * // main callback
 * function(err, result) {
 *     // the result will be equal to 'two' as it finishes earlier
 * });
 */
function race(tasks, callback) {
    callback = once(callback || noop);
    if (!isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));
    if (!tasks.length) return callback();
    for (var i = 0, l = tasks.length; i < l; i++) {
        wrapAsync(tasks[i])(callback);
    }
}

/**
 * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.
 *
 * @name reduceRight
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.reduce]{@link module:Collections.reduce}
 * @alias foldr
 * @category Collection
 * @param {Array} array - A collection to iterate over.
 * @param {*} memo - The initial state of the reduction.
 * @param {AsyncFunction} iteratee - A function applied to each item in the
 * array to produce the next step in the reduction.
 * The `iteratee` should complete with the next state of the reduction.
 * If the iteratee complete with an error, the reduction is stopped and the
 * main `callback` is immediately called with the error.
 * Invoked with (memo, item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result is the reduced value. Invoked with
 * (err, result).
 */
function reduceRight (array, memo, iteratee, callback) {
    var reversed = slice(array).reverse();
    reduce(reversed, memo, iteratee, callback);
}

/**
 * Wraps the async function in another function that always completes with a
 * result object, even when it errors.
 *
 * The result object has either the property `error` or `value`.
 *
 * @name reflect
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} fn - The async function you want to wrap
 * @returns {Function} - A function that always passes null to it's callback as
 * the error. The second argument to the callback will be an `object` with
 * either an `error` or a `value` property.
 * @example
 *
 * async.parallel([
 *     async.reflect(function(callback) {
 *         // do some stuff ...
 *         callback(null, 'one');
 *     }),
 *     async.reflect(function(callback) {
 *         // do some more stuff but error ...
 *         callback('bad stuff happened');
 *     }),
 *     async.reflect(function(callback) {
 *         // do some more stuff ...
 *         callback(null, 'two');
 *     })
 * ],
 * // optional callback
 * function(err, results) {
 *     // values
 *     // results[0].value = 'one'
 *     // results[1].error = 'bad stuff happened'
 *     // results[2].value = 'two'
 * });
 */
function reflect(fn) {
    var _fn = wrapAsync(fn);
    return initialParams(function reflectOn(args, reflectCallback) {
        args.push(function callback(error, cbArg) {
            if (error) {
                reflectCallback(null, { error: error });
            } else {
                var value;
                if (arguments.length <= 2) {
                    value = cbArg;
                } else {
                    value = slice(arguments, 1);
                }
                reflectCallback(null, { value: value });
            }
        });

        return _fn.apply(this, args);
    });
}

/**
 * A helper function that wraps an array or an object of functions with `reflect`.
 *
 * @name reflectAll
 * @static
 * @memberOf module:Utils
 * @method
 * @see [async.reflect]{@link module:Utils.reflect}
 * @category Util
 * @param {Array|Object|Iterable} tasks - The collection of
 * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.
 * @returns {Array} Returns an array of async functions, each wrapped in
 * `async.reflect`
 * @example
 *
 * let tasks = [
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     function(callback) {
 *         // do some more stuff but error ...
 *         callback(new Error('bad stuff happened'));
 *     },
 *     function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'two');
 *         }, 100);
 *     }
 * ];
 *
 * async.parallel(async.reflectAll(tasks),
 * // optional callback
 * function(err, results) {
 *     // values
 *     // results[0].value = 'one'
 *     // results[1].error = Error('bad stuff happened')
 *     // results[2].value = 'two'
 * });
 *
 * // an example using an object instead of an array
 * let tasks = {
 *     one: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'one');
 *         }, 200);
 *     },
 *     two: function(callback) {
 *         callback('two');
 *     },
 *     three: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 'three');
 *         }, 100);
 *     }
 * };
 *
 * async.parallel(async.reflectAll(tasks),
 * // optional callback
 * function(err, results) {
 *     // values
 *     // results.one.value = 'one'
 *     // results.two.error = 'two'
 *     // results.three.value = 'three'
 * });
 */
function reflectAll(tasks) {
    var results;
    if (isArray(tasks)) {
        results = arrayMap(tasks, reflect);
    } else {
        results = {};
        baseForOwn(tasks, function(task, key) {
            results[key] = reflect.call(this, task);
        });
    }
    return results;
}

function reject$1(eachfn, arr, iteratee, callback) {
    _filter(eachfn, arr, function(value, cb) {
        iteratee(value, function(err, v) {
            cb(err, !v);
        });
    }, callback);
}

/**
 * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.
 *
 * @name reject
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.filter]{@link module:Collections.filter}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - An async truth test to apply to each item in
 * `coll`.
 * The should complete with a boolean value as its `result`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 * @example
 *
 * async.reject(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, results) {
 *     // results now equals an array of missing files
 *     createFiles(results);
 * });
 */
var reject = doParallel(reject$1);

/**
 * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name rejectLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.reject]{@link module:Collections.reject}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {Function} iteratee - An async truth test to apply to each item in
 * `coll`.
 * The should complete with a boolean value as its `result`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 */
var rejectLimit = doParallelLimit(reject$1);

/**
 * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.
 *
 * @name rejectSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.reject]{@link module:Collections.reject}
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {Function} iteratee - An async truth test to apply to each item in
 * `coll`.
 * The should complete with a boolean value as its `result`.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Invoked with (err, results).
 */
var rejectSeries = doLimit(rejectLimit, 1);

/**
 * Creates a function that returns `value`.
 *
 * @static
 * @memberOf _
 * @since 2.4.0
 * @category Util
 * @param {*} value The value to return from the new function.
 * @returns {Function} Returns the new constant function.
 * @example
 *
 * var objects = _.times(2, _.constant({ 'a': 1 }));
 *
 * console.log(objects);
 * // => [{ 'a': 1 }, { 'a': 1 }]
 *
 * console.log(objects[0] === objects[1]);
 * // => true
 */
function constant$1(value) {
  return function() {
    return value;
  };
}

/**
 * Attempts to get a successful response from `task` no more than `times` times
 * before returning an error. If the task is successful, the `callback` will be
 * passed the result of the successful task. If all attempts fail, the callback
 * will be passed the error and result (if any) of the final attempt.
 *
 * @name retry
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @see [async.retryable]{@link module:ControlFlow.retryable}
 * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an
 * object with `times` and `interval` or a number.
 * * `times` - The number of attempts to make before giving up.  The default
 *   is `5`.
 * * `interval` - The time to wait between retries, in milliseconds.  The
 *   default is `0`. The interval may also be specified as a function of the
 *   retry count (see example).
 * * `errorFilter` - An optional synchronous function that is invoked on
 *   erroneous result. If it returns `true` the retry attempts will continue;
 *   if the function returns `false` the retry flow is aborted with the current
 *   attempt's error and result being returned to the final callback.
 *   Invoked with (err).
 * * If `opts` is a number, the number specifies the number of times to retry,
 *   with the default interval of `0`.
 * @param {AsyncFunction} task - An async function to retry.
 * Invoked with (callback).
 * @param {Function} [callback] - An optional callback which is called when the
 * task has succeeded, or after the final failed attempt. It receives the `err`
 * and `result` arguments of the last attempt at completing the `task`. Invoked
 * with (err, results).
 *
 * @example
 *
 * // The `retry` function can be used as a stand-alone control flow by passing
 * // a callback, as shown below:
 *
 * // try calling apiMethod 3 times
 * async.retry(3, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod 3 times, waiting 200 ms between each retry
 * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod 10 times with exponential backoff
 * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)
 * async.retry({
 *   times: 10,
 *   interval: function(retryCount) {
 *     return 50 * Math.pow(2, retryCount);
 *   }
 * }, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod the default 5 times no delay between each retry
 * async.retry(apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // try calling apiMethod only when error condition satisfies, all other
 * // errors will abort the retry control flow and return to final callback
 * async.retry({
 *   errorFilter: function(err) {
 *     return err.message === 'Temporary error'; // only retry on a specific error
 *   }
 * }, apiMethod, function(err, result) {
 *     // do something with the result
 * });
 *
 * // to retry individual methods that are not as reliable within other
 * // control flow functions, use the `retryable` wrapper:
 * async.auto({
 *     users: api.getUsers.bind(api),
 *     payments: async.retryable(3, api.getPayments.bind(api))
 * }, function(err, results) {
 *     // do something with the results
 * });
 *
 */
function retry(opts, task, callback) {
    var DEFAULT_TIMES = 5;
    var DEFAULT_INTERVAL = 0;

    var options = {
        times: DEFAULT_TIMES,
        intervalFunc: constant$1(DEFAULT_INTERVAL)
    };

    function parseTimes(acc, t) {
        if (typeof t === 'object') {
            acc.times = +t.times || DEFAULT_TIMES;

            acc.intervalFunc = typeof t.interval === 'function' ?
                t.interval :
                constant$1(+t.interval || DEFAULT_INTERVAL);

            acc.errorFilter = t.errorFilter;
        } else if (typeof t === 'number' || typeof t === 'string') {
            acc.times = +t || DEFAULT_TIMES;
        } else {
            throw new Error("Invalid arguments for async.retry");
        }
    }

    if (arguments.length < 3 && typeof opts === 'function') {
        callback = task || noop;
        task = opts;
    } else {
        parseTimes(options, opts);
        callback = callback || noop;
    }

    if (typeof task !== 'function') {
        throw new Error("Invalid arguments for async.retry");
    }

    var _task = wrapAsync(task);

    var attempt = 1;
    function retryAttempt() {
        _task(function(err) {
            if (err && attempt++ < options.times &&
                (typeof options.errorFilter != 'function' ||
                    options.errorFilter(err))) {
                setTimeout(retryAttempt, options.intervalFunc(attempt));
            } else {
                callback.apply(null, arguments);
            }
        });
    }

    retryAttempt();
}

/**
 * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method
 * wraps a task and makes it retryable, rather than immediately calling it
 * with retries.
 *
 * @name retryable
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.retry]{@link module:ControlFlow.retry}
 * @category Control Flow
 * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional
 * options, exactly the same as from `retry`
 * @param {AsyncFunction} task - the asynchronous function to wrap.
 * This function will be passed any arguments passed to the returned wrapper.
 * Invoked with (...args, callback).
 * @returns {AsyncFunction} The wrapped function, which when invoked, will
 * retry on an error, based on the parameters specified in `opts`.
 * This function will accept the same parameters as `task`.
 * @example
 *
 * async.auto({
 *     dep1: async.retryable(3, getFromFlakyService),
 *     process: ["dep1", async.retryable(3, function (results, cb) {
 *         maybeProcessData(results.dep1, cb);
 *     })]
 * }, callback);
 */
var retryable = function (opts, task) {
    if (!task) {
        task = opts;
        opts = null;
    }
    var _task = wrapAsync(task);
    return initialParams(function (args, callback) {
        function taskFn(cb) {
            _task.apply(null, args.concat(cb));
        }

        if (opts) retry(opts, taskFn, callback);
        else retry(taskFn, callback);

    });
};

/**
 * Run the functions in the `tasks` collection in series, each one running once
 * the previous function has completed. If any functions in the series pass an
 * error to its callback, no more functions are run, and `callback` is
 * immediately called with the value of the error. Otherwise, `callback`
 * receives an array of results when `tasks` have completed.
 *
 * It is also possible to use an object instead of an array. Each property will
 * be run as a function, and the results will be passed to the final `callback`
 * as an object instead of an array. This can be a more readable way of handling
 *  results from {@link async.series}.
 *
 * **Note** that while many implementations preserve the order of object
 * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)
 * explicitly states that
 *
 * > The mechanics and order of enumerating the properties is not specified.
 *
 * So if you rely on the order in which your series of functions are executed,
 * and want this to work on all platforms, consider using an array.
 *
 * @name series
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection containing
 * [async functions]{@link AsyncFunction} to run in series.
 * Each function can complete with any number of optional `result` values.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed. This function gets a results array (or object)
 * containing all the result arguments passed to the `task` callbacks. Invoked
 * with (err, result).
 * @example
 * async.series([
 *     function(callback) {
 *         // do some stuff ...
 *         callback(null, 'one');
 *     },
 *     function(callback) {
 *         // do some more stuff ...
 *         callback(null, 'two');
 *     }
 * ],
 * // optional callback
 * function(err, results) {
 *     // results is now equal to ['one', 'two']
 * });
 *
 * async.series({
 *     one: function(callback) {
 *         setTimeout(function() {
 *             callback(null, 1);
 *         }, 200);
 *     },
 *     two: function(callback){
 *         setTimeout(function() {
 *             callback(null, 2);
 *         }, 100);
 *     }
 * }, function(err, results) {
 *     // results is now equal to: {one: 1, two: 2}
 * });
 */
function series(tasks, callback) {
    _parallel(eachOfSeries, tasks, callback);
}

/**
 * Returns `true` if at least one element in the `coll` satisfies an async test.
 * If any iteratee call returns `true`, the main `callback` is immediately
 * called.
 *
 * @name some
 * @static
 * @memberOf module:Collections
 * @method
 * @alias any
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collections in parallel.
 * The iteratee should complete with a boolean `result` value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the iteratee functions have finished.
 * Result will be either `true` or `false` depending on the values of the async
 * tests. Invoked with (err, result).
 * @example
 *
 * async.some(['file1','file2','file3'], function(filePath, callback) {
 *     fs.access(filePath, function(err) {
 *         callback(null, !err)
 *     });
 * }, function(err, result) {
 *     // if result is true then at least one of the files exists
 * });
 */
var some = doParallel(_createTester(Boolean, identity));

/**
 * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.
 *
 * @name someLimit
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.some]{@link module:Collections.some}
 * @alias anyLimit
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collections in parallel.
 * The iteratee should complete with a boolean `result` value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the iteratee functions have finished.
 * Result will be either `true` or `false` depending on the values of the async
 * tests. Invoked with (err, result).
 */
var someLimit = doParallelLimit(_createTester(Boolean, identity));

/**
 * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.
 *
 * @name someSeries
 * @static
 * @memberOf module:Collections
 * @method
 * @see [async.some]{@link module:Collections.some}
 * @alias anySeries
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async truth test to apply to each item
 * in the collections in series.
 * The iteratee should complete with a boolean `result` value.
 * Invoked with (item, callback).
 * @param {Function} [callback] - A callback which is called as soon as any
 * iteratee returns `true`, or after all the iteratee functions have finished.
 * Result will be either `true` or `false` depending on the values of the async
 * tests. Invoked with (err, result).
 */
var someSeries = doLimit(someLimit, 1);

/**
 * Sorts a list by the results of running each `coll` value through an async
 * `iteratee`.
 *
 * @name sortBy
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {AsyncFunction} iteratee - An async function to apply to each item in
 * `coll`.
 * The iteratee should complete with a value to use as the sort criteria as
 * its `result`.
 * Invoked with (item, callback).
 * @param {Function} callback - A callback which is called after all the
 * `iteratee` functions have finished, or an error occurs. Results is the items
 * from the original `coll` sorted by the values returned by the `iteratee`
 * calls. Invoked with (err, results).
 * @example
 *
 * async.sortBy(['file1','file2','file3'], function(file, callback) {
 *     fs.stat(file, function(err, stats) {
 *         callback(err, stats.mtime);
 *     });
 * }, function(err, results) {
 *     // results is now the original array of files sorted by
 *     // modified date
 * });
 *
 * // By modifying the callback parameter the
 * // sorting order can be influenced:
 *
 * // ascending order
 * async.sortBy([1,9,3,5], function(x, callback) {
 *     callback(null, x);
 * }, function(err,result) {
 *     // result callback
 * });
 *
 * // descending order
 * async.sortBy([1,9,3,5], function(x, callback) {
 *     callback(null, x*-1);    //<- x*-1 instead of x, turns the order around
 * }, function(err,result) {
 *     // result callback
 * });
 */
function sortBy (coll, iteratee, callback) {
    var _iteratee = wrapAsync(iteratee);
    map(coll, function (x, callback) {
        _iteratee(x, function (err, criteria) {
            if (err) return callback(err);
            callback(null, {value: x, criteria: criteria});
        });
    }, function (err, results) {
        if (err) return callback(err);
        callback(null, arrayMap(results.sort(comparator), baseProperty('value')));
    });

    function comparator(left, right) {
        var a = left.criteria, b = right.criteria;
        return a < b ? -1 : a > b ? 1 : 0;
    }
}

/**
 * Sets a time limit on an asynchronous function. If the function does not call
 * its callback within the specified milliseconds, it will be called with a
 * timeout error. The code property for the error object will be `'ETIMEDOUT'`.
 *
 * @name timeout
 * @static
 * @memberOf module:Utils
 * @method
 * @category Util
 * @param {AsyncFunction} asyncFn - The async function to limit in time.
 * @param {number} milliseconds - The specified time limit.
 * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)
 * to timeout Error for more information..
 * @returns {AsyncFunction} Returns a wrapped function that can be used with any
 * of the control flow functions.
 * Invoke this function with the same parameters as you would `asyncFunc`.
 * @example
 *
 * function myFunction(foo, callback) {
 *     doAsyncTask(foo, function(err, data) {
 *         // handle errors
 *         if (err) return callback(err);
 *
 *         // do some stuff ...
 *
 *         // return processed data
 *         return callback(null, data);
 *     });
 * }
 *
 * var wrapped = async.timeout(myFunction, 1000);
 *
 * // call `wrapped` as you would `myFunction`
 * wrapped({ bar: 'bar' }, function(err, data) {
 *     // if `myFunction` takes < 1000 ms to execute, `err`
 *     // and `data` will have their expected values
 *
 *     // else `err` will be an Error with the code 'ETIMEDOUT'
 * });
 */
function timeout(asyncFn, milliseconds, info) {
    var fn = wrapAsync(asyncFn);

    return initialParams(function (args, callback) {
        var timedOut = false;
        var timer;

        function timeoutCallback() {
            var name = asyncFn.name || 'anonymous';
            var error  = new Error('Callback function "' + name + '" timed out.');
            error.code = 'ETIMEDOUT';
            if (info) {
                error.info = info;
            }
            timedOut = true;
            callback(error);
        }

        args.push(function () {
            if (!timedOut) {
                callback.apply(null, arguments);
                clearTimeout(timer);
            }
        });

        // setup timer and call original function
        timer = setTimeout(timeoutCallback, milliseconds);
        fn.apply(null, args);
    });
}

/* Built-in method references for those with the same name as other `lodash` methods. */
var nativeCeil = Math.ceil;
var nativeMax = Math.max;

/**
 * The base implementation of `_.range` and `_.rangeRight` which doesn't
 * coerce arguments.
 *
 * @private
 * @param {number} start The start of the range.
 * @param {number} end The end of the range.
 * @param {number} step The value to increment or decrement by.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {Array} Returns the range of numbers.
 */
function baseRange(start, end, step, fromRight) {
  var index = -1,
      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
      result = Array(length);

  while (length--) {
    result[fromRight ? length : ++index] = start;
    start += step;
  }
  return result;
}

/**
 * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a
 * time.
 *
 * @name timesLimit
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.times]{@link module:ControlFlow.times}
 * @category Control Flow
 * @param {number} count - The number of times to run the function.
 * @param {number} limit - The maximum number of async operations at a time.
 * @param {AsyncFunction} iteratee - The async function to call `n` times.
 * Invoked with the iteration index and a callback: (n, next).
 * @param {Function} callback - see [async.map]{@link module:Collections.map}.
 */
function timeLimit(count, limit, iteratee, callback) {
    var _iteratee = wrapAsync(iteratee);
    mapLimit(baseRange(0, count, 1), limit, _iteratee, callback);
}

/**
 * Calls the `iteratee` function `n` times, and accumulates results in the same
 * manner you would use with [map]{@link module:Collections.map}.
 *
 * @name times
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.map]{@link module:Collections.map}
 * @category Control Flow
 * @param {number} n - The number of times to run the function.
 * @param {AsyncFunction} iteratee - The async function to call `n` times.
 * Invoked with the iteration index and a callback: (n, next).
 * @param {Function} callback - see {@link module:Collections.map}.
 * @example
 *
 * // Pretend this is some complicated async factory
 * var createUser = function(id, callback) {
 *     callback(null, {
 *         id: 'user' + id
 *     });
 * };
 *
 * // generate 5 users
 * async.times(5, function(n, next) {
 *     createUser(n, function(err, user) {
 *         next(err, user);
 *     });
 * }, function(err, users) {
 *     // we should now have 5 users
 * });
 */
var times = doLimit(timeLimit, Infinity);

/**
 * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.
 *
 * @name timesSeries
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.times]{@link module:ControlFlow.times}
 * @category Control Flow
 * @param {number} n - The number of times to run the function.
 * @param {AsyncFunction} iteratee - The async function to call `n` times.
 * Invoked with the iteration index and a callback: (n, next).
 * @param {Function} callback - see {@link module:Collections.map}.
 */
var timesSeries = doLimit(timeLimit, 1);

/**
 * A relative of `reduce`.  Takes an Object or Array, and iterates over each
 * element in series, each step potentially mutating an `accumulator` value.
 * The type of the accumulator defaults to the type of collection passed in.
 *
 * @name transform
 * @static
 * @memberOf module:Collections
 * @method
 * @category Collection
 * @param {Array|Iterable|Object} coll - A collection to iterate over.
 * @param {*} [accumulator] - The initial state of the transform.  If omitted,
 * it will default to an empty Object or Array, depending on the type of `coll`
 * @param {AsyncFunction} iteratee - A function applied to each item in the
 * collection that potentially modifies the accumulator.
 * Invoked with (accumulator, item, key, callback).
 * @param {Function} [callback] - A callback which is called after all the
 * `iteratee` functions have finished. Result is the transformed accumulator.
 * Invoked with (err, result).
 * @example
 *
 * async.transform([1,2,3], function(acc, item, index, callback) {
 *     // pointless async:
 *     process.nextTick(function() {
 *         acc.push(item * 2)
 *         callback(null)
 *     });
 * }, function(err, result) {
 *     // result is now equal to [2, 4, 6]
 * });
 *
 * @example
 *
 * async.transform({a: 1, b: 2, c: 3}, function (obj, val, key, callback) {
 *     setImmediate(function () {
 *         obj[key] = val * 2;
 *         callback();
 *     })
 * }, function (err, result) {
 *     // result is equal to {a: 2, b: 4, c: 6}
 * })
 */
function transform (coll, accumulator, iteratee, callback) {
    if (arguments.length <= 3) {
        callback = iteratee;
        iteratee = accumulator;
        accumulator = isArray(coll) ? [] : {};
    }
    callback = once(callback || noop);
    var _iteratee = wrapAsync(iteratee);

    eachOf(coll, function(v, k, cb) {
        _iteratee(accumulator, v, k, cb);
    }, function(err) {
        callback(err, accumulator);
    });
}

/**
 * It runs each task in series but stops whenever any of the functions were
 * successful. If one of the tasks were successful, the `callback` will be
 * passed the result of the successful task. If all tasks fail, the callback
 * will be passed the error and result (if any) of the final attempt.
 *
 * @name tryEach
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array|Iterable|Object} tasks - A collection containing functions to
 * run, each function is passed a `callback(err, result)` it must call on
 * completion with an error `err` (which can be `null`) and an optional `result`
 * value.
 * @param {Function} [callback] - An optional callback which is called when one
 * of the tasks has succeeded, or all have failed. It receives the `err` and
 * `result` arguments of the last attempt at completing the `task`. Invoked with
 * (err, results).
 * @example
 * async.tryEach([
 *     function getDataFromFirstWebsite(callback) {
 *         // Try getting the data from the first website
 *         callback(err, data);
 *     },
 *     function getDataFromSecondWebsite(callback) {
 *         // First website failed,
 *         // Try getting the data from the backup website
 *         callback(err, data);
 *     }
 * ],
 * // optional callback
 * function(err, results) {
 *     Now do something with the data.
 * });
 *
 */
function tryEach(tasks, callback) {
    var error = null;
    var result;
    callback = callback || noop;
    eachSeries(tasks, function(task, callback) {
        wrapAsync(task)(function (err, res/*, ...args*/) {
            if (arguments.length > 2) {
                result = slice(arguments, 1);
            } else {
                result = res;
            }
            error = err;
            callback(!err);
        });
    }, function () {
        callback(error, result);
    });
}

/**
 * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,
 * unmemoized form. Handy for testing.
 *
 * @name unmemoize
 * @static
 * @memberOf module:Utils
 * @method
 * @see [async.memoize]{@link module:Utils.memoize}
 * @category Util
 * @param {AsyncFunction} fn - the memoized function
 * @returns {AsyncFunction} a function that calls the original unmemoized function
 */
function unmemoize(fn) {
    return function () {
        return (fn.unmemoized || fn).apply(null, arguments);
    };
}

/**
 * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when
 * stopped, or an error occurs.
 *
 * @name whilst
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Function} test - synchronous truth test to perform before each
 * execution of `iteratee`. Invoked with ().
 * @param {AsyncFunction} iteratee - An async function which is called each time
 * `test` passes. Invoked with (callback).
 * @param {Function} [callback] - A callback which is called after the test
 * function has failed and repeated execution of `iteratee` has stopped. `callback`
 * will be passed an error and any arguments passed to the final `iteratee`'s
 * callback. Invoked with (err, [results]);
 * @returns undefined
 * @example
 *
 * var count = 0;
 * async.whilst(
 *     function() { return count < 5; },
 *     function(callback) {
 *         count++;
 *         setTimeout(function() {
 *             callback(null, count);
 *         }, 1000);
 *     },
 *     function (err, n) {
 *         // 5 seconds have passed, n = 5
 *     }
 * );
 */
function whilst(test, iteratee, callback) {
    callback = onlyOnce(callback || noop);
    var _iteratee = wrapAsync(iteratee);
    if (!test()) return callback(null);
    var next = function(err/*, ...args*/) {
        if (err) return callback(err);
        if (test()) return _iteratee(next);
        var args = slice(arguments, 1);
        callback.apply(null, [null].concat(args));
    };
    _iteratee(next);
}

/**
 * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when
 * stopped, or an error occurs. `callback` will be passed an error and any
 * arguments passed to the final `iteratee`'s callback.
 *
 * The inverse of [whilst]{@link module:ControlFlow.whilst}.
 *
 * @name until
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @see [async.whilst]{@link module:ControlFlow.whilst}
 * @category Control Flow
 * @param {Function} test - synchronous truth test to perform before each
 * execution of `iteratee`. Invoked with ().
 * @param {AsyncFunction} iteratee - An async function which is called each time
 * `test` fails. Invoked with (callback).
 * @param {Function} [callback] - A callback which is called after the test
 * function has passed and repeated execution of `iteratee` has stopped. `callback`
 * will be passed an error and any arguments passed to the final `iteratee`'s
 * callback. Invoked with (err, [results]);
 */
function until(test, iteratee, callback) {
    whilst(function() {
        return !test.apply(this, arguments);
    }, iteratee, callback);
}

/**
 * Runs the `tasks` array of functions in series, each passing their results to
 * the next in the array. However, if any of the `tasks` pass an error to their
 * own callback, the next function is not executed, and the main `callback` is
 * immediately called with the error.
 *
 * @name waterfall
 * @static
 * @memberOf module:ControlFlow
 * @method
 * @category Control Flow
 * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}
 * to run.
 * Each function should complete with any number of `result` values.
 * The `result` values will be passed as arguments, in order, to the next task.
 * @param {Function} [callback] - An optional callback to run once all the
 * functions have completed. This will be passed the results of the last task's
 * callback. Invoked with (err, [results]).
 * @returns undefined
 * @example
 *
 * async.waterfall([
 *     function(callback) {
 *         callback(null, 'one', 'two');
 *     },
 *     function(arg1, arg2, callback) {
 *         // arg1 now equals 'one' and arg2 now equals 'two'
 *         callback(null, 'three');
 *     },
 *     function(arg1, callback) {
 *         // arg1 now equals 'three'
 *         callback(null, 'done');
 *     }
 * ], function (err, result) {
 *     // result now equals 'done'
 * });
 *
 * // Or, with named functions:
 * async.waterfall([
 *     myFirstFunction,
 *     mySecondFunction,
 *     myLastFunction,
 * ], function (err, result) {
 *     // result now equals 'done'
 * });
 * function myFirstFunction(callback) {
 *     callback(null, 'one', 'two');
 * }
 * function mySecondFunction(arg1, arg2, callback) {
 *     // arg1 now equals 'one' and arg2 now equals 'two'
 *     callback(null, 'three');
 * }
 * function myLastFunction(arg1, callback) {
 *     // arg1 now equals 'three'
 *     callback(null, 'done');
 * }
 */
var waterfall = function(tasks, callback) {
    callback = once(callback || noop);
    if (!isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));
    if (!tasks.length) return callback();
    var taskIndex = 0;

    function nextTask(args) {
        var task = wrapAsync(tasks[taskIndex++]);
        args.push(onlyOnce(next));
        task.apply(null, args);
    }

    function next(err/*, ...args*/) {
        if (err || taskIndex === tasks.length) {
            return callback.apply(null, arguments);
        }
        nextTask(slice(arguments, 1));
    }

    nextTask([]);
};

/**
 * An "async function" in the context of Async is an asynchronous function with
 * a variable number of parameters, with the final parameter being a callback.
 * (`function (arg1, arg2, ..., callback) {}`)
 * The final callback is of the form `callback(err, results...)`, which must be
 * called once the function is completed.  The callback should be called with a
 * Error as its first argument to signal that an error occurred.
 * Otherwise, if no error occurred, it should be called with `null` as the first
 * argument, and any additional `result` arguments that may apply, to signal
 * successful completion.
 * The callback must be called exactly once, ideally on a later tick of the
 * JavaScript event loop.
 *
 * This type of function is also referred to as a "Node-style async function",
 * or a "continuation passing-style function" (CPS). Most of the methods of this
 * library are themselves CPS/Node-style async functions, or functions that
 * return CPS/Node-style async functions.
 *
 * Wherever we accept a Node-style async function, we also directly accept an
 * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.
 * In this case, the `async` function will not be passed a final callback
 * argument, and any thrown error will be used as the `err` argument of the
 * implicit callback, and the return value will be used as the `result` value.
 * (i.e. a `rejected` of the returned Promise becomes the `err` callback
 * argument, and a `resolved` value becomes the `result`.)
 *
 * Note, due to JavaScript limitations, we can only detect native `async`
 * functions and not transpilied implementations.
 * Your environment must have `async`/`await` support for this to work.
 * (e.g. Node > v7.6, or a recent version of a modern browser).
 * If you are using `async` functions through a transpiler (e.g. Babel), you
 * must still wrap the function with [asyncify]{@link module:Utils.asyncify},
 * because the `async function` will be compiled to an ordinary function that
 * returns a promise.
 *
 * @typedef {Function} AsyncFunction
 * @static
 */

/**
 * Async is a utility module which provides straight-forward, powerful functions
 * for working with asynchronous JavaScript. Although originally designed for
 * use with [Node.js](http://nodejs.org) and installable via
 * `npm install --save async`, it can also be used directly in the browser.
 * @module async
 * @see AsyncFunction
 */


/**
 * A collection of `async` functions for manipulating collections, such as
 * arrays and objects.
 * @module Collections
 */

/**
 * A collection of `async` functions for controlling the flow through a script.
 * @module ControlFlow
 */

/**
 * A collection of `async` utility functions.
 * @module Utils
 */

var index = {
    apply: apply,
    applyEach: applyEach,
    applyEachSeries: applyEachSeries,
    asyncify: asyncify,
    auto: auto,
    autoInject: autoInject,
    cargo: cargo,
    compose: compose,
    concat: concat,
    concatLimit: concatLimit,
    concatSeries: concatSeries,
    constant: constant,
    detect: detect,
    detectLimit: detectLimit,
    detectSeries: detectSeries,
    dir: dir,
    doDuring: doDuring,
    doUntil: doUntil,
    doWhilst: doWhilst,
    during: during,
    each: eachLimit,
    eachLimit: eachLimit$1,
    eachOf: eachOf,
    eachOfLimit: eachOfLimit,
    eachOfSeries: eachOfSeries,
    eachSeries: eachSeries,
    ensureAsync: ensureAsync,
    every: every,
    everyLimit: everyLimit,
    everySeries: everySeries,
    filter: filter,
    filterLimit: filterLimit,
    filterSeries: filterSeries,
    forever: forever,
    groupBy: groupBy,
    groupByLimit: groupByLimit,
    groupBySeries: groupBySeries,
    log: log,
    map: map,
    mapLimit: mapLimit,
    mapSeries: mapSeries,
    mapValues: mapValues,
    mapValuesLimit: mapValuesLimit,
    mapValuesSeries: mapValuesSeries,
    memoize: memoize,
    nextTick: nextTick,
    parallel: parallelLimit,
    parallelLimit: parallelLimit$1,
    priorityQueue: priorityQueue,
    queue: queue$1,
    race: race,
    reduce: reduce,
    reduceRight: reduceRight,
    reflect: reflect,
    reflectAll: reflectAll,
    reject: reject,
    rejectLimit: rejectLimit,
    rejectSeries: rejectSeries,
    retry: retry,
    retryable: retryable,
    seq: seq,
    series: series,
    setImmediate: setImmediate$1,
    some: some,
    someLimit: someLimit,
    someSeries: someSeries,
    sortBy: sortBy,
    timeout: timeout,
    times: times,
    timesLimit: timeLimit,
    timesSeries: timesSeries,
    transform: transform,
    tryEach: tryEach,
    unmemoize: unmemoize,
    until: until,
    waterfall: waterfall,
    whilst: whilst,

    // aliases
    all: every,
    allLimit: everyLimit,
    allSeries: everySeries,
    any: some,
    anyLimit: someLimit,
    anySeries: someSeries,
    find: detect,
    findLimit: detectLimit,
    findSeries: detectSeries,
    forEach: eachLimit,
    forEachSeries: eachSeries,
    forEachLimit: eachLimit$1,
    forEachOf: eachOf,
    forEachOfSeries: eachOfSeries,
    forEachOfLimit: eachOfLimit,
    inject: reduce,
    foldl: reduce,
    foldr: reduceRight,
    select: filter,
    selectLimit: filterLimit,
    selectSeries: filterSeries,
    wrapSync: asyncify
};

exports['default'] = index;
exports.apply = apply;
exports.applyEach = applyEach;
exports.applyEachSeries = applyEachSeries;
exports.asyncify = asyncify;
exports.auto = auto;
exports.autoInject = autoInject;
exports.cargo = cargo;
exports.compose = compose;
exports.concat = concat;
exports.concatLimit = concatLimit;
exports.concatSeries = concatSeries;
exports.constant = constant;
exports.detect = detect;
exports.detectLimit = detectLimit;
exports.detectSeries = detectSeries;
exports.dir = dir;
exports.doDuring = doDuring;
exports.doUntil = doUntil;
exports.doWhilst = doWhilst;
exports.during = during;
exports.each = eachLimit;
exports.eachLimit = eachLimit$1;
exports.eachOf = eachOf;
exports.eachOfLimit = eachOfLimit;
exports.eachOfSeries = eachOfSeries;
exports.eachSeries = eachSeries;
exports.ensureAsync = ensureAsync;
exports.every = every;
exports.everyLimit = everyLimit;
exports.everySeries = everySeries;
exports.filter = filter;
exports.filterLimit = filterLimit;
exports.filterSeries = filterSeries;
exports.forever = forever;
exports.groupBy = groupBy;
exports.groupByLimit = groupByLimit;
exports.groupBySeries = groupBySeries;
exports.log = log;
exports.map = map;
exports.mapLimit = mapLimit;
exports.mapSeries = mapSeries;
exports.mapValues = mapValues;
exports.mapValuesLimit = mapValuesLimit;
exports.mapValuesSeries = mapValuesSeries;
exports.memoize = memoize;
exports.nextTick = nextTick;
exports.parallel = parallelLimit;
exports.parallelLimit = parallelLimit$1;
exports.priorityQueue = priorityQueue;
exports.queue = queue$1;
exports.race = race;
exports.reduce = reduce;
exports.reduceRight = reduceRight;
exports.reflect = reflect;
exports.reflectAll = reflectAll;
exports.reject = reject;
exports.rejectLimit = rejectLimit;
exports.rejectSeries = rejectSeries;
exports.retry = retry;
exports.retryable = retryable;
exports.seq = seq;
exports.series = series;
exports.setImmediate = setImmediate$1;
exports.some = some;
exports.someLimit = someLimit;
exports.someSeries = someSeries;
exports.sortBy = sortBy;
exports.timeout = timeout;
exports.times = times;
exports.timesLimit = timeLimit;
exports.timesSeries = timesSeries;
exports.transform = transform;
exports.tryEach = tryEach;
exports.unmemoize = unmemoize;
exports.until = until;
exports.waterfall = waterfall;
exports.whilst = whilst;
exports.all = every;
exports.allLimit = everyLimit;
exports.allSeries = everySeries;
exports.any = some;
exports.anyLimit = someLimit;
exports.anySeries = someSeries;
exports.find = detect;
exports.findLimit = detectLimit;
exports.findSeries = detectSeries;
exports.forEach = eachLimit;
exports.forEachSeries = eachSeries;
exports.forEachLimit = eachLimit$1;
exports.forEachOf = eachOf;
exports.forEachOfSeries = eachOfSeries;
exports.forEachOfLimit = eachOfLimit;
exports.inject = reduce;
exports.foldl = reduce;
exports.foldr = reduceRight;
exports.select = filter;
exports.selectLimit = filterLimit;
exports.selectSeries = filterSeries;
exports.wrapSync = asyncify;

Object.defineProperty(exports, '__esModule', { value: true });

})));


/***/ }),

/***/ 9417:
/***/ ((module) => {

"use strict";

module.exports = balanced;
function balanced(a, b, str) {
  if (a instanceof RegExp) a = maybeMatch(a, str);
  if (b instanceof RegExp) b = maybeMatch(b, str);

  var r = range(a, b, str);

  return r && {
    start: r[0],
    end: r[1],
    pre: str.slice(0, r[0]),
    body: str.slice(r[0] + a.length, r[1]),
    post: str.slice(r[1] + b.length)
  };
}

function maybeMatch(reg, str) {
  var m = str.match(reg);
  return m ? m[0] : null;
}

balanced.range = range;
function range(a, b, str) {
  var begs, beg, left, right, result;
  var ai = str.indexOf(a);
  var bi = str.indexOf(b, ai + 1);
  var i = ai;

  if (ai >= 0 && bi > 0) {
    begs = [];
    left = str.length;

    while (i >= 0 && !result) {
      if (i == ai) {
        begs.push(i);
        ai = str.indexOf(a, i + 1);
      } else if (begs.length == 1) {
        result = [ begs.pop(), bi ];
      } else {
        beg = begs.pop();
        if (beg < left) {
          left = beg;
          right = bi;
        }

        bi = str.indexOf(b, i + 1);
      }

      i = ai < bi && ai >= 0 ? ai : bi;
    }

    if (begs.length) {
      result = [ left, right ];
    }
  }

  return result;
}


/***/ }),

/***/ 33717:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var concatMap = __nccwpck_require__(86891);
var balanced = __nccwpck_require__(9417);

module.exports = expandTop;

var escSlash = '\0SLASH'+Math.random()+'\0';
var escOpen = '\0OPEN'+Math.random()+'\0';
var escClose = '\0CLOSE'+Math.random()+'\0';
var escComma = '\0COMMA'+Math.random()+'\0';
var escPeriod = '\0PERIOD'+Math.random()+'\0';

function numeric(str) {
  return parseInt(str, 10) == str
    ? parseInt(str, 10)
    : str.charCodeAt(0);
}

function escapeBraces(str) {
  return str.split('\\\\').join(escSlash)
            .split('\\{').join(escOpen)
            .split('\\}').join(escClose)
            .split('\\,').join(escComma)
            .split('\\.').join(escPeriod);
}

function unescapeBraces(str) {
  return str.split(escSlash).join('\\')
            .split(escOpen).join('{')
            .split(escClose).join('}')
            .split(escComma).join(',')
            .split(escPeriod).join('.');
}


// Basically just str.split(","), but handling cases
// where we have nested braced sections, which should be
// treated as individual members, like {a,{b,c},d}
function parseCommaParts(str) {
  if (!str)
    return [''];

  var parts = [];
  var m = balanced('{', '}', str);

  if (!m)
    return str.split(',');

  var pre = m.pre;
  var body = m.body;
  var post = m.post;
  var p = pre.split(',');

  p[p.length-1] += '{' + body + '}';
  var postParts = parseCommaParts(post);
  if (post.length) {
    p[p.length-1] += postParts.shift();
    p.push.apply(p, postParts);
  }

  parts.push.apply(parts, p);

  return parts;
}

function expandTop(str) {
  if (!str)
    return [];

  // I don't know why Bash 4.3 does this, but it does.
  // Anything starting with {} will have the first two bytes preserved
  // but *only* at the top level, so {},a}b will not expand to anything,
  // but a{},b}c will be expanded to [a}c,abc].
  // One could argue that this is a bug in Bash, but since the goal of
  // this module is to match Bash's rules, we escape a leading {}
  if (str.substr(0, 2) === '{}') {
    str = '\\{\\}' + str.substr(2);
  }

  return expand(escapeBraces(str), true).map(unescapeBraces);
}

function identity(e) {
  return e;
}

function embrace(str) {
  return '{' + str + '}';
}
function isPadded(el) {
  return /^-?0\d/.test(el);
}

function lte(i, y) {
  return i <= y;
}
function gte(i, y) {
  return i >= y;
}

function expand(str, isTop) {
  var expansions = [];

  var m = balanced('{', '}', str);
  if (!m || /\$$/.test(m.pre)) return [str];

  var isNumericSequence = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(m.body);
  var isAlphaSequence = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(m.body);
  var isSequence = isNumericSequence || isAlphaSequence;
  var isOptions = m.body.indexOf(',') >= 0;
  if (!isSequence && !isOptions) {
    // {a},b}
    if (m.post.match(/,.*\}/)) {
      str = m.pre + '{' + m.body + escClose + m.post;
      return expand(str);
    }
    return [str];
  }

  var n;
  if (isSequence) {
    n = m.body.split(/\.\./);
  } else {
    n = parseCommaParts(m.body);
    if (n.length === 1) {
      // x{{a,b}}y ==> x{a}y x{b}y
      n = expand(n[0], false).map(embrace);
      if (n.length === 1) {
        var post = m.post.length
          ? expand(m.post, false)
          : [''];
        return post.map(function(p) {
          return m.pre + n[0] + p;
        });
      }
    }
  }

  // at this point, n is the parts, and we know it's not a comma set
  // with a single entry.

  // no need to expand pre, since it is guaranteed to be free of brace-sets
  var pre = m.pre;
  var post = m.post.length
    ? expand(m.post, false)
    : [''];

  var N;

  if (isSequence) {
    var x = numeric(n[0]);
    var y = numeric(n[1]);
    var width = Math.max(n[0].length, n[1].length)
    var incr = n.length == 3
      ? Math.abs(numeric(n[2]))
      : 1;
    var test = lte;
    var reverse = y < x;
    if (reverse) {
      incr *= -1;
      test = gte;
    }
    var pad = n.some(isPadded);

    N = [];

    for (var i = x; test(i, y); i += incr) {
      var c;
      if (isAlphaSequence) {
        c = String.fromCharCode(i);
        if (c === '\\')
          c = '';
      } else {
        c = String(i);
        if (pad) {
          var need = width - c.length;
          if (need > 0) {
            var z = new Array(need + 1).join('0');
            if (i < 0)
              c = '-' + z + c.slice(1);
            else
              c = z + c;
          }
        }
      }
      N.push(c);
    }
  } else {
    N = concatMap(n, function(el) { return expand(el, false) });
  }

  for (var j = 0; j < N.length; j++) {
    for (var k = 0; k < post.length; k++) {
      var expansion = pre + N[j] + post[k];
      if (!isTop || isSequence || expansion)
        expansions.push(expansion);
    }
  }

  return expansions;
}



/***/ }),

/***/ 50610:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const stringify = __nccwpck_require__(38750);
const compile = __nccwpck_require__(79434);
const expand = __nccwpck_require__(35873);
const parse = __nccwpck_require__(96477);

/**
 * Expand the given pattern or create a regex-compatible string.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']
 * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']
 * ```
 * @param {String} `str`
 * @param {Object} `options`
 * @return {String}
 * @api public
 */

const braces = (input, options = {}) => {
  let output = [];

  if (Array.isArray(input)) {
    for (let pattern of input) {
      let result = braces.create(pattern, options);
      if (Array.isArray(result)) {
        output.push(...result);
      } else {
        output.push(result);
      }
    }
  } else {
    output = [].concat(braces.create(input, options));
  }

  if (options && options.expand === true && options.nodupes === true) {
    output = [...new Set(output)];
  }
  return output;
};

/**
 * Parse the given `str` with the given `options`.
 *
 * ```js
 * // braces.parse(pattern, [, options]);
 * const ast = braces.parse('a/{b,c}/d');
 * console.log(ast);
 * ```
 * @param {String} pattern Brace pattern to parse
 * @param {Object} options
 * @return {Object} Returns an AST
 * @api public
 */

braces.parse = (input, options = {}) => parse(input, options);

/**
 * Creates a braces string from an AST, or an AST node.
 *
 * ```js
 * const braces = require('braces');
 * let ast = braces.parse('foo/{a,b}/bar');
 * console.log(stringify(ast.nodes[2])); //=> '{a,b}'
 * ```
 * @param {String} `input` Brace pattern or AST.
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.stringify = (input, options = {}) => {
  if (typeof input === 'string') {
    return stringify(braces.parse(input, options), options);
  }
  return stringify(input, options);
};

/**
 * Compiles a brace pattern into a regex-compatible, optimized string.
 * This method is called by the main [braces](#braces) function by default.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.compile('a/{b,c}/d'));
 * //=> ['a/(b|c)/d']
 * ```
 * @param {String} `input` Brace pattern or AST.
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.compile = (input, options = {}) => {
  if (typeof input === 'string') {
    input = braces.parse(input, options);
  }
  return compile(input, options);
};

/**
 * Expands a brace pattern into an array. This method is called by the
 * main [braces](#braces) function when `options.expand` is true. Before
 * using this method it's recommended that you read the [performance notes](#performance))
 * and advantages of using [.compile](#compile) instead.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.expand('a/{b,c}/d'));
 * //=> ['a/b/d', 'a/c/d'];
 * ```
 * @param {String} `pattern` Brace pattern
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.expand = (input, options = {}) => {
  if (typeof input === 'string') {
    input = braces.parse(input, options);
  }

  let result = expand(input, options);

  // filter out empty strings if specified
  if (options.noempty === true) {
    result = result.filter(Boolean);
  }

  // filter out duplicates if specified
  if (options.nodupes === true) {
    result = [...new Set(result)];
  }

  return result;
};

/**
 * Processes a brace pattern and returns either an expanded array
 * (if `options.expand` is true), a highly optimized regex-compatible string.
 * This method is called by the main [braces](#braces) function.
 *
 * ```js
 * const braces = require('braces');
 * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))
 * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'
 * ```
 * @param {String} `pattern` Brace pattern
 * @param {Object} `options`
 * @return {Array} Returns an array of expanded values.
 * @api public
 */

braces.create = (input, options = {}) => {
  if (input === '' || input.length < 3) {
    return [input];
  }

 return options.expand !== true
    ? braces.compile(input, options)
    : braces.expand(input, options);
};

/**
 * Expose "braces"
 */

module.exports = braces;


/***/ }),

/***/ 79434:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fill = __nccwpck_require__(6330);
const utils = __nccwpck_require__(45207);

const compile = (ast, options = {}) => {
  let walk = (node, parent = {}) => {
    let invalidBlock = utils.isInvalidBrace(parent);
    let invalidNode = node.invalid === true && options.escapeInvalid === true;
    let invalid = invalidBlock === true || invalidNode === true;
    let prefix = options.escapeInvalid === true ? '\\' : '';
    let output = '';

    if (node.isOpen === true) {
      return prefix + node.value;
    }
    if (node.isClose === true) {
      return prefix + node.value;
    }

    if (node.type === 'open') {
      return invalid ? (prefix + node.value) : '(';
    }

    if (node.type === 'close') {
      return invalid ? (prefix + node.value) : ')';
    }

    if (node.type === 'comma') {
      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');
    }

    if (node.value) {
      return node.value;
    }

    if (node.nodes && node.ranges > 0) {
      let args = utils.reduce(node.nodes);
      let range = fill(...args, { ...options, wrap: false, toRegex: true });

      if (range.length !== 0) {
        return args.length > 1 && range.length > 1 ? `(${range})` : range;
      }
    }

    if (node.nodes) {
      for (let child of node.nodes) {
        output += walk(child, node);
      }
    }
    return output;
  };

  return walk(ast);
};

module.exports = compile;


/***/ }),

/***/ 18774:
/***/ ((module) => {

"use strict";


module.exports = {
  MAX_LENGTH: 1024 * 64,

  // Digits
  CHAR_0: '0', /* 0 */
  CHAR_9: '9', /* 9 */

  // Alphabet chars.
  CHAR_UPPERCASE_A: 'A', /* A */
  CHAR_LOWERCASE_A: 'a', /* a */
  CHAR_UPPERCASE_Z: 'Z', /* Z */
  CHAR_LOWERCASE_Z: 'z', /* z */

  CHAR_LEFT_PARENTHESES: '(', /* ( */
  CHAR_RIGHT_PARENTHESES: ')', /* ) */

  CHAR_ASTERISK: '*', /* * */

  // Non-alphabetic chars.
  CHAR_AMPERSAND: '&', /* & */
  CHAR_AT: '@', /* @ */
  CHAR_BACKSLASH: '\\', /* \ */
  CHAR_BACKTICK: '`', /* ` */
  CHAR_CARRIAGE_RETURN: '\r', /* \r */
  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */
  CHAR_COLON: ':', /* : */
  CHAR_COMMA: ',', /* , */
  CHAR_DOLLAR: '$', /* . */
  CHAR_DOT: '.', /* . */
  CHAR_DOUBLE_QUOTE: '"', /* " */
  CHAR_EQUAL: '=', /* = */
  CHAR_EXCLAMATION_MARK: '!', /* ! */
  CHAR_FORM_FEED: '\f', /* \f */
  CHAR_FORWARD_SLASH: '/', /* / */
  CHAR_HASH: '#', /* # */
  CHAR_HYPHEN_MINUS: '-', /* - */
  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */
  CHAR_LEFT_CURLY_BRACE: '{', /* { */
  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */
  CHAR_LINE_FEED: '\n', /* \n */
  CHAR_NO_BREAK_SPACE: '\u00A0', /* \u00A0 */
  CHAR_PERCENT: '%', /* % */
  CHAR_PLUS: '+', /* + */
  CHAR_QUESTION_MARK: '?', /* ? */
  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */
  CHAR_RIGHT_CURLY_BRACE: '}', /* } */
  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */
  CHAR_SEMICOLON: ';', /* ; */
  CHAR_SINGLE_QUOTE: '\'', /* ' */
  CHAR_SPACE: ' ', /*   */
  CHAR_TAB: '\t', /* \t */
  CHAR_UNDERSCORE: '_', /* _ */
  CHAR_VERTICAL_LINE: '|', /* | */
  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\uFEFF' /* \uFEFF */
};


/***/ }),

/***/ 35873:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fill = __nccwpck_require__(6330);
const stringify = __nccwpck_require__(38750);
const utils = __nccwpck_require__(45207);

const append = (queue = '', stash = '', enclose = false) => {
  let result = [];

  queue = [].concat(queue);
  stash = [].concat(stash);

  if (!stash.length) return queue;
  if (!queue.length) {
    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;
  }

  for (let item of queue) {
    if (Array.isArray(item)) {
      for (let value of item) {
        result.push(append(value, stash, enclose));
      }
    } else {
      for (let ele of stash) {
        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;
        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));
      }
    }
  }
  return utils.flatten(result);
};

const expand = (ast, options = {}) => {
  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;

  let walk = (node, parent = {}) => {
    node.queue = [];

    let p = parent;
    let q = parent.queue;

    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {
      p = p.parent;
      q = p.queue;
    }

    if (node.invalid || node.dollar) {
      q.push(append(q.pop(), stringify(node, options)));
      return;
    }

    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {
      q.push(append(q.pop(), ['{}']));
      return;
    }

    if (node.nodes && node.ranges > 0) {
      let args = utils.reduce(node.nodes);

      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {
        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');
      }

      let range = fill(...args, options);
      if (range.length === 0) {
        range = stringify(node, options);
      }

      q.push(append(q.pop(), range));
      node.nodes = [];
      return;
    }

    let enclose = utils.encloseBrace(node);
    let queue = node.queue;
    let block = node;

    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {
      block = block.parent;
      queue = block.queue;
    }

    for (let i = 0; i < node.nodes.length; i++) {
      let child = node.nodes[i];

      if (child.type === 'comma' && node.type === 'brace') {
        if (i === 1) queue.push('');
        queue.push('');
        continue;
      }

      if (child.type === 'close') {
        q.push(append(q.pop(), queue, enclose));
        continue;
      }

      if (child.value && child.type !== 'open') {
        queue.push(append(queue.pop(), child.value));
        continue;
      }

      if (child.nodes) {
        walk(child, node);
      }
    }

    return queue;
  };

  return utils.flatten(walk(ast));
};

module.exports = expand;


/***/ }),

/***/ 96477:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const stringify = __nccwpck_require__(38750);

/**
 * Constants
 */

const {
  MAX_LENGTH,
  CHAR_BACKSLASH, /* \ */
  CHAR_BACKTICK, /* ` */
  CHAR_COMMA, /* , */
  CHAR_DOT, /* . */
  CHAR_LEFT_PARENTHESES, /* ( */
  CHAR_RIGHT_PARENTHESES, /* ) */
  CHAR_LEFT_CURLY_BRACE, /* { */
  CHAR_RIGHT_CURLY_BRACE, /* } */
  CHAR_LEFT_SQUARE_BRACKET, /* [ */
  CHAR_RIGHT_SQUARE_BRACKET, /* ] */
  CHAR_DOUBLE_QUOTE, /* " */
  CHAR_SINGLE_QUOTE, /* ' */
  CHAR_NO_BREAK_SPACE,
  CHAR_ZERO_WIDTH_NOBREAK_SPACE
} = __nccwpck_require__(18774);

/**
 * parse
 */

const parse = (input, options = {}) => {
  if (typeof input !== 'string') {
    throw new TypeError('Expected a string');
  }

  let opts = options || {};
  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;
  if (input.length > max) {
    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);
  }

  let ast = { type: 'root', input, nodes: [] };
  let stack = [ast];
  let block = ast;
  let prev = ast;
  let brackets = 0;
  let length = input.length;
  let index = 0;
  let depth = 0;
  let value;
  let memo = {};

  /**
   * Helpers
   */

  const advance = () => input[index++];
  const push = node => {
    if (node.type === 'text' && prev.type === 'dot') {
      prev.type = 'text';
    }

    if (prev && prev.type === 'text' && node.type === 'text') {
      prev.value += node.value;
      return;
    }

    block.nodes.push(node);
    node.parent = block;
    node.prev = prev;
    prev = node;
    return node;
  };

  push({ type: 'bos' });

  while (index < length) {
    block = stack[stack.length - 1];
    value = advance();

    /**
     * Invalid chars
     */

    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {
      continue;
    }

    /**
     * Escaped chars
     */

    if (value === CHAR_BACKSLASH) {
      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });
      continue;
    }

    /**
     * Right square bracket (literal): ']'
     */

    if (value === CHAR_RIGHT_SQUARE_BRACKET) {
      push({ type: 'text', value: '\\' + value });
      continue;
    }

    /**
     * Left square bracket: '['
     */

    if (value === CHAR_LEFT_SQUARE_BRACKET) {
      brackets++;

      let closed = true;
      let next;

      while (index < length && (next = advance())) {
        value += next;

        if (next === CHAR_LEFT_SQUARE_BRACKET) {
          brackets++;
          continue;
        }

        if (next === CHAR_BACKSLASH) {
          value += advance();
          continue;
        }

        if (next === CHAR_RIGHT_SQUARE_BRACKET) {
          brackets--;

          if (brackets === 0) {
            break;
          }
        }
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Parentheses
     */

    if (value === CHAR_LEFT_PARENTHESES) {
      block = push({ type: 'paren', nodes: [] });
      stack.push(block);
      push({ type: 'text', value });
      continue;
    }

    if (value === CHAR_RIGHT_PARENTHESES) {
      if (block.type !== 'paren') {
        push({ type: 'text', value });
        continue;
      }
      block = stack.pop();
      push({ type: 'text', value });
      block = stack[stack.length - 1];
      continue;
    }

    /**
     * Quotes: '|"|`
     */

    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {
      let open = value;
      let next;

      if (options.keepQuotes !== true) {
        value = '';
      }

      while (index < length && (next = advance())) {
        if (next === CHAR_BACKSLASH) {
          value += next + advance();
          continue;
        }

        if (next === open) {
          if (options.keepQuotes === true) value += next;
          break;
        }

        value += next;
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Left curly brace: '{'
     */

    if (value === CHAR_LEFT_CURLY_BRACE) {
      depth++;

      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;
      let brace = {
        type: 'brace',
        open: true,
        close: false,
        dollar,
        depth,
        commas: 0,
        ranges: 0,
        nodes: []
      };

      block = push(brace);
      stack.push(block);
      push({ type: 'open', value });
      continue;
    }

    /**
     * Right curly brace: '}'
     */

    if (value === CHAR_RIGHT_CURLY_BRACE) {
      if (block.type !== 'brace') {
        push({ type: 'text', value });
        continue;
      }

      let type = 'close';
      block = stack.pop();
      block.close = true;

      push({ type, value });
      depth--;

      block = stack[stack.length - 1];
      continue;
    }

    /**
     * Comma: ','
     */

    if (value === CHAR_COMMA && depth > 0) {
      if (block.ranges > 0) {
        block.ranges = 0;
        let open = block.nodes.shift();
        block.nodes = [open, { type: 'text', value: stringify(block) }];
      }

      push({ type: 'comma', value });
      block.commas++;
      continue;
    }

    /**
     * Dot: '.'
     */

    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {
      let siblings = block.nodes;

      if (depth === 0 || siblings.length === 0) {
        push({ type: 'text', value });
        continue;
      }

      if (prev.type === 'dot') {
        block.range = [];
        prev.value += value;
        prev.type = 'range';

        if (block.nodes.length !== 3 && block.nodes.length !== 5) {
          block.invalid = true;
          block.ranges = 0;
          prev.type = 'text';
          continue;
        }

        block.ranges++;
        block.args = [];
        continue;
      }

      if (prev.type === 'range') {
        siblings.pop();

        let before = siblings[siblings.length - 1];
        before.value += prev.value + value;
        prev = before;
        block.ranges--;
        continue;
      }

      push({ type: 'dot', value });
      continue;
    }

    /**
     * Text
     */

    push({ type: 'text', value });
  }

  // Mark imbalanced braces and brackets as invalid
  do {
    block = stack.pop();

    if (block.type !== 'root') {
      block.nodes.forEach(node => {
        if (!node.nodes) {
          if (node.type === 'open') node.isOpen = true;
          if (node.type === 'close') node.isClose = true;
          if (!node.nodes) node.type = 'text';
          node.invalid = true;
        }
      });

      // get the location of the block on parent.nodes (block's siblings)
      let parent = stack[stack.length - 1];
      let index = parent.nodes.indexOf(block);
      // replace the (invalid) block with it's nodes
      parent.nodes.splice(index, 1, ...block.nodes);
    }
  } while (stack.length > 0);

  push({ type: 'eos' });
  return ast;
};

module.exports = parse;


/***/ }),

/***/ 38750:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const utils = __nccwpck_require__(45207);

module.exports = (ast, options = {}) => {
  let stringify = (node, parent = {}) => {
    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);
    let invalidNode = node.invalid === true && options.escapeInvalid === true;
    let output = '';

    if (node.value) {
      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {
        return '\\' + node.value;
      }
      return node.value;
    }

    if (node.value) {
      return node.value;
    }

    if (node.nodes) {
      for (let child of node.nodes) {
        output += stringify(child);
      }
    }
    return output;
  };

  return stringify(ast);
};



/***/ }),

/***/ 45207:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.isInteger = num => {
  if (typeof num === 'number') {
    return Number.isInteger(num);
  }
  if (typeof num === 'string' && num.trim() !== '') {
    return Number.isInteger(Number(num));
  }
  return false;
};

/**
 * Find a node of the given type
 */

exports.find = (node, type) => node.nodes.find(node => node.type === type);

/**
 * Find a node of the given type
 */

exports.exceedsLimit = (min, max, step = 1, limit) => {
  if (limit === false) return false;
  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;
  return ((Number(max) - Number(min)) / Number(step)) >= limit;
};

/**
 * Escape the given node with '\\' before node.value
 */

exports.escapeNode = (block, n = 0, type) => {
  let node = block.nodes[n];
  if (!node) return;

  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {
    if (node.escaped !== true) {
      node.value = '\\' + node.value;
      node.escaped = true;
    }
  }
};

/**
 * Returns true if the given brace node should be enclosed in literal braces
 */

exports.encloseBrace = node => {
  if (node.type !== 'brace') return false;
  if ((node.commas >> 0 + node.ranges >> 0) === 0) {
    node.invalid = true;
    return true;
  }
  return false;
};

/**
 * Returns true if a brace node is invalid.
 */

exports.isInvalidBrace = block => {
  if (block.type !== 'brace') return false;
  if (block.invalid === true || block.dollar) return true;
  if ((block.commas >> 0 + block.ranges >> 0) === 0) {
    block.invalid = true;
    return true;
  }
  if (block.open !== true || block.close !== true) {
    block.invalid = true;
    return true;
  }
  return false;
};

/**
 * Returns true if a node is an open or close node
 */

exports.isOpenOrClose = node => {
  if (node.type === 'open' || node.type === 'close') {
    return true;
  }
  return node.open === true || node.close === true;
};

/**
 * Reduce an array of text nodes.
 */

exports.reduce = nodes => nodes.reduce((acc, node) => {
  if (node.type === 'text') acc.push(node.value);
  if (node.type === 'range') node.type = 'text';
  return acc;
}, []);

/**
 * Flatten an array
 */

exports.flatten = (...args) => {
  const result = [];
  const flat = arr => {
    for (let i = 0; i < arr.length; i++) {
      let ele = arr[i];
      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);
    }
    return result;
  };
  flat(args);
  return result;
};


/***/ }),

/***/ 2286:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const {
	V4MAPPED,
	ADDRCONFIG,
	ALL,
	promises: {
		Resolver: AsyncResolver
	},
	lookup: dnsLookup
} = __nccwpck_require__(40881);
const {promisify} = __nccwpck_require__(31669);
const os = __nccwpck_require__(12087);

const kCacheableLookupCreateConnection = Symbol('cacheableLookupCreateConnection');
const kCacheableLookupInstance = Symbol('cacheableLookupInstance');
const kExpires = Symbol('expires');

const supportsALL = typeof ALL === 'number';

const verifyAgent = agent => {
	if (!(agent && typeof agent.createConnection === 'function')) {
		throw new Error('Expected an Agent instance as the first argument');
	}
};

const map4to6 = entries => {
	for (const entry of entries) {
		if (entry.family === 6) {
			continue;
		}

		entry.address = `::ffff:${entry.address}`;
		entry.family = 6;
	}
};

const getIfaceInfo = () => {
	let has4 = false;
	let has6 = false;

	for (const device of Object.values(os.networkInterfaces())) {
		for (const iface of device) {
			if (iface.internal) {
				continue;
			}

			if (iface.family === 'IPv6') {
				has6 = true;
			} else {
				has4 = true;
			}

			if (has4 && has6) {
				return {has4, has6};
			}
		}
	}

	return {has4, has6};
};

const isIterable = map => {
	return Symbol.iterator in map;
};

const ttl = {ttl: true};
const all = {all: true};

class CacheableLookup {
	constructor({
		cache = new Map(),
		maxTtl = Infinity,
		fallbackDuration = 3600,
		errorTtl = 0.15,
		resolver = new AsyncResolver(),
		lookup = dnsLookup
	} = {}) {
		this.maxTtl = maxTtl;
		this.errorTtl = errorTtl;

		this._cache = cache;
		this._resolver = resolver;
		this._dnsLookup = promisify(lookup);

		if (this._resolver instanceof AsyncResolver) {
			this._resolve4 = this._resolver.resolve4.bind(this._resolver);
			this._resolve6 = this._resolver.resolve6.bind(this._resolver);
		} else {
			this._resolve4 = promisify(this._resolver.resolve4.bind(this._resolver));
			this._resolve6 = promisify(this._resolver.resolve6.bind(this._resolver));
		}

		this._iface = getIfaceInfo();

		this._pending = {};
		this._nextRemovalTime = false;
		this._hostnamesToFallback = new Set();

		if (fallbackDuration < 1) {
			this._fallback = false;
		} else {
			this._fallback = true;

			const interval = setInterval(() => {
				this._hostnamesToFallback.clear();
			}, fallbackDuration * 1000);

			/* istanbul ignore next: There is no `interval.unref()` when running inside an Electron renderer */
			if (interval.unref) {
				interval.unref();
			}
		}

		this.lookup = this.lookup.bind(this);
		this.lookupAsync = this.lookupAsync.bind(this);
	}

	set servers(servers) {
		this.clear();

		this._resolver.setServers(servers);
	}

	get servers() {
		return this._resolver.getServers();
	}

	lookup(hostname, options, callback) {
		if (typeof options === 'function') {
			callback = options;
			options = {};
		} else if (typeof options === 'number') {
			options = {
				family: options
			};
		}

		if (!callback) {
			throw new Error('Callback must be a function.');
		}

		// eslint-disable-next-line promise/prefer-await-to-then
		this.lookupAsync(hostname, options).then(result => {
			if (options.all) {
				callback(null, result);
			} else {
				callback(null, result.address, result.family, result.expires, result.ttl);
			}
		}, callback);
	}

	async lookupAsync(hostname, options = {}) {
		if (typeof options === 'number') {
			options = {
				family: options
			};
		}

		let cached = await this.query(hostname);

		if (options.family === 6) {
			const filtered = cached.filter(entry => entry.family === 6);

			if (options.hints & V4MAPPED) {
				if ((supportsALL && options.hints & ALL) || filtered.length === 0) {
					map4to6(cached);
				} else {
					cached = filtered;
				}
			} else {
				cached = filtered;
			}
		} else if (options.family === 4) {
			cached = cached.filter(entry => entry.family === 4);
		}

		if (options.hints & ADDRCONFIG) {
			const {_iface} = this;
			cached = cached.filter(entry => entry.family === 6 ? _iface.has6 : _iface.has4);
		}

		if (cached.length === 0) {
			const error = new Error(`cacheableLookup ENOTFOUND ${hostname}`);
			error.code = 'ENOTFOUND';
			error.hostname = hostname;

			throw error;
		}

		if (options.all) {
			return cached;
		}

		return cached[0];
	}

	async query(hostname) {
		let cached = await this._cache.get(hostname);

		if (!cached) {
			const pending = this._pending[hostname];

			if (pending) {
				cached = await pending;
			} else {
				const newPromise = this.queryAndCache(hostname);
				this._pending[hostname] = newPromise;

				try {
					cached = await newPromise;
				} finally {
					delete this._pending[hostname];
				}
			}
		}

		cached = cached.map(entry => {
			return {...entry};
		});

		return cached;
	}

	async _resolve(hostname) {
		const wrap = async promise => {
			try {
				return await promise;
			} catch (error) {
				if (error.code === 'ENODATA' || error.code === 'ENOTFOUND') {
					return [];
				}

				throw error;
			}
		};

		// ANY is unsafe as it doesn't trigger new queries in the underlying server.
		const [A, AAAA] = await Promise.all([
			this._resolve4(hostname, ttl),
			this._resolve6(hostname, ttl)
		].map(promise => wrap(promise)));

		let aTtl = 0;
		let aaaaTtl = 0;
		let cacheTtl = 0;

		const now = Date.now();

		for (const entry of A) {
			entry.family = 4;
			entry.expires = now + (entry.ttl * 1000);

			aTtl = Math.max(aTtl, entry.ttl);
		}

		for (const entry of AAAA) {
			entry.family = 6;
			entry.expires = now + (entry.ttl * 1000);

			aaaaTtl = Math.max(aaaaTtl, entry.ttl);
		}

		if (A.length > 0) {
			if (AAAA.length > 0) {
				cacheTtl = Math.min(aTtl, aaaaTtl);
			} else {
				cacheTtl = aTtl;
			}
		} else {
			cacheTtl = aaaaTtl;
		}

		return {
			entries: [
				...A,
				...AAAA
			],
			cacheTtl
		};
	}

	async _lookup(hostname) {
		try {
			const entries = await this._dnsLookup(hostname, {
				all: true
			});

			return {
				entries,
				cacheTtl: 0
			};
		} catch (_) {
			return {
				entries: [],
				cacheTtl: 0
			};
		}
	}

	async _set(hostname, data, cacheTtl) {
		if (this.maxTtl > 0 && cacheTtl > 0) {
			cacheTtl = Math.min(cacheTtl, this.maxTtl) * 1000;
			data[kExpires] = Date.now() + cacheTtl;

			try {
				await this._cache.set(hostname, data, cacheTtl);
			} catch (error) {
				this.lookupAsync = async () => {
					const cacheError = new Error('Cache Error. Please recreate the CacheableLookup instance.');
					cacheError.cause = error;

					throw cacheError;
				};
			}

			if (isIterable(this._cache)) {
				this._tick(cacheTtl);
			}
		}
	}

	async queryAndCache(hostname) {
		if (this._hostnamesToFallback.has(hostname)) {
			return this._dnsLookup(hostname, all);
		}

		let query = await this._resolve(hostname);

		if (query.entries.length === 0 && this._fallback) {
			query = await this._lookup(hostname);

			if (query.entries.length !== 0) {
				// Use `dns.lookup(...)` for that particular hostname
				this._hostnamesToFallback.add(hostname);
			}
		}

		const cacheTtl = query.entries.length === 0 ? this.errorTtl : query.cacheTtl;
		await this._set(hostname, query.entries, cacheTtl);

		return query.entries;
	}

	_tick(ms) {
		const nextRemovalTime = this._nextRemovalTime;

		if (!nextRemovalTime || ms < nextRemovalTime) {
			clearTimeout(this._removalTimeout);

			this._nextRemovalTime = ms;

			this._removalTimeout = setTimeout(() => {
				this._nextRemovalTime = false;

				let nextExpiry = Infinity;

				const now = Date.now();

				for (const [hostname, entries] of this._cache) {
					const expires = entries[kExpires];

					if (now >= expires) {
						this._cache.delete(hostname);
					} else if (expires < nextExpiry) {
						nextExpiry = expires;
					}
				}

				if (nextExpiry !== Infinity) {
					this._tick(nextExpiry - now);
				}
			}, ms);

			/* istanbul ignore next: There is no `timeout.unref()` when running inside an Electron renderer */
			if (this._removalTimeout.unref) {
				this._removalTimeout.unref();
			}
		}
	}

	install(agent) {
		verifyAgent(agent);

		if (kCacheableLookupCreateConnection in agent) {
			throw new Error('CacheableLookup has been already installed');
		}

		agent[kCacheableLookupCreateConnection] = agent.createConnection;
		agent[kCacheableLookupInstance] = this;

		agent.createConnection = (options, callback) => {
			if (!('lookup' in options)) {
				options.lookup = this.lookup;
			}

			return agent[kCacheableLookupCreateConnection](options, callback);
		};
	}

	uninstall(agent) {
		verifyAgent(agent);

		if (agent[kCacheableLookupCreateConnection]) {
			if (agent[kCacheableLookupInstance] !== this) {
				throw new Error('The agent is not owned by this CacheableLookup instance');
			}

			agent.createConnection = agent[kCacheableLookupCreateConnection];

			delete agent[kCacheableLookupCreateConnection];
			delete agent[kCacheableLookupInstance];
		}
	}

	updateInterfaceInfo() {
		const {_iface} = this;

		this._iface = getIfaceInfo();

		if ((_iface.has4 && !this._iface.has4) || (_iface.has6 && !this._iface.has6)) {
			this._cache.clear();
		}
	}

	clear(hostname) {
		if (hostname) {
			this._cache.delete(hostname);
			return;
		}

		this._cache.clear();
	}
}

module.exports = CacheableLookup;
module.exports.default = CacheableLookup;


/***/ }),

/***/ 78116:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = __nccwpck_require__(28614);
const urlLib = __nccwpck_require__(78835);
const normalizeUrl = __nccwpck_require__(17952);
const getStream = __nccwpck_require__(21766);
const CachePolicy = __nccwpck_require__(61002);
const Response = __nccwpck_require__(9004);
const lowercaseKeys = __nccwpck_require__(9662);
const cloneResponse = __nccwpck_require__(81312);
const Keyv = __nccwpck_require__(51531);

class CacheableRequest {
	constructor(request, cacheAdapter) {
		if (typeof request !== 'function') {
			throw new TypeError('Parameter `request` must be a function');
		}

		this.cache = new Keyv({
			uri: typeof cacheAdapter === 'string' && cacheAdapter,
			store: typeof cacheAdapter !== 'string' && cacheAdapter,
			namespace: 'cacheable-request'
		});

		return this.createCacheableRequest(request);
	}

	createCacheableRequest(request) {
		return (opts, cb) => {
			let url;
			if (typeof opts === 'string') {
				url = normalizeUrlObject(urlLib.parse(opts));
				opts = {};
			} else if (opts instanceof urlLib.URL) {
				url = normalizeUrlObject(urlLib.parse(opts.toString()));
				opts = {};
			} else {
				const [pathname, ...searchParts] = (opts.path || '').split('?');
				const search = searchParts.length > 0 ?
					`?${searchParts.join('?')}` :
					'';
				url = normalizeUrlObject({ ...opts, pathname, search });
			}

			opts = {
				headers: {},
				method: 'GET',
				cache: true,
				strictTtl: false,
				automaticFailover: false,
				...opts,
				...urlObjectToRequestOptions(url)
			};
			opts.headers = lowercaseKeys(opts.headers);

			const ee = new EventEmitter();
			const normalizedUrlString = normalizeUrl(
				urlLib.format(url),
				{
					stripWWW: false,
					removeTrailingSlash: false,
					stripAuthentication: false
				}
			);
			const key = `${opts.method}:${normalizedUrlString}`;
			let revalidate = false;
			let madeRequest = false;

			const makeRequest = opts => {
				madeRequest = true;
				let requestErrored = false;
				let requestErrorCallback;

				const requestErrorPromise = new Promise(resolve => {
					requestErrorCallback = () => {
						if (!requestErrored) {
							requestErrored = true;
							resolve();
						}
					};
				});

				const handler = response => {
					if (revalidate && !opts.forceRefresh) {
						response.status = response.statusCode;
						const revalidatedPolicy = CachePolicy.fromObject(revalidate.cachePolicy).revalidatedPolicy(opts, response);
						if (!revalidatedPolicy.modified) {
							const headers = revalidatedPolicy.policy.responseHeaders();
							response = new Response(revalidate.statusCode, headers, revalidate.body, revalidate.url);
							response.cachePolicy = revalidatedPolicy.policy;
							response.fromCache = true;
						}
					}

					if (!response.fromCache) {
						response.cachePolicy = new CachePolicy(opts, response, opts);
						response.fromCache = false;
					}

					let clonedResponse;
					if (opts.cache && response.cachePolicy.storable()) {
						clonedResponse = cloneResponse(response);

						(async () => {
							try {
								const bodyPromise = getStream.buffer(response);

								await Promise.race([
									requestErrorPromise,
									new Promise(resolve => response.once('end', resolve))
								]);

								if (requestErrored) {
									return;
								}

								const body = await bodyPromise;

								const value = {
									cachePolicy: response.cachePolicy.toObject(),
									url: response.url,
									statusCode: response.fromCache ? revalidate.statusCode : response.statusCode,
									body
								};

								let ttl = opts.strictTtl ? response.cachePolicy.timeToLive() : undefined;
								if (opts.maxTtl) {
									ttl = ttl ? Math.min(ttl, opts.maxTtl) : opts.maxTtl;
								}

								await this.cache.set(key, value, ttl);
							} catch (error) {
								ee.emit('error', new CacheableRequest.CacheError(error));
							}
						})();
					} else if (opts.cache && revalidate) {
						(async () => {
							try {
								await this.cache.delete(key);
							} catch (error) {
								ee.emit('error', new CacheableRequest.CacheError(error));
							}
						})();
					}

					ee.emit('response', clonedResponse || response);
					if (typeof cb === 'function') {
						cb(clonedResponse || response);
					}
				};

				try {
					const req = request(opts, handler);
					req.once('error', requestErrorCallback);
					req.once('abort', requestErrorCallback);
					ee.emit('request', req);
				} catch (error) {
					ee.emit('error', new CacheableRequest.RequestError(error));
				}
			};

			(async () => {
				const get = async opts => {
					await Promise.resolve();

					const cacheEntry = opts.cache ? await this.cache.get(key) : undefined;
					if (typeof cacheEntry === 'undefined') {
						return makeRequest(opts);
					}

					const policy = CachePolicy.fromObject(cacheEntry.cachePolicy);
					if (policy.satisfiesWithoutRevalidation(opts) && !opts.forceRefresh) {
						const headers = policy.responseHeaders();
						const response = new Response(cacheEntry.statusCode, headers, cacheEntry.body, cacheEntry.url);
						response.cachePolicy = policy;
						response.fromCache = true;

						ee.emit('response', response);
						if (typeof cb === 'function') {
							cb(response);
						}
					} else {
						revalidate = cacheEntry;
						opts.headers = policy.revalidationHeaders(opts);
						makeRequest(opts);
					}
				};

				const errorHandler = error => ee.emit('error', new CacheableRequest.CacheError(error));
				this.cache.once('error', errorHandler);
				ee.on('response', () => this.cache.removeListener('error', errorHandler));

				try {
					await get(opts);
				} catch (error) {
					if (opts.automaticFailover && !madeRequest) {
						makeRequest(opts);
					}

					ee.emit('error', new CacheableRequest.CacheError(error));
				}
			})();

			return ee;
		};
	}
}

function urlObjectToRequestOptions(url) {
	const options = { ...url };
	options.path = `${url.pathname || '/'}${url.search || ''}`;
	delete options.pathname;
	delete options.search;
	return options;
}

function normalizeUrlObject(url) {
	// If url was parsed by url.parse or new URL:
	// - hostname will be set
	// - host will be hostname[:port]
	// - port will be set if it was explicit in the parsed string
	// Otherwise, url was from request options:
	// - hostname or host may be set
	// - host shall not have port encoded
	return {
		protocol: url.protocol,
		auth: url.auth,
		hostname: url.hostname || url.host || 'localhost',
		port: url.port,
		pathname: url.pathname,
		search: url.search
	};
}

CacheableRequest.RequestError = class extends Error {
	constructor(error) {
		super(error.message);
		this.name = 'RequestError';
		Object.assign(this, error);
	}
};

CacheableRequest.CacheError = class extends Error {
	constructor(error) {
		super(error.message);
		this.name = 'CacheError';
		Object.assign(this, error);
	}
};

module.exports = CacheableRequest;


/***/ }),

/***/ 64858:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


if (__nccwpck_require__(10128).major >= 4) {
    module.exports = __nccwpck_require__(3467);
} else {
    module.exports = __nccwpck_require__(67513);
}


/***/ }),

/***/ 68372:
/***/ ((module) => {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ChildProcessError = function (_Error) {
    _inherits(ChildProcessError, _Error);

    function ChildProcessError(message, code, childProcess, stdout, stderr) {
        _classCallCheck(this, ChildProcessError);

        var _this = _possibleConstructorReturn(this, (ChildProcessError.__proto__ || Object.getPrototypeOf(ChildProcessError)).call(this, message));

        Error.captureStackTrace(_this, _this.constructor);
        _this.name = _this.constructor.name;
        _this.code = code;
        _this.childProcess = childProcess;
        _this.stdout = stdout;
        _this.stderr = stderr;
        return _this;
    }

    return ChildProcessError;
}(Error);

module.exports = ChildProcessError;

/***/ }),

/***/ 54158:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Promise;

if (__nccwpck_require__(10128).major >= 4) {
    Promise = global.Promise;
} else {
    // Don't use the native Promise in Node.js <4 since it doesn't support subclassing
    Promise = __nccwpck_require__(90680);
}

var ChildProcessPromise = function (_Promise) {
    _inherits(ChildProcessPromise, _Promise);

    function ChildProcessPromise(executor) {
        _classCallCheck(this, ChildProcessPromise);

        var resolve;
        var reject;

        var _this = _possibleConstructorReturn(this, (ChildProcessPromise.__proto__ || Object.getPrototypeOf(ChildProcessPromise)).call(this, function (_resolve, _reject) {
            resolve = _resolve;
            reject = _reject;

            if (executor) {
                executor(resolve, reject);
            }
        }));

        _this._cpResolve = resolve;
        _this._cpReject = reject;
        _this.childProcess = undefined;
        return _this;
    }

    _createClass(ChildProcessPromise, [{
        key: 'progress',
        value: function progress(callback) {
            var _this2 = this;

            process.nextTick(function () {
                callback(_this2.childProcess);
            });

            return this;
        }
    }, {
        key: 'then',
        value: function then(onFulfilled, onRejected) {
            var newPromise = _get(ChildProcessPromise.prototype.__proto__ || Object.getPrototypeOf(ChildProcessPromise.prototype), 'then', this).call(this, onFulfilled, onRejected);
            newPromise.childProcess = this.childProcess;
            return newPromise;
        }
    }, {
        key: 'catch',
        value: function _catch(onRejected) {
            var newPromise = _get(ChildProcessPromise.prototype.__proto__ || Object.getPrototypeOf(ChildProcessPromise.prototype), 'catch', this).call(this, onRejected);
            newPromise.childProcess = this.childProcess;
            return newPromise;
        }
    }, {
        key: 'done',
        value: function done() {
            this.catch(function (e) {
                process.nextTick(function () {
                    throw e;
                });
            });
        }
    }]);

    return ChildProcessPromise;
}(Promise);

ChildProcessPromise.prototype.fail = ChildProcessPromise.prototype.catch;

module.exports = ChildProcessPromise;

/***/ }),

/***/ 67513:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var child_process = __nccwpck_require__(63129);
var crossSpawn = __nccwpck_require__(32854);
var ChildProcessPromise = __nccwpck_require__(54158);
var ChildProcessError = __nccwpck_require__(68372);

var slice = Array.prototype.slice;

/**
 * Promise wrapper for exec, execFile
 *
 * @param {String} method
 * @param {...*} args
 * @return {Promise}
 */
function doExec(method, args) {
    var cp;
    var cpPromise = new ChildProcessPromise();
    var reject = cpPromise._cpReject;
    var resolve = cpPromise._cpResolve;

    var finalArgs = slice.call(args, 0);
    finalArgs.push(callback);

    cp = child_process[method].apply(child_process, finalArgs);

    function callback(err, stdout, stderr) {
        if (err) {
            var commandStr = args[0] + (Array.isArray(args[1]) ? ' ' + args[1].join(' ') : '');
            err.message += ' `' + commandStr + '` (exited with error code ' + err.code + ')';
            err.stdout = stdout;
            err.stderr = stderr;
            var cpError = new ChildProcessError(err.message, err.code, child_process, stdout, stderr);
            reject(cpError);
        } else {
            resolve({
                childProcess: cp,
                stdout: stdout,
                stderr: stderr
            });
        }
    }

    cpPromise.childProcess = cp;

    return cpPromise;
}

/**
 * `exec` as Promised
 *
 * @param {String} command
 * @param {Object} options
 * @return {Promise}
 */
function exec() {
    return doExec('exec', arguments);
}

/**
 * `execFile` as Promised
 *
 * @param {String} command
 * @param {Array} args
 * @param {Object} options
 * @return {Promise}
 */
function execFile() {
    return doExec('execFile', arguments);
}

/**
 * `spawn` as Promised
 *
 * @param {String} command
 * @param {Array} args
 * @param {Object} options
 * @return {Promise}
 */
function doSpawn(method, command, args, options) {
    var result = {};

    var cp;
    var cpPromise = new ChildProcessPromise();
    var reject = cpPromise._cpReject;
    var resolve = cpPromise._cpResolve;

    var successfulExitCodes = options && options.successfulExitCodes || [0];

    cp = method(command, args, options);

    // Don't return the whole Buffered result by default.
    var captureStdout = false;
    var captureStderr = false;

    var capture = options && options.capture;
    if (capture) {
        for (var i = 0, len = capture.length; i < len; i++) {
            var cur = capture[i];
            if (cur === 'stdout') {
                captureStdout = true;
            } else if (cur === 'stderr') {
                captureStderr = true;
            }
        }
    }

    result.childProcess = cp;

    if (captureStdout) {
        result.stdout = '';

        cp.stdout.on('data', function (data) {
            result.stdout += data;
        });
    }

    if (captureStderr) {
        result.stderr = '';

        cp.stderr.on('data', function (data) {
            result.stderr += data;
        });
    }

    cp.on('error', reject);

    cp.on('close', function (code) {
        if (successfulExitCodes.indexOf(code) === -1) {
            var commandStr = command + (args.length ? ' ' + args.join(' ') : '');
            var message = '`' + commandStr + '` failed with code ' + code;
            var err = new ChildProcessError(message, code, cp);

            if (captureStderr) {
                err.stderr = result.stderr.toString();
            }

            if (captureStdout) {
                err.stdout = result.stdout.toString();
            }

            reject(err);
        } else {
            result.code = code;
            resolve(result);
        }
    });

    cpPromise.childProcess = cp;

    return cpPromise;
}

function spawn(command, args, options) {
    return doSpawn(crossSpawn, command, args, options);
}

function fork(modulePath, args, options) {
    return doSpawn(child_process.fork, modulePath, args, options);
}

exports.exec = exec;
exports.execFile = execFile;
exports.spawn = spawn;
exports.fork = fork;

/***/ }),

/***/ 24548:
/***/ ((module) => {

"use strict";



class ChildProcessError extends Error {
    constructor(message, code, childProcess, stdout, stderr) {
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.name = this.constructor.name;
        this.code = code;
        this.childProcess = childProcess;
        this.stdout = stdout;
        this.stderr = stderr;
    }
}



module.exports = ChildProcessError;

/***/ }),

/***/ 46855:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var Promise;

if (__nccwpck_require__(10128).major >= 4) {
    Promise = global.Promise;
} else {
    // Don't use the native Promise in Node.js <4 since it doesn't support subclassing
    Promise = __nccwpck_require__(90680);
}

class ChildProcessPromise extends Promise {
    constructor(executor) {
        var resolve;
        var reject;

        super((_resolve, _reject) => {
            resolve = _resolve;
            reject = _reject;

            if (executor) {
                executor(resolve, reject);
            }
        });

        this._cpResolve = resolve;
        this._cpReject = reject;
        this.childProcess = undefined;
    }

    progress(callback) {
        process.nextTick(() => {
            callback(this.childProcess);
        });

        return this;
    }

    then(onFulfilled, onRejected) {
        var newPromise = super.then(onFulfilled, onRejected);
        newPromise.childProcess = this.childProcess;
        return newPromise;
    }

    catch(onRejected) {
        var newPromise = super.catch(onRejected);
        newPromise.childProcess = this.childProcess;
        return newPromise;
    }

    done() {
        this.catch((e) => {
            process.nextTick(() => {
                throw e;
            });
        });
    }
}

ChildProcessPromise.prototype.fail = ChildProcessPromise.prototype.catch;

module.exports = ChildProcessPromise;


/***/ }),

/***/ 3467:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

var child_process = __nccwpck_require__(63129);
var crossSpawn = __nccwpck_require__(32854);
var ChildProcessPromise = __nccwpck_require__(46855);
var ChildProcessError = __nccwpck_require__(24548);

var slice = Array.prototype.slice;

/**
 * Promise wrapper for exec, execFile
 *
 * @param {String} method
 * @param {...*} args
 * @return {Promise}
 */
function doExec(method, args) {
    var cp;
    var cpPromise = new ChildProcessPromise();
    var reject = cpPromise._cpReject;
    var resolve = cpPromise._cpResolve;

    var finalArgs = slice.call(args, 0);
    finalArgs.push(callback);

    cp = child_process[method].apply(child_process, finalArgs);

    function callback(err, stdout, stderr) {
        if (err) {
            var commandStr = args[0] + (Array.isArray(args[1]) ? (' ' + args[1].join(' ')) : '');
            err.message += ' `' + commandStr + '` (exited with error code ' + err.code + ')';
            err.stdout = stdout;
            err.stderr = stderr;
            var cpError = new ChildProcessError(err.message, err.code, child_process, stdout, stderr);
            reject(cpError);
        } else {
            resolve({
                childProcess: cp,
                stdout: stdout,
                stderr: stderr
            });
        }
    }

    cpPromise.childProcess = cp;

    return cpPromise;
}

/**
 * `exec` as Promised
 *
 * @param {String} command
 * @param {Object} options
 * @return {Promise}
 */
function exec() {
    return doExec('exec', arguments);
}

/**
 * `execFile` as Promised
 *
 * @param {String} command
 * @param {Array} args
 * @param {Object} options
 * @return {Promise}
 */
function execFile() {
    return doExec('execFile', arguments);
}

/**
 * `spawn` as Promised
 *
 * @param {String} command
 * @param {Array} args
 * @param {Object} options
 * @return {Promise}
 */
function doSpawn(method, command, args, options) {
    var result = {};

    var cp;
    var cpPromise = new ChildProcessPromise();
    var reject = cpPromise._cpReject;
    var resolve = cpPromise._cpResolve;

    var successfulExitCodes = (options && options.successfulExitCodes) || [0];

    cp = method(command, args, options);

    // Don't return the whole Buffered result by default.
    var captureStdout = false;
    var captureStderr = false;

    var capture = options && options.capture;
    if (capture) {
        for (var i = 0, len = capture.length; i < len; i++) {
            var cur = capture[i];
            if (cur === 'stdout') {
                captureStdout = true;
            } else if (cur === 'stderr') {
                captureStderr = true;
            }
        }
    }

    result.childProcess = cp;

    if (captureStdout) {
        result.stdout = '';

        cp.stdout.on('data', function(data) {
            result.stdout += data;
        });
    }

    if (captureStderr) {
        result.stderr = '';

        cp.stderr.on('data', function(data) {
            result.stderr += data;
        });
    }

    cp.on('error', reject);

    cp.on('close', function(code) {
        if (successfulExitCodes.indexOf(code) === -1) {
            var commandStr = command + (args.length ? (' ' + args.join(' ')) : '');
            var message = '`' + commandStr + '` failed with code ' + code;
            var err = new ChildProcessError(message, code, cp);

            if (captureStderr) {
                err.stderr = result.stderr.toString();
            }

            if (captureStdout) {
                err.stdout = result.stdout.toString();
            }

            reject(err);
        } else {
            result.code = code;
            resolve(result);
        }
    });

    cpPromise.childProcess = cp;

    return cpPromise;
}

function spawn(command, args, options) {
    return doSpawn(crossSpawn, command, args, options);
}

function fork(modulePath, args, options) {
    return doSpawn(child_process.fork, modulePath, args, options);
}

exports.exec = exec;
exports.execFile = execFile;
exports.spawn = spawn;
exports.fork = fork;

/***/ }),

/***/ 32854:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var cp = __nccwpck_require__(63129);
var parse = __nccwpck_require__(73945);
var enoent = __nccwpck_require__(87584);

var cpSpawnSync = cp.spawnSync;

function spawn(command, args, options) {
    var parsed;
    var spawned;

    // Parse the arguments
    parsed = parse(command, args, options);

    // Spawn the child process
    spawned = cp.spawn(parsed.command, parsed.args, parsed.options);

    // Hook into child process "exit" event to emit an error if the command
    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
    enoent.hookChildProcess(spawned, parsed);

    return spawned;
}

function spawnSync(command, args, options) {
    var parsed;
    var result;

    if (!cpSpawnSync) {
        try {
            cpSpawnSync = __nccwpck_require__(5500);  // eslint-disable-line global-require
        } catch (ex) {
            throw new Error(
                'In order to use spawnSync on node 0.10 or older, you must ' +
                'install spawn-sync:\n\n' +
                '  npm install spawn-sync --save'
            );
        }
    }

    // Parse the arguments
    parsed = parse(command, args, options);

    // Spawn the child process
    result = cpSpawnSync(parsed.command, parsed.args, parsed.options);

    // Analyze if the command does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);

    return result;
}

module.exports = spawn;
module.exports.spawn = spawn;
module.exports.sync = spawnSync;

module.exports._parse = parse;
module.exports._enoent = enoent;


/***/ }),

/***/ 87584:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var isWin = process.platform === 'win32';
var resolveCommand = __nccwpck_require__(89383);

var isNode10 = process.version.indexOf('v0.10.') === 0;

function notFoundError(command, syscall) {
    var err;

    err = new Error(syscall + ' ' + command + ' ENOENT');
    err.code = err.errno = 'ENOENT';
    err.syscall = syscall + ' ' + command;

    return err;
}

function hookChildProcess(cp, parsed) {
    var originalEmit;

    if (!isWin) {
        return;
    }

    originalEmit = cp.emit;
    cp.emit = function (name, arg1) {
        var err;

        // If emitting "exit" event and exit code is 1, we need to check if
        // the command exists and emit an "error" instead
        // See: https://github.com/IndigoUnited/node-cross-spawn/issues/16
        if (name === 'exit') {
            err = verifyENOENT(arg1, parsed, 'spawn');

            if (err) {
                return originalEmit.call(cp, 'error', err);
            }
        }

        return originalEmit.apply(cp, arguments);
    };
}

function verifyENOENT(status, parsed) {
    if (isWin && status === 1 && !parsed.file) {
        return notFoundError(parsed.original, 'spawn');
    }

    return null;
}

function verifyENOENTSync(status, parsed) {
    if (isWin && status === 1 && !parsed.file) {
        return notFoundError(parsed.original, 'spawnSync');
    }

    // If we are in node 10, then we are using spawn-sync; if it exited
    // with -1 it probably means that the command does not exist
    if (isNode10 && status === -1) {
        parsed.file = isWin ? parsed.file : resolveCommand(parsed.original);

        if (!parsed.file) {
            return notFoundError(parsed.original, 'spawnSync');
        }
    }

    return null;
}

module.exports.hookChildProcess = hookChildProcess;
module.exports.verifyENOENT = verifyENOENT;
module.exports.verifyENOENTSync = verifyENOENTSync;
module.exports.notFoundError = notFoundError;


/***/ }),

/***/ 27586:
/***/ ((module) => {

"use strict";


module.exports = (function () {
    if (process.platform !== 'win32') {
        return false;
    }
    var nodeVer = process.version.substr(1).split('.').map(function (num) {
        return parseInt(num, 10);
    });
    return (nodeVer[0] === 0 && nodeVer[1] < 12);
})();


/***/ }),

/***/ 73945:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var fs = __nccwpck_require__(35747);
var LRU = __nccwpck_require__(7129);
var resolveCommand = __nccwpck_require__(89383);
var hasBrokenSpawn = __nccwpck_require__(27586);

var isWin = process.platform === 'win32';
var shebangCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec

function readShebang(command) {
    var buffer;
    var fd;
    var match;
    var shebang;

    // Check if it is in the cache first
    if (shebangCache.has(command)) {
        return shebangCache.get(command);
    }

    // Read the first 150 bytes from the file
    buffer = new Buffer(150);

    try {
        fd = fs.openSync(command, 'r');
        fs.readSync(fd, buffer, 0, 150, 0);
        fs.closeSync(fd);
    } catch (e) { /* empty */ }

    // Check if it is a shebang
    match = buffer.toString().trim().match(/#!(.+)/i);

    if (match) {
        shebang = match[1].replace(/\/usr\/bin\/env\s+/i, '');   // Remove /usr/bin/env
    }

    // Store the shebang in the cache
    shebangCache.set(command, shebang);

    return shebang;
}

function escapeArg(arg, quote) {
    // Convert to string
    arg = '' + arg;

    // If we are not going to quote the argument,
    // escape shell metacharacters, including double and single quotes:
    if (!quote) {
        arg = arg.replace(/([\(\)%!\^<>&|;,"'\s])/g, '^$1');
    } else {
        // Sequence of backslashes followed by a double quote:
        // double up all the backslashes and escape the double quote
        arg = arg.replace(/(\\*)"/g, '$1$1\\"');

        // Sequence of backslashes followed by the end of the string
        // (which will become a double quote later):
        // double up all the backslashes
        arg = arg.replace(/(\\*)$/, '$1$1');

        // All other backslashes occur literally

        // Quote the whole thing:
        arg = '"' + arg + '"';
    }

    return arg;
}

function escapeCommand(command) {
    // Do not escape if this command is not dangerous..
    // We do this so that commands like "echo" or "ifconfig" work
    // Quoting them, will make them unaccessible
    return /^[a-z0-9_-]+$/i.test(command) ? command : escapeArg(command, true);
}

function requiresShell(command) {
    return !/\.(?:com|exe)$/i.test(command);
}

function parse(command, args, options) {
    var shebang;
    var applyQuotes;
    var file;
    var original;
    var shell;

    // Normalize arguments, similar to nodejs
    if (args && !Array.isArray(args)) {
        options = args;
        args = null;
    }

    args = args ? args.slice(0) : [];  // Clone array to avoid changing the original
    options = options || {};
    original = command;

    if (isWin) {
        // Detect & add support for shebangs
        file = resolveCommand(command);
        file = file || resolveCommand(command, true);
        shebang = file && readShebang(file);
        shell = options.shell || hasBrokenSpawn;

        if (shebang) {
            args.unshift(file);
            command = shebang;
            shell = shell || requiresShell(resolveCommand(shebang) || resolveCommand(shebang, true));
        } else {
            shell = shell || requiresShell(file);
        }

        if (shell) {
            // Escape command & arguments
            applyQuotes = (command !== 'echo');  // Do not quote arguments for the special "echo" command
            command = escapeCommand(command);
            args = args.map(function (arg) {
                return escapeArg(arg, applyQuotes);
            });

            // Use cmd.exe
            args = ['/s', '/c', '"' + command + (args.length ? ' ' + args.join(' ') : '') + '"'];
            command = process.env.comspec || 'cmd.exe';

            // Tell node's spawn that the arguments are already escaped
            options.windowsVerbatimArguments = true;
        }
    }

    return {
        command: command,
        args: args,
        options: options,
        file: file,
        original: original,
    };
}

module.exports = parse;


/***/ }),

/***/ 89383:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var path = __nccwpck_require__(85622);
var which = __nccwpck_require__(57492);
var LRU = __nccwpck_require__(7129);

var commandCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec

function resolveCommand(command, noExtension) {
    var resolved;

    noExtension = !!noExtension;
    resolved = commandCache.get(command + '!' + noExtension);

    // Check if its resolved in the cache
    if (commandCache.has(command)) {
        return commandCache.get(command);
    }

    try {
        resolved = !noExtension ?
            which.sync(command) :
            which.sync(command, { pathExt: path.delimiter + (process.env.PATHEXT || '') });
    } catch (e) { /* empty */ }

    commandCache.set(command + '!' + noExtension, resolved);

    return resolved;
}

module.exports = resolveCommand;


/***/ }),

/***/ 57492:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = which
which.sync = whichSync

var isWindows = process.platform === 'win32' ||
    process.env.OSTYPE === 'cygwin' ||
    process.env.OSTYPE === 'msys'

var path = __nccwpck_require__(85622)
var COLON = isWindows ? ';' : ':'
var isexe = __nccwpck_require__(97126)

function getNotFoundError (cmd) {
  var er = new Error('not found: ' + cmd)
  er.code = 'ENOENT'

  return er
}

function getPathInfo (cmd, opt) {
  var colon = opt.colon || COLON
  var pathEnv = opt.path || process.env.PATH || ''
  var pathExt = ['']

  pathEnv = pathEnv.split(colon)

  var pathExtExe = ''
  if (isWindows) {
    pathEnv.unshift(process.cwd())
    pathExtExe = (opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM')
    pathExt = pathExtExe.split(colon)


    // Always test the cmd itself first.  isexe will check to make sure
    // it's found in the pathExt set.
    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')
      pathExt.unshift('')
  }

  // If it has a slash, then we don't bother searching the pathenv.
  // just check the file itself, and that's it.
  if (cmd.match(/\//) || isWindows && cmd.match(/\\/))
    pathEnv = ['']

  return {
    env: pathEnv,
    ext: pathExt,
    extExe: pathExtExe
  }
}

function which (cmd, opt, cb) {
  if (typeof opt === 'function') {
    cb = opt
    opt = {}
  }

  var info = getPathInfo(cmd, opt)
  var pathEnv = info.env
  var pathExt = info.ext
  var pathExtExe = info.extExe
  var found = []

  ;(function F (i, l) {
    if (i === l) {
      if (opt.all && found.length)
        return cb(null, found)
      else
        return cb(getNotFoundError(cmd))
    }

    var pathPart = pathEnv[i]
    if (pathPart.charAt(0) === '"' && pathPart.slice(-1) === '"')
      pathPart = pathPart.slice(1, -1)

    var p = path.join(pathPart, cmd)
    if (!pathPart && (/^\.[\\\/]/).test(cmd)) {
      p = cmd.slice(0, 2) + p
    }
    ;(function E (ii, ll) {
      if (ii === ll) return F(i + 1, l)
      var ext = pathExt[ii]
      isexe(p + ext, { pathExt: pathExtExe }, function (er, is) {
        if (!er && is) {
          if (opt.all)
            found.push(p + ext)
          else
            return cb(null, p + ext)
        }
        return E(ii + 1, ll)
      })
    })(0, pathExt.length)
  })(0, pathEnv.length)
}

function whichSync (cmd, opt) {
  opt = opt || {}

  var info = getPathInfo(cmd, opt)
  var pathEnv = info.env
  var pathExt = info.ext
  var pathExtExe = info.extExe
  var found = []

  for (var i = 0, l = pathEnv.length; i < l; i ++) {
    var pathPart = pathEnv[i]
    if (pathPart.charAt(0) === '"' && pathPart.slice(-1) === '"')
      pathPart = pathPart.slice(1, -1)

    var p = path.join(pathPart, cmd)
    if (!pathPart && /^\.[\\\/]/.test(cmd)) {
      p = cmd.slice(0, 2) + p
    }
    for (var j = 0, ll = pathExt.length; j < ll; j ++) {
      var cur = p + pathExt[j]
      var is
      try {
        is = isexe.sync(cur, { pathExt: pathExtExe })
        if (is) {
          if (opt.all)
            found.push(cur)
          else
            return cur
        }
      } catch (ex) {}
    }
  }

  if (opt.all && found.length)
    return found

  if (opt.nothrow)
    return null

  throw getNotFoundError(cmd)
}


/***/ }),

/***/ 81312:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const PassThrough = __nccwpck_require__(92413).PassThrough;
const mimicResponse = __nccwpck_require__(42610);

const cloneResponse = response => {
	if (!(response && response.pipe)) {
		throw new TypeError('Parameter `response` must be a response stream.');
	}

	const clone = new PassThrough();
	mimicResponse(response, clone);

	return response.pipe(clone);
};

module.exports = cloneResponse;


/***/ }),

/***/ 97391:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/* MIT license */
var cssKeywords = __nccwpck_require__(78510);

// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

var reverseKeywords = {};
for (var key in cssKeywords) {
	if (cssKeywords.hasOwnProperty(key)) {
		reverseKeywords[cssKeywords[key]] = key;
	}
}

var convert = module.exports = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

// hide .channels and .labels properties
for (var model in convert) {
	if (convert.hasOwnProperty(model)) {
		if (!('channels' in convert[model])) {
			throw new Error('missing channels property: ' + model);
		}

		if (!('labels' in convert[model])) {
			throw new Error('missing channel labels property: ' + model);
		}

		if (convert[model].labels.length !== convert[model].channels) {
			throw new Error('channel and label counts mismatch: ' + model);
		}

		var channels = convert[model].channels;
		var labels = convert[model].labels;
		delete convert[model].channels;
		delete convert[model].labels;
		Object.defineProperty(convert[model], 'channels', {value: channels});
		Object.defineProperty(convert[model], 'labels', {value: labels});
	}
}

convert.rgb.hsl = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var min = Math.min(r, g, b);
	var max = Math.max(r, g, b);
	var delta = max - min;
	var h;
	var s;
	var l;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
	var rdif;
	var gdif;
	var bdif;
	var h;
	var s;

	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var v = Math.max(r, g, b);
	var diff = v - Math.min(r, g, b);
	var diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}
		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert.rgb.hwb = function (rgb) {
	var r = rgb[0];
	var g = rgb[1];
	var b = rgb[2];
	var h = convert.rgb.hsl(rgb)[0];
	var w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var c;
	var m;
	var y;
	var k;

	k = Math.min(1 - r, 1 - g, 1 - b);
	c = (1 - r - k) / (1 - k) || 0;
	m = (1 - g - k) / (1 - k) || 0;
	y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */
function comparativeDistance(x, y) {
	return (
		Math.pow(x[0] - y[0], 2) +
		Math.pow(x[1] - y[1], 2) +
		Math.pow(x[2] - y[2], 2)
	);
}

convert.rgb.keyword = function (rgb) {
	var reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	var currentClosestDistance = Infinity;
	var currentClosestKeyword;

	for (var keyword in cssKeywords) {
		if (cssKeywords.hasOwnProperty(keyword)) {
			var value = cssKeywords[keyword];

			// Compute comparative distance
			var distance = comparativeDistance(rgb, value);

			// Check if its less, if so set as closest
			if (distance < currentClosestDistance) {
				currentClosestDistance = distance;
				currentClosestKeyword = keyword;
			}
		}
	}

	return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
	return cssKeywords[keyword];
};

convert.rgb.xyz = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;

	// assume sRGB
	r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
	g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
	b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

	var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
	var xyz = convert.rgb.xyz(rgb);
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
	var h = hsl[0] / 360;
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var t1;
	var t2;
	var t3;
	var rgb;
	var val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	t1 = 2 * l - t2;

	rgb = [0, 0, 0];
	for (var i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}
		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert.hsl.hsv = function (hsl) {
	var h = hsl[0];
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var smin = s;
	var lmin = Math.max(l, 0.01);
	var sv;
	var v;

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	v = (l + s) / 2;
	sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
	var h = hsv[0] / 60;
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var hi = Math.floor(h) % 6;

	var f = h - Math.floor(h);
	var p = 255 * v * (1 - s);
	var q = 255 * v * (1 - (s * f));
	var t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert.hsv.hsl = function (hsv) {
	var h = hsv[0];
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var vmin = Math.max(v, 0.01);
	var lmin;
	var sl;
	var l;

	l = (2 - s) * v;
	lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function (hwb) {
	var h = hwb[0] / 360;
	var wh = hwb[1] / 100;
	var bl = hwb[2] / 100;
	var ratio = wh + bl;
	var i;
	var v;
	var f;
	var n;

	// wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	i = Math.floor(6 * h);
	v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	n = wh + f * (v - wh); // linear interpolation

	var r;
	var g;
	var b;
	switch (i) {
		default:
		case 6:
		case 0: r = v; g = n; b = wh; break;
		case 1: r = n; g = v; b = wh; break;
		case 2: r = wh; g = v; b = n; break;
		case 3: r = wh; g = n; b = v; break;
		case 4: r = n; g = wh; b = v; break;
		case 5: r = v; g = wh; b = n; break;
	}

	return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
	var c = cmyk[0] / 100;
	var m = cmyk[1] / 100;
	var y = cmyk[2] / 100;
	var k = cmyk[3] / 100;
	var r;
	var g;
	var b;

	r = 1 - Math.min(1, c * (1 - k) + k);
	g = 1 - Math.min(1, m * (1 - k) + k);
	b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
	var x = xyz[0] / 100;
	var y = xyz[1] / 100;
	var z = xyz[2] / 100;
	var r;
	var g;
	var b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// assume sRGB
	r = r > 0.0031308
		? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.lab.xyz = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var x;
	var y;
	var z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	var y2 = Math.pow(y, 3);
	var x2 = Math.pow(x, 3);
	var z2 = Math.pow(z, 3);
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert.lab.lch = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var hr;
	var h;
	var c;

	hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert.lch.lab = function (lch) {
	var l = lch[0];
	var c = lch[1];
	var h = lch[2];
	var a;
	var b;
	var hr;

	hr = h / 360 * 2 * Math.PI;
	a = c * Math.cos(hr);
	b = c * Math.sin(hr);

	return [l, a, b];
};

convert.rgb.ansi16 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];
	var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	var ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert.hsv.ansi16 = function (args) {
	// optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];

	// we use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	var ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert.ansi16.rgb = function (args) {
	var color = args % 10;

	// handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	var mult = (~~(args > 50) + 1) * 0.5;
	var r = ((color & 1) * mult) * 255;
	var g = (((color >> 1) & 1) * mult) * 255;
	var b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert.ansi256.rgb = function (args) {
	// handle greyscale
	if (args >= 232) {
		var c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	var rem;
	var r = Math.floor(args / 36) / 5 * 255;
	var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	var b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert.rgb.hex = function (args) {
	var integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
	var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	var colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(function (char) {
			return char + char;
		}).join('');
	}

	var integer = parseInt(colorString, 16);
	var r = (integer >> 16) & 0xFF;
	var g = (integer >> 8) & 0xFF;
	var b = integer & 0xFF;

	return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var max = Math.max(Math.max(r, g), b);
	var min = Math.min(Math.min(r, g), b);
	var chroma = (max - min);
	var grayscale;
	var hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma + 4;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var c = 1;
	var f = 0;

	if (l < 0.5) {
		c = 2.0 * s * l;
	} else {
		c = 2.0 * s * (1.0 - l);
	}

	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;

	var c = s * v;
	var f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
	var h = hcg[0] / 360;
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	var pure = [0, 0, 0];
	var hi = (h % 1) * 6;
	var v = hi % 1;
	var w = 1 - v;
	var mg = 0;

	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert.hcg.hsv = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var v = c + g * (1.0 - c);
	var f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var l = g * (1.0 - c) + 0.5 * c;
	var s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;
	var v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
	var w = hwb[1] / 100;
	var b = hwb[2] / 100;
	var v = 1 - b;
	var c = v - w;
	var g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = convert.gray.hsv = function (args) {
	return [0, 0, args[0]];
};

convert.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
	var val = Math.round(gray[0] / 100 * 255) & 0xFF;
	var integer = (val << 16) + (val << 8) + val;

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
	var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};


/***/ }),

/***/ 86931:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var conversions = __nccwpck_require__(97391);
var route = __nccwpck_require__(30880);

var convert = {};

var models = Object.keys(conversions);

function wrapRaw(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		return fn(args);
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		var result = fn(args);

		// we're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (var len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(function (fromModel) {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	var routes = route(fromModel);
	var routeModels = Object.keys(routes);

	routeModels.forEach(function (toModel) {
		var fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

module.exports = convert;


/***/ }),

/***/ 30880:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var conversions = __nccwpck_require__(97391);

/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	var graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions);

	for (var len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	var graph = buildGraph();
	var queue = [fromModel]; // unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		var current = queue.pop();
		var adjacents = Object.keys(conversions[current]);

		for (var len = adjacents.length, i = 0; i < len; i++) {
			var adjacent = adjacents[i];
			var node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	var path = [graph[toModel].parent, toModel];
	var fn = conversions[graph[toModel].parent][toModel];

	var cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

module.exports = function (fromModel) {
	var graph = deriveBFS(fromModel);
	var conversion = {};

	var models = Object.keys(graph);
	for (var len = models.length, i = 0; i < len; i++) {
		var toModel = models[i];
		var node = graph[toModel];

		if (node.parent === null) {
			// no possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};



/***/ }),

/***/ 78510:
/***/ ((module) => {

"use strict";


module.exports = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};


/***/ }),

/***/ 79930:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var path = __nccwpck_require__(85622);

module.exports = function (basedir, relfiles) {
    if (relfiles) {
        var files = relfiles.map(function (r) {
            return path.resolve(basedir, r);
        });
    }
    else {
        var files = basedir;
    }
    
    var res = files.slice(1).reduce(function (ps, file) {
        if (!file.match(/^([A-Za-z]:)?\/|\\/)) {
            throw new Error('relative path without a basedir');
        }
        
        var xs = file.split(/\/+|\\+/);
        for (
            var i = 0;
            ps[i] === xs[i] && i < Math.min(ps.length, xs.length);
            i++
        );
        return ps.slice(0, i);
    }, files[0].split(/\/+|\\+/));
    
    // Windows correctly handles paths with forward-slashes
    return res.length > 1 ? res.join('/') : '/'
};


/***/ }),

/***/ 86891:
/***/ ((module) => {

module.exports = function (xs, fn) {
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        var x = fn(xs[i], i);
        if (isArray(x)) res.push.apply(res, x);
        else res.push(x);
    }
    return res;
};

var isArray = Array.isArray || function (xs) {
    return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),

/***/ 28222:
/***/ ((module, exports, __nccwpck_require__) => {

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __nccwpck_require__(46243)(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};


/***/ }),

/***/ 46243:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __nccwpck_require__(80900);
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),

/***/ 38237:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = __nccwpck_require__(28222);
} else {
	module.exports = __nccwpck_require__(35332);
}


/***/ }),

/***/ 35332:
/***/ ((module, exports, __nccwpck_require__) => {

/**
 * Module dependencies.
 */

const tty = __nccwpck_require__(33867);
const util = __nccwpck_require__(31669);

/**
 * This is the Node.js implementation of `debug()`.
 */

exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(
	() => {},
	'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
);

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
	// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
	// eslint-disable-next-line import/no-extraneous-dependencies
	const supportsColor = __nccwpck_require__(59318);

	if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
		exports.colors = [
			20,
			21,
			26,
			27,
			32,
			33,
			38,
			39,
			40,
			41,
			42,
			43,
			44,
			45,
			56,
			57,
			62,
			63,
			68,
			69,
			74,
			75,
			76,
			77,
			78,
			79,
			80,
			81,
			92,
			93,
			98,
			99,
			112,
			113,
			128,
			129,
			134,
			135,
			148,
			149,
			160,
			161,
			162,
			163,
			164,
			165,
			166,
			167,
			168,
			169,
			170,
			171,
			172,
			173,
			178,
			179,
			184,
			185,
			196,
			197,
			198,
			199,
			200,
			201,
			202,
			203,
			204,
			205,
			206,
			207,
			208,
			209,
			214,
			215,
			220,
			221
		];
	}
} catch (error) {
	// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(key => {
	return /^debug_/i.test(key);
}).reduce((obj, key) => {
	// Camel-case
	const prop = key
		.substring(6)
		.toLowerCase()
		.replace(/_([a-z])/g, (_, k) => {
			return k.toUpperCase();
		});

	// Coerce string value into JS value
	let val = process.env[key];
	if (/^(yes|on|true|enabled)$/i.test(val)) {
		val = true;
	} else if (/^(no|off|false|disabled)$/i.test(val)) {
		val = false;
	} else if (val === 'null') {
		val = null;
	} else {
		val = Number(val);
	}

	obj[prop] = val;
	return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
	return 'colors' in exports.inspectOpts ?
		Boolean(exports.inspectOpts.colors) :
		tty.isatty(process.stderr.fd);
}

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	const {namespace: name, useColors} = this;

	if (useColors) {
		const c = this.color;
		const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
		const prefix = `  ${colorCode};1m${name} \u001B[0m`;

		args[0] = prefix + args[0].split('\n').join('\n' + prefix);
		args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\u001B[0m');
	} else {
		args[0] = getDate() + name + ' ' + args[0];
	}
}

function getDate() {
	if (exports.inspectOpts.hideDate) {
		return '';
	}
	return new Date().toISOString() + ' ';
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log(...args) {
	return process.stderr.write(util.format(...args) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	if (namespaces) {
		process.env.DEBUG = namespaces;
	} else {
		// If you set a process.env field to null or undefined, it gets cast to the
		// string 'null' or 'undefined'. Just delete instead.
		delete process.env.DEBUG;
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
	return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init(debug) {
	debug.inspectOpts = {};

	const keys = Object.keys(exports.inspectOpts);
	for (let i = 0; i < keys.length; i++) {
		debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
	}
}

module.exports = __nccwpck_require__(46243)(exports);

const {formatters} = module.exports;

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

formatters.o = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts)
		.split('\n')
		.map(str => str.trim())
		.join(' ');
};

/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */

formatters.O = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts);
};


/***/ }),

/***/ 82391:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const {Transform, PassThrough} = __nccwpck_require__(92413);
const zlib = __nccwpck_require__(78761);
const mimicResponse = __nccwpck_require__(23877);

module.exports = response => {
	const contentEncoding = (response.headers['content-encoding'] || '').toLowerCase();

	if (!['gzip', 'deflate', 'br'].includes(contentEncoding)) {
		return response;
	}

	// TODO: Remove this when targeting Node.js 12.
	const isBrotli = contentEncoding === 'br';
	if (isBrotli && typeof zlib.createBrotliDecompress !== 'function') {
		response.destroy(new Error('Brotli is not supported on Node.js < 12'));
		return response;
	}

	let isEmpty = true;

	const checker = new Transform({
		transform(data, _encoding, callback) {
			isEmpty = false;

			callback(null, data);
		},

		flush(callback) {
			callback();
		}
	});

	const finalStream = new PassThrough({
		autoDestroy: false,
		destroy(error, callback) {
			response.destroy();

			callback(error);
		}
	});

	const decompressStream = isBrotli ? zlib.createBrotliDecompress() : zlib.createUnzip();

	decompressStream.once('error', error => {
		if (isEmpty && !response.readable) {
			finalStream.end();
			return;
		}

		finalStream.destroy(error);
	});

	mimicResponse(response, finalStream);
	response.pipe(checker).pipe(decompressStream).pipe(finalStream);

	return finalStream;
};


/***/ }),

/***/ 23877:
/***/ ((module) => {

"use strict";


// We define these manually to ensure they're always copied
// even if they would move up the prototype chain
// https://nodejs.org/api/http.html#http_class_http_incomingmessage
const knownProperties = [
	'aborted',
	'complete',
	'headers',
	'httpVersion',
	'httpVersionMinor',
	'httpVersionMajor',
	'method',
	'rawHeaders',
	'rawTrailers',
	'setTimeout',
	'socket',
	'statusCode',
	'statusMessage',
	'trailers',
	'url'
];

module.exports = (fromStream, toStream) => {
	if (toStream._readableState.autoDestroy) {
		throw new Error('The second stream must have the `autoDestroy` option set to `false`');
	}

	const fromProperties = new Set(Object.keys(fromStream).concat(knownProperties));

	const properties = {};

	for (const property of fromProperties) {
		// Don't overwrite existing properties.
		if (property in toStream) {
			continue;
		}

		properties[property] = {
			get() {
				const value = fromStream[property];
				const isFunction = typeof value === 'function';

				return isFunction ? value.bind(fromStream) : value;
			},
			set(value) {
				fromStream[property] = value;
			},
			enumerable: true,
			configurable: false
		};
	}

	Object.defineProperties(toStream, properties);

	fromStream.once('aborted', () => {
		toStream.destroy();

		toStream.emit('aborted');
	});

	fromStream.once('close', () => {
		if (fromStream.complete) {
			if (toStream.readable) {
				toStream.once('end', () => {
					toStream.emit('close');
				});
			} else {
				toStream.emit('close');
			}
		} else {
			toStream.emit('close');
		}
	});

	return toStream;
};


/***/ }),

/***/ 96214:
/***/ ((module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function isTLSSocket(socket) {
    return socket.encrypted;
}
const deferToConnect = (socket, fn) => {
    let listeners;
    if (typeof fn === 'function') {
        const connect = fn;
        listeners = { connect };
    }
    else {
        listeners = fn;
    }
    const hasConnectListener = typeof listeners.connect === 'function';
    const hasSecureConnectListener = typeof listeners.secureConnect === 'function';
    const hasCloseListener = typeof listeners.close === 'function';
    const onConnect = () => {
        if (hasConnectListener) {
            listeners.connect();
        }
        if (isTLSSocket(socket) && hasSecureConnectListener) {
            if (socket.authorized) {
                listeners.secureConnect();
            }
            else if (!socket.authorizationError) {
                socket.once('secureConnect', listeners.secureConnect);
            }
        }
        if (hasCloseListener) {
            socket.once('close', listeners.close);
        }
    };
    if (socket.writable && !socket.connecting) {
        onConnect();
    }
    else if (socket.connecting) {
        socket.once('connect', onConnect);
    }
    else if (socket.destroyed && hasCloseListener) {
        listeners.close(socket._hadError);
    }
};
exports.default = deferToConnect;
// For CommonJS default export support
module.exports = deferToConnect;
module.exports.default = deferToConnect;


/***/ }),

/***/ 81205:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var once = __nccwpck_require__(1223);

var noop = function() {};

var isRequest = function(stream) {
	return stream.setHeader && typeof stream.abort === 'function';
};

var isChildProcess = function(stream) {
	return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3
};

var eos = function(stream, opts, callback) {
	if (typeof opts === 'function') return eos(stream, null, opts);
	if (!opts) opts = {};

	callback = once(callback || noop);

	var ws = stream._writableState;
	var rs = stream._readableState;
	var readable = opts.readable || (opts.readable !== false && stream.readable);
	var writable = opts.writable || (opts.writable !== false && stream.writable);
	var cancelled = false;

	var onlegacyfinish = function() {
		if (!stream.writable) onfinish();
	};

	var onfinish = function() {
		writable = false;
		if (!readable) callback.call(stream);
	};

	var onend = function() {
		readable = false;
		if (!writable) callback.call(stream);
	};

	var onexit = function(exitCode) {
		callback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);
	};

	var onerror = function(err) {
		callback.call(stream, err);
	};

	var onclose = function() {
		process.nextTick(onclosenexttick);
	};

	var onclosenexttick = function() {
		if (cancelled) return;
		if (readable && !(rs && (rs.ended && !rs.destroyed))) return callback.call(stream, new Error('premature close'));
		if (writable && !(ws && (ws.ended && !ws.destroyed))) return callback.call(stream, new Error('premature close'));
	};

	var onrequest = function() {
		stream.req.on('finish', onfinish);
	};

	if (isRequest(stream)) {
		stream.on('complete', onfinish);
		stream.on('abort', onclose);
		if (stream.req) onrequest();
		else stream.on('request', onrequest);
	} else if (writable && !ws) { // legacy streams
		stream.on('end', onlegacyfinish);
		stream.on('close', onlegacyfinish);
	}

	if (isChildProcess(stream)) stream.on('exit', onexit);

	stream.on('end', onend);
	stream.on('finish', onfinish);
	if (opts.error !== false) stream.on('error', onerror);
	stream.on('close', onclose);

	return function() {
		cancelled = true;
		stream.removeListener('complete', onfinish);
		stream.removeListener('abort', onclose);
		stream.removeListener('request', onrequest);
		if (stream.req) stream.req.removeListener('finish', onfinish);
		stream.removeListener('end', onlegacyfinish);
		stream.removeListener('close', onlegacyfinish);
		stream.removeListener('finish', onfinish);
		stream.removeListener('exit', onexit);
		stream.removeListener('end', onend);
		stream.removeListener('error', onerror);
		stream.removeListener('close', onclose);
	};
};

module.exports = eos;


/***/ }),

/***/ 98691:
/***/ ((module) => {

"use strict";


var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

module.exports = function (str) {
	if (typeof str !== 'string') {
		throw new TypeError('Expected a string');
	}

	return str.replace(matchOperatorsRe, '\\$&');
};


/***/ }),

/***/ 43664:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const taskManager = __nccwpck_require__(42708);
const async_1 = __nccwpck_require__(95679);
const stream_1 = __nccwpck_require__(94630);
const sync_1 = __nccwpck_require__(42405);
const settings_1 = __nccwpck_require__(10952);
const utils = __nccwpck_require__(45444);
async function FastGlob(source, options) {
    assertPatternsInput(source);
    const works = getWorks(source, async_1.default, options);
    const result = await Promise.all(works);
    return utils.array.flatten(result);
}
// https://github.com/typescript-eslint/typescript-eslint/issues/60
// eslint-disable-next-line no-redeclare
(function (FastGlob) {
    function sync(source, options) {
        assertPatternsInput(source);
        const works = getWorks(source, sync_1.default, options);
        return utils.array.flatten(works);
    }
    FastGlob.sync = sync;
    function stream(source, options) {
        assertPatternsInput(source);
        const works = getWorks(source, stream_1.default, options);
        /**
         * The stream returned by the provider cannot work with an asynchronous iterator.
         * To support asynchronous iterators, regardless of the number of tasks, we always multiplex streams.
         * This affects performance (+25%). I don't see best solution right now.
         */
        return utils.stream.merge(works);
    }
    FastGlob.stream = stream;
    function generateTasks(source, options) {
        assertPatternsInput(source);
        const patterns = [].concat(source);
        const settings = new settings_1.default(options);
        return taskManager.generate(patterns, settings);
    }
    FastGlob.generateTasks = generateTasks;
    function isDynamicPattern(source, options) {
        assertPatternsInput(source);
        const settings = new settings_1.default(options);
        return utils.pattern.isDynamicPattern(source, settings);
    }
    FastGlob.isDynamicPattern = isDynamicPattern;
    function escapePath(source) {
        assertPatternsInput(source);
        return utils.path.escape(source);
    }
    FastGlob.escapePath = escapePath;
})(FastGlob || (FastGlob = {}));
function getWorks(source, _Provider, options) {
    const patterns = [].concat(source);
    const settings = new settings_1.default(options);
    const tasks = taskManager.generate(patterns, settings);
    const provider = new _Provider(settings);
    return tasks.map(provider.read, provider);
}
function assertPatternsInput(input) {
    const source = [].concat(input);
    const isValidSource = source.every((item) => utils.string.isString(item) && !utils.string.isEmpty(item));
    if (!isValidSource) {
        throw new TypeError('Patterns must be a string (non empty) or an array of strings');
    }
}
module.exports = FastGlob;


/***/ }),

/***/ 42708:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.convertPatternGroupToTask = exports.convertPatternGroupsToTasks = exports.groupPatternsByBaseDirectory = exports.getNegativePatternsAsPositive = exports.getPositivePatterns = exports.convertPatternsToTasks = exports.generate = void 0;
const utils = __nccwpck_require__(45444);
function generate(patterns, settings) {
    const positivePatterns = getPositivePatterns(patterns);
    const negativePatterns = getNegativePatternsAsPositive(patterns, settings.ignore);
    const staticPatterns = positivePatterns.filter((pattern) => utils.pattern.isStaticPattern(pattern, settings));
    const dynamicPatterns = positivePatterns.filter((pattern) => utils.pattern.isDynamicPattern(pattern, settings));
    const staticTasks = convertPatternsToTasks(staticPatterns, negativePatterns, /* dynamic */ false);
    const dynamicTasks = convertPatternsToTasks(dynamicPatterns, negativePatterns, /* dynamic */ true);
    return staticTasks.concat(dynamicTasks);
}
exports.generate = generate;
/**
 * Returns tasks grouped by basic pattern directories.
 *
 * Patterns that can be found inside (`./`) and outside (`../`) the current directory are handled separately.
 * This is necessary because directory traversal starts at the base directory and goes deeper.
 */
function convertPatternsToTasks(positive, negative, dynamic) {
    const tasks = [];
    const patternsOutsideCurrentDirectory = utils.pattern.getPatternsOutsideCurrentDirectory(positive);
    const patternsInsideCurrentDirectory = utils.pattern.getPatternsInsideCurrentDirectory(positive);
    const outsideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsOutsideCurrentDirectory);
    const insideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsInsideCurrentDirectory);
    tasks.push(...convertPatternGroupsToTasks(outsideCurrentDirectoryGroup, negative, dynamic));
    /*
     * For the sake of reducing future accesses to the file system, we merge all tasks within the current directory
     * into a global task, if at least one pattern refers to the root (`.`). In this case, the global task covers the rest.
     */
    if ('.' in insideCurrentDirectoryGroup) {
        tasks.push(convertPatternGroupToTask('.', patternsInsideCurrentDirectory, negative, dynamic));
    }
    else {
        tasks.push(...convertPatternGroupsToTasks(insideCurrentDirectoryGroup, negative, dynamic));
    }
    return tasks;
}
exports.convertPatternsToTasks = convertPatternsToTasks;
function getPositivePatterns(patterns) {
    return utils.pattern.getPositivePatterns(patterns);
}
exports.getPositivePatterns = getPositivePatterns;
function getNegativePatternsAsPositive(patterns, ignore) {
    const negative = utils.pattern.getNegativePatterns(patterns).concat(ignore);
    const positive = negative.map(utils.pattern.convertToPositivePattern);
    return positive;
}
exports.getNegativePatternsAsPositive = getNegativePatternsAsPositive;
function groupPatternsByBaseDirectory(patterns) {
    const group = {};
    return patterns.reduce((collection, pattern) => {
        const base = utils.pattern.getBaseDirectory(pattern);
        if (base in collection) {
            collection[base].push(pattern);
        }
        else {
            collection[base] = [pattern];
        }
        return collection;
    }, group);
}
exports.groupPatternsByBaseDirectory = groupPatternsByBaseDirectory;
function convertPatternGroupsToTasks(positive, negative, dynamic) {
    return Object.keys(positive).map((base) => {
        return convertPatternGroupToTask(base, positive[base], negative, dynamic);
    });
}
exports.convertPatternGroupsToTasks = convertPatternGroupsToTasks;
function convertPatternGroupToTask(base, positive, negative, dynamic) {
    return {
        dynamic,
        positive,
        negative,
        base,
        patterns: [].concat(positive, negative.map(utils.pattern.convertToNegativePattern))
    };
}
exports.convertPatternGroupToTask = convertPatternGroupToTask;


/***/ }),

/***/ 95679:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const stream_1 = __nccwpck_require__(12083);
const provider_1 = __nccwpck_require__(60257);
class ProviderAsync extends provider_1.default {
    constructor() {
        super(...arguments);
        this._reader = new stream_1.default(this._settings);
    }
    read(task) {
        const root = this._getRootDirectory(task);
        const options = this._getReaderOptions(task);
        const entries = [];
        return new Promise((resolve, reject) => {
            const stream = this.api(root, task, options);
            stream.once('error', reject);
            stream.on('data', (entry) => entries.push(options.transform(entry)));
            stream.once('end', () => resolve(entries));
        });
    }
    api(root, task, options) {
        if (task.dynamic) {
            return this._reader.dynamic(root, options);
        }
        return this._reader.static(task.patterns, options);
    }
}
exports.default = ProviderAsync;


/***/ }),

/***/ 36983:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const utils = __nccwpck_require__(45444);
const partial_1 = __nccwpck_require__(35295);
class DeepFilter {
    constructor(_settings, _micromatchOptions) {
        this._settings = _settings;
        this._micromatchOptions = _micromatchOptions;
    }
    getFilter(basePath, positive, negative) {
        const matcher = this._getMatcher(positive);
        const negativeRe = this._getNegativePatternsRe(negative);
        return (entry) => this._filter(basePath, entry, matcher, negativeRe);
    }
    _getMatcher(patterns) {
        return new partial_1.default(patterns, this._settings, this._micromatchOptions);
    }
    _getNegativePatternsRe(patterns) {
        const affectDepthOfReadingPatterns = patterns.filter(utils.pattern.isAffectDepthOfReadingPattern);
        return utils.pattern.convertPatternsToRe(affectDepthOfReadingPatterns, this._micromatchOptions);
    }
    _filter(basePath, entry, matcher, negativeRe) {
        if (this._isSkippedByDeep(basePath, entry.path)) {
            return false;
        }
        if (this._isSkippedSymbolicLink(entry)) {
            return false;
        }
        const filepath = utils.path.removeLeadingDotSegment(entry.path);
        if (this._isSkippedByPositivePatterns(filepath, matcher)) {
            return false;
        }
        return this._isSkippedByNegativePatterns(filepath, negativeRe);
    }
    _isSkippedByDeep(basePath, entryPath) {
        /**
         * Avoid unnecessary depth calculations when it doesn't matter.
         */
        if (this._settings.deep === Infinity) {
            return false;
        }
        return this._getEntryLevel(basePath, entryPath) >= this._settings.deep;
    }
    _getEntryLevel(basePath, entryPath) {
        const entryPathDepth = entryPath.split('/').length;
        if (basePath === '') {
            return entryPathDepth;
        }
        const basePathDepth = basePath.split('/').length;
        return entryPathDepth - basePathDepth;
    }
    _isSkippedSymbolicLink(entry) {
        return !this._settings.followSymbolicLinks && entry.dirent.isSymbolicLink();
    }
    _isSkippedByPositivePatterns(entryPath, matcher) {
        return !this._settings.baseNameMatch && !matcher.match(entryPath);
    }
    _isSkippedByNegativePatterns(entryPath, patternsRe) {
        return !utils.pattern.matchAny(entryPath, patternsRe);
    }
}
exports.default = DeepFilter;


/***/ }),

/***/ 71343:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const utils = __nccwpck_require__(45444);
class EntryFilter {
    constructor(_settings, _micromatchOptions) {
        this._settings = _settings;
        this._micromatchOptions = _micromatchOptions;
        this.index = new Map();
    }
    getFilter(positive, negative) {
        const positiveRe = utils.pattern.convertPatternsToRe(positive, this._micromatchOptions);
        const negativeRe = utils.pattern.convertPatternsToRe(negative, this._micromatchOptions);
        return (entry) => this._filter(entry, positiveRe, negativeRe);
    }
    _filter(entry, positiveRe, negativeRe) {
        if (this._settings.unique && this._isDuplicateEntry(entry)) {
            return false;
        }
        if (this._onlyFileFilter(entry) || this._onlyDirectoryFilter(entry)) {
            return false;
        }
        if (this._isSkippedByAbsoluteNegativePatterns(entry.path, negativeRe)) {
            return false;
        }
        const filepath = this._settings.baseNameMatch ? entry.name : entry.path;
        const isMatched = this._isMatchToPatterns(filepath, positiveRe) && !this._isMatchToPatterns(entry.path, negativeRe);
        if (this._settings.unique && isMatched) {
            this._createIndexRecord(entry);
        }
        return isMatched;
    }
    _isDuplicateEntry(entry) {
        return this.index.has(entry.path);
    }
    _createIndexRecord(entry) {
        this.index.set(entry.path, undefined);
    }
    _onlyFileFilter(entry) {
        return this._settings.onlyFiles && !entry.dirent.isFile();
    }
    _onlyDirectoryFilter(entry) {
        return this._settings.onlyDirectories && !entry.dirent.isDirectory();
    }
    _isSkippedByAbsoluteNegativePatterns(entryPath, patternsRe) {
        if (!this._settings.absolute) {
            return false;
        }
        const fullpath = utils.path.makeAbsolute(this._settings.cwd, entryPath);
        return utils.pattern.matchAny(fullpath, patternsRe);
    }
    _isMatchToPatterns(entryPath, patternsRe) {
        const filepath = utils.path.removeLeadingDotSegment(entryPath);
        return utils.pattern.matchAny(filepath, patternsRe);
    }
}
exports.default = EntryFilter;


/***/ }),

/***/ 36654:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const utils = __nccwpck_require__(45444);
class ErrorFilter {
    constructor(_settings) {
        this._settings = _settings;
    }
    getFilter() {
        return (error) => this._isNonFatalError(error);
    }
    _isNonFatalError(error) {
        return utils.errno.isEnoentCodeError(error) || this._settings.suppressErrors;
    }
}
exports.default = ErrorFilter;


/***/ }),

/***/ 32576:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const utils = __nccwpck_require__(45444);
class Matcher {
    constructor(_patterns, _settings, _micromatchOptions) {
        this._patterns = _patterns;
        this._settings = _settings;
        this._micromatchOptions = _micromatchOptions;
        this._storage = [];
        this._fillStorage();
    }
    _fillStorage() {
        /**
         * The original pattern may include `{,*,**,a/*}`, which will lead to problems with matching (unresolved level).
         * So, before expand patterns with brace expansion into separated patterns.
         */
        const patterns = utils.pattern.expandPatternsWithBraceExpansion(this._patterns);
        for (const pattern of patterns) {
            const segments = this._getPatternSegments(pattern);
            const sections = this._splitSegmentsIntoSections(segments);
            this._storage.push({
                complete: sections.length <= 1,
                pattern,
                segments,
                sections
            });
        }
    }
    _getPatternSegments(pattern) {
        const parts = utils.pattern.getPatternParts(pattern, this._micromatchOptions);
        return parts.map((part) => {
            const dynamic = utils.pattern.isDynamicPattern(part, this._settings);
            if (!dynamic) {
                return {
                    dynamic: false,
                    pattern: part
                };
            }
            return {
                dynamic: true,
                pattern: part,
                patternRe: utils.pattern.makeRe(part, this._micromatchOptions)
            };
        });
    }
    _splitSegmentsIntoSections(segments) {
        return utils.array.splitWhen(segments, (segment) => segment.dynamic && utils.pattern.hasGlobStar(segment.pattern));
    }
}
exports.default = Matcher;


/***/ }),

/***/ 35295:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const matcher_1 = __nccwpck_require__(32576);
class PartialMatcher extends matcher_1.default {
    match(filepath) {
        const parts = filepath.split('/');
        const levels = parts.length;
        const patterns = this._storage.filter((info) => !info.complete || info.segments.length > levels);
        for (const pattern of patterns) {
            const section = pattern.sections[0];
            /**
             * In this case, the pattern has a globstar and we must read all directories unconditionally,
             * but only if the level has reached the end of the first group.
             *
             * fixtures/{a,b}/**
             *  ^ true/false  ^ always true
            */
            if (!pattern.complete && levels > section.length) {
                return true;
            }
            const match = parts.every((part, index) => {
                const segment = pattern.segments[index];
                if (segment.dynamic && segment.patternRe.test(part)) {
                    return true;
                }
                if (!segment.dynamic && segment.pattern === part) {
                    return true;
                }
                return false;
            });
            if (match) {
                return true;
            }
        }
        return false;
    }
}
exports.default = PartialMatcher;


/***/ }),

/***/ 60257:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const path = __nccwpck_require__(85622);
const deep_1 = __nccwpck_require__(36983);
const entry_1 = __nccwpck_require__(71343);
const error_1 = __nccwpck_require__(36654);
const entry_2 = __nccwpck_require__(94029);
class Provider {
    constructor(_settings) {
        this._settings = _settings;
        this.errorFilter = new error_1.default(this._settings);
        this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());
        this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());
        this.entryTransformer = new entry_2.default(this._settings);
    }
    _getRootDirectory(task) {
        return path.resolve(this._settings.cwd, task.base);
    }
    _getReaderOptions(task) {
        const basePath = task.base === '.' ? '' : task.base;
        return {
            basePath,
            pathSegmentSeparator: '/',
            concurrency: this._settings.concurrency,
            deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),
            entryFilter: this.entryFilter.getFilter(task.positive, task.negative),
            errorFilter: this.errorFilter.getFilter(),
            followSymbolicLinks: this._settings.followSymbolicLinks,
            fs: this._settings.fs,
            stats: this._settings.stats,
            throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,
            transform: this.entryTransformer.getTransformer()
        };
    }
    _getMicromatchOptions() {
        return {
            dot: this._settings.dot,
            matchBase: this._settings.baseNameMatch,
            nobrace: !this._settings.braceExpansion,
            nocase: !this._settings.caseSensitiveMatch,
            noext: !this._settings.extglob,
            noglobstar: !this._settings.globstar,
            posix: true,
            strictSlashes: false
        };
    }
}
exports.default = Provider;


/***/ }),

/***/ 94630:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const stream_1 = __nccwpck_require__(92413);
const stream_2 = __nccwpck_require__(12083);
const provider_1 = __nccwpck_require__(60257);
class ProviderStream extends provider_1.default {
    constructor() {
        super(...arguments);
        this._reader = new stream_2.default(this._settings);
    }
    read(task) {
        const root = this._getRootDirectory(task);
        const options = this._getReaderOptions(task);
        const source = this.api(root, task, options);
        const destination = new stream_1.Readable({ objectMode: true, read: () => { } });
        source
            .once('error', (error) => destination.emit('error', error))
            .on('data', (entry) => destination.emit('data', options.transform(entry)))
            .once('end', () => destination.emit('end'));
        destination
            .once('close', () => source.destroy());
        return destination;
    }
    api(root, task, options) {
        if (task.dynamic) {
            return this._reader.dynamic(root, options);
        }
        return this._reader.static(task.patterns, options);
    }
}
exports.default = ProviderStream;


/***/ }),

/***/ 42405:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const sync_1 = __nccwpck_require__(76234);
const provider_1 = __nccwpck_require__(60257);
class ProviderSync extends provider_1.default {
    constructor() {
        super(...arguments);
        this._reader = new sync_1.default(this._settings);
    }
    read(task) {
        const root = this._getRootDirectory(task);
        const options = this._getReaderOptions(task);
        const entries = this.api(root, task, options);
        return entries.map(options.transform);
    }
    api(root, task, options) {
        if (task.dynamic) {
            return this._reader.dynamic(root, options);
        }
        return this._reader.static(task.patterns, options);
    }
}
exports.default = ProviderSync;


/***/ }),

/***/ 94029:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const utils = __nccwpck_require__(45444);
class EntryTransformer {
    constructor(_settings) {
        this._settings = _settings;
    }
    getTransformer() {
        return (entry) => this._transform(entry);
    }
    _transform(entry) {
        let filepath = entry.path;
        if (this._settings.absolute) {
            filepath = utils.path.makeAbsolute(this._settings.cwd, filepath);
            filepath = utils.path.unixify(filepath);
        }
        if (this._settings.markDirectories && entry.dirent.isDirectory()) {
            filepath += '/';
        }
        if (!this._settings.objectMode) {
            return filepath;
        }
        return Object.assign(Object.assign({}, entry), { path: filepath });
    }
}
exports.default = EntryTransformer;


/***/ }),

/***/ 65582:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const path = __nccwpck_require__(85622);
const fsStat = __nccwpck_require__(70109);
const utils = __nccwpck_require__(45444);
class Reader {
    constructor(_settings) {
        this._settings = _settings;
        this._fsStatSettings = new fsStat.Settings({
            followSymbolicLink: this._settings.followSymbolicLinks,
            fs: this._settings.fs,
            throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks
        });
    }
    _getFullEntryPath(filepath) {
        return path.resolve(this._settings.cwd, filepath);
    }
    _makeEntry(stats, pattern) {
        const entry = {
            name: pattern,
            path: pattern,
            dirent: utils.fs.createDirentFromStats(pattern, stats)
        };
        if (this._settings.stats) {
            entry.stats = stats;
        }
        return entry;
    }
    _isFatalError(error) {
        return !utils.errno.isEnoentCodeError(error) && !this._settings.suppressErrors;
    }
}
exports.default = Reader;


/***/ }),

/***/ 12083:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const stream_1 = __nccwpck_require__(92413);
const fsStat = __nccwpck_require__(70109);
const fsWalk = __nccwpck_require__(26026);
const reader_1 = __nccwpck_require__(65582);
class ReaderStream extends reader_1.default {
    constructor() {
        super(...arguments);
        this._walkStream = fsWalk.walkStream;
        this._stat = fsStat.stat;
    }
    dynamic(root, options) {
        return this._walkStream(root, options);
    }
    static(patterns, options) {
        const filepaths = patterns.map(this._getFullEntryPath, this);
        const stream = new stream_1.PassThrough({ objectMode: true });
        stream._write = (index, _enc, done) => {
            return this._getEntry(filepaths[index], patterns[index], options)
                .then((entry) => {
                if (entry !== null && options.entryFilter(entry)) {
                    stream.push(entry);
                }
                if (index === filepaths.length - 1) {
                    stream.end();
                }
                done();
            })
                .catch(done);
        };
        for (let i = 0; i < filepaths.length; i++) {
            stream.write(i);
        }
        return stream;
    }
    _getEntry(filepath, pattern, options) {
        return this._getStat(filepath)
            .then((stats) => this._makeEntry(stats, pattern))
            .catch((error) => {
            if (options.errorFilter(error)) {
                return null;
            }
            throw error;
        });
    }
    _getStat(filepath) {
        return new Promise((resolve, reject) => {
            this._stat(filepath, this._fsStatSettings, (error, stats) => {
                return error === null ? resolve(stats) : reject(error);
            });
        });
    }
}
exports.default = ReaderStream;


/***/ }),

/***/ 76234:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const fsStat = __nccwpck_require__(70109);
const fsWalk = __nccwpck_require__(26026);
const reader_1 = __nccwpck_require__(65582);
class ReaderSync extends reader_1.default {
    constructor() {
        super(...arguments);
        this._walkSync = fsWalk.walkSync;
        this._statSync = fsStat.statSync;
    }
    dynamic(root, options) {
        return this._walkSync(root, options);
    }
    static(patterns, options) {
        const entries = [];
        for (const pattern of patterns) {
            const filepath = this._getFullEntryPath(pattern);
            const entry = this._getEntry(filepath, pattern, options);
            if (entry === null || !options.entryFilter(entry)) {
                continue;
            }
            entries.push(entry);
        }
        return entries;
    }
    _getEntry(filepath, pattern, options) {
        try {
            const stats = this._getStat(filepath);
            return this._makeEntry(stats, pattern);
        }
        catch (error) {
            if (options.errorFilter(error)) {
                return null;
            }
            throw error;
        }
    }
    _getStat(filepath) {
        return this._statSync(filepath, this._fsStatSettings);
    }
}
exports.default = ReaderSync;


/***/ }),

/***/ 10952:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;
const fs = __nccwpck_require__(35747);
const os = __nccwpck_require__(12087);
/**
 * The `os.cpus` method can return zero. We expect the number of cores to be greater than zero.
 * https://github.com/nodejs/node/blob/7faeddf23a98c53896f8b574a6e66589e8fb1eb8/lib/os.js#L106-L107
 */
const CPU_COUNT = Math.max(os.cpus().length, 1);
exports.DEFAULT_FILE_SYSTEM_ADAPTER = {
    lstat: fs.lstat,
    lstatSync: fs.lstatSync,
    stat: fs.stat,
    statSync: fs.statSync,
    readdir: fs.readdir,
    readdirSync: fs.readdirSync
};
class Settings {
    constructor(_options = {}) {
        this._options = _options;
        this.absolute = this._getValue(this._options.absolute, false);
        this.baseNameMatch = this._getValue(this._options.baseNameMatch, false);
        this.braceExpansion = this._getValue(this._options.braceExpansion, true);
        this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch, true);
        this.concurrency = this._getValue(this._options.concurrency, CPU_COUNT);
        this.cwd = this._getValue(this._options.cwd, process.cwd());
        this.deep = this._getValue(this._options.deep, Infinity);
        this.dot = this._getValue(this._options.dot, false);
        this.extglob = this._getValue(this._options.extglob, true);
        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, true);
        this.fs = this._getFileSystemMethods(this._options.fs);
        this.globstar = this._getValue(this._options.globstar, true);
        this.ignore = this._getValue(this._options.ignore, []);
        this.markDirectories = this._getValue(this._options.markDirectories, false);
        this.objectMode = this._getValue(this._options.objectMode, false);
        this.onlyDirectories = this._getValue(this._options.onlyDirectories, false);
        this.onlyFiles = this._getValue(this._options.onlyFiles, true);
        this.stats = this._getValue(this._options.stats, false);
        this.suppressErrors = this._getValue(this._options.suppressErrors, false);
        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, false);
        this.unique = this._getValue(this._options.unique, true);
        if (this.onlyDirectories) {
            this.onlyFiles = false;
        }
        if (this.stats) {
            this.objectMode = true;
        }
    }
    _getValue(option, value) {
        return option === undefined ? value : option;
    }
    _getFileSystemMethods(methods = {}) {
        return Object.assign(Object.assign({}, exports.DEFAULT_FILE_SYSTEM_ADAPTER), methods);
    }
}
exports.default = Settings;


/***/ }),

/***/ 85325:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.splitWhen = exports.flatten = void 0;
function flatten(items) {
    return items.reduce((collection, item) => [].concat(collection, item), []);
}
exports.flatten = flatten;
function splitWhen(items, predicate) {
    const result = [[]];
    let groupIndex = 0;
    for (const item of items) {
        if (predicate(item)) {
            groupIndex++;
            result[groupIndex] = [];
        }
        else {
            result[groupIndex].push(item);
        }
    }
    return result;
}
exports.splitWhen = splitWhen;


/***/ }),

/***/ 41230:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isEnoentCodeError = void 0;
function isEnoentCodeError(error) {
    return error.code === 'ENOENT';
}
exports.isEnoentCodeError = isEnoentCodeError;


/***/ }),

/***/ 17543:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createDirentFromStats = void 0;
class DirentFromStats {
    constructor(name, stats) {
        this.name = name;
        this.isBlockDevice = stats.isBlockDevice.bind(stats);
        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);
        this.isDirectory = stats.isDirectory.bind(stats);
        this.isFIFO = stats.isFIFO.bind(stats);
        this.isFile = stats.isFile.bind(stats);
        this.isSocket = stats.isSocket.bind(stats);
        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);
    }
}
function createDirentFromStats(name, stats) {
    return new DirentFromStats(name, stats);
}
exports.createDirentFromStats = createDirentFromStats;


/***/ }),

/***/ 45444:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.string = exports.stream = exports.pattern = exports.path = exports.fs = exports.errno = exports.array = void 0;
const array = __nccwpck_require__(85325);
exports.array = array;
const errno = __nccwpck_require__(41230);
exports.errno = errno;
const fs = __nccwpck_require__(17543);
exports.fs = fs;
const path = __nccwpck_require__(63873);
exports.path = path;
const pattern = __nccwpck_require__(81221);
exports.pattern = pattern;
const stream = __nccwpck_require__(18382);
exports.stream = stream;
const string = __nccwpck_require__(52203);
exports.string = string;


/***/ }),

/***/ 63873:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeLeadingDotSegment = exports.escape = exports.makeAbsolute = exports.unixify = void 0;
const path = __nccwpck_require__(85622);
const LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\
const UNESCAPED_GLOB_SYMBOLS_RE = /(\\?)([()*?[\]{|}]|^!|[!+@](?=\())/g;
/**
 * Designed to work only with simple paths: `dir\\file`.
 */
function unixify(filepath) {
    return filepath.replace(/\\/g, '/');
}
exports.unixify = unixify;
function makeAbsolute(cwd, filepath) {
    return path.resolve(cwd, filepath);
}
exports.makeAbsolute = makeAbsolute;
function escape(pattern) {
    return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\$2');
}
exports.escape = escape;
function removeLeadingDotSegment(entry) {
    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.
    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with
    if (entry.charAt(0) === '.') {
        const secondCharactery = entry.charAt(1);
        if (secondCharactery === '/' || secondCharactery === '\\') {
            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);
        }
    }
    return entry;
}
exports.removeLeadingDotSegment = removeLeadingDotSegment;


/***/ }),

/***/ 81221:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.matchAny = exports.convertPatternsToRe = exports.makeRe = exports.getPatternParts = exports.expandBraceExpansion = exports.expandPatternsWithBraceExpansion = exports.isAffectDepthOfReadingPattern = exports.endsWithSlashGlobStar = exports.hasGlobStar = exports.getBaseDirectory = exports.isPatternRelatedToParentDirectory = exports.getPatternsOutsideCurrentDirectory = exports.getPatternsInsideCurrentDirectory = exports.getPositivePatterns = exports.getNegativePatterns = exports.isPositivePattern = exports.isNegativePattern = exports.convertToNegativePattern = exports.convertToPositivePattern = exports.isDynamicPattern = exports.isStaticPattern = void 0;
const path = __nccwpck_require__(85622);
const globParent = __nccwpck_require__(54655);
const micromatch = __nccwpck_require__(76228);
const GLOBSTAR = '**';
const ESCAPE_SYMBOL = '\\';
const COMMON_GLOB_SYMBOLS_RE = /[*?]|^!/;
const REGEX_CHARACTER_CLASS_SYMBOLS_RE = /\[.*]/;
const REGEX_GROUP_SYMBOLS_RE = /(?:^|[^!*+?@])\(.*\|.*\)/;
const GLOB_EXTENSION_SYMBOLS_RE = /[!*+?@]\(.*\)/;
const BRACE_EXPANSIONS_SYMBOLS_RE = /{.*(?:,|\.\.).*}/;
function isStaticPattern(pattern, options = {}) {
    return !isDynamicPattern(pattern, options);
}
exports.isStaticPattern = isStaticPattern;
function isDynamicPattern(pattern, options = {}) {
    /**
     * A special case with an empty string is necessary for matching patterns that start with a forward slash.
     * An empty string cannot be a dynamic pattern.
     * For example, the pattern `/lib/*` will be spread into parts: '', 'lib', '*'.
     */
    if (pattern === '') {
        return false;
    }
    /**
     * When the `caseSensitiveMatch` option is disabled, all patterns must be marked as dynamic, because we cannot check
     * filepath directly (without read directory).
     */
    if (options.caseSensitiveMatch === false || pattern.includes(ESCAPE_SYMBOL)) {
        return true;
    }
    if (COMMON_GLOB_SYMBOLS_RE.test(pattern) || REGEX_CHARACTER_CLASS_SYMBOLS_RE.test(pattern) || REGEX_GROUP_SYMBOLS_RE.test(pattern)) {
        return true;
    }
    if (options.extglob !== false && GLOB_EXTENSION_SYMBOLS_RE.test(pattern)) {
        return true;
    }
    if (options.braceExpansion !== false && BRACE_EXPANSIONS_SYMBOLS_RE.test(pattern)) {
        return true;
    }
    return false;
}
exports.isDynamicPattern = isDynamicPattern;
function convertToPositivePattern(pattern) {
    return isNegativePattern(pattern) ? pattern.slice(1) : pattern;
}
exports.convertToPositivePattern = convertToPositivePattern;
function convertToNegativePattern(pattern) {
    return '!' + pattern;
}
exports.convertToNegativePattern = convertToNegativePattern;
function isNegativePattern(pattern) {
    return pattern.startsWith('!') && pattern[1] !== '(';
}
exports.isNegativePattern = isNegativePattern;
function isPositivePattern(pattern) {
    return !isNegativePattern(pattern);
}
exports.isPositivePattern = isPositivePattern;
function getNegativePatterns(patterns) {
    return patterns.filter(isNegativePattern);
}
exports.getNegativePatterns = getNegativePatterns;
function getPositivePatterns(patterns) {
    return patterns.filter(isPositivePattern);
}
exports.getPositivePatterns = getPositivePatterns;
/**
 * Returns patterns that can be applied inside the current directory.
 *
 * @example
 * // ['./*', '*', 'a/*']
 * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])
 */
function getPatternsInsideCurrentDirectory(patterns) {
    return patterns.filter((pattern) => !isPatternRelatedToParentDirectory(pattern));
}
exports.getPatternsInsideCurrentDirectory = getPatternsInsideCurrentDirectory;
/**
 * Returns patterns to be expanded relative to (outside) the current directory.
 *
 * @example
 * // ['../*', './../*']
 * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])
 */
function getPatternsOutsideCurrentDirectory(patterns) {
    return patterns.filter(isPatternRelatedToParentDirectory);
}
exports.getPatternsOutsideCurrentDirectory = getPatternsOutsideCurrentDirectory;
function isPatternRelatedToParentDirectory(pattern) {
    return pattern.startsWith('..') || pattern.startsWith('./..');
}
exports.isPatternRelatedToParentDirectory = isPatternRelatedToParentDirectory;
function getBaseDirectory(pattern) {
    return globParent(pattern, { flipBackslashes: false });
}
exports.getBaseDirectory = getBaseDirectory;
function hasGlobStar(pattern) {
    return pattern.includes(GLOBSTAR);
}
exports.hasGlobStar = hasGlobStar;
function endsWithSlashGlobStar(pattern) {
    return pattern.endsWith('/' + GLOBSTAR);
}
exports.endsWithSlashGlobStar = endsWithSlashGlobStar;
function isAffectDepthOfReadingPattern(pattern) {
    const basename = path.basename(pattern);
    return endsWithSlashGlobStar(pattern) || isStaticPattern(basename);
}
exports.isAffectDepthOfReadingPattern = isAffectDepthOfReadingPattern;
function expandPatternsWithBraceExpansion(patterns) {
    return patterns.reduce((collection, pattern) => {
        return collection.concat(expandBraceExpansion(pattern));
    }, []);
}
exports.expandPatternsWithBraceExpansion = expandPatternsWithBraceExpansion;
function expandBraceExpansion(pattern) {
    return micromatch.braces(pattern, {
        expand: true,
        nodupes: true
    });
}
exports.expandBraceExpansion = expandBraceExpansion;
function getPatternParts(pattern, options) {
    let { parts } = micromatch.scan(pattern, Object.assign(Object.assign({}, options), { parts: true }));
    /**
     * The scan method returns an empty array in some cases.
     * See micromatch/picomatch#58 for more details.
     */
    if (parts.length === 0) {
        parts = [pattern];
    }
    /**
     * The scan method does not return an empty part for the pattern with a forward slash.
     * This is another part of micromatch/picomatch#58.
     */
    if (parts[0].startsWith('/')) {
        parts[0] = parts[0].slice(1);
        parts.unshift('');
    }
    return parts;
}
exports.getPatternParts = getPatternParts;
function makeRe(pattern, options) {
    return micromatch.makeRe(pattern, options);
}
exports.makeRe = makeRe;
function convertPatternsToRe(patterns, options) {
    return patterns.map((pattern) => makeRe(pattern, options));
}
exports.convertPatternsToRe = convertPatternsToRe;
function matchAny(entry, patternsRe) {
    return patternsRe.some((patternRe) => patternRe.test(entry));
}
exports.matchAny = matchAny;


/***/ }),

/***/ 18382:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.merge = void 0;
const merge2 = __nccwpck_require__(82578);
function merge(streams) {
    const mergedStream = merge2(streams);
    streams.forEach((stream) => {
        stream.once('error', (error) => mergedStream.emit('error', error));
    });
    mergedStream.once('close', () => propagateCloseEventToSources(streams));
    mergedStream.once('end', () => propagateCloseEventToSources(streams));
    return mergedStream;
}
exports.merge = merge;
function propagateCloseEventToSources(streams) {
    streams.forEach((stream) => stream.emit('close'));
}


/***/ }),

/***/ 52203:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isEmpty = exports.isString = void 0;
function isString(input) {
    return typeof input === 'string';
}
exports.isString = isString;
function isEmpty(input) {
    return input === '';
}
exports.isEmpty = isEmpty;


/***/ }),

/***/ 7340:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


/* eslint-disable no-var */

var reusify = __nccwpck_require__(32113)

function fastqueue (context, worker, concurrency) {
  if (typeof context === 'function') {
    concurrency = worker
    worker = context
    context = null
  }

  if (concurrency < 1) {
    throw new Error('fastqueue concurrency must be greater than 1')
  }

  var cache = reusify(Task)
  var queueHead = null
  var queueTail = null
  var _running = 0
  var errorHandler = null

  var self = {
    push: push,
    drain: noop,
    saturated: noop,
    pause: pause,
    paused: false,
    concurrency: concurrency,
    running: running,
    resume: resume,
    idle: idle,
    length: length,
    getQueue: getQueue,
    unshift: unshift,
    empty: noop,
    kill: kill,
    killAndDrain: killAndDrain,
    error: error
  }

  return self

  function running () {
    return _running
  }

  function pause () {
    self.paused = true
  }

  function length () {
    var current = queueHead
    var counter = 0

    while (current) {
      current = current.next
      counter++
    }

    return counter
  }

  function getQueue () {
    var current = queueHead
    var tasks = []

    while (current) {
      tasks.push(current.value)
      current = current.next
    }

    return tasks
  }

  function resume () {
    if (!self.paused) return
    self.paused = false
    for (var i = 0; i < self.concurrency; i++) {
      _running++
      release()
    }
  }

  function idle () {
    return _running === 0 && self.length() === 0
  }

  function push (value, done) {
    var current = cache.get()

    current.context = context
    current.release = release
    current.value = value
    current.callback = done || noop
    current.errorHandler = errorHandler

    if (_running === self.concurrency || self.paused) {
      if (queueTail) {
        queueTail.next = current
        queueTail = current
      } else {
        queueHead = current
        queueTail = current
        self.saturated()
      }
    } else {
      _running++
      worker.call(context, current.value, current.worked)
    }
  }

  function unshift (value, done) {
    var current = cache.get()

    current.context = context
    current.release = release
    current.value = value
    current.callback = done || noop

    if (_running === self.concurrency || self.paused) {
      if (queueHead) {
        current.next = queueHead
        queueHead = current
      } else {
        queueHead = current
        queueTail = current
        self.saturated()
      }
    } else {
      _running++
      worker.call(context, current.value, current.worked)
    }
  }

  function release (holder) {
    if (holder) {
      cache.release(holder)
    }
    var next = queueHead
    if (next) {
      if (!self.paused) {
        if (queueTail === queueHead) {
          queueTail = null
        }
        queueHead = next.next
        next.next = null
        worker.call(context, next.value, next.worked)
        if (queueTail === null) {
          self.empty()
        }
      } else {
        _running--
      }
    } else if (--_running === 0) {
      self.drain()
    }
  }

  function kill () {
    queueHead = null
    queueTail = null
    self.drain = noop
  }

  function killAndDrain () {
    queueHead = null
    queueTail = null
    self.drain()
    self.drain = noop
  }

  function error (handler) {
    errorHandler = handler
  }
}

function noop () {}

function Task () {
  this.value = null
  this.callback = noop
  this.next = null
  this.release = noop
  this.context = null
  this.errorHandler = null

  var self = this

  this.worked = function worked (err, result) {
    var callback = self.callback
    var errorHandler = self.errorHandler
    var val = self.value
    self.value = null
    self.callback = noop
    if (self.errorHandler) {
      errorHandler(err, val)
    }
    callback.call(self.context, err, result)
    self.release(self)
  }
}

function queueAsPromised (context, worker, concurrency) {
  if (typeof context === 'function') {
    concurrency = worker
    worker = context
    context = null
  }

  function asyncWrapper (arg, cb) {
    worker.call(this, arg)
      .then(function (res) {
        cb(null, res)
      }, cb)
  }

  var queue = fastqueue(context, asyncWrapper, concurrency)

  var pushCb = queue.push
  var unshiftCb = queue.unshift

  queue.push = push
  queue.unshift = unshift
  queue.drained = drained

  return queue

  function push (value) {
    var p = new Promise(function (resolve, reject) {
      pushCb(value, function (err, result) {
        if (err) {
          reject(err)
          return
        }
        resolve(result)
      })
    })

    // Let's fork the promise chain to
    // make the error bubble up to the user but
    // not lead to a unhandledRejection
    p.catch(noop)

    return p
  }

  function unshift (value) {
    var p = new Promise(function (resolve, reject) {
      unshiftCb(value, function (err, result) {
        if (err) {
          reject(err)
          return
        }
        resolve(result)
      })
    })

    // Let's fork the promise chain to
    // make the error bubble up to the user but
    // not lead to a unhandledRejection
    p.catch(noop)

    return p
  }

  function drained () {
    var previousDrain = queue.drain

    var p = new Promise(function (resolve) {
      queue.drain = function () {
        previousDrain()
        resolve()
      }
    })

    return p
  }
}

module.exports = fastqueue
module.exports.promise = queueAsPromised


/***/ }),

/***/ 19921:
/***/ ((module) => {

"use strict";

/* eslint-disable no-control-regex */
// TODO: remove parens when Node.js 6 is targeted. Node.js 4 barfs at it.
module.exports = () => (/[<>:"\/\\|?*\x00-\x1F]/g);
module.exports.windowsNames = () => (/^(con|prn|aux|nul|com[0-9]|lpt[0-9])$/i);


/***/ }),

/***/ 18263:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const path = __nccwpck_require__(85622);
const filenamify = __nccwpck_require__(23095);

const filenamifyPath = (filePath, options) => {
	filePath = path.resolve(filePath);
	return path.join(path.dirname(filePath), filenamify(path.basename(filePath), options));
};

module.exports = filenamifyPath;


/***/ }),

/***/ 23095:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const trimRepeated = __nccwpck_require__(9097);
const filenameReservedRegex = __nccwpck_require__(19921);
const stripOuter = __nccwpck_require__(449);

// Doesn't make sense to have longer filenames
const MAX_FILENAME_LENGTH = 100;

const reControlChars = /[\u0000-\u001f\u0080-\u009f]/g; // eslint-disable-line no-control-regex
const reRelativePath = /^\.+/;
const reTrailingPeriods = /\.+$/;

const filenamify = (string, options = {}) => {
	if (typeof string !== 'string') {
		throw new TypeError('Expected a string');
	}

	const replacement = options.replacement === undefined ? '!' : options.replacement;

	if (filenameReservedRegex().test(replacement) && reControlChars.test(replacement)) {
		throw new Error('Replacement string cannot contain reserved filename characters');
	}

	string = string.replace(filenameReservedRegex(), replacement);
	string = string.replace(reControlChars, replacement);
	string = string.replace(reRelativePath, replacement);
	string = string.replace(reTrailingPeriods, '');

	if (replacement.length > 0) {
		string = trimRepeated(string, replacement);
		string = string.length > 1 ? stripOuter(string, replacement) : string;
	}

	string = filenameReservedRegex.windowsNames().test(string) ? string + replacement : string;
	string = string.slice(0, typeof options.maxLength === 'number' ? options.maxLength : MAX_FILENAME_LENGTH);

	return string;
};

module.exports = filenamify;


/***/ }),

/***/ 16094:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const filenamify = __nccwpck_require__(23095);
const filenamifyPath = __nccwpck_require__(18263);

const filenamifyCombined = filenamify;
filenamifyCombined.path = filenamifyPath;

module.exports = filenamify;


/***/ }),

/***/ 6330:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
/*!
 * fill-range <https://github.com/jonschlinkert/fill-range>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Licensed under the MIT License.
 */



const util = __nccwpck_require__(31669);
const toRegexRange = __nccwpck_require__(1861);

const isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);

const transform = toNumber => {
  return value => toNumber === true ? Number(value) : String(value);
};

const isValidValue = value => {
  return typeof value === 'number' || (typeof value === 'string' && value !== '');
};

const isNumber = num => Number.isInteger(+num);

const zeros = input => {
  let value = `${input}`;
  let index = -1;
  if (value[0] === '-') value = value.slice(1);
  if (value === '0') return false;
  while (value[++index] === '0');
  return index > 0;
};

const stringify = (start, end, options) => {
  if (typeof start === 'string' || typeof end === 'string') {
    return true;
  }
  return options.stringify === true;
};

const pad = (input, maxLength, toNumber) => {
  if (maxLength > 0) {
    let dash = input[0] === '-' ? '-' : '';
    if (dash) input = input.slice(1);
    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));
  }
  if (toNumber === false) {
    return String(input);
  }
  return input;
};

const toMaxLen = (input, maxLength) => {
  let negative = input[0] === '-' ? '-' : '';
  if (negative) {
    input = input.slice(1);
    maxLength--;
  }
  while (input.length < maxLength) input = '0' + input;
  return negative ? ('-' + input) : input;
};

const toSequence = (parts, options) => {
  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);
  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);

  let prefix = options.capture ? '' : '?:';
  let positives = '';
  let negatives = '';
  let result;

  if (parts.positives.length) {
    positives = parts.positives.join('|');
  }

  if (parts.negatives.length) {
    negatives = `-(${prefix}${parts.negatives.join('|')})`;
  }

  if (positives && negatives) {
    result = `${positives}|${negatives}`;
  } else {
    result = positives || negatives;
  }

  if (options.wrap) {
    return `(${prefix}${result})`;
  }

  return result;
};

const toRange = (a, b, isNumbers, options) => {
  if (isNumbers) {
    return toRegexRange(a, b, { wrap: false, ...options });
  }

  let start = String.fromCharCode(a);
  if (a === b) return start;

  let stop = String.fromCharCode(b);
  return `[${start}-${stop}]`;
};

const toRegex = (start, end, options) => {
  if (Array.isArray(start)) {
    let wrap = options.wrap === true;
    let prefix = options.capture ? '' : '?:';
    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');
  }
  return toRegexRange(start, end, options);
};

const rangeError = (...args) => {
  return new RangeError('Invalid range arguments: ' + util.inspect(...args));
};

const invalidRange = (start, end, options) => {
  if (options.strictRanges === true) throw rangeError([start, end]);
  return [];
};

const invalidStep = (step, options) => {
  if (options.strictRanges === true) {
    throw new TypeError(`Expected step "${step}" to be a number`);
  }
  return [];
};

const fillNumbers = (start, end, step = 1, options = {}) => {
  let a = Number(start);
  let b = Number(end);

  if (!Number.isInteger(a) || !Number.isInteger(b)) {
    if (options.strictRanges === true) throw rangeError([start, end]);
    return [];
  }

  // fix negative zero
  if (a === 0) a = 0;
  if (b === 0) b = 0;

  let descending = a > b;
  let startString = String(start);
  let endString = String(end);
  let stepString = String(step);
  step = Math.max(Math.abs(step), 1);

  let padded = zeros(startString) || zeros(endString) || zeros(stepString);
  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;
  let toNumber = padded === false && stringify(start, end, options) === false;
  let format = options.transform || transform(toNumber);

  if (options.toRegex && step === 1) {
    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);
  }

  let parts = { negatives: [], positives: [] };
  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));
  let range = [];
  let index = 0;

  while (descending ? a >= b : a <= b) {
    if (options.toRegex === true && step > 1) {
      push(a);
    } else {
      range.push(pad(format(a, index), maxLen, toNumber));
    }
    a = descending ? a - step : a + step;
    index++;
  }

  if (options.toRegex === true) {
    return step > 1
      ? toSequence(parts, options)
      : toRegex(range, null, { wrap: false, ...options });
  }

  return range;
};

const fillLetters = (start, end, step = 1, options = {}) => {
  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {
    return invalidRange(start, end, options);
  }


  let format = options.transform || (val => String.fromCharCode(val));
  let a = `${start}`.charCodeAt(0);
  let b = `${end}`.charCodeAt(0);

  let descending = a > b;
  let min = Math.min(a, b);
  let max = Math.max(a, b);

  if (options.toRegex && step === 1) {
    return toRange(min, max, false, options);
  }

  let range = [];
  let index = 0;

  while (descending ? a >= b : a <= b) {
    range.push(format(a, index));
    a = descending ? a - step : a + step;
    index++;
  }

  if (options.toRegex === true) {
    return toRegex(range, null, { wrap: false, options });
  }

  return range;
};

const fill = (start, end, step, options = {}) => {
  if (end == null && isValidValue(start)) {
    return [start];
  }

  if (!isValidValue(start) || !isValidValue(end)) {
    return invalidRange(start, end, options);
  }

  if (typeof step === 'function') {
    return fill(start, end, 1, { transform: step });
  }

  if (isObject(step)) {
    return fill(start, end, 0, step);
  }

  let opts = { ...options };
  if (opts.capture === true) opts.wrap = true;
  step = step || opts.step || 1;

  if (!isNumber(step)) {
    if (step != null && !isObject(step)) return invalidStep(step, opts);
    return fill(start, end, 1, step);
  }

  if (isNumber(start) && isNumber(end)) {
    return fillNumbers(start, end, step, opts);
  }

  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);
};

module.exports = fill;


/***/ }),

/***/ 7281:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const path = __nccwpck_require__(85622);
const fs = __nccwpck_require__(35747);
const commonDir = __nccwpck_require__(79930);
const pkgDir = __nccwpck_require__(98098);
const makeDir = __nccwpck_require__(39126);

const {env, cwd} = process;

const isWritable = path => {
	try {
		fs.accessSync(path, fs.constants.W_OK);
		return true;
	} catch (_) {
		return false;
	}
};

function useDirectory(directory, options) {
	if (options.create) {
		makeDir.sync(directory);
	}

	if (options.thunk) {
		return (...arguments_) => path.join(directory, ...arguments_);
	}

	return directory;
}

function getNodeModuleDirectory(directory) {
	const nodeModules = path.join(directory, 'node_modules');

	if (
		!isWritable(nodeModules) &&
		(fs.existsSync(nodeModules) || !isWritable(path.join(directory)))
	) {
		return;
	}

	return nodeModules;
}

module.exports = (options = {}) => {
	if (env.CACHE_DIR && !['true', 'false', '1', '0'].includes(env.CACHE_DIR)) {
		return useDirectory(path.join(env.CACHE_DIR, options.name), options);
	}

	let {cwd: directory = cwd()} = options;

	if (options.files) {
		directory = commonDir(directory, options.files);
	}

	directory = pkgDir.sync(directory);

	if (!directory) {
		return;
	}

	const nodeModules = getNodeModuleDirectory(directory);
	if (!nodeModules) {
		return undefined;
	}

	return useDirectory(path.join(directory, 'node_modules', '.cache', options.name), options);
};


/***/ }),

/***/ 9486:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const path = __nccwpck_require__(85622);
const locatePath = __nccwpck_require__(63447);
const pathExists = __nccwpck_require__(96978);

const stop = Symbol('findUp.stop');

module.exports = async (name, options = {}) => {
	let directory = path.resolve(options.cwd || '');
	const {root} = path.parse(directory);
	const paths = [].concat(name);

	const runMatcher = async locateOptions => {
		if (typeof name !== 'function') {
			return locatePath(paths, locateOptions);
		}

		const foundPath = await name(locateOptions.cwd);
		if (typeof foundPath === 'string') {
			return locatePath([foundPath], locateOptions);
		}

		return foundPath;
	};

	// eslint-disable-next-line no-constant-condition
	while (true) {
		// eslint-disable-next-line no-await-in-loop
		const foundPath = await runMatcher({...options, cwd: directory});

		if (foundPath === stop) {
			return;
		}

		if (foundPath) {
			return path.resolve(directory, foundPath);
		}

		if (directory === root) {
			return;
		}

		directory = path.dirname(directory);
	}
};

module.exports.sync = (name, options = {}) => {
	let directory = path.resolve(options.cwd || '');
	const {root} = path.parse(directory);
	const paths = [].concat(name);

	const runMatcher = locateOptions => {
		if (typeof name !== 'function') {
			return locatePath.sync(paths, locateOptions);
		}

		const foundPath = name(locateOptions.cwd);
		if (typeof foundPath === 'string') {
			return locatePath.sync([foundPath], locateOptions);
		}

		return foundPath;
	};

	// eslint-disable-next-line no-constant-condition
	while (true) {
		const foundPath = runMatcher({...options, cwd: directory});

		if (foundPath === stop) {
			return;
		}

		if (foundPath) {
			return path.resolve(directory, foundPath);
		}

		if (directory === root) {
			return;
		}

		directory = path.dirname(directory);
	}
};

module.exports.exists = pathExists;

module.exports.sync.exists = pathExists.sync;

module.exports.stop = stop;


/***/ }),

/***/ 43338:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const mkdirpSync = __nccwpck_require__(12915).mkdirsSync
const utimesSync = __nccwpck_require__(52548).utimesMillisSync
const stat = __nccwpck_require__(73901)

function copySync (src, dest, opts) {
  if (typeof opts === 'function') {
    opts = { filter: opts }
  }

  opts = opts || {}
  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now
  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber

  // Warn about using preserveTimestamps on 32-bit node
  if (opts.preserveTimestamps && process.arch === 'ia32') {
    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\n
    see https://github.com/jprichardson/node-fs-extra/issues/269`)
  }

  const { srcStat, destStat } = stat.checkPathsSync(src, dest, 'copy')
  stat.checkParentPathsSync(src, srcStat, dest, 'copy')
  return handleFilterAndCopy(destStat, src, dest, opts)
}

function handleFilterAndCopy (destStat, src, dest, opts) {
  if (opts.filter && !opts.filter(src, dest)) return
  const destParent = path.dirname(dest)
  if (!fs.existsSync(destParent)) mkdirpSync(destParent)
  return startCopy(destStat, src, dest, opts)
}

function startCopy (destStat, src, dest, opts) {
  if (opts.filter && !opts.filter(src, dest)) return
  return getStats(destStat, src, dest, opts)
}

function getStats (destStat, src, dest, opts) {
  const statSync = opts.dereference ? fs.statSync : fs.lstatSync
  const srcStat = statSync(src)

  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)
  else if (srcStat.isFile() ||
           srcStat.isCharacterDevice() ||
           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)
  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)
}

function onFile (srcStat, destStat, src, dest, opts) {
  if (!destStat) return copyFile(srcStat, src, dest, opts)
  return mayCopyFile(srcStat, src, dest, opts)
}

function mayCopyFile (srcStat, src, dest, opts) {
  if (opts.overwrite) {
    fs.unlinkSync(dest)
    return copyFile(srcStat, src, dest, opts)
  } else if (opts.errorOnExist) {
    throw new Error(`'${dest}' already exists`)
  }
}

function copyFile (srcStat, src, dest, opts) {
  if (typeof fs.copyFileSync === 'function') {
    fs.copyFileSync(src, dest)
    fs.chmodSync(dest, srcStat.mode)
    if (opts.preserveTimestamps) {
      return utimesSync(dest, srcStat.atime, srcStat.mtime)
    }
    return
  }
  return copyFileFallback(srcStat, src, dest, opts)
}

function copyFileFallback (srcStat, src, dest, opts) {
  const BUF_LENGTH = 64 * 1024
  const _buff = __nccwpck_require__(47696)(BUF_LENGTH)

  const fdr = fs.openSync(src, 'r')
  const fdw = fs.openSync(dest, 'w', srcStat.mode)
  let pos = 0

  while (pos < srcStat.size) {
    const bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)
    fs.writeSync(fdw, _buff, 0, bytesRead)
    pos += bytesRead
  }

  if (opts.preserveTimestamps) fs.futimesSync(fdw, srcStat.atime, srcStat.mtime)

  fs.closeSync(fdr)
  fs.closeSync(fdw)
}

function onDir (srcStat, destStat, src, dest, opts) {
  if (!destStat) return mkDirAndCopy(srcStat, src, dest, opts)
  if (destStat && !destStat.isDirectory()) {
    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)
  }
  return copyDir(src, dest, opts)
}

function mkDirAndCopy (srcStat, src, dest, opts) {
  fs.mkdirSync(dest)
  copyDir(src, dest, opts)
  return fs.chmodSync(dest, srcStat.mode)
}

function copyDir (src, dest, opts) {
  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))
}

function copyDirItem (item, src, dest, opts) {
  const srcItem = path.join(src, item)
  const destItem = path.join(dest, item)
  const { destStat } = stat.checkPathsSync(srcItem, destItem, 'copy')
  return startCopy(destStat, srcItem, destItem, opts)
}

function onLink (destStat, src, dest, opts) {
  let resolvedSrc = fs.readlinkSync(src)
  if (opts.dereference) {
    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)
  }

  if (!destStat) {
    return fs.symlinkSync(resolvedSrc, dest)
  } else {
    let resolvedDest
    try {
      resolvedDest = fs.readlinkSync(dest)
    } catch (err) {
      // dest exists and is a regular file or directory,
      // Windows may throw UNKNOWN error. If dest already exists,
      // fs throws error anyway, so no need to guard against it here.
      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)
      throw err
    }
    if (opts.dereference) {
      resolvedDest = path.resolve(process.cwd(), resolvedDest)
    }
    if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {
      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)
    }

    // prevent copy if src is a subdir of dest since unlinking
    // dest in this case would result in removing src contents
    // and therefore a broken symlink would be created.
    if (fs.statSync(dest).isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {
      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)
    }
    return copyLink(resolvedSrc, dest)
  }
}

function copyLink (resolvedSrc, dest) {
  fs.unlinkSync(dest)
  return fs.symlinkSync(resolvedSrc, dest)
}

module.exports = copySync


/***/ }),

/***/ 11135:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = {
  copySync: __nccwpck_require__(43338)
}


/***/ }),

/***/ 38834:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const mkdirp = __nccwpck_require__(12915).mkdirs
const pathExists = __nccwpck_require__(43835).pathExists
const utimes = __nccwpck_require__(52548).utimesMillis
const stat = __nccwpck_require__(73901)

function copy (src, dest, opts, cb) {
  if (typeof opts === 'function' && !cb) {
    cb = opts
    opts = {}
  } else if (typeof opts === 'function') {
    opts = { filter: opts }
  }

  cb = cb || function () {}
  opts = opts || {}

  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now
  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber

  // Warn about using preserveTimestamps on 32-bit node
  if (opts.preserveTimestamps && process.arch === 'ia32') {
    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\n
    see https://github.com/jprichardson/node-fs-extra/issues/269`)
  }

  stat.checkPaths(src, dest, 'copy', (err, stats) => {
    if (err) return cb(err)
    const { srcStat, destStat } = stats
    stat.checkParentPaths(src, srcStat, dest, 'copy', err => {
      if (err) return cb(err)
      if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)
      return checkParentDir(destStat, src, dest, opts, cb)
    })
  })
}

function checkParentDir (destStat, src, dest, opts, cb) {
  const destParent = path.dirname(dest)
  pathExists(destParent, (err, dirExists) => {
    if (err) return cb(err)
    if (dirExists) return startCopy(destStat, src, dest, opts, cb)
    mkdirp(destParent, err => {
      if (err) return cb(err)
      return startCopy(destStat, src, dest, opts, cb)
    })
  })
}

function handleFilter (onInclude, destStat, src, dest, opts, cb) {
  Promise.resolve(opts.filter(src, dest)).then(include => {
    if (include) return onInclude(destStat, src, dest, opts, cb)
    return cb()
  }, error => cb(error))
}

function startCopy (destStat, src, dest, opts, cb) {
  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)
  return getStats(destStat, src, dest, opts, cb)
}

function getStats (destStat, src, dest, opts, cb) {
  const stat = opts.dereference ? fs.stat : fs.lstat
  stat(src, (err, srcStat) => {
    if (err) return cb(err)

    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)
    else if (srcStat.isFile() ||
             srcStat.isCharacterDevice() ||
             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)
    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)
  })
}

function onFile (srcStat, destStat, src, dest, opts, cb) {
  if (!destStat) return copyFile(srcStat, src, dest, opts, cb)
  return mayCopyFile(srcStat, src, dest, opts, cb)
}

function mayCopyFile (srcStat, src, dest, opts, cb) {
  if (opts.overwrite) {
    fs.unlink(dest, err => {
      if (err) return cb(err)
      return copyFile(srcStat, src, dest, opts, cb)
    })
  } else if (opts.errorOnExist) {
    return cb(new Error(`'${dest}' already exists`))
  } else return cb()
}

function copyFile (srcStat, src, dest, opts, cb) {
  if (typeof fs.copyFile === 'function') {
    return fs.copyFile(src, dest, err => {
      if (err) return cb(err)
      return setDestModeAndTimestamps(srcStat, dest, opts, cb)
    })
  }
  return copyFileFallback(srcStat, src, dest, opts, cb)
}

function copyFileFallback (srcStat, src, dest, opts, cb) {
  const rs = fs.createReadStream(src)
  rs.on('error', err => cb(err)).once('open', () => {
    const ws = fs.createWriteStream(dest, { mode: srcStat.mode })
    ws.on('error', err => cb(err))
      .on('open', () => rs.pipe(ws))
      .once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb))
  })
}

function setDestModeAndTimestamps (srcStat, dest, opts, cb) {
  fs.chmod(dest, srcStat.mode, err => {
    if (err) return cb(err)
    if (opts.preserveTimestamps) {
      return utimes(dest, srcStat.atime, srcStat.mtime, cb)
    }
    return cb()
  })
}

function onDir (srcStat, destStat, src, dest, opts, cb) {
  if (!destStat) return mkDirAndCopy(srcStat, src, dest, opts, cb)
  if (destStat && !destStat.isDirectory()) {
    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))
  }
  return copyDir(src, dest, opts, cb)
}

function mkDirAndCopy (srcStat, src, dest, opts, cb) {
  fs.mkdir(dest, err => {
    if (err) return cb(err)
    copyDir(src, dest, opts, err => {
      if (err) return cb(err)
      return fs.chmod(dest, srcStat.mode, cb)
    })
  })
}

function copyDir (src, dest, opts, cb) {
  fs.readdir(src, (err, items) => {
    if (err) return cb(err)
    return copyDirItems(items, src, dest, opts, cb)
  })
}

function copyDirItems (items, src, dest, opts, cb) {
  const item = items.pop()
  if (!item) return cb()
  return copyDirItem(items, item, src, dest, opts, cb)
}

function copyDirItem (items, item, src, dest, opts, cb) {
  const srcItem = path.join(src, item)
  const destItem = path.join(dest, item)
  stat.checkPaths(srcItem, destItem, 'copy', (err, stats) => {
    if (err) return cb(err)
    const { destStat } = stats
    startCopy(destStat, srcItem, destItem, opts, err => {
      if (err) return cb(err)
      return copyDirItems(items, src, dest, opts, cb)
    })
  })
}

function onLink (destStat, src, dest, opts, cb) {
  fs.readlink(src, (err, resolvedSrc) => {
    if (err) return cb(err)
    if (opts.dereference) {
      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)
    }

    if (!destStat) {
      return fs.symlink(resolvedSrc, dest, cb)
    } else {
      fs.readlink(dest, (err, resolvedDest) => {
        if (err) {
          // dest exists and is a regular file or directory,
          // Windows may throw UNKNOWN error. If dest already exists,
          // fs throws error anyway, so no need to guard against it here.
          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)
          return cb(err)
        }
        if (opts.dereference) {
          resolvedDest = path.resolve(process.cwd(), resolvedDest)
        }
        if (stat.isSrcSubdir(resolvedSrc, resolvedDest)) {
          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))
        }

        // do not copy if src is a subdir of dest since unlinking
        // dest in this case would result in removing src contents
        // and therefore a broken symlink would be created.
        if (destStat.isDirectory() && stat.isSrcSubdir(resolvedDest, resolvedSrc)) {
          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))
        }
        return copyLink(resolvedSrc, dest, cb)
      })
    }
  })
}

function copyLink (resolvedSrc, dest, cb) {
  fs.unlink(dest, err => {
    if (err) return cb(err)
    return fs.symlink(resolvedSrc, dest, cb)
  })
}

module.exports = copy


/***/ }),

/***/ 61335:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
module.exports = {
  copy: u(__nccwpck_require__(38834))
}


/***/ }),

/***/ 96970:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const mkdir = __nccwpck_require__(12915)
const remove = __nccwpck_require__(47357)

const emptyDir = u(function emptyDir (dir, callback) {
  callback = callback || function () {}
  fs.readdir(dir, (err, items) => {
    if (err) return mkdir.mkdirs(dir, callback)

    items = items.map(item => path.join(dir, item))

    deleteItem()

    function deleteItem () {
      const item = items.pop()
      if (!item) return callback()
      remove.remove(item, err => {
        if (err) return callback(err)
        deleteItem()
      })
    }
  })
})

function emptyDirSync (dir) {
  let items
  try {
    items = fs.readdirSync(dir)
  } catch (err) {
    return mkdir.mkdirsSync(dir)
  }

  items.forEach(item => {
    item = path.join(dir, item)
    remove.removeSync(item)
  })
}

module.exports = {
  emptyDirSync,
  emptydirSync: emptyDirSync,
  emptyDir,
  emptydir: emptyDir
}


/***/ }),

/***/ 2164:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const path = __nccwpck_require__(85622)
const fs = __nccwpck_require__(77758)
const mkdir = __nccwpck_require__(12915)
const pathExists = __nccwpck_require__(43835).pathExists

function createFile (file, callback) {
  function makeFile () {
    fs.writeFile(file, '', err => {
      if (err) return callback(err)
      callback()
    })
  }

  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err
    if (!err && stats.isFile()) return callback()
    const dir = path.dirname(file)
    pathExists(dir, (err, dirExists) => {
      if (err) return callback(err)
      if (dirExists) return makeFile()
      mkdir.mkdirs(dir, err => {
        if (err) return callback(err)
        makeFile()
      })
    })
  })
}

function createFileSync (file) {
  let stats
  try {
    stats = fs.statSync(file)
  } catch (e) {}
  if (stats && stats.isFile()) return

  const dir = path.dirname(file)
  if (!fs.existsSync(dir)) {
    mkdir.mkdirsSync(dir)
  }

  fs.writeFileSync(file, '')
}

module.exports = {
  createFile: u(createFile),
  createFileSync
}


/***/ }),

/***/ 40055:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const file = __nccwpck_require__(2164)
const link = __nccwpck_require__(53797)
const symlink = __nccwpck_require__(72549)

module.exports = {
  // file
  createFile: file.createFile,
  createFileSync: file.createFileSync,
  ensureFile: file.createFile,
  ensureFileSync: file.createFileSync,
  // link
  createLink: link.createLink,
  createLinkSync: link.createLinkSync,
  ensureLink: link.createLink,
  ensureLinkSync: link.createLinkSync,
  // symlink
  createSymlink: symlink.createSymlink,
  createSymlinkSync: symlink.createSymlinkSync,
  ensureSymlink: symlink.createSymlink,
  ensureSymlinkSync: symlink.createSymlinkSync
}


/***/ }),

/***/ 53797:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const path = __nccwpck_require__(85622)
const fs = __nccwpck_require__(77758)
const mkdir = __nccwpck_require__(12915)
const pathExists = __nccwpck_require__(43835).pathExists

function createLink (srcpath, dstpath, callback) {
  function makeLink (srcpath, dstpath) {
    fs.link(srcpath, dstpath, err => {
      if (err) return callback(err)
      callback(null)
    })
  }

  pathExists(dstpath, (err, destinationExists) => {
    if (err) return callback(err)
    if (destinationExists) return callback(null)
    fs.lstat(srcpath, (err) => {
      if (err) {
        err.message = err.message.replace('lstat', 'ensureLink')
        return callback(err)
      }

      const dir = path.dirname(dstpath)
      pathExists(dir, (err, dirExists) => {
        if (err) return callback(err)
        if (dirExists) return makeLink(srcpath, dstpath)
        mkdir.mkdirs(dir, err => {
          if (err) return callback(err)
          makeLink(srcpath, dstpath)
        })
      })
    })
  })
}

function createLinkSync (srcpath, dstpath) {
  const destinationExists = fs.existsSync(dstpath)
  if (destinationExists) return undefined

  try {
    fs.lstatSync(srcpath)
  } catch (err) {
    err.message = err.message.replace('lstat', 'ensureLink')
    throw err
  }

  const dir = path.dirname(dstpath)
  const dirExists = fs.existsSync(dir)
  if (dirExists) return fs.linkSync(srcpath, dstpath)
  mkdir.mkdirsSync(dir)

  return fs.linkSync(srcpath, dstpath)
}

module.exports = {
  createLink: u(createLink),
  createLinkSync
}


/***/ }),

/***/ 53727:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(85622)
const fs = __nccwpck_require__(77758)
const pathExists = __nccwpck_require__(43835).pathExists

/**
 * Function that returns two types of paths, one relative to symlink, and one
 * relative to the current working directory. Checks if path is absolute or
 * relative. If the path is relative, this function checks if the path is
 * relative to symlink or relative to current working directory. This is an
 * initiative to find a smarter `srcpath` to supply when building symlinks.
 * This allows you to determine which path to use out of one of three possible
 * types of source paths. The first is an absolute path. This is detected by
 * `path.isAbsolute()`. When an absolute path is provided, it is checked to
 * see if it exists. If it does it's used, if not an error is returned
 * (callback)/ thrown (sync). The other two options for `srcpath` are a
 * relative url. By default Node's `fs.symlink` works by creating a symlink
 * using `dstpath` and expects the `srcpath` to be relative to the newly
 * created symlink. If you provide a `srcpath` that does not exist on the file
 * system it results in a broken symlink. To minimize this, the function
 * checks to see if the 'relative to symlink' source file exists, and if it
 * does it will use it. If it does not, it checks if there's a file that
 * exists that is relative to the current working directory, if does its used.
 * This preserves the expectations of the original fs.symlink spec and adds
 * the ability to pass in `relative to current working direcotry` paths.
 */

function symlinkPaths (srcpath, dstpath, callback) {
  if (path.isAbsolute(srcpath)) {
    return fs.lstat(srcpath, (err) => {
      if (err) {
        err.message = err.message.replace('lstat', 'ensureSymlink')
        return callback(err)
      }
      return callback(null, {
        'toCwd': srcpath,
        'toDst': srcpath
      })
    })
  } else {
    const dstdir = path.dirname(dstpath)
    const relativeToDst = path.join(dstdir, srcpath)
    return pathExists(relativeToDst, (err, exists) => {
      if (err) return callback(err)
      if (exists) {
        return callback(null, {
          'toCwd': relativeToDst,
          'toDst': srcpath
        })
      } else {
        return fs.lstat(srcpath, (err) => {
          if (err) {
            err.message = err.message.replace('lstat', 'ensureSymlink')
            return callback(err)
          }
          return callback(null, {
            'toCwd': srcpath,
            'toDst': path.relative(dstdir, srcpath)
          })
        })
      }
    })
  }
}

function symlinkPathsSync (srcpath, dstpath) {
  let exists
  if (path.isAbsolute(srcpath)) {
    exists = fs.existsSync(srcpath)
    if (!exists) throw new Error('absolute srcpath does not exist')
    return {
      'toCwd': srcpath,
      'toDst': srcpath
    }
  } else {
    const dstdir = path.dirname(dstpath)
    const relativeToDst = path.join(dstdir, srcpath)
    exists = fs.existsSync(relativeToDst)
    if (exists) {
      return {
        'toCwd': relativeToDst,
        'toDst': srcpath
      }
    } else {
      exists = fs.existsSync(srcpath)
      if (!exists) throw new Error('relative srcpath does not exist')
      return {
        'toCwd': srcpath,
        'toDst': path.relative(dstdir, srcpath)
      }
    }
  }
}

module.exports = {
  symlinkPaths,
  symlinkPathsSync
}


/***/ }),

/***/ 18254:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)

function symlinkType (srcpath, type, callback) {
  callback = (typeof type === 'function') ? type : callback
  type = (typeof type === 'function') ? false : type
  if (type) return callback(null, type)
  fs.lstat(srcpath, (err, stats) => {
    if (err) return callback(null, 'file')
    type = (stats && stats.isDirectory()) ? 'dir' : 'file'
    callback(null, type)
  })
}

function symlinkTypeSync (srcpath, type) {
  let stats

  if (type) return type
  try {
    stats = fs.lstatSync(srcpath)
  } catch (e) {
    return 'file'
  }
  return (stats && stats.isDirectory()) ? 'dir' : 'file'
}

module.exports = {
  symlinkType,
  symlinkTypeSync
}


/***/ }),

/***/ 72549:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const path = __nccwpck_require__(85622)
const fs = __nccwpck_require__(77758)
const _mkdirs = __nccwpck_require__(12915)
const mkdirs = _mkdirs.mkdirs
const mkdirsSync = _mkdirs.mkdirsSync

const _symlinkPaths = __nccwpck_require__(53727)
const symlinkPaths = _symlinkPaths.symlinkPaths
const symlinkPathsSync = _symlinkPaths.symlinkPathsSync

const _symlinkType = __nccwpck_require__(18254)
const symlinkType = _symlinkType.symlinkType
const symlinkTypeSync = _symlinkType.symlinkTypeSync

const pathExists = __nccwpck_require__(43835).pathExists

function createSymlink (srcpath, dstpath, type, callback) {
  callback = (typeof type === 'function') ? type : callback
  type = (typeof type === 'function') ? false : type

  pathExists(dstpath, (err, destinationExists) => {
    if (err) return callback(err)
    if (destinationExists) return callback(null)
    symlinkPaths(srcpath, dstpath, (err, relative) => {
      if (err) return callback(err)
      srcpath = relative.toDst
      symlinkType(relative.toCwd, type, (err, type) => {
        if (err) return callback(err)
        const dir = path.dirname(dstpath)
        pathExists(dir, (err, dirExists) => {
          if (err) return callback(err)
          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)
          mkdirs(dir, err => {
            if (err) return callback(err)
            fs.symlink(srcpath, dstpath, type, callback)
          })
        })
      })
    })
  })
}

function createSymlinkSync (srcpath, dstpath, type) {
  const destinationExists = fs.existsSync(dstpath)
  if (destinationExists) return undefined

  const relative = symlinkPathsSync(srcpath, dstpath)
  srcpath = relative.toDst
  type = symlinkTypeSync(relative.toCwd, type)
  const dir = path.dirname(dstpath)
  const exists = fs.existsSync(dir)
  if (exists) return fs.symlinkSync(srcpath, dstpath, type)
  mkdirsSync(dir)
  return fs.symlinkSync(srcpath, dstpath, type)
}

module.exports = {
  createSymlink: u(createSymlink),
  createSymlinkSync
}


/***/ }),

/***/ 61176:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

// This is adapted from https://github.com/normalize/mz
// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors
const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const fs = __nccwpck_require__(77758)

const api = [
  'access',
  'appendFile',
  'chmod',
  'chown',
  'close',
  'copyFile',
  'fchmod',
  'fchown',
  'fdatasync',
  'fstat',
  'fsync',
  'ftruncate',
  'futimes',
  'lchown',
  'lchmod',
  'link',
  'lstat',
  'mkdir',
  'mkdtemp',
  'open',
  'readFile',
  'readdir',
  'readlink',
  'realpath',
  'rename',
  'rmdir',
  'stat',
  'symlink',
  'truncate',
  'unlink',
  'utimes',
  'writeFile'
].filter(key => {
  // Some commands are not available on some systems. Ex:
  // fs.copyFile was added in Node.js v8.5.0
  // fs.mkdtemp was added in Node.js v5.10.0
  // fs.lchown is not available on at least some Linux
  return typeof fs[key] === 'function'
})

// Export all keys:
Object.keys(fs).forEach(key => {
  if (key === 'promises') {
    // fs.promises is a getter property that triggers ExperimentalWarning
    // Don't re-export it here, the getter is defined in "lib/index.js"
    return
  }
  exports[key] = fs[key]
})

// Universalify async methods:
api.forEach(method => {
  exports[method] = u(fs[method])
})

// We differ from mz/fs in that we still ship the old, broken, fs.exists()
// since we are a drop-in replacement for the native module
exports.exists = function (filename, callback) {
  if (typeof callback === 'function') {
    return fs.exists(filename, callback)
  }
  return new Promise(resolve => {
    return fs.exists(filename, resolve)
  })
}

// fs.read() & fs.write need special treatment due to multiple callback args

exports.read = function (fd, buffer, offset, length, position, callback) {
  if (typeof callback === 'function') {
    return fs.read(fd, buffer, offset, length, position, callback)
  }
  return new Promise((resolve, reject) => {
    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {
      if (err) return reject(err)
      resolve({ bytesRead, buffer })
    })
  })
}

// Function signature can be
// fs.write(fd, buffer[, offset[, length[, position]]], callback)
// OR
// fs.write(fd, string[, position[, encoding]], callback)
// We need to handle both cases, so we use ...args
exports.write = function (fd, buffer, ...args) {
  if (typeof args[args.length - 1] === 'function') {
    return fs.write(fd, buffer, ...args)
  }

  return new Promise((resolve, reject) => {
    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {
      if (err) return reject(err)
      resolve({ bytesWritten, buffer })
    })
  })
}

// fs.realpath.native only available in Node v9.2+
if (typeof fs.realpath.native === 'function') {
  exports.realpath.native = u(fs.realpath.native)
}


/***/ }),

/***/ 5630:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = Object.assign(
  {},
  // Export promiseified graceful-fs:
  __nccwpck_require__(61176),
  // Export extra methods:
  __nccwpck_require__(11135),
  __nccwpck_require__(61335),
  __nccwpck_require__(96970),
  __nccwpck_require__(40055),
  __nccwpck_require__(40213),
  __nccwpck_require__(12915),
  __nccwpck_require__(69665),
  __nccwpck_require__(41497),
  __nccwpck_require__(16570),
  __nccwpck_require__(43835),
  __nccwpck_require__(47357)
)

// Export fs.promises as a getter property so that we don't trigger
// ExperimentalWarning before fs.promises is actually accessed.
const fs = __nccwpck_require__(35747)
if (Object.getOwnPropertyDescriptor(fs, 'promises')) {
  Object.defineProperty(module.exports, "promises", ({
    get () { return fs.promises }
  }))
}


/***/ }),

/***/ 40213:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const jsonFile = __nccwpck_require__(18970)

jsonFile.outputJson = u(__nccwpck_require__(60531))
jsonFile.outputJsonSync = __nccwpck_require__(19421)
// aliases
jsonFile.outputJSON = jsonFile.outputJson
jsonFile.outputJSONSync = jsonFile.outputJsonSync
jsonFile.writeJSON = jsonFile.writeJson
jsonFile.writeJSONSync = jsonFile.writeJsonSync
jsonFile.readJSON = jsonFile.readJson
jsonFile.readJSONSync = jsonFile.readJsonSync

module.exports = jsonFile


/***/ }),

/***/ 18970:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const jsonFile = __nccwpck_require__(26160)

module.exports = {
  // jsonfile exports
  readJson: u(jsonFile.readFile),
  readJsonSync: jsonFile.readFileSync,
  writeJson: u(jsonFile.writeFile),
  writeJsonSync: jsonFile.writeFileSync
}


/***/ }),

/***/ 19421:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const mkdir = __nccwpck_require__(12915)
const jsonFile = __nccwpck_require__(18970)

function outputJsonSync (file, data, options) {
  const dir = path.dirname(file)

  if (!fs.existsSync(dir)) {
    mkdir.mkdirsSync(dir)
  }

  jsonFile.writeJsonSync(file, data, options)
}

module.exports = outputJsonSync


/***/ }),

/***/ 60531:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(85622)
const mkdir = __nccwpck_require__(12915)
const pathExists = __nccwpck_require__(43835).pathExists
const jsonFile = __nccwpck_require__(18970)

function outputJson (file, data, options, callback) {
  if (typeof options === 'function') {
    callback = options
    options = {}
  }

  const dir = path.dirname(file)

  pathExists(dir, (err, itDoes) => {
    if (err) return callback(err)
    if (itDoes) return jsonFile.writeJson(file, data, options, callback)

    mkdir.mkdirs(dir, err => {
      if (err) return callback(err)
      jsonFile.writeJson(file, data, options, callback)
    })
  })
}

module.exports = outputJson


/***/ }),

/***/ 12915:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const mkdirs = u(__nccwpck_require__(59677))
const mkdirsSync = __nccwpck_require__(30684)

module.exports = {
  mkdirs,
  mkdirsSync,
  // alias
  mkdirp: mkdirs,
  mkdirpSync: mkdirsSync,
  ensureDir: mkdirs,
  ensureDirSync: mkdirsSync
}


/***/ }),

/***/ 30684:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const invalidWin32Path = __nccwpck_require__(71590).invalidWin32Path

const o777 = parseInt('0777', 8)

function mkdirsSync (p, opts, made) {
  if (!opts || typeof opts !== 'object') {
    opts = { mode: opts }
  }

  let mode = opts.mode
  const xfs = opts.fs || fs

  if (process.platform === 'win32' && invalidWin32Path(p)) {
    const errInval = new Error(p + ' contains invalid WIN32 path characters.')
    errInval.code = 'EINVAL'
    throw errInval
  }

  if (mode === undefined) {
    mode = o777 & (~process.umask())
  }
  if (!made) made = null

  p = path.resolve(p)

  try {
    xfs.mkdirSync(p, mode)
    made = made || p
  } catch (err0) {
    if (err0.code === 'ENOENT') {
      if (path.dirname(p) === p) throw err0
      made = mkdirsSync(path.dirname(p), opts, made)
      mkdirsSync(p, opts, made)
    } else {
      // In the case of any other error, just see if there's a dir there
      // already. If so, then hooray!  If not, then something is borked.
      let stat
      try {
        stat = xfs.statSync(p)
      } catch (err1) {
        throw err0
      }
      if (!stat.isDirectory()) throw err0
    }
  }

  return made
}

module.exports = mkdirsSync


/***/ }),

/***/ 59677:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const invalidWin32Path = __nccwpck_require__(71590).invalidWin32Path

const o777 = parseInt('0777', 8)

function mkdirs (p, opts, callback, made) {
  if (typeof opts === 'function') {
    callback = opts
    opts = {}
  } else if (!opts || typeof opts !== 'object') {
    opts = { mode: opts }
  }

  if (process.platform === 'win32' && invalidWin32Path(p)) {
    const errInval = new Error(p + ' contains invalid WIN32 path characters.')
    errInval.code = 'EINVAL'
    return callback(errInval)
  }

  let mode = opts.mode
  const xfs = opts.fs || fs

  if (mode === undefined) {
    mode = o777 & (~process.umask())
  }
  if (!made) made = null

  callback = callback || function () {}
  p = path.resolve(p)

  xfs.mkdir(p, mode, er => {
    if (!er) {
      made = made || p
      return callback(null, made)
    }
    switch (er.code) {
      case 'ENOENT':
        if (path.dirname(p) === p) return callback(er)
        mkdirs(path.dirname(p), opts, (er, made) => {
          if (er) callback(er, made)
          else mkdirs(p, opts, callback, made)
        })
        break

      // In the case of any other error, just see if there's a dir
      // there already.  If so, then hooray!  If not, then something
      // is borked.
      default:
        xfs.stat(p, (er2, stat) => {
          // if the stat fails, then that's super weird.
          // let the original error be the failure reason.
          if (er2 || !stat.isDirectory()) callback(er, made)
          else callback(null, made)
        })
        break
    }
  })
}

module.exports = mkdirs


/***/ }),

/***/ 71590:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(85622)

// get drive on windows
function getRootPath (p) {
  p = path.normalize(path.resolve(p)).split(path.sep)
  if (p.length > 0) return p[0]
  return null
}

// http://stackoverflow.com/a/62888/10333 contains more accurate
// TODO: expand to include the rest
const INVALID_PATH_CHARS = /[<>:"|?*]/

function invalidWin32Path (p) {
  const rp = getRootPath(p)
  p = p.replace(rp, '')
  return INVALID_PATH_CHARS.test(p)
}

module.exports = {
  getRootPath,
  invalidWin32Path
}


/***/ }),

/***/ 69665:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = {
  moveSync: __nccwpck_require__(96445)
}


/***/ }),

/***/ 96445:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const copySync = __nccwpck_require__(11135).copySync
const removeSync = __nccwpck_require__(47357).removeSync
const mkdirpSync = __nccwpck_require__(12915).mkdirpSync
const stat = __nccwpck_require__(73901)

function moveSync (src, dest, opts) {
  opts = opts || {}
  const overwrite = opts.overwrite || opts.clobber || false

  const { srcStat } = stat.checkPathsSync(src, dest, 'move')
  stat.checkParentPathsSync(src, srcStat, dest, 'move')
  mkdirpSync(path.dirname(dest))
  return doRename(src, dest, overwrite)
}

function doRename (src, dest, overwrite) {
  if (overwrite) {
    removeSync(dest)
    return rename(src, dest, overwrite)
  }
  if (fs.existsSync(dest)) throw new Error('dest already exists.')
  return rename(src, dest, overwrite)
}

function rename (src, dest, overwrite) {
  try {
    fs.renameSync(src, dest)
  } catch (err) {
    if (err.code !== 'EXDEV') throw err
    return moveAcrossDevice(src, dest, overwrite)
  }
}

function moveAcrossDevice (src, dest, overwrite) {
  const opts = {
    overwrite,
    errorOnExist: true
  }
  copySync(src, dest, opts)
  return removeSync(src)
}

module.exports = moveSync


/***/ }),

/***/ 41497:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
module.exports = {
  move: u(__nccwpck_require__(72231))
}


/***/ }),

/***/ 72231:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const copy = __nccwpck_require__(61335).copy
const remove = __nccwpck_require__(47357).remove
const mkdirp = __nccwpck_require__(12915).mkdirp
const pathExists = __nccwpck_require__(43835).pathExists
const stat = __nccwpck_require__(73901)

function move (src, dest, opts, cb) {
  if (typeof opts === 'function') {
    cb = opts
    opts = {}
  }

  const overwrite = opts.overwrite || opts.clobber || false

  stat.checkPaths(src, dest, 'move', (err, stats) => {
    if (err) return cb(err)
    const { srcStat } = stats
    stat.checkParentPaths(src, srcStat, dest, 'move', err => {
      if (err) return cb(err)
      mkdirp(path.dirname(dest), err => {
        if (err) return cb(err)
        return doRename(src, dest, overwrite, cb)
      })
    })
  })
}

function doRename (src, dest, overwrite, cb) {
  if (overwrite) {
    return remove(dest, err => {
      if (err) return cb(err)
      return rename(src, dest, overwrite, cb)
    })
  }
  pathExists(dest, (err, destExists) => {
    if (err) return cb(err)
    if (destExists) return cb(new Error('dest already exists.'))
    return rename(src, dest, overwrite, cb)
  })
}

function rename (src, dest, overwrite, cb) {
  fs.rename(src, dest, err => {
    if (!err) return cb()
    if (err.code !== 'EXDEV') return cb(err)
    return moveAcrossDevice(src, dest, overwrite, cb)
  })
}

function moveAcrossDevice (src, dest, overwrite, cb) {
  const opts = {
    overwrite,
    errorOnExist: true
  }
  copy(src, dest, opts, err => {
    if (err) return cb(err)
    return remove(src, cb)
  })
}

module.exports = move


/***/ }),

/***/ 16570:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const mkdir = __nccwpck_require__(12915)
const pathExists = __nccwpck_require__(43835).pathExists

function outputFile (file, data, encoding, callback) {
  if (typeof encoding === 'function') {
    callback = encoding
    encoding = 'utf8'
  }

  const dir = path.dirname(file)
  pathExists(dir, (err, itDoes) => {
    if (err) return callback(err)
    if (itDoes) return fs.writeFile(file, data, encoding, callback)

    mkdir.mkdirs(dir, err => {
      if (err) return callback(err)

      fs.writeFile(file, data, encoding, callback)
    })
  })
}

function outputFileSync (file, ...args) {
  const dir = path.dirname(file)
  if (fs.existsSync(dir)) {
    return fs.writeFileSync(file, ...args)
  }
  mkdir.mkdirsSync(dir)
  fs.writeFileSync(file, ...args)
}

module.exports = {
  outputFile: u(outputFile),
  outputFileSync
}


/***/ }),

/***/ 43835:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const u = __nccwpck_require__(9046)/* .fromPromise */ .p
const fs = __nccwpck_require__(61176)

function pathExists (path) {
  return fs.access(path).then(() => true).catch(() => false)
}

module.exports = {
  pathExists: u(pathExists),
  pathExistsSync: fs.existsSync
}


/***/ }),

/***/ 47357:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const u = __nccwpck_require__(9046)/* .fromCallback */ .E
const rimraf = __nccwpck_require__(38761)

module.exports = {
  remove: u(rimraf),
  removeSync: rimraf.sync
}


/***/ }),

/***/ 38761:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)
const assert = __nccwpck_require__(42357)

const isWindows = (process.platform === 'win32')

function defaults (options) {
  const methods = [
    'unlink',
    'chmod',
    'stat',
    'lstat',
    'rmdir',
    'readdir'
  ]
  methods.forEach(m => {
    options[m] = options[m] || fs[m]
    m = m + 'Sync'
    options[m] = options[m] || fs[m]
  })

  options.maxBusyTries = options.maxBusyTries || 3
}

function rimraf (p, options, cb) {
  let busyTries = 0

  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  assert(p, 'rimraf: missing path')
  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')
  assert.strictEqual(typeof cb, 'function', 'rimraf: callback function required')
  assert(options, 'rimraf: invalid options argument provided')
  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')

  defaults(options)

  rimraf_(p, options, function CB (er) {
    if (er) {
      if ((er.code === 'EBUSY' || er.code === 'ENOTEMPTY' || er.code === 'EPERM') &&
          busyTries < options.maxBusyTries) {
        busyTries++
        const time = busyTries * 100
        // try again, with the same exact callback as this one.
        return setTimeout(() => rimraf_(p, options, CB), time)
      }

      // already gone
      if (er.code === 'ENOENT') er = null
    }

    cb(er)
  })
}

// Two possible strategies.
// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR
// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR
//
// Both result in an extra syscall when you guess wrong.  However, there
// are likely far more normal files in the world than directories.  This
// is based on the assumption that a the average number of files per
// directory is >= 1.
//
// If anyone ever complains about this, then I guess the strategy could
// be made configurable somehow.  But until then, YAGNI.
function rimraf_ (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  // sunos lets the root user unlink directories, which is... weird.
  // so we have to lstat here and make sure it's not a dir.
  options.lstat(p, (er, st) => {
    if (er && er.code === 'ENOENT') {
      return cb(null)
    }

    // Windows can EPERM on stat.  Life is suffering.
    if (er && er.code === 'EPERM' && isWindows) {
      return fixWinEPERM(p, options, er, cb)
    }

    if (st && st.isDirectory()) {
      return rmdir(p, options, er, cb)
    }

    options.unlink(p, er => {
      if (er) {
        if (er.code === 'ENOENT') {
          return cb(null)
        }
        if (er.code === 'EPERM') {
          return (isWindows)
            ? fixWinEPERM(p, options, er, cb)
            : rmdir(p, options, er, cb)
        }
        if (er.code === 'EISDIR') {
          return rmdir(p, options, er, cb)
        }
      }
      return cb(er)
    })
  })
}

function fixWinEPERM (p, options, er, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')
  if (er) {
    assert(er instanceof Error)
  }

  options.chmod(p, 0o666, er2 => {
    if (er2) {
      cb(er2.code === 'ENOENT' ? null : er)
    } else {
      options.stat(p, (er3, stats) => {
        if (er3) {
          cb(er3.code === 'ENOENT' ? null : er)
        } else if (stats.isDirectory()) {
          rmdir(p, options, er, cb)
        } else {
          options.unlink(p, cb)
        }
      })
    }
  })
}

function fixWinEPERMSync (p, options, er) {
  let stats

  assert(p)
  assert(options)
  if (er) {
    assert(er instanceof Error)
  }

  try {
    options.chmodSync(p, 0o666)
  } catch (er2) {
    if (er2.code === 'ENOENT') {
      return
    } else {
      throw er
    }
  }

  try {
    stats = options.statSync(p)
  } catch (er3) {
    if (er3.code === 'ENOENT') {
      return
    } else {
      throw er
    }
  }

  if (stats.isDirectory()) {
    rmdirSync(p, options, er)
  } else {
    options.unlinkSync(p)
  }
}

function rmdir (p, options, originalEr, cb) {
  assert(p)
  assert(options)
  if (originalEr) {
    assert(originalEr instanceof Error)
  }
  assert(typeof cb === 'function')

  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)
  // if we guessed wrong, and it's not a directory, then
  // raise the original error.
  options.rmdir(p, er => {
    if (er && (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM')) {
      rmkids(p, options, cb)
    } else if (er && er.code === 'ENOTDIR') {
      cb(originalEr)
    } else {
      cb(er)
    }
  })
}

function rmkids (p, options, cb) {
  assert(p)
  assert(options)
  assert(typeof cb === 'function')

  options.readdir(p, (er, files) => {
    if (er) return cb(er)

    let n = files.length
    let errState

    if (n === 0) return options.rmdir(p, cb)

    files.forEach(f => {
      rimraf(path.join(p, f), options, er => {
        if (errState) {
          return
        }
        if (er) return cb(errState = er)
        if (--n === 0) {
          options.rmdir(p, cb)
        }
      })
    })
  })
}

// this looks simpler, and is strictly *faster*, but will
// tie up the JavaScript thread and fail on excessively
// deep directory trees.
function rimrafSync (p, options) {
  let st

  options = options || {}
  defaults(options)

  assert(p, 'rimraf: missing path')
  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')
  assert(options, 'rimraf: missing options')
  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')

  try {
    st = options.lstatSync(p)
  } catch (er) {
    if (er.code === 'ENOENT') {
      return
    }

    // Windows can EPERM on stat.  Life is suffering.
    if (er.code === 'EPERM' && isWindows) {
      fixWinEPERMSync(p, options, er)
    }
  }

  try {
    // sunos lets the root user unlink directories, which is... weird.
    if (st && st.isDirectory()) {
      rmdirSync(p, options, null)
    } else {
      options.unlinkSync(p)
    }
  } catch (er) {
    if (er.code === 'ENOENT') {
      return
    } else if (er.code === 'EPERM') {
      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)
    } else if (er.code !== 'EISDIR') {
      throw er
    }
    rmdirSync(p, options, er)
  }
}

function rmdirSync (p, options, originalEr) {
  assert(p)
  assert(options)
  if (originalEr) {
    assert(originalEr instanceof Error)
  }

  try {
    options.rmdirSync(p)
  } catch (er) {
    if (er.code === 'ENOTDIR') {
      throw originalEr
    } else if (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM') {
      rmkidsSync(p, options)
    } else if (er.code !== 'ENOENT') {
      throw er
    }
  }
}

function rmkidsSync (p, options) {
  assert(p)
  assert(options)
  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))

  if (isWindows) {
    // We only end up here once we got ENOTEMPTY at least once, and
    // at this point, we are guaranteed to have removed all the kids.
    // So, we know that it won't be ENOENT or ENOTDIR or anything else.
    // try really hard to delete stuff on windows, because it has a
    // PROFOUNDLY annoying habit of not closing handles promptly when
    // files are deleted, resulting in spurious ENOTEMPTY errors.
    const startTime = Date.now()
    do {
      try {
        const ret = options.rmdirSync(p, options)
        return ret
      } catch (er) { }
    } while (Date.now() - startTime < 500) // give up after 500ms
  } else {
    const ret = options.rmdirSync(p, options)
    return ret
  }
}

module.exports = rimraf
rimraf.sync = rimrafSync


/***/ }),

/***/ 47696:
/***/ ((module) => {

"use strict";

/* eslint-disable node/no-deprecated-api */
module.exports = function (size) {
  if (typeof Buffer.allocUnsafe === 'function') {
    try {
      return Buffer.allocUnsafe(size)
    } catch (e) {
      return new Buffer(size)
    }
  }
  return new Buffer(size)
}


/***/ }),

/***/ 73901:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const path = __nccwpck_require__(85622)

const NODE_VERSION_MAJOR_WITH_BIGINT = 10
const NODE_VERSION_MINOR_WITH_BIGINT = 5
const NODE_VERSION_PATCH_WITH_BIGINT = 0
const nodeVersion = process.versions.node.split('.')
const nodeVersionMajor = Number.parseInt(nodeVersion[0], 10)
const nodeVersionMinor = Number.parseInt(nodeVersion[1], 10)
const nodeVersionPatch = Number.parseInt(nodeVersion[2], 10)

function nodeSupportsBigInt () {
  if (nodeVersionMajor > NODE_VERSION_MAJOR_WITH_BIGINT) {
    return true
  } else if (nodeVersionMajor === NODE_VERSION_MAJOR_WITH_BIGINT) {
    if (nodeVersionMinor > NODE_VERSION_MINOR_WITH_BIGINT) {
      return true
    } else if (nodeVersionMinor === NODE_VERSION_MINOR_WITH_BIGINT) {
      if (nodeVersionPatch >= NODE_VERSION_PATCH_WITH_BIGINT) {
        return true
      }
    }
  }
  return false
}

function getStats (src, dest, cb) {
  if (nodeSupportsBigInt()) {
    fs.stat(src, { bigint: true }, (err, srcStat) => {
      if (err) return cb(err)
      fs.stat(dest, { bigint: true }, (err, destStat) => {
        if (err) {
          if (err.code === 'ENOENT') return cb(null, { srcStat, destStat: null })
          return cb(err)
        }
        return cb(null, { srcStat, destStat })
      })
    })
  } else {
    fs.stat(src, (err, srcStat) => {
      if (err) return cb(err)
      fs.stat(dest, (err, destStat) => {
        if (err) {
          if (err.code === 'ENOENT') return cb(null, { srcStat, destStat: null })
          return cb(err)
        }
        return cb(null, { srcStat, destStat })
      })
    })
  }
}

function getStatsSync (src, dest) {
  let srcStat, destStat
  if (nodeSupportsBigInt()) {
    srcStat = fs.statSync(src, { bigint: true })
  } else {
    srcStat = fs.statSync(src)
  }
  try {
    if (nodeSupportsBigInt()) {
      destStat = fs.statSync(dest, { bigint: true })
    } else {
      destStat = fs.statSync(dest)
    }
  } catch (err) {
    if (err.code === 'ENOENT') return { srcStat, destStat: null }
    throw err
  }
  return { srcStat, destStat }
}

function checkPaths (src, dest, funcName, cb) {
  getStats(src, dest, (err, stats) => {
    if (err) return cb(err)
    const { srcStat, destStat } = stats
    if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {
      return cb(new Error('Source and destination must not be the same.'))
    }
    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {
      return cb(new Error(errMsg(src, dest, funcName)))
    }
    return cb(null, { srcStat, destStat })
  })
}

function checkPathsSync (src, dest, funcName) {
  const { srcStat, destStat } = getStatsSync(src, dest)
  if (destStat && destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {
    throw new Error('Source and destination must not be the same.')
  }
  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {
    throw new Error(errMsg(src, dest, funcName))
  }
  return { srcStat, destStat }
}

// recursively check if dest parent is a subdirectory of src.
// It works for all file types including symlinks since it
// checks the src and dest inodes. It starts from the deepest
// parent and stops once it reaches the src parent or the root path.
function checkParentPaths (src, srcStat, dest, funcName, cb) {
  const srcParent = path.resolve(path.dirname(src))
  const destParent = path.resolve(path.dirname(dest))
  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()
  if (nodeSupportsBigInt()) {
    fs.stat(destParent, { bigint: true }, (err, destStat) => {
      if (err) {
        if (err.code === 'ENOENT') return cb()
        return cb(err)
      }
      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {
        return cb(new Error(errMsg(src, dest, funcName)))
      }
      return checkParentPaths(src, srcStat, destParent, funcName, cb)
    })
  } else {
    fs.stat(destParent, (err, destStat) => {
      if (err) {
        if (err.code === 'ENOENT') return cb()
        return cb(err)
      }
      if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {
        return cb(new Error(errMsg(src, dest, funcName)))
      }
      return checkParentPaths(src, srcStat, destParent, funcName, cb)
    })
  }
}

function checkParentPathsSync (src, srcStat, dest, funcName) {
  const srcParent = path.resolve(path.dirname(src))
  const destParent = path.resolve(path.dirname(dest))
  if (destParent === srcParent || destParent === path.parse(destParent).root) return
  let destStat
  try {
    if (nodeSupportsBigInt()) {
      destStat = fs.statSync(destParent, { bigint: true })
    } else {
      destStat = fs.statSync(destParent)
    }
  } catch (err) {
    if (err.code === 'ENOENT') return
    throw err
  }
  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {
    throw new Error(errMsg(src, dest, funcName))
  }
  return checkParentPathsSync(src, srcStat, destParent, funcName)
}

// return true if dest is a subdir of src, otherwise false.
// It only checks the path strings.
function isSrcSubdir (src, dest) {
  const srcArr = path.resolve(src).split(path.sep).filter(i => i)
  const destArr = path.resolve(dest).split(path.sep).filter(i => i)
  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)
}

function errMsg (src, dest, funcName) {
  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`
}

module.exports = {
  checkPaths,
  checkPathsSync,
  checkParentPaths,
  checkParentPathsSync,
  isSrcSubdir
}


/***/ }),

/***/ 52548:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(77758)
const os = __nccwpck_require__(12087)
const path = __nccwpck_require__(85622)

// HFS, ext{2,3}, FAT do not, Node.js v0.10 does not
function hasMillisResSync () {
  let tmpfile = path.join('millis-test-sync' + Date.now().toString() + Math.random().toString().slice(2))
  tmpfile = path.join(os.tmpdir(), tmpfile)

  // 550 millis past UNIX epoch
  const d = new Date(1435410243862)
  fs.writeFileSync(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141')
  const fd = fs.openSync(tmpfile, 'r+')
  fs.futimesSync(fd, d, d)
  fs.closeSync(fd)
  return fs.statSync(tmpfile).mtime > 1435410243000
}

function hasMillisRes (callback) {
  let tmpfile = path.join('millis-test' + Date.now().toString() + Math.random().toString().slice(2))
  tmpfile = path.join(os.tmpdir(), tmpfile)

  // 550 millis past UNIX epoch
  const d = new Date(1435410243862)
  fs.writeFile(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141', err => {
    if (err) return callback(err)
    fs.open(tmpfile, 'r+', (err, fd) => {
      if (err) return callback(err)
      fs.futimes(fd, d, d, err => {
        if (err) return callback(err)
        fs.close(fd, err => {
          if (err) return callback(err)
          fs.stat(tmpfile, (err, stats) => {
            if (err) return callback(err)
            callback(null, stats.mtime > 1435410243000)
          })
        })
      })
    })
  })
}

function timeRemoveMillis (timestamp) {
  if (typeof timestamp === 'number') {
    return Math.floor(timestamp / 1000) * 1000
  } else if (timestamp instanceof Date) {
    return new Date(Math.floor(timestamp.getTime() / 1000) * 1000)
  } else {
    throw new Error('fs-extra: timeRemoveMillis() unknown parameter type')
  }
}

function utimesMillis (path, atime, mtime, callback) {
  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)
  fs.open(path, 'r+', (err, fd) => {
    if (err) return callback(err)
    fs.futimes(fd, atime, mtime, futimesErr => {
      fs.close(fd, closeErr => {
        if (callback) callback(futimesErr || closeErr)
      })
    })
  })
}

function utimesMillisSync (path, atime, mtime) {
  const fd = fs.openSync(path, 'r+')
  fs.futimesSync(fd, atime, mtime)
  return fs.closeSync(fd)
}

module.exports = {
  hasMillisRes,
  hasMillisResSync,
  timeRemoveMillis,
  utimesMillis,
  utimesMillisSync
}


/***/ }),

/***/ 46863:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = realpath
realpath.realpath = realpath
realpath.sync = realpathSync
realpath.realpathSync = realpathSync
realpath.monkeypatch = monkeypatch
realpath.unmonkeypatch = unmonkeypatch

var fs = __nccwpck_require__(35747)
var origRealpath = fs.realpath
var origRealpathSync = fs.realpathSync

var version = process.version
var ok = /^v[0-5]\./.test(version)
var old = __nccwpck_require__(71734)

function newError (er) {
  return er && er.syscall === 'realpath' && (
    er.code === 'ELOOP' ||
    er.code === 'ENOMEM' ||
    er.code === 'ENAMETOOLONG'
  )
}

function realpath (p, cache, cb) {
  if (ok) {
    return origRealpath(p, cache, cb)
  }

  if (typeof cache === 'function') {
    cb = cache
    cache = null
  }
  origRealpath(p, cache, function (er, result) {
    if (newError(er)) {
      old.realpath(p, cache, cb)
    } else {
      cb(er, result)
    }
  })
}

function realpathSync (p, cache) {
  if (ok) {
    return origRealpathSync(p, cache)
  }

  try {
    return origRealpathSync(p, cache)
  } catch (er) {
    if (newError(er)) {
      return old.realpathSync(p, cache)
    } else {
      throw er
    }
  }
}

function monkeypatch () {
  fs.realpath = realpath
  fs.realpathSync = realpathSync
}

function unmonkeypatch () {
  fs.realpath = origRealpath
  fs.realpathSync = origRealpathSync
}


/***/ }),

/***/ 71734:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

var pathModule = __nccwpck_require__(85622);
var isWindows = process.platform === 'win32';
var fs = __nccwpck_require__(35747);

// JavaScript implementation of realpath, ported from node pre-v6

var DEBUG = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);

function rethrow() {
  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and
  // is fairly slow to generate.
  var callback;
  if (DEBUG) {
    var backtrace = new Error;
    callback = debugCallback;
  } else
    callback = missingCallback;

  return callback;

  function debugCallback(err) {
    if (err) {
      backtrace.message = err.message;
      err = backtrace;
      missingCallback(err);
    }
  }

  function missingCallback(err) {
    if (err) {
      if (process.throwDeprecation)
        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs
      else if (!process.noDeprecation) {
        var msg = 'fs: missing callback ' + (err.stack || err.message);
        if (process.traceDeprecation)
          console.trace(msg);
        else
          console.error(msg);
      }
    }
  }
}

function maybeCallback(cb) {
  return typeof cb === 'function' ? cb : rethrow();
}

var normalize = pathModule.normalize;

// Regexp that finds the next partion of a (partial) path
// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']
if (isWindows) {
  var nextPartRe = /(.*?)(?:[\/\\]+|$)/g;
} else {
  var nextPartRe = /(.*?)(?:[\/]+|$)/g;
}

// Regex to find the device root, including trailing slash. E.g. 'c:\\'.
if (isWindows) {
  var splitRootRe = /^(?:[a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/][^\\\/]+)?[\\\/]*/;
} else {
  var splitRootRe = /^[\/]*/;
}

exports.realpathSync = function realpathSync(p, cache) {
  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return cache[p];
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstatSync(base);
      knownHard[base] = true;
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  // NB: p.length changes.
  while (pos < p.length) {
    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      continue;
    }

    var resolvedLink;
    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // some known symbolic link.  no need to stat again.
      resolvedLink = cache[base];
    } else {
      var stat = fs.lstatSync(base);
      if (!stat.isSymbolicLink()) {
        knownHard[base] = true;
        if (cache) cache[base] = base;
        continue;
      }

      // read the link if it wasn't read before
      // dev/ino always return 0 on windows, so skip the check.
      var linkTarget = null;
      if (!isWindows) {
        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
        if (seenLinks.hasOwnProperty(id)) {
          linkTarget = seenLinks[id];
        }
      }
      if (linkTarget === null) {
        fs.statSync(base);
        linkTarget = fs.readlinkSync(base);
      }
      resolvedLink = pathModule.resolve(previous, linkTarget);
      // track this, if given a cache.
      if (cache) cache[base] = resolvedLink;
      if (!isWindows) seenLinks[id] = linkTarget;
    }

    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }

  if (cache) cache[original] = p;

  return p;
};


exports.realpath = function realpath(p, cache, cb) {
  if (typeof cb !== 'function') {
    cb = maybeCallback(cache);
    cache = null;
  }

  // make p is absolute
  p = pathModule.resolve(p);

  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {
    return process.nextTick(cb.bind(null, null, cache[p]));
  }

  var original = p,
      seenLinks = {},
      knownHard = {};

  // current character position in p
  var pos;
  // the partial path so far, including a trailing slash if any
  var current;
  // the partial path without a trailing slash (except when pointing at a root)
  var base;
  // the partial path scanned in the previous round, with slash
  var previous;

  start();

  function start() {
    // Skip over roots
    var m = splitRootRe.exec(p);
    pos = m[0].length;
    current = m[0];
    base = m[0];
    previous = '';

    // On windows, check that the root exists. On unix there is no need.
    if (isWindows && !knownHard[base]) {
      fs.lstat(base, function(err) {
        if (err) return cb(err);
        knownHard[base] = true;
        LOOP();
      });
    } else {
      process.nextTick(LOOP);
    }
  }

  // walk down the path, swapping out linked pathparts for their real
  // values
  function LOOP() {
    // stop if scanned past end of path
    if (pos >= p.length) {
      if (cache) cache[original] = p;
      return cb(null, p);
    }

    // find the next part
    nextPartRe.lastIndex = pos;
    var result = nextPartRe.exec(p);
    previous = current;
    current += result[0];
    base = previous + result[1];
    pos = nextPartRe.lastIndex;

    // continue if not a symlink
    if (knownHard[base] || (cache && cache[base] === base)) {
      return process.nextTick(LOOP);
    }

    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {
      // known symbolic link.  no need to stat again.
      return gotResolvedLink(cache[base]);
    }

    return fs.lstat(base, gotStat);
  }

  function gotStat(err, stat) {
    if (err) return cb(err);

    // if not a symlink, skip to the next path part
    if (!stat.isSymbolicLink()) {
      knownHard[base] = true;
      if (cache) cache[base] = base;
      return process.nextTick(LOOP);
    }

    // stat & read the link if not read before
    // call gotTarget as soon as the link target is known
    // dev/ino always return 0 on windows, so skip the check.
    if (!isWindows) {
      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);
      if (seenLinks.hasOwnProperty(id)) {
        return gotTarget(null, seenLinks[id], base);
      }
    }
    fs.stat(base, function(err) {
      if (err) return cb(err);

      fs.readlink(base, function(err, target) {
        if (!isWindows) seenLinks[id] = target;
        gotTarget(err, target);
      });
    });
  }

  function gotTarget(err, target, base) {
    if (err) return cb(err);

    var resolvedLink = pathModule.resolve(previous, target);
    if (cache) cache[base] = resolvedLink;
    gotResolvedLink(resolvedLink);
  }

  function gotResolvedLink(resolvedLink) {
    // resolve the link, then start over
    p = pathModule.resolve(resolvedLink, p.slice(pos));
    start();
  }
};


/***/ }),

/***/ 91585:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const {PassThrough: PassThroughStream} = __nccwpck_require__(92413);

module.exports = options => {
	options = {...options};

	const {array} = options;
	let {encoding} = options;
	const isBuffer = encoding === 'buffer';
	let objectMode = false;

	if (array) {
		objectMode = !(encoding || isBuffer);
	} else {
		encoding = encoding || 'utf8';
	}

	if (isBuffer) {
		encoding = null;
	}

	const stream = new PassThroughStream({objectMode});

	if (encoding) {
		stream.setEncoding(encoding);
	}

	let length = 0;
	const chunks = [];

	stream.on('data', chunk => {
		chunks.push(chunk);

		if (objectMode) {
			length = chunks.length;
		} else {
			length += chunk.length;
		}
	});

	stream.getBufferedValue = () => {
		if (array) {
			return chunks;
		}

		return isBuffer ? Buffer.concat(chunks, length) : chunks.join('');
	};

	stream.getBufferedLength = () => length;

	return stream;
};


/***/ }),

/***/ 21766:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const {constants: BufferConstants} = __nccwpck_require__(64293);
const pump = __nccwpck_require__(18341);
const bufferStream = __nccwpck_require__(91585);

class MaxBufferError extends Error {
	constructor() {
		super('maxBuffer exceeded');
		this.name = 'MaxBufferError';
	}
}

async function getStream(inputStream, options) {
	if (!inputStream) {
		return Promise.reject(new Error('Expected a stream'));
	}

	options = {
		maxBuffer: Infinity,
		...options
	};

	const {maxBuffer} = options;

	let stream;
	await new Promise((resolve, reject) => {
		const rejectPromise = error => {
			// Don't retrieve an oversized buffer.
			if (error && stream.getBufferedLength() <= BufferConstants.MAX_LENGTH) {
				error.bufferedData = stream.getBufferedValue();
			}

			reject(error);
		};

		stream = pump(inputStream, bufferStream(options), error => {
			if (error) {
				rejectPromise(error);
				return;
			}

			resolve();
		});

		stream.on('data', () => {
			if (stream.getBufferedLength() > maxBuffer) {
				rejectPromise(new MaxBufferError());
			}
		});
	});

	return stream.getBufferedValue();
}

module.exports = getStream;
// TODO: Remove this for the next major release
module.exports.default = getStream;
module.exports.buffer = (stream, options) => getStream(stream, {...options, encoding: 'buffer'});
module.exports.array = (stream, options) => getStream(stream, {...options, array: true});
module.exports.MaxBufferError = MaxBufferError;


/***/ }),

/***/ 38337:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const cp = __nccwpck_require__(63129);
const fs = __nccwpck_require__(5630);
const path = __nccwpck_require__(85622);
const util = __nccwpck_require__(31669);

/**
 * @constructor
 * @param {number} code Error code.
 * @param {string} message Error message.
 */
function ProcessError(code, message) {
  const callee = arguments.callee;
  Error.apply(this, [message]);
  Error.captureStackTrace(this, callee);
  this.code = code;
  this.message = message;
  this.name = callee.name;
}
util.inherits(ProcessError, Error);

/**
 * Util function for handling spawned processes as promises.
 * @param {string} exe Executable.
 * @param {Array.<string>} args Arguments.
 * @param {string} cwd Working directory.
 * @return {Promise} A promise.
 */
function spawn(exe, args, cwd) {
  return new Promise((resolve, reject) => {
    const child = cp.spawn(exe, args, {cwd: cwd || process.cwd()});
    const buffer = [];
    child.stderr.on('data', chunk => {
      buffer.push(chunk.toString());
    });
    child.stdout.on('data', chunk => {
      buffer.push(chunk.toString());
    });
    child.on('close', code => {
      const output = buffer.join('');
      if (code) {
        const msg = output || 'Process failed: ' + code;
        reject(new ProcessError(code, msg));
      } else {
        resolve(output);
      }
    });
  });
}

/**
 * Create an object for executing git commands.
 * @param {string} cwd Repository directory.
 * @param {string} exe Git executable (full path if not already on path).
 * @constructor
 */
function Git(cwd, cmd) {
  this.cwd = cwd;
  this.cmd = cmd || 'git';
  this.output = '';
}

/**
 * Execute an arbitrary git command.
 * @param {string} var_args Arguments (e.g. 'remote', 'update').
 * @return {Promise} A promise.  The promise will be resolved with this instance
 *     or rejected with an error.
 */
Git.prototype.exec = function() {
  return spawn(this.cmd, [...arguments], this.cwd).then(output => {
    this.output = output;
    return this;
  });
};

/**
 * Initialize repository.
 * @return {Promise} A promise.
 */
Git.prototype.init = function() {
  return this.exec('init');
};

/**
 * Clean up unversioned files.
 * @return {Promise} A promise.
 */
Git.prototype.clean = function() {
  return this.exec('clean', '-f', '-d');
};

/**
 * Hard reset to remote/branch
 * @param {string} remote Remote alias.
 * @param {string} branch Branch name.
 * @return {Promise} A promise.
 */
Git.prototype.reset = function(remote, branch) {
  return this.exec('reset', '--hard', remote + '/' + branch);
};

/**
 * Fetch from a remote.
 * @param {string} remote Remote alias.
 * @return {Promise} A promise.
 */
Git.prototype.fetch = function(remote) {
  return this.exec('fetch', remote);
};

/**
 * Checkout a branch (create an orphan if it doesn't exist on the remote).
 * @param {string} remote Remote alias.
 * @param {string} branch Branch name.
 * @return {Promise} A promise.
 */
Git.prototype.checkout = function(remote, branch) {
  const treeish = remote + '/' + branch;
  return this.exec('ls-remote', '--exit-code', '.', treeish).then(
    () => {
      // branch exists on remote, hard reset
      return this.exec('checkout', branch)
        .then(() => this.clean())
        .then(() => this.reset(remote, branch));
    },
    error => {
      if (error instanceof ProcessError && error.code === 2) {
        // branch doesn't exist, create an orphan
        return this.exec('checkout', '--orphan', branch);
      } else {
        // unhandled error
        throw error;
      }
    }
  );
};

/**
 * Remove all unversioned files.
 * @param {string|string[]} files Files argument.
 * @return {Promise} A promise.
 */
Git.prototype.rm = function(files) {
  if (!Array.isArray(files)) {
    files = [files];
  }
  return this.exec('rm', '--ignore-unmatch', '-r', '-f', ...files);
};

/**
 * Add files.
 * @param {string|string[]} files Files argument.
 * @return {Promise} A promise.
 */
Git.prototype.add = function(files) {
  if (!Array.isArray(files)) {
    files = [files];
  }
  return this.exec('add', ...files);
};

/**
 * Commit (if there are any changes).
 * @param {string} message Commit message.
 * @return {Promise} A promise.
 */
Git.prototype.commit = function(message) {
  return this.exec('diff-index', '--quiet', 'HEAD').catch(() =>
    this.exec('commit', '-m', message)
  );
};

/**
 * Add tag
 * @param {string} name Name of tag.
 * @return {Promise} A promise.
 */
Git.prototype.tag = function(name) {
  return this.exec('tag', name);
};

/**
 * Push a branch.
 * @param {string} remote Remote alias.
 * @param {string} branch Branch name.
 * @param {boolean} force Force push.
 * @return {Promise} A promise.
 */
Git.prototype.push = function(remote, branch, force) {
  const args = ['push', '--tags', remote, branch];
  if (force) {
    args.push('--force');
  }
  return this.exec.apply(this, args);
};

/**
 * Get the URL for a remote.
 * @param {string} remote Remote alias.
 * @return {Promise<string>} A promise for the remote URL.
 */
Git.prototype.getRemoteUrl = function(remote) {
  return this.exec('config', '--get', 'remote.' + remote + '.url')
    .then(git => {
      const repo = git.output && git.output.split(/[\n\r]/).shift();
      if (repo) {
        return repo;
      } else {
        throw new Error(
          'Failed to get repo URL from options or current directory.'
        );
      }
    })
    .catch(err => {
      throw new Error(
        'Failed to get remote.' +
          remote +
          '.url (task must either be ' +
          'run in a git repository with a configured ' +
          remote +
          ' remote ' +
          'or must be configured with the "repo" option).'
      );
    });
};

/**
 * Delete ref to remove branch history
 * @param {string} branch
 */
Git.prototype.deleteRef = function(branch) {
  return this.exec('update-ref', '-d', 'refs/heads/' + branch);
};

/**
 * Clone a repo into the given dir if it doesn't already exist.
 * @param {string} repo Repository URL.
 * @param {string} dir Target directory.
 * @param {string} branch Branch name.
 * @param {options} options All options.
 * @return {Promise<Git>} A promise.
 */
Git.clone = function clone(repo, dir, branch, options) {
  return fs.exists(dir).then(exists => {
    if (exists) {
      return Promise.resolve(new Git(dir, options.git));
    } else {
      return fs.mkdirp(path.dirname(path.resolve(dir))).then(() => {
        const args = [
          'clone',
          repo,
          dir,
          '--branch',
          branch,
          '--single-branch',
          '--origin',
          options.remote,
          '--depth',
          options.depth
        ];
        return spawn(options.git, args)
          .catch(err => {
            // try again without branch or depth options
            return spawn(options.git, [
              'clone',
              repo,
              dir,
              '--origin',
              options.remote
            ]);
          })
          .then(() => new Git(dir, options.git));
      });
    }
  });
};

module.exports = Git;


/***/ }),

/***/ 54290:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

const findCacheDir = __nccwpck_require__(7281);
const Git = __nccwpck_require__(38337);
const filenamify = __nccwpck_require__(16094);
const copy = __nccwpck_require__(8197)/* .copy */ .JG;
const getUser = __nccwpck_require__(8197)/* .getUser */ .PR;
const fs = __nccwpck_require__(5630);
const globby = __nccwpck_require__(43398);
const path = __nccwpck_require__(85622);
const util = __nccwpck_require__(31669);

const log = util.debuglog('gh-pages');

/**
 * Get the cache directory.
 * @param {string} [optPath] Optional path.
 * @returns {string} The full path to the cache directory.
 */
function getCacheDir(optPath) {
  const dir = findCacheDir({name: 'gh-pages'});
  if (!optPath) {
    return dir;
  }

  return path.join(dir, filenamify(optPath));
}
exports.getCacheDir = getCacheDir;

function getRepo(options) {
  if (options.repo) {
    return Promise.resolve(options.repo);
  } else {
    const git = new Git(process.cwd(), options.git);
    return git.getRemoteUrl(options.remote);
  }
}

exports.defaults = {
  dest: '.',
  add: false,
  git: 'git',
  depth: 1,
  dotfiles: false,
  branch: 'gh-pages',
  remote: 'origin',
  src: '**/*',
  remove: '.',
  push: true,
  history: true,
  message: 'Updates',
  silent: false
};

/**
 * Push a git branch to a remote (pushes gh-pages by default).
 * @param {string} basePath The base path.
 * @param {Object} config Publish options.
 * @param {Function} callback Callback.
 */
exports.publish = function publish(basePath, config, callback) {
  if (typeof config === 'function') {
    callback = config;
    config = {};
  }

  const options = Object.assign({}, exports.defaults, config);

  // For backward compatibility before fixing #334
  if (options.only) {
    options.remove = options.only;
  }

  if (!callback) {
    callback = function(err) {
      if (err) {
        log(err.message);
      }
    };
  }

  function done(err) {
    try {
      callback(err);
    } catch (err2) {
      log('Publish callback threw: %s', err2.message);
    }
  }

  try {
    if (!fs.statSync(basePath).isDirectory()) {
      done(new Error('The "base" option must be an existing directory'));
      return;
    }
  } catch (err) {
    done(err);
    return;
  }

  const files = globby
    .sync(options.src, {
      cwd: basePath,
      dot: options.dotfiles
    })
    .filter(file => {
      return !fs.statSync(path.join(basePath, file)).isDirectory();
    });

  if (!Array.isArray(files) || files.length === 0) {
    done(
      new Error('The pattern in the "src" property didn\'t match any files.')
    );
    return;
  }

  let repoUrl;
  let userPromise;
  if (options.user) {
    userPromise = Promise.resolve(options.user);
  } else {
    userPromise = getUser();
  }
  return userPromise.then(user =>
    getRepo(options)
      .then(repo => {
        repoUrl = repo;
        const clone = getCacheDir(repo);
        log('Cloning %s into %s', repo, clone);
        return Git.clone(repo, clone, options.branch, options);
      })
      .then(git => {
        return git.getRemoteUrl(options.remote).then(url => {
          if (url !== repoUrl) {
            const message =
              'Remote url mismatch.  Got "' +
              url +
              '" ' +
              'but expected "' +
              repoUrl +
              '" in ' +
              git.cwd +
              '.  Try running the `gh-pages-clean` script first.';
            throw new Error(message);
          }
          return git;
        });
      })
      .then(git => {
        // only required if someone mucks with the checkout between builds
        log('Cleaning');
        return git.clean();
      })
      .then(git => {
        log('Fetching %s', options.remote);
        return git.fetch(options.remote);
      })
      .then(git => {
        log('Checking out %s/%s ', options.remote, options.branch);
        return git.checkout(options.remote, options.branch);
      })
      .then(git => {
        if (!options.history) {
          return git.deleteRef(options.branch);
        } else {
          return git;
        }
      })
      .then(git => {
        if (options.add) {
          return git;
        }

        log('Removing files');
        const files = globby
          .sync(options.remove, {
            cwd: path.join(git.cwd, options.dest)
          })
          .map(file => path.join(options.dest, file));
        if (files.length > 0) {
          return git.rm(files);
        } else {
          return git;
        }
      })
      .then(git => {
        log('Copying files');
        return copy(files, basePath, path.join(git.cwd, options.dest)).then(
          function() {
            return git;
          }
        );
      })
      .then(git => {
        return Promise.resolve(
          options.beforeAdd && options.beforeAdd(git)
        ).then(() => git);
      })
      .then(git => {
        log('Adding all');
        return git.add('.');
      })
      .then(git => {
        if (!user) {
          return git;
        }
        return git.exec('config', 'user.email', user.email).then(() => {
          if (!user.name) {
            return git;
          }
          return git.exec('config', 'user.name', user.name);
        });
      })
      .then(git => {
        log('Committing');
        return git.commit(options.message);
      })
      .then(git => {
        if (options.tag) {
          log('Tagging');
          return git.tag(options.tag).catch(error => {
            // tagging failed probably because this tag alredy exists
            log(error);
            log('Tagging failed, continuing');
            return git;
          });
        } else {
          return git;
        }
      })
      .then(git => {
        if (options.push) {
          log('Pushing');
          return git.push(options.remote, options.branch, !options.history);
        } else {
          return git;
        }
      })
      .then(
        () => done(),
        error => {
          if (options.silent) {
            error = new Error(
              'Unspecified error (run without silent option for detail)'
            );
          }
          done(error);
        }
      )
  );
};

/**
 * Clean the cache directory.
 */
exports.clean = function clean() {
  fs.removeSync(getCacheDir());
};


/***/ }),

/***/ 8197:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

var __webpack_unused_export__;
const path = __nccwpck_require__(85622);
const Git = __nccwpck_require__(38337);
const async = __nccwpck_require__(57888);
const fs = __nccwpck_require__(5630);

/**
 * Generate a list of unique directory paths given a list of file paths.
 * @param {Array.<string>} files List of file paths.
 * @return {Array.<string>} List of directory paths.
 */
const uniqueDirs = (__webpack_unused_export__ = function(files) {
  const dirs = {};
  files.forEach(filepath => {
    const parts = path.dirname(filepath).split(path.sep);
    let partial = parts[0] || '/';
    dirs[partial] = true;
    for (let i = 1, ii = parts.length; i < ii; ++i) {
      partial = path.join(partial, parts[i]);
      dirs[partial] = true;
    }
  });
  return Object.keys(dirs);
});

/**
 * Sort function for paths.  Sorter paths come first.  Paths of equal length are
 * sorted alphanumerically in path segment order.
 * @param {string} a First path.
 * @param {string} b Second path.
 * @return {number} Comparison.
 */
const byShortPath = (__webpack_unused_export__ = (a, b) => {
  const aParts = a.split(path.sep);
  const bParts = b.split(path.sep);
  const aLength = aParts.length;
  const bLength = bParts.length;
  let cmp = 0;
  if (aLength < bLength) {
    cmp = -1;
  } else if (aLength > bLength) {
    cmp = 1;
  } else {
    let aPart, bPart;
    for (let i = 0; i < aLength; ++i) {
      aPart = aParts[i];
      bPart = bParts[i];
      if (aPart < bPart) {
        cmp = -1;
        break;
      } else if (aPart > bPart) {
        cmp = 1;
        break;
      }
    }
  }
  return cmp;
});

/**
 * Generate a list of directories to create given a list of file paths.
 * @param {Array.<string>} files List of file paths.
 * @return {Array.<string>} List of directory paths ordered by path length.
 */
const dirsToCreate = (__webpack_unused_export__ = function(files) {
  return uniqueDirs(files).sort(byShortPath);
});

/**
 * Copy a file.
 * @param {Object} obj Object with src and dest properties.
 * @param {function(Error)} callback Callback
 */
const copyFile = (__webpack_unused_export__ = function(obj, callback) {
  let called = false;
  function done(err) {
    if (!called) {
      called = true;
      callback(err);
    }
  }

  const read = fs.createReadStream(obj.src);
  read.on('error', err => {
    done(err);
  });

  const write = fs.createWriteStream(obj.dest);
  write.on('error', err => {
    done(err);
  });
  write.on('close', () => {
    done();
  });

  read.pipe(write);
});

/**
 * Make directory, ignoring errors if directory already exists.
 * @param {string} path Directory path.
 * @param {function(Error)} callback Callback.
 */
function makeDir(path, callback) {
  fs.mkdir(path, err => {
    if (err) {
      // check if directory exists
      fs.stat(path, (err2, stat) => {
        if (err2 || !stat.isDirectory()) {
          callback(err);
        } else {
          callback();
        }
      });
    } else {
      callback();
    }
  });
}

/**
 * Copy a list of files.
 * @param {Array.<string>} files Files to copy.
 * @param {string} base Base directory.
 * @param {string} dest Destination directory.
 * @return {Promise} A promise.
 */
exports.JG = function(files, base, dest) {
  return new Promise((resolve, reject) => {
    const pairs = [];
    const destFiles = [];
    files.forEach(file => {
      const src = path.resolve(base, file);
      const relative = path.relative(base, src);
      const target = path.join(dest, relative);
      pairs.push({
        src: src,
        dest: target
      });
      destFiles.push(target);
    });

    async.eachSeries(dirsToCreate(destFiles), makeDir, err => {
      if (err) {
        return reject(err);
      }
      async.each(pairs, copyFile, err => {
        if (err) {
          return reject(err);
        } else {
          return resolve();
        }
      });
    });
  });
};

exports.PR = function(cwd) {
  return Promise.all([
    new Git(cwd).exec('config', 'user.name'),
    new Git(cwd).exec('config', 'user.email')
  ])
    .then(results => {
      return {name: results[0].output.trim(), email: results[1].output.trim()};
    })
    .catch(err => {
      // git config exits with 1 if name or email is not set
      return null;
    });
};


/***/ }),

/***/ 54655:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var isGlob = __nccwpck_require__(34466);
var pathPosixDirname = __nccwpck_require__(85622).posix.dirname;
var isWin32 = __nccwpck_require__(12087).platform() === 'win32';

var slash = '/';
var backslash = /\\/g;
var enclosure = /[\{\[].*[\}\]]$/;
var globby = /(^|[^\\])([\{\[]|\([^\)]+$)/;
var escaped = /\\([\!\*\?\|\[\]\(\)\{\}])/g;

/**
 * @param {string} str
 * @param {Object} opts
 * @param {boolean} [opts.flipBackslashes=true]
 * @returns {string}
 */
module.exports = function globParent(str, opts) {
  var options = Object.assign({ flipBackslashes: true }, opts);

  // flip windows path separators
  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {
    str = str.replace(backslash, slash);
  }

  // special case for strings ending in enclosure containing path separator
  if (enclosure.test(str)) {
    str += slash;
  }

  // preserves full path in case of trailing path separator
  str += 'a';

  // remove path parts that are globby
  do {
    str = pathPosixDirname(str);
  } while (isGlob(str) || globby.test(str));

  // remove escape chars and return result
  return str.replace(escaped, '$1');
};


/***/ }),

/***/ 47625:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

exports.alphasort = alphasort
exports.alphasorti = alphasorti
exports.setopts = setopts
exports.ownProp = ownProp
exports.makeAbs = makeAbs
exports.finish = finish
exports.mark = mark
exports.isIgnored = isIgnored
exports.childrenIgnored = childrenIgnored

function ownProp (obj, field) {
  return Object.prototype.hasOwnProperty.call(obj, field)
}

var path = __nccwpck_require__(85622)
var minimatch = __nccwpck_require__(83973)
var isAbsolute = __nccwpck_require__(38714)
var Minimatch = minimatch.Minimatch

function alphasorti (a, b) {
  return a.toLowerCase().localeCompare(b.toLowerCase())
}

function alphasort (a, b) {
  return a.localeCompare(b)
}

function setupIgnores (self, options) {
  self.ignore = options.ignore || []

  if (!Array.isArray(self.ignore))
    self.ignore = [self.ignore]

  if (self.ignore.length) {
    self.ignore = self.ignore.map(ignoreMap)
  }
}

// ignore patterns are always in dot:true mode.
function ignoreMap (pattern) {
  var gmatcher = null
  if (pattern.slice(-3) === '/**') {
    var gpattern = pattern.replace(/(\/\*\*)+$/, '')
    gmatcher = new Minimatch(gpattern, { dot: true })
  }

  return {
    matcher: new Minimatch(pattern, { dot: true }),
    gmatcher: gmatcher
  }
}

function setopts (self, pattern, options) {
  if (!options)
    options = {}

  // base-matching: just use globstar for that.
  if (options.matchBase && -1 === pattern.indexOf("/")) {
    if (options.noglobstar) {
      throw new Error("base matching requires globstar")
    }
    pattern = "**/" + pattern
  }

  self.silent = !!options.silent
  self.pattern = pattern
  self.strict = options.strict !== false
  self.realpath = !!options.realpath
  self.realpathCache = options.realpathCache || Object.create(null)
  self.follow = !!options.follow
  self.dot = !!options.dot
  self.mark = !!options.mark
  self.nodir = !!options.nodir
  if (self.nodir)
    self.mark = true
  self.sync = !!options.sync
  self.nounique = !!options.nounique
  self.nonull = !!options.nonull
  self.nosort = !!options.nosort
  self.nocase = !!options.nocase
  self.stat = !!options.stat
  self.noprocess = !!options.noprocess
  self.absolute = !!options.absolute

  self.maxLength = options.maxLength || Infinity
  self.cache = options.cache || Object.create(null)
  self.statCache = options.statCache || Object.create(null)
  self.symlinks = options.symlinks || Object.create(null)

  setupIgnores(self, options)

  self.changedCwd = false
  var cwd = process.cwd()
  if (!ownProp(options, "cwd"))
    self.cwd = cwd
  else {
    self.cwd = path.resolve(options.cwd)
    self.changedCwd = self.cwd !== cwd
  }

  self.root = options.root || path.resolve(self.cwd, "/")
  self.root = path.resolve(self.root)
  if (process.platform === "win32")
    self.root = self.root.replace(/\\/g, "/")

  // TODO: is an absolute `cwd` supposed to be resolved against `root`?
  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')
  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd)
  if (process.platform === "win32")
    self.cwdAbs = self.cwdAbs.replace(/\\/g, "/")
  self.nomount = !!options.nomount

  // disable comments and negation in Minimatch.
  // Note that they are not supported in Glob itself anyway.
  options.nonegate = true
  options.nocomment = true

  self.minimatch = new Minimatch(pattern, options)
  self.options = self.minimatch.options
}

function finish (self) {
  var nou = self.nounique
  var all = nou ? [] : Object.create(null)

  for (var i = 0, l = self.matches.length; i < l; i ++) {
    var matches = self.matches[i]
    if (!matches || Object.keys(matches).length === 0) {
      if (self.nonull) {
        // do like the shell, and spit out the literal glob
        var literal = self.minimatch.globSet[i]
        if (nou)
          all.push(literal)
        else
          all[literal] = true
      }
    } else {
      // had matches
      var m = Object.keys(matches)
      if (nou)
        all.push.apply(all, m)
      else
        m.forEach(function (m) {
          all[m] = true
        })
    }
  }

  if (!nou)
    all = Object.keys(all)

  if (!self.nosort)
    all = all.sort(self.nocase ? alphasorti : alphasort)

  // at *some* point we statted all of these
  if (self.mark) {
    for (var i = 0; i < all.length; i++) {
      all[i] = self._mark(all[i])
    }
    if (self.nodir) {
      all = all.filter(function (e) {
        var notDir = !(/\/$/.test(e))
        var c = self.cache[e] || self.cache[makeAbs(self, e)]
        if (notDir && c)
          notDir = c !== 'DIR' && !Array.isArray(c)
        return notDir
      })
    }
  }

  if (self.ignore.length)
    all = all.filter(function(m) {
      return !isIgnored(self, m)
    })

  self.found = all
}

function mark (self, p) {
  var abs = makeAbs(self, p)
  var c = self.cache[abs]
  var m = p
  if (c) {
    var isDir = c === 'DIR' || Array.isArray(c)
    var slash = p.slice(-1) === '/'

    if (isDir && !slash)
      m += '/'
    else if (!isDir && slash)
      m = m.slice(0, -1)

    if (m !== p) {
      var mabs = makeAbs(self, m)
      self.statCache[mabs] = self.statCache[abs]
      self.cache[mabs] = self.cache[abs]
    }
  }

  return m
}

// lotta situps...
function makeAbs (self, f) {
  var abs = f
  if (f.charAt(0) === '/') {
    abs = path.join(self.root, f)
  } else if (isAbsolute(f) || f === '') {
    abs = f
  } else if (self.changedCwd) {
    abs = path.resolve(self.cwd, f)
  } else {
    abs = path.resolve(f)
  }

  if (process.platform === 'win32')
    abs = abs.replace(/\\/g, '/')

  return abs
}


// Return true, if pattern ends with globstar '**', for the accompanying parent directory.
// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents
function isIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))
  })
}

function childrenIgnored (self, path) {
  if (!self.ignore.length)
    return false

  return self.ignore.some(function(item) {
    return !!(item.gmatcher && item.gmatcher.match(path))
  })
}


/***/ }),

/***/ 91957:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Approach:
//
// 1. Get the minimatch set
// 2. For each pattern in the set, PROCESS(pattern, false)
// 3. Store matches per-set, then uniq them
//
// PROCESS(pattern, inGlobStar)
// Get the first [n] items from pattern that are all strings
// Join these together.  This is PREFIX.
//   If there is no more remaining, then stat(PREFIX) and
//   add to matches if it succeeds.  END.
//
// If inGlobStar and PREFIX is symlink and points to dir
//   set ENTRIES = []
// else readdir(PREFIX) as ENTRIES
//   If fail, END
//
// with ENTRIES
//   If pattern[n] is GLOBSTAR
//     // handle the case where the globstar match is empty
//     // by pruning it out, and testing the resulting pattern
//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)
//     // handle other cases.
//     for ENTRY in ENTRIES (not dotfiles)
//       // attach globstar + tail onto the entry
//       // Mark that this entry is a globstar match
//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)
//
//   else // not globstar
//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)
//       Test ENTRY against pattern[n]
//       If fails, continue
//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])
//
// Caveat:
//   Cache all stats and readdirs results to minimize syscall.  Since all
//   we ever care about is existence and directory-ness, we can just keep
//   `true` for files, and [children,...] for directories, or `false` for
//   things that don't exist.

module.exports = glob

var fs = __nccwpck_require__(35747)
var rp = __nccwpck_require__(46863)
var minimatch = __nccwpck_require__(83973)
var Minimatch = minimatch.Minimatch
var inherits = __nccwpck_require__(44124)
var EE = __nccwpck_require__(28614).EventEmitter
var path = __nccwpck_require__(85622)
var assert = __nccwpck_require__(42357)
var isAbsolute = __nccwpck_require__(38714)
var globSync = __nccwpck_require__(29010)
var common = __nccwpck_require__(47625)
var alphasort = common.alphasort
var alphasorti = common.alphasorti
var setopts = common.setopts
var ownProp = common.ownProp
var inflight = __nccwpck_require__(52492)
var util = __nccwpck_require__(31669)
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

var once = __nccwpck_require__(1223)

function glob (pattern, options, cb) {
  if (typeof options === 'function') cb = options, options = {}
  if (!options) options = {}

  if (options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return globSync(pattern, options)
  }

  return new Glob(pattern, options, cb)
}

glob.sync = globSync
var GlobSync = glob.GlobSync = globSync.GlobSync

// old api surface
glob.glob = glob

function extend (origin, add) {
  if (add === null || typeof add !== 'object') {
    return origin
  }

  var keys = Object.keys(add)
  var i = keys.length
  while (i--) {
    origin[keys[i]] = add[keys[i]]
  }
  return origin
}

glob.hasMagic = function (pattern, options_) {
  var options = extend({}, options_)
  options.noprocess = true

  var g = new Glob(pattern, options)
  var set = g.minimatch.set

  if (!pattern)
    return false

  if (set.length > 1)
    return true

  for (var j = 0; j < set[0].length; j++) {
    if (typeof set[0][j] !== 'string')
      return true
  }

  return false
}

glob.Glob = Glob
inherits(Glob, EE)
function Glob (pattern, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = null
  }

  if (options && options.sync) {
    if (cb)
      throw new TypeError('callback provided to sync glob')
    return new GlobSync(pattern, options)
  }

  if (!(this instanceof Glob))
    return new Glob(pattern, options, cb)

  setopts(this, pattern, options)
  this._didRealPath = false

  // process each pattern in the minimatch set
  var n = this.minimatch.set.length

  // The matches are stored as {<filename>: true,...} so that
  // duplicates are automagically pruned.
  // Later, we do an Object.keys() on these.
  // Keep them as a list so we can fill in when nonull is set.
  this.matches = new Array(n)

  if (typeof cb === 'function') {
    cb = once(cb)
    this.on('error', cb)
    this.on('end', function (matches) {
      cb(null, matches)
    })
  }

  var self = this
  this._processing = 0

  this._emitQueue = []
  this._processQueue = []
  this.paused = false

  if (this.noprocess)
    return this

  if (n === 0)
    return done()

  var sync = true
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false, done)
  }
  sync = false

  function done () {
    --self._processing
    if (self._processing <= 0) {
      if (sync) {
        process.nextTick(function () {
          self._finish()
        })
      } else {
        self._finish()
      }
    }
  }
}

Glob.prototype._finish = function () {
  assert(this instanceof Glob)
  if (this.aborted)
    return

  if (this.realpath && !this._didRealpath)
    return this._realpath()

  common.finish(this)
  this.emit('end', this.found)
}

Glob.prototype._realpath = function () {
  if (this._didRealpath)
    return

  this._didRealpath = true

  var n = this.matches.length
  if (n === 0)
    return this._finish()

  var self = this
  for (var i = 0; i < this.matches.length; i++)
    this._realpathSet(i, next)

  function next () {
    if (--n === 0)
      self._finish()
  }
}

Glob.prototype._realpathSet = function (index, cb) {
  var matchset = this.matches[index]
  if (!matchset)
    return cb()

  var found = Object.keys(matchset)
  var self = this
  var n = found.length

  if (n === 0)
    return cb()

  var set = this.matches[index] = Object.create(null)
  found.forEach(function (p, i) {
    // If there's a problem with the stat, then it means that
    // one or more of the links in the realpath couldn't be
    // resolved.  just return the abs value in that case.
    p = self._makeAbs(p)
    rp.realpath(p, self.realpathCache, function (er, real) {
      if (!er)
        set[real] = true
      else if (er.syscall === 'stat')
        set[p] = true
      else
        self.emit('error', er) // srsly wtf right here

      if (--n === 0) {
        self.matches[index] = set
        cb()
      }
    })
  })
}

Glob.prototype._mark = function (p) {
  return common.mark(this, p)
}

Glob.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}

Glob.prototype.abort = function () {
  this.aborted = true
  this.emit('abort')
}

Glob.prototype.pause = function () {
  if (!this.paused) {
    this.paused = true
    this.emit('pause')
  }
}

Glob.prototype.resume = function () {
  if (this.paused) {
    this.emit('resume')
    this.paused = false
    if (this._emitQueue.length) {
      var eq = this._emitQueue.slice(0)
      this._emitQueue.length = 0
      for (var i = 0; i < eq.length; i ++) {
        var e = eq[i]
        this._emitMatch(e[0], e[1])
      }
    }
    if (this._processQueue.length) {
      var pq = this._processQueue.slice(0)
      this._processQueue.length = 0
      for (var i = 0; i < pq.length; i ++) {
        var p = pq[i]
        this._processing--
        this._process(p[0], p[1], p[2], p[3])
      }
    }
  }
}

Glob.prototype._process = function (pattern, index, inGlobStar, cb) {
  assert(this instanceof Glob)
  assert(typeof cb === 'function')

  if (this.aborted)
    return

  this._processing++
  if (this.paused) {
    this._processQueue.push([pattern, index, inGlobStar, cb])
    return
  }

  //console.error('PROCESS %d', this._processing, pattern)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // see if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index, cb)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip _processing
  if (childrenIgnored(this, read))
    return cb()

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb)
}

Glob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}

Glob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return cb()

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return cb()

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return cb()
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix) {
      if (prefix !== '/')
        e = prefix + '/' + e
      else
        e = prefix + e
    }
    this._process([e].concat(remain), index, inGlobStar, cb)
  }
  cb()
}

Glob.prototype._emitMatch = function (index, e) {
  if (this.aborted)
    return

  if (isIgnored(this, e))
    return

  if (this.paused) {
    this._emitQueue.push([index, e])
    return
  }

  var abs = isAbsolute(e) ? e : this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute)
    e = abs

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  var st = this.statCache[abs]
  if (st)
    this.emit('stat', e, st)

  this.emit('match', e)
}

Glob.prototype._readdirInGlobStar = function (abs, cb) {
  if (this.aborted)
    return

  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false, cb)

  var lstatkey = 'lstat\0' + abs
  var self = this
  var lstatcb = inflight(lstatkey, lstatcb_)

  if (lstatcb)
    fs.lstat(abs, lstatcb)

  function lstatcb_ (er, lstat) {
    if (er && er.code === 'ENOENT')
      return cb()

    var isSym = lstat && lstat.isSymbolicLink()
    self.symlinks[abs] = isSym

    // If it's not a symlink or a dir, then it's definitely a regular file.
    // don't bother doing a readdir in that case.
    if (!isSym && lstat && !lstat.isDirectory()) {
      self.cache[abs] = 'FILE'
      cb()
    } else
      self._readdir(abs, false, cb)
  }
}

Glob.prototype._readdir = function (abs, inGlobStar, cb) {
  if (this.aborted)
    return

  cb = inflight('readdir\0'+abs+'\0'+inGlobStar, cb)
  if (!cb)
    return

  //console.error('RD %j %j', +inGlobStar, abs)
  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs, cb)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return cb()

    if (Array.isArray(c))
      return cb(null, c)
  }

  var self = this
  fs.readdir(abs, readdirCb(this, abs, cb))
}

function readdirCb (self, abs, cb) {
  return function (er, entries) {
    if (er)
      self._readdirError(abs, er, cb)
    else
      self._readdirEntries(abs, entries, cb)
  }
}

Glob.prototype._readdirEntries = function (abs, entries, cb) {
  if (this.aborted)
    return

  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries
  return cb(null, entries)
}

Glob.prototype._readdirError = function (f, er, cb) {
  if (this.aborted)
    return

  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        this.emit('error', error)
        this.abort()
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict) {
        this.emit('error', er)
        // If the error is handled, then we abort
        // if not, we threw out of here
        this.abort()
      }
      if (!this.silent)
        console.error('glob error', er)
      break
  }

  return cb()
}

Glob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {
  var self = this
  this._readdir(abs, inGlobStar, function (er, entries) {
    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb)
  })
}


Glob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {
  //console.error('pgs2', prefix, remain[0], entries)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return cb()

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false, cb)

  var isSym = this.symlinks[abs]
  var len = entries.length

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return cb()

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true, cb)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true, cb)
  }

  cb()
}

Glob.prototype._processSimple = function (prefix, index, cb) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var self = this
  this._stat(prefix, function (er, exists) {
    self._processSimple2(prefix, index, er, exists, cb)
  })
}
Glob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {

  //console.error('ps2', prefix, exists)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return cb()

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
  cb()
}

// Returns either 'DIR', 'FILE', or false
Glob.prototype._stat = function (f, cb) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return cb()

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return cb(null, c)

    if (needDir && c === 'FILE')
      return cb()

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (stat !== undefined) {
    if (stat === false)
      return cb(null, stat)
    else {
      var type = stat.isDirectory() ? 'DIR' : 'FILE'
      if (needDir && type === 'FILE')
        return cb()
      else
        return cb(null, type, stat)
    }
  }

  var self = this
  var statcb = inflight('stat\0' + abs, lstatcb_)
  if (statcb)
    fs.lstat(abs, statcb)

  function lstatcb_ (er, lstat) {
    if (lstat && lstat.isSymbolicLink()) {
      // If it's a symlink, then treat it as the target, unless
      // the target does not exist, then treat it as a file.
      return fs.stat(abs, function (er, stat) {
        if (er)
          self._stat2(f, abs, null, lstat, cb)
        else
          self._stat2(f, abs, er, stat, cb)
      })
    } else {
      self._stat2(f, abs, er, lstat, cb)
    }
  }
}

Glob.prototype._stat2 = function (f, abs, er, stat, cb) {
  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
    this.statCache[abs] = false
    return cb()
  }

  var needDir = f.slice(-1) === '/'
  this.statCache[abs] = stat

  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())
    return cb(null, false, stat)

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'
  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return cb()

  return cb(null, c, stat)
}


/***/ }),

/***/ 29010:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = globSync
globSync.GlobSync = GlobSync

var fs = __nccwpck_require__(35747)
var rp = __nccwpck_require__(46863)
var minimatch = __nccwpck_require__(83973)
var Minimatch = minimatch.Minimatch
var Glob = __nccwpck_require__(91957).Glob
var util = __nccwpck_require__(31669)
var path = __nccwpck_require__(85622)
var assert = __nccwpck_require__(42357)
var isAbsolute = __nccwpck_require__(38714)
var common = __nccwpck_require__(47625)
var alphasort = common.alphasort
var alphasorti = common.alphasorti
var setopts = common.setopts
var ownProp = common.ownProp
var childrenIgnored = common.childrenIgnored
var isIgnored = common.isIgnored

function globSync (pattern, options) {
  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  return new GlobSync(pattern, options).found
}

function GlobSync (pattern, options) {
  if (!pattern)
    throw new Error('must provide pattern')

  if (typeof options === 'function' || arguments.length === 3)
    throw new TypeError('callback provided to sync glob\n'+
                        'See: https://github.com/isaacs/node-glob/issues/167')

  if (!(this instanceof GlobSync))
    return new GlobSync(pattern, options)

  setopts(this, pattern, options)

  if (this.noprocess)
    return this

  var n = this.minimatch.set.length
  this.matches = new Array(n)
  for (var i = 0; i < n; i ++) {
    this._process(this.minimatch.set[i], i, false)
  }
  this._finish()
}

GlobSync.prototype._finish = function () {
  assert(this instanceof GlobSync)
  if (this.realpath) {
    var self = this
    this.matches.forEach(function (matchset, index) {
      var set = self.matches[index] = Object.create(null)
      for (var p in matchset) {
        try {
          p = self._makeAbs(p)
          var real = rp.realpathSync(p, self.realpathCache)
          set[real] = true
        } catch (er) {
          if (er.syscall === 'stat')
            set[self._makeAbs(p)] = true
          else
            throw er
        }
      }
    })
  }
  common.finish(this)
}


GlobSync.prototype._process = function (pattern, index, inGlobStar) {
  assert(this instanceof GlobSync)

  // Get the first [n] parts of pattern that are all strings.
  var n = 0
  while (typeof pattern[n] === 'string') {
    n ++
  }
  // now n is the index of the first one that is *not* a string.

  // See if there's anything else
  var prefix
  switch (n) {
    // if not, then this is rather simple
    case pattern.length:
      this._processSimple(pattern.join('/'), index)
      return

    case 0:
      // pattern *starts* with some non-trivial item.
      // going to readdir(cwd), but not include the prefix in matches.
      prefix = null
      break

    default:
      // pattern has some string bits in the front.
      // whatever it starts with, whether that's 'absolute' like /foo/bar,
      // or 'relative' like '../baz'
      prefix = pattern.slice(0, n).join('/')
      break
  }

  var remain = pattern.slice(n)

  // get the list of entries.
  var read
  if (prefix === null)
    read = '.'
  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {
    if (!prefix || !isAbsolute(prefix))
      prefix = '/' + prefix
    read = prefix
  } else
    read = prefix

  var abs = this._makeAbs(read)

  //if ignored, skip processing
  if (childrenIgnored(this, read))
    return

  var isGlobStar = remain[0] === minimatch.GLOBSTAR
  if (isGlobStar)
    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar)
  else
    this._processReaddir(prefix, read, abs, remain, index, inGlobStar)
}


GlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {
  var entries = this._readdir(abs, inGlobStar)

  // if the abs isn't a dir, then nothing can match!
  if (!entries)
    return

  // It will only match dot entries if it starts with a dot, or if
  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.
  var pn = remain[0]
  var negate = !!this.minimatch.negate
  var rawGlob = pn._glob
  var dotOk = this.dot || rawGlob.charAt(0) === '.'

  var matchedEntries = []
  for (var i = 0; i < entries.length; i++) {
    var e = entries[i]
    if (e.charAt(0) !== '.' || dotOk) {
      var m
      if (negate && !prefix) {
        m = !e.match(pn)
      } else {
        m = e.match(pn)
      }
      if (m)
        matchedEntries.push(e)
    }
  }

  var len = matchedEntries.length
  // If there are no matched entries, then nothing matches.
  if (len === 0)
    return

  // if this is the last remaining pattern bit, then no need for
  // an additional stat *unless* the user has specified mark or
  // stat explicitly.  We know they exist, since readdir returned
  // them.

  if (remain.length === 1 && !this.mark && !this.stat) {
    if (!this.matches[index])
      this.matches[index] = Object.create(null)

    for (var i = 0; i < len; i ++) {
      var e = matchedEntries[i]
      if (prefix) {
        if (prefix.slice(-1) !== '/')
          e = prefix + '/' + e
        else
          e = prefix + e
      }

      if (e.charAt(0) === '/' && !this.nomount) {
        e = path.join(this.root, e)
      }
      this._emitMatch(index, e)
    }
    // This was the last one, and no stats were needed
    return
  }

  // now test all matched entries as stand-ins for that part
  // of the pattern.
  remain.shift()
  for (var i = 0; i < len; i ++) {
    var e = matchedEntries[i]
    var newPattern
    if (prefix)
      newPattern = [prefix, e]
    else
      newPattern = [e]
    this._process(newPattern.concat(remain), index, inGlobStar)
  }
}


GlobSync.prototype._emitMatch = function (index, e) {
  if (isIgnored(this, e))
    return

  var abs = this._makeAbs(e)

  if (this.mark)
    e = this._mark(e)

  if (this.absolute) {
    e = abs
  }

  if (this.matches[index][e])
    return

  if (this.nodir) {
    var c = this.cache[abs]
    if (c === 'DIR' || Array.isArray(c))
      return
  }

  this.matches[index][e] = true

  if (this.stat)
    this._stat(e)
}


GlobSync.prototype._readdirInGlobStar = function (abs) {
  // follow all symlinked directories forever
  // just proceed as if this is a non-globstar situation
  if (this.follow)
    return this._readdir(abs, false)

  var entries
  var lstat
  var stat
  try {
    lstat = fs.lstatSync(abs)
  } catch (er) {
    if (er.code === 'ENOENT') {
      // lstat failed, doesn't exist
      return null
    }
  }

  var isSym = lstat && lstat.isSymbolicLink()
  this.symlinks[abs] = isSym

  // If it's not a symlink or a dir, then it's definitely a regular file.
  // don't bother doing a readdir in that case.
  if (!isSym && lstat && !lstat.isDirectory())
    this.cache[abs] = 'FILE'
  else
    entries = this._readdir(abs, false)

  return entries
}

GlobSync.prototype._readdir = function (abs, inGlobStar) {
  var entries

  if (inGlobStar && !ownProp(this.symlinks, abs))
    return this._readdirInGlobStar(abs)

  if (ownProp(this.cache, abs)) {
    var c = this.cache[abs]
    if (!c || c === 'FILE')
      return null

    if (Array.isArray(c))
      return c
  }

  try {
    return this._readdirEntries(abs, fs.readdirSync(abs))
  } catch (er) {
    this._readdirError(abs, er)
    return null
  }
}

GlobSync.prototype._readdirEntries = function (abs, entries) {
  // if we haven't asked to stat everything, then just
  // assume that everything in there exists, so we can avoid
  // having to stat it a second time.
  if (!this.mark && !this.stat) {
    for (var i = 0; i < entries.length; i ++) {
      var e = entries[i]
      if (abs === '/')
        e = abs + e
      else
        e = abs + '/' + e
      this.cache[e] = true
    }
  }

  this.cache[abs] = entries

  // mark and cache dir-ness
  return entries
}

GlobSync.prototype._readdirError = function (f, er) {
  // handle errors, and cache the information
  switch (er.code) {
    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205
    case 'ENOTDIR': // totally normal. means it *does* exist.
      var abs = this._makeAbs(f)
      this.cache[abs] = 'FILE'
      if (abs === this.cwdAbs) {
        var error = new Error(er.code + ' invalid cwd ' + this.cwd)
        error.path = this.cwd
        error.code = er.code
        throw error
      }
      break

    case 'ENOENT': // not terribly unusual
    case 'ELOOP':
    case 'ENAMETOOLONG':
    case 'UNKNOWN':
      this.cache[this._makeAbs(f)] = false
      break

    default: // some unusual error.  Treat as failure.
      this.cache[this._makeAbs(f)] = false
      if (this.strict)
        throw er
      if (!this.silent)
        console.error('glob error', er)
      break
  }
}

GlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {

  var entries = this._readdir(abs, inGlobStar)

  // no entries means not a dir, so it can never have matches
  // foo.txt/** doesn't match foo.txt
  if (!entries)
    return

  // test without the globstar, and with every child both below
  // and replacing the globstar.
  var remainWithoutGlobStar = remain.slice(1)
  var gspref = prefix ? [ prefix ] : []
  var noGlobStar = gspref.concat(remainWithoutGlobStar)

  // the noGlobStar pattern exits the inGlobStar state
  this._process(noGlobStar, index, false)

  var len = entries.length
  var isSym = this.symlinks[abs]

  // If it's a symlink, and we're in a globstar, then stop
  if (isSym && inGlobStar)
    return

  for (var i = 0; i < len; i++) {
    var e = entries[i]
    if (e.charAt(0) === '.' && !this.dot)
      continue

    // these two cases enter the inGlobStar state
    var instead = gspref.concat(entries[i], remainWithoutGlobStar)
    this._process(instead, index, true)

    var below = gspref.concat(entries[i], remain)
    this._process(below, index, true)
  }
}

GlobSync.prototype._processSimple = function (prefix, index) {
  // XXX review this.  Shouldn't it be doing the mounting etc
  // before doing stat?  kinda weird?
  var exists = this._stat(prefix)

  if (!this.matches[index])
    this.matches[index] = Object.create(null)

  // If it doesn't exist, then just mark the lack of results
  if (!exists)
    return

  if (prefix && isAbsolute(prefix) && !this.nomount) {
    var trail = /[\/\\]$/.test(prefix)
    if (prefix.charAt(0) === '/') {
      prefix = path.join(this.root, prefix)
    } else {
      prefix = path.resolve(this.root, prefix)
      if (trail)
        prefix += '/'
    }
  }

  if (process.platform === 'win32')
    prefix = prefix.replace(/\\/g, '/')

  // Mark this as a match
  this._emitMatch(index, prefix)
}

// Returns either 'DIR', 'FILE', or false
GlobSync.prototype._stat = function (f) {
  var abs = this._makeAbs(f)
  var needDir = f.slice(-1) === '/'

  if (f.length > this.maxLength)
    return false

  if (!this.stat && ownProp(this.cache, abs)) {
    var c = this.cache[abs]

    if (Array.isArray(c))
      c = 'DIR'

    // It exists, but maybe not how we need it
    if (!needDir || c === 'DIR')
      return c

    if (needDir && c === 'FILE')
      return false

    // otherwise we have to stat, because maybe c=true
    // if we know it exists, but not what it is.
  }

  var exists
  var stat = this.statCache[abs]
  if (!stat) {
    var lstat
    try {
      lstat = fs.lstatSync(abs)
    } catch (er) {
      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {
        this.statCache[abs] = false
        return false
      }
    }

    if (lstat && lstat.isSymbolicLink()) {
      try {
        stat = fs.statSync(abs)
      } catch (er) {
        stat = lstat
      }
    } else {
      stat = lstat
    }
  }

  this.statCache[abs] = stat

  var c = true
  if (stat)
    c = stat.isDirectory() ? 'DIR' : 'FILE'

  this.cache[abs] = this.cache[abs] || c

  if (needDir && c === 'FILE')
    return false

  return c
}

GlobSync.prototype._mark = function (p) {
  return common.mark(this, p)
}

GlobSync.prototype._makeAbs = function (f) {
  return common.makeAbs(this, f)
}


/***/ }),

/***/ 43398:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

var Promise = __nccwpck_require__(15222);
var arrayUnion = __nccwpck_require__(99600);
var objectAssign = __nccwpck_require__(17426);
var glob = __nccwpck_require__(91957);
var pify = __nccwpck_require__(64810);

var globP = pify(glob, Promise).bind(glob);

function isNegative(pattern) {
	return pattern[0] === '!';
}

function isString(value) {
	return typeof value === 'string';
}

function assertPatternsInput(patterns) {
	if (!patterns.every(isString)) {
		throw new TypeError('patterns must be a string or an array of strings');
	}
}

function generateGlobTasks(patterns, opts) {
	patterns = [].concat(patterns);
	assertPatternsInput(patterns);

	var globTasks = [];

	opts = objectAssign({
		cache: Object.create(null),
		statCache: Object.create(null),
		realpathCache: Object.create(null),
		symlinks: Object.create(null),
		ignore: []
	}, opts);

	patterns.forEach(function (pattern, i) {
		if (isNegative(pattern)) {
			return;
		}

		var ignore = patterns.slice(i).filter(isNegative).map(function (pattern) {
			return pattern.slice(1);
		});

		globTasks.push({
			pattern: pattern,
			opts: objectAssign({}, opts, {
				ignore: opts.ignore.concat(ignore)
			})
		});
	});

	return globTasks;
}

module.exports = function (patterns, opts) {
	var globTasks;

	try {
		globTasks = generateGlobTasks(patterns, opts);
	} catch (err) {
		return Promise.reject(err);
	}

	return Promise.all(globTasks.map(function (task) {
		return globP(task.pattern, task.opts);
	})).then(function (paths) {
		return arrayUnion.apply(null, paths);
	});
};

module.exports.sync = function (patterns, opts) {
	var globTasks = generateGlobTasks(patterns, opts);

	return globTasks.reduce(function (matches, task) {
		return arrayUnion(matches, glob.sync(task.pattern, task.opts));
	}, []);
};

module.exports.generateGlobTasks = generateGlobTasks;

module.exports.hasMagic = function (patterns, opts) {
	return [].concat(patterns).some(function (pattern) {
		return glob.hasMagic(pattern, opts);
	});
};


/***/ }),

/***/ 26457:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const types_1 = __nccwpck_require__(64597);
function createRejection(error, ...beforeErrorGroups) {
    const promise = (async () => {
        if (error instanceof types_1.RequestError) {
            try {
                for (const hooks of beforeErrorGroups) {
                    if (hooks) {
                        for (const hook of hooks) {
                            // eslint-disable-next-line no-await-in-loop
                            error = await hook(error);
                        }
                    }
                }
            }
            catch (error_) {
                error = error_;
            }
        }
        throw error;
    })();
    const returnPromise = () => promise;
    promise.json = returnPromise;
    promise.text = returnPromise;
    promise.buffer = returnPromise;
    promise.on = returnPromise;
    return promise;
}
exports.default = createRejection;


/***/ }),

/***/ 36056:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const events_1 = __nccwpck_require__(28614);
const is_1 = __nccwpck_require__(7678);
const PCancelable = __nccwpck_require__(19072);
const types_1 = __nccwpck_require__(64597);
const parse_body_1 = __nccwpck_require__(88220);
const core_1 = __nccwpck_require__(60094);
const proxy_events_1 = __nccwpck_require__(53021);
const get_buffer_1 = __nccwpck_require__(34500);
const is_response_ok_1 = __nccwpck_require__(49298);
const proxiedRequestEvents = [
    'request',
    'response',
    'redirect',
    'uploadProgress',
    'downloadProgress'
];
function asPromise(normalizedOptions) {
    let globalRequest;
    let globalResponse;
    const emitter = new events_1.EventEmitter();
    const promise = new PCancelable((resolve, reject, onCancel) => {
        const makeRequest = (retryCount) => {
            const request = new core_1.default(undefined, normalizedOptions);
            request.retryCount = retryCount;
            request._noPipe = true;
            onCancel(() => request.destroy());
            onCancel.shouldReject = false;
            onCancel(() => reject(new types_1.CancelError(request)));
            globalRequest = request;
            request.once('response', async (response) => {
                var _a;
                response.retryCount = retryCount;
                if (response.request.aborted) {
                    // Canceled while downloading - will throw a `CancelError` or `TimeoutError` error
                    return;
                }
                // Download body
                let rawBody;
                try {
                    rawBody = await get_buffer_1.default(request);
                    response.rawBody = rawBody;
                }
                catch (_b) {
                    // The same error is caught below.
                    // See request.once('error')
                    return;
                }
                if (request._isAboutToError) {
                    return;
                }
                // Parse body
                const contentEncoding = ((_a = response.headers['content-encoding']) !== null && _a !== void 0 ? _a : '').toLowerCase();
                const isCompressed = ['gzip', 'deflate', 'br'].includes(contentEncoding);
                const { options } = request;
                if (isCompressed && !options.decompress) {
                    response.body = rawBody;
                }
                else {
                    try {
                        response.body = parse_body_1.default(response, options.responseType, options.parseJson, options.encoding);
                    }
                    catch (error) {
                        // Fallback to `utf8`
                        response.body = rawBody.toString();
                        if (is_response_ok_1.isResponseOk(response)) {
                            request._beforeError(error);
                            return;
                        }
                    }
                }
                try {
                    for (const [index, hook] of options.hooks.afterResponse.entries()) {
                        // @ts-expect-error TS doesn't notice that CancelableRequest is a Promise
                        // eslint-disable-next-line no-await-in-loop
                        response = await hook(response, async (updatedOptions) => {
                            const typedOptions = core_1.default.normalizeArguments(undefined, {
                                ...updatedOptions,
                                retry: {
                                    calculateDelay: () => 0
                                },
                                throwHttpErrors: false,
                                resolveBodyOnly: false
                            }, options);
                            // Remove any further hooks for that request, because we'll call them anyway.
                            // The loop continues. We don't want duplicates (asPromise recursion).
                            typedOptions.hooks.afterResponse = typedOptions.hooks.afterResponse.slice(0, index);
                            for (const hook of typedOptions.hooks.beforeRetry) {
                                // eslint-disable-next-line no-await-in-loop
                                await hook(typedOptions);
                            }
                            const promise = asPromise(typedOptions);
                            onCancel(() => {
                                promise.catch(() => { });
                                promise.cancel();
                            });
                            return promise;
                        });
                    }
                }
                catch (error) {
                    request._beforeError(new types_1.RequestError(error.message, error, request));
                    return;
                }
                if (!is_response_ok_1.isResponseOk(response)) {
                    request._beforeError(new types_1.HTTPError(response));
                    return;
                }
                globalResponse = response;
                resolve(request.options.resolveBodyOnly ? response.body : response);
            });
            const onError = (error) => {
                if (promise.isCanceled) {
                    return;
                }
                const { options } = request;
                if (error instanceof types_1.HTTPError && !options.throwHttpErrors) {
                    const { response } = error;
                    resolve(request.options.resolveBodyOnly ? response.body : response);
                    return;
                }
                reject(error);
            };
            request.once('error', onError);
            const previousBody = request.options.body;
            request.once('retry', (newRetryCount, error) => {
                var _a, _b;
                if (previousBody === ((_a = error.request) === null || _a === void 0 ? void 0 : _a.options.body) && is_1.default.nodeStream((_b = error.request) === null || _b === void 0 ? void 0 : _b.options.body)) {
                    onError(error);
                    return;
                }
                makeRequest(newRetryCount);
            });
            proxy_events_1.default(request, emitter, proxiedRequestEvents);
        };
        makeRequest(0);
    });
    promise.on = (event, fn) => {
        emitter.on(event, fn);
        return promise;
    };
    const shortcut = (responseType) => {
        const newPromise = (async () => {
            // Wait until downloading has ended
            await promise;
            const { options } = globalResponse.request;
            return parse_body_1.default(globalResponse, responseType, options.parseJson, options.encoding);
        })();
        Object.defineProperties(newPromise, Object.getOwnPropertyDescriptors(promise));
        return newPromise;
    };
    promise.json = () => {
        const { headers } = globalRequest.options;
        if (!globalRequest.writableFinished && headers.accept === undefined) {
            headers.accept = 'application/json';
        }
        return shortcut('json');
    };
    promise.buffer = () => shortcut('buffer');
    promise.text = () => shortcut('text');
    return promise;
}
exports.default = asPromise;
__exportStar(__nccwpck_require__(64597), exports);


/***/ }),

/***/ 41048:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const is_1 = __nccwpck_require__(7678);
const normalizeArguments = (options, defaults) => {
    if (is_1.default.null_(options.encoding)) {
        throw new TypeError('To get a Buffer, set `options.responseType` to `buffer` instead');
    }
    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.encoding);
    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.resolveBodyOnly);
    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.methodRewriting);
    is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.isStream);
    is_1.assert.any([is_1.default.string, is_1.default.undefined], options.responseType);
    // `options.responseType`
    if (options.responseType === undefined) {
        options.responseType = 'text';
    }
    // `options.retry`
    const { retry } = options;
    if (defaults) {
        options.retry = { ...defaults.retry };
    }
    else {
        options.retry = {
            calculateDelay: retryObject => retryObject.computedValue,
            limit: 0,
            methods: [],
            statusCodes: [],
            errorCodes: [],
            maxRetryAfter: undefined
        };
    }
    if (is_1.default.object(retry)) {
        options.retry = {
            ...options.retry,
            ...retry
        };
        options.retry.methods = [...new Set(options.retry.methods.map(method => method.toUpperCase()))];
        options.retry.statusCodes = [...new Set(options.retry.statusCodes)];
        options.retry.errorCodes = [...new Set(options.retry.errorCodes)];
    }
    else if (is_1.default.number(retry)) {
        options.retry.limit = retry;
    }
    if (is_1.default.undefined(options.retry.maxRetryAfter)) {
        options.retry.maxRetryAfter = Math.min(
        // TypeScript is not smart enough to handle `.filter(x => is.number(x))`.
        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator
        ...[options.timeout.request, options.timeout.connect].filter(is_1.default.number));
    }
    // `options.pagination`
    if (is_1.default.object(options.pagination)) {
        if (defaults) {
            options.pagination = {
                ...defaults.pagination,
                ...options.pagination
            };
        }
        const { pagination } = options;
        if (!is_1.default.function_(pagination.transform)) {
            throw new Error('`options.pagination.transform` must be implemented');
        }
        if (!is_1.default.function_(pagination.shouldContinue)) {
            throw new Error('`options.pagination.shouldContinue` must be implemented');
        }
        if (!is_1.default.function_(pagination.filter)) {
            throw new TypeError('`options.pagination.filter` must be implemented');
        }
        if (!is_1.default.function_(pagination.paginate)) {
            throw new Error('`options.pagination.paginate` must be implemented');
        }
    }
    // JSON mode
    if (options.responseType === 'json' && options.headers.accept === undefined) {
        options.headers.accept = 'application/json';
    }
    return options;
};
exports.default = normalizeArguments;


/***/ }),

/***/ 88220:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const types_1 = __nccwpck_require__(64597);
const parseBody = (response, responseType, parseJson, encoding) => {
    const { rawBody } = response;
    try {
        if (responseType === 'text') {
            return rawBody.toString(encoding);
        }
        if (responseType === 'json') {
            return rawBody.length === 0 ? '' : parseJson(rawBody.toString());
        }
        if (responseType === 'buffer') {
            return rawBody;
        }
        throw new types_1.ParseError({
            message: `Unknown body type '${responseType}'`,
            name: 'Error'
        }, response);
    }
    catch (error) {
        throw new types_1.ParseError(error, response);
    }
};
exports.default = parseBody;


/***/ }),

/***/ 64597:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CancelError = exports.ParseError = void 0;
const core_1 = __nccwpck_require__(60094);
/**
An error to be thrown when server response code is 2xx, and parsing body fails.
Includes a `response` property.
*/
class ParseError extends core_1.RequestError {
    constructor(error, response) {
        const { options } = response.request;
        super(`${error.message} in "${options.url.toString()}"`, error, response.request);
        this.name = 'ParseError';
    }
}
exports.ParseError = ParseError;
/**
An error to be thrown when the request is aborted with `.cancel()`.
*/
class CancelError extends core_1.RequestError {
    constructor(request) {
        super('Promise was canceled', {}, request);
        this.name = 'CancelError';
    }
    get isCanceled() {
        return true;
    }
}
exports.CancelError = CancelError;
__exportStar(__nccwpck_require__(60094), exports);


/***/ }),

/***/ 93462:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.retryAfterStatusCodes = void 0;
exports.retryAfterStatusCodes = new Set([413, 429, 503]);
const calculateRetryDelay = ({ attemptCount, retryOptions, error, retryAfter }) => {
    if (attemptCount > retryOptions.limit) {
        return 0;
    }
    const hasMethod = retryOptions.methods.includes(error.options.method);
    const hasErrorCode = retryOptions.errorCodes.includes(error.code);
    const hasStatusCode = error.response && retryOptions.statusCodes.includes(error.response.statusCode);
    if (!hasMethod || (!hasErrorCode && !hasStatusCode)) {
        return 0;
    }
    if (error.response) {
        if (retryAfter) {
            if (retryOptions.maxRetryAfter === undefined || retryAfter > retryOptions.maxRetryAfter) {
                return 0;
            }
            return retryAfter;
        }
        if (error.response.statusCode === 413) {
            return 0;
        }
    }
    const noise = Math.random() * 100;
    return ((2 ** (attemptCount - 1)) * 1000) + noise;
};
exports.default = calculateRetryDelay;


/***/ }),

/***/ 60094:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnsupportedProtocolError = exports.ReadError = exports.TimeoutError = exports.UploadError = exports.CacheError = exports.HTTPError = exports.MaxRedirectsError = exports.RequestError = exports.setNonEnumerableProperties = exports.knownHookEvents = exports.withoutBody = exports.kIsNormalizedAlready = void 0;
const util_1 = __nccwpck_require__(31669);
const stream_1 = __nccwpck_require__(92413);
const fs_1 = __nccwpck_require__(35747);
const url_1 = __nccwpck_require__(78835);
const http = __nccwpck_require__(98605);
const http_1 = __nccwpck_require__(98605);
const https = __nccwpck_require__(57211);
const http_timer_1 = __nccwpck_require__(48097);
const cacheable_lookup_1 = __nccwpck_require__(2286);
const CacheableRequest = __nccwpck_require__(78116);
const decompressResponse = __nccwpck_require__(82391);
// @ts-expect-error Missing types
const http2wrapper = __nccwpck_require__(54645);
const lowercaseKeys = __nccwpck_require__(9662);
const is_1 = __nccwpck_require__(7678);
const get_body_size_1 = __nccwpck_require__(94564);
const is_form_data_1 = __nccwpck_require__(90040);
const proxy_events_1 = __nccwpck_require__(53021);
const timed_out_1 = __nccwpck_require__(52454);
const url_to_options_1 = __nccwpck_require__(8026);
const options_to_url_1 = __nccwpck_require__(9219);
const weakable_map_1 = __nccwpck_require__(7288);
const get_buffer_1 = __nccwpck_require__(34500);
const dns_ip_version_1 = __nccwpck_require__(94993);
const is_response_ok_1 = __nccwpck_require__(49298);
const deprecation_warning_1 = __nccwpck_require__(397);
const normalize_arguments_1 = __nccwpck_require__(41048);
const calculate_retry_delay_1 = __nccwpck_require__(93462);
let globalDnsCache;
const kRequest = Symbol('request');
const kResponse = Symbol('response');
const kResponseSize = Symbol('responseSize');
const kDownloadedSize = Symbol('downloadedSize');
const kBodySize = Symbol('bodySize');
const kUploadedSize = Symbol('uploadedSize');
const kServerResponsesPiped = Symbol('serverResponsesPiped');
const kUnproxyEvents = Symbol('unproxyEvents');
const kIsFromCache = Symbol('isFromCache');
const kCancelTimeouts = Symbol('cancelTimeouts');
const kStartedReading = Symbol('startedReading');
const kStopReading = Symbol('stopReading');
const kTriggerRead = Symbol('triggerRead');
const kBody = Symbol('body');
const kJobs = Symbol('jobs');
const kOriginalResponse = Symbol('originalResponse');
const kRetryTimeout = Symbol('retryTimeout');
exports.kIsNormalizedAlready = Symbol('isNormalizedAlready');
const supportsBrotli = is_1.default.string(process.versions.brotli);
exports.withoutBody = new Set(['GET', 'HEAD']);
exports.knownHookEvents = [
    'init',
    'beforeRequest',
    'beforeRedirect',
    'beforeError',
    'beforeRetry',
    // Promise-Only
    'afterResponse'
];
function validateSearchParameters(searchParameters) {
    // eslint-disable-next-line guard-for-in
    for (const key in searchParameters) {
        const value = searchParameters[key];
        if (!is_1.default.string(value) && !is_1.default.number(value) && !is_1.default.boolean(value) && !is_1.default.null_(value) && !is_1.default.undefined(value)) {
            throw new TypeError(`The \`searchParams\` value '${String(value)}' must be a string, number, boolean or null`);
        }
    }
}
function isClientRequest(clientRequest) {
    return is_1.default.object(clientRequest) && !('statusCode' in clientRequest);
}
const cacheableStore = new weakable_map_1.default();
const waitForOpenFile = async (file) => new Promise((resolve, reject) => {
    const onError = (error) => {
        reject(error);
    };
    // Node.js 12 has incomplete types
    if (!file.pending) {
        resolve();
    }
    file.once('error', onError);
    file.once('ready', () => {
        file.off('error', onError);
        resolve();
    });
});
const redirectCodes = new Set([300, 301, 302, 303, 304, 307, 308]);
const nonEnumerableProperties = [
    'context',
    'body',
    'json',
    'form'
];
exports.setNonEnumerableProperties = (sources, to) => {
    // Non enumerable properties shall not be merged
    const properties = {};
    for (const source of sources) {
        if (!source) {
            continue;
        }
        for (const name of nonEnumerableProperties) {
            if (!(name in source)) {
                continue;
            }
            properties[name] = {
                writable: true,
                configurable: true,
                enumerable: false,
                // @ts-expect-error TS doesn't see the check above
                value: source[name]
            };
        }
    }
    Object.defineProperties(to, properties);
};
/**
An error to be thrown when a request fails.
Contains a `code` property with error class code, like `ECONNREFUSED`.
*/
class RequestError extends Error {
    constructor(message, error, self) {
        var _a;
        super(message);
        Error.captureStackTrace(this, this.constructor);
        this.name = 'RequestError';
        this.code = error.code;
        if (self instanceof Request) {
            Object.defineProperty(this, 'request', {
                enumerable: false,
                value: self
            });
            Object.defineProperty(this, 'response', {
                enumerable: false,
                value: self[kResponse]
            });
            Object.defineProperty(this, 'options', {
                // This fails because of TS 3.7.2 useDefineForClassFields
                // Ref: https://github.com/microsoft/TypeScript/issues/34972
                enumerable: false,
                value: self.options
            });
        }
        else {
            Object.defineProperty(this, 'options', {
                // This fails because of TS 3.7.2 useDefineForClassFields
                // Ref: https://github.com/microsoft/TypeScript/issues/34972
                enumerable: false,
                value: self
            });
        }
        this.timings = (_a = this.request) === null || _a === void 0 ? void 0 : _a.timings;
        // Recover the original stacktrace
        if (is_1.default.string(error.stack) && is_1.default.string(this.stack)) {
            const indexOfMessage = this.stack.indexOf(this.message) + this.message.length;
            const thisStackTrace = this.stack.slice(indexOfMessage).split('\n').reverse();
            const errorStackTrace = error.stack.slice(error.stack.indexOf(error.message) + error.message.length).split('\n').reverse();
            // Remove duplicated traces
            while (errorStackTrace.length !== 0 && errorStackTrace[0] === thisStackTrace[0]) {
                thisStackTrace.shift();
            }
            this.stack = `${this.stack.slice(0, indexOfMessage)}${thisStackTrace.reverse().join('\n')}${errorStackTrace.reverse().join('\n')}`;
        }
    }
}
exports.RequestError = RequestError;
/**
An error to be thrown when the server redirects you more than ten times.
Includes a `response` property.
*/
class MaxRedirectsError extends RequestError {
    constructor(request) {
        super(`Redirected ${request.options.maxRedirects} times. Aborting.`, {}, request);
        this.name = 'MaxRedirectsError';
    }
}
exports.MaxRedirectsError = MaxRedirectsError;
/**
An error to be thrown when the server response code is not 2xx nor 3xx if `options.followRedirect` is `true`, but always except for 304.
Includes a `response` property.
*/
class HTTPError extends RequestError {
    constructor(response) {
        super(`Response code ${response.statusCode} (${response.statusMessage})`, {}, response.request);
        this.name = 'HTTPError';
    }
}
exports.HTTPError = HTTPError;
/**
An error to be thrown when a cache method fails.
For example, if the database goes down or there's a filesystem error.
*/
class CacheError extends RequestError {
    constructor(error, request) {
        super(error.message, error, request);
        this.name = 'CacheError';
    }
}
exports.CacheError = CacheError;
/**
An error to be thrown when the request body is a stream and an error occurs while reading from that stream.
*/
class UploadError extends RequestError {
    constructor(error, request) {
        super(error.message, error, request);
        this.name = 'UploadError';
    }
}
exports.UploadError = UploadError;
/**
An error to be thrown when the request is aborted due to a timeout.
Includes an `event` and `timings` property.
*/
class TimeoutError extends RequestError {
    constructor(error, timings, request) {
        super(error.message, error, request);
        this.name = 'TimeoutError';
        this.event = error.event;
        this.timings = timings;
    }
}
exports.TimeoutError = TimeoutError;
/**
An error to be thrown when reading from response stream fails.
*/
class ReadError extends RequestError {
    constructor(error, request) {
        super(error.message, error, request);
        this.name = 'ReadError';
    }
}
exports.ReadError = ReadError;
/**
An error to be thrown when given an unsupported protocol.
*/
class UnsupportedProtocolError extends RequestError {
    constructor(options) {
        super(`Unsupported protocol "${options.url.protocol}"`, {}, options);
        this.name = 'UnsupportedProtocolError';
    }
}
exports.UnsupportedProtocolError = UnsupportedProtocolError;
const proxiedRequestEvents = [
    'socket',
    'connect',
    'continue',
    'information',
    'upgrade',
    'timeout'
];
class Request extends stream_1.Duplex {
    constructor(url, options = {}, defaults) {
        super({
            // This must be false, to enable throwing after destroy
            // It is used for retry logic in Promise API
            autoDestroy: false,
            // It needs to be zero because we're just proxying the data to another stream
            highWaterMark: 0
        });
        this[kDownloadedSize] = 0;
        this[kUploadedSize] = 0;
        this.requestInitialized = false;
        this[kServerResponsesPiped] = new Set();
        this.redirects = [];
        this[kStopReading] = false;
        this[kTriggerRead] = false;
        this[kJobs] = [];
        this.retryCount = 0;
        // TODO: Remove this when targeting Node.js >= 12
        this._progressCallbacks = [];
        const unlockWrite = () => this._unlockWrite();
        const lockWrite = () => this._lockWrite();
        this.on('pipe', (source) => {
            source.prependListener('data', unlockWrite);
            source.on('data', lockWrite);
            source.prependListener('end', unlockWrite);
            source.on('end', lockWrite);
        });
        this.on('unpipe', (source) => {
            source.off('data', unlockWrite);
            source.off('data', lockWrite);
            source.off('end', unlockWrite);
            source.off('end', lockWrite);
        });
        this.on('pipe', source => {
            if (source instanceof http_1.IncomingMessage) {
                this.options.headers = {
                    ...source.headers,
                    ...this.options.headers
                };
            }
        });
        const { json, body, form } = options;
        if (json || body || form) {
            this._lockWrite();
        }
        if (exports.kIsNormalizedAlready in options) {
            this.options = options;
        }
        else {
            try {
                // @ts-expect-error Common TypeScript bug saying that `this.constructor` is not accessible
                this.options = this.constructor.normalizeArguments(url, options, defaults);
            }
            catch (error) {
                // TODO: Move this to `_destroy()`
                if (is_1.default.nodeStream(options.body)) {
                    options.body.destroy();
                }
                this.destroy(error);
                return;
            }
        }
        (async () => {
            var _a;
            try {
                if (this.options.body instanceof fs_1.ReadStream) {
                    await waitForOpenFile(this.options.body);
                }
                const { url: normalizedURL } = this.options;
                if (!normalizedURL) {
                    throw new TypeError('Missing `url` property');
                }
                this.requestUrl = normalizedURL.toString();
                decodeURI(this.requestUrl);
                await this._finalizeBody();
                await this._makeRequest();
                if (this.destroyed) {
                    (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroy();
                    return;
                }
                // Queued writes etc.
                for (const job of this[kJobs]) {
                    job();
                }
                // Prevent memory leak
                this[kJobs].length = 0;
                this.requestInitialized = true;
            }
            catch (error) {
                if (error instanceof RequestError) {
                    this._beforeError(error);
                    return;
                }
                // This is a workaround for https://github.com/nodejs/node/issues/33335
                if (!this.destroyed) {
                    this.destroy(error);
                }
            }
        })();
    }
    static normalizeArguments(url, options, defaults) {
        var _a, _b, _c, _d, _e;
        const rawOptions = options;
        if (is_1.default.object(url) && !is_1.default.urlInstance(url)) {
            options = { ...defaults, ...url, ...options };
        }
        else {
            if (url && options && options.url !== undefined) {
                throw new TypeError('The `url` option is mutually exclusive with the `input` argument');
            }
            options = { ...defaults, ...options };
            if (url !== undefined) {
                options.url = url;
            }
            if (is_1.default.urlInstance(options.url)) {
                options.url = new url_1.URL(options.url.toString());
            }
        }
        // TODO: Deprecate URL options in Got 12.
        // Support extend-specific options
        if (options.cache === false) {
            options.cache = undefined;
        }
        if (options.dnsCache === false) {
            options.dnsCache = undefined;
        }
        // Nice type assertions
        is_1.assert.any([is_1.default.string, is_1.default.undefined], options.method);
        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.headers);
        is_1.assert.any([is_1.default.string, is_1.default.urlInstance, is_1.default.undefined], options.prefixUrl);
        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cookieJar);
        is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.searchParams);
        is_1.assert.any([is_1.default.object, is_1.default.string, is_1.default.undefined], options.cache);
        is_1.assert.any([is_1.default.object, is_1.default.number, is_1.default.undefined], options.timeout);
        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.context);
        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.hooks);
        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.decompress);
        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.ignoreInvalidCookies);
        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.followRedirect);
        is_1.assert.any([is_1.default.number, is_1.default.undefined], options.maxRedirects);
        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.throwHttpErrors);
        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.http2);
        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.allowGetBody);
        is_1.assert.any([is_1.default.string, is_1.default.undefined], options.localAddress);
        is_1.assert.any([dns_ip_version_1.isDnsLookupIpVersion, is_1.default.undefined], options.dnsLookupIpVersion);
        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.https);
        is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.rejectUnauthorized);
        if (options.https) {
            is_1.assert.any([is_1.default.boolean, is_1.default.undefined], options.https.rejectUnauthorized);
            is_1.assert.any([is_1.default.function_, is_1.default.undefined], options.https.checkServerIdentity);
            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificateAuthority);
            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.key);
            is_1.assert.any([is_1.default.string, is_1.default.object, is_1.default.array, is_1.default.undefined], options.https.certificate);
            is_1.assert.any([is_1.default.string, is_1.default.undefined], options.https.passphrase);
            is_1.assert.any([is_1.default.string, is_1.default.buffer, is_1.default.array, is_1.default.undefined], options.https.pfx);
        }
        is_1.assert.any([is_1.default.object, is_1.default.undefined], options.cacheOptions);
        // `options.method`
        if (is_1.default.string(options.method)) {
            options.method = options.method.toUpperCase();
        }
        else {
            options.method = 'GET';
        }
        // `options.headers`
        if (options.headers === (defaults === null || defaults === void 0 ? void 0 : defaults.headers)) {
            options.headers = { ...options.headers };
        }
        else {
            options.headers = lowercaseKeys({ ...(defaults === null || defaults === void 0 ? void 0 : defaults.headers), ...options.headers });
        }
        // Disallow legacy `url.Url`
        if ('slashes' in options) {
            throw new TypeError('The legacy `url.Url` has been deprecated. Use `URL` instead.');
        }
        // `options.auth`
        if ('auth' in options) {
            throw new TypeError('Parameter `auth` is deprecated. Use `username` / `password` instead.');
        }
        // `options.searchParams`
        if ('searchParams' in options) {
            if (options.searchParams && options.searchParams !== (defaults === null || defaults === void 0 ? void 0 : defaults.searchParams)) {
                let searchParameters;
                if (is_1.default.string(options.searchParams) || (options.searchParams instanceof url_1.URLSearchParams)) {
                    searchParameters = new url_1.URLSearchParams(options.searchParams);
                }
                else {
                    validateSearchParameters(options.searchParams);
                    searchParameters = new url_1.URLSearchParams();
                    // eslint-disable-next-line guard-for-in
                    for (const key in options.searchParams) {
                        const value = options.searchParams[key];
                        if (value === null) {
                            searchParameters.append(key, '');
                        }
                        else if (value !== undefined) {
                            searchParameters.append(key, value);
                        }
                    }
                }
                // `normalizeArguments()` is also used to merge options
                (_a = defaults === null || defaults === void 0 ? void 0 : defaults.searchParams) === null || _a === void 0 ? void 0 : _a.forEach((value, key) => {
                    // Only use default if one isn't already defined
                    if (!searchParameters.has(key)) {
                        searchParameters.append(key, value);
                    }
                });
                options.searchParams = searchParameters;
            }
        }
        // `options.username` & `options.password`
        options.username = (_b = options.username) !== null && _b !== void 0 ? _b : '';
        options.password = (_c = options.password) !== null && _c !== void 0 ? _c : '';
        // `options.prefixUrl` & `options.url`
        if (is_1.default.undefined(options.prefixUrl)) {
            options.prefixUrl = (_d = defaults === null || defaults === void 0 ? void 0 : defaults.prefixUrl) !== null && _d !== void 0 ? _d : '';
        }
        else {
            options.prefixUrl = options.prefixUrl.toString();
            if (options.prefixUrl !== '' && !options.prefixUrl.endsWith('/')) {
                options.prefixUrl += '/';
            }
        }
        if (is_1.default.string(options.url)) {
            if (options.url.startsWith('/')) {
                throw new Error('`input` must not start with a slash when using `prefixUrl`');
            }
            options.url = options_to_url_1.default(options.prefixUrl + options.url, options);
        }
        else if ((is_1.default.undefined(options.url) && options.prefixUrl !== '') || options.protocol) {
            options.url = options_to_url_1.default(options.prefixUrl, options);
        }
        if (options.url) {
            if ('port' in options) {
                delete options.port;
            }
            // Make it possible to change `options.prefixUrl`
            let { prefixUrl } = options;
            Object.defineProperty(options, 'prefixUrl', {
                set: (value) => {
                    const url = options.url;
                    if (!url.href.startsWith(value)) {
                        throw new Error(`Cannot change \`prefixUrl\` from ${prefixUrl} to ${value}: ${url.href}`);
                    }
                    options.url = new url_1.URL(value + url.href.slice(prefixUrl.length));
                    prefixUrl = value;
                },
                get: () => prefixUrl
            });
            // Support UNIX sockets
            let { protocol } = options.url;
            if (protocol === 'unix:') {
                protocol = 'http:';
                options.url = new url_1.URL(`http://unix${options.url.pathname}${options.url.search}`);
            }
            // Set search params
            if (options.searchParams) {
                // eslint-disable-next-line @typescript-eslint/no-base-to-string
                options.url.search = options.searchParams.toString();
            }
            // Protocol check
            if (protocol !== 'http:' && protocol !== 'https:') {
                throw new UnsupportedProtocolError(options);
            }
            // Update `username`
            if (options.username === '') {
                options.username = options.url.username;
            }
            else {
                options.url.username = options.username;
            }
            // Update `password`
            if (options.password === '') {
                options.password = options.url.password;
            }
            else {
                options.url.password = options.password;
            }
        }
        // `options.cookieJar`
        const { cookieJar } = options;
        if (cookieJar) {
            let { setCookie, getCookieString } = cookieJar;
            is_1.assert.function_(setCookie);
            is_1.assert.function_(getCookieString);
            /* istanbul ignore next: Horrible `tough-cookie` v3 check */
            if (setCookie.length === 4 && getCookieString.length === 0) {
                setCookie = util_1.promisify(setCookie.bind(options.cookieJar));
                getCookieString = util_1.promisify(getCookieString.bind(options.cookieJar));
                options.cookieJar = {
                    setCookie,
                    getCookieString: getCookieString
                };
            }
        }
        // `options.cache`
        const { cache } = options;
        if (cache) {
            if (!cacheableStore.has(cache)) {
                cacheableStore.set(cache, new CacheableRequest(((requestOptions, handler) => {
                    const result = requestOptions[kRequest](requestOptions, handler);
                    // TODO: remove this when `cacheable-request` supports async request functions.
                    if (is_1.default.promise(result)) {
                        // @ts-expect-error
                        // We only need to implement the error handler in order to support HTTP2 caching.
                        // The result will be a promise anyway.
                        result.once = (event, handler) => {
                            if (event === 'error') {
                                result.catch(handler);
                            }
                            else if (event === 'abort') {
                                // The empty catch is needed here in case when
                                // it rejects before it's `await`ed in `_makeRequest`.
                                (async () => {
                                    try {
                                        const request = (await result);
                                        request.once('abort', handler);
                                    }
                                    catch (_a) { }
                                })();
                            }
                            else {
                                /* istanbul ignore next: safety check */
                                throw new Error(`Unknown HTTP2 promise event: ${event}`);
                            }
                            return result;
                        };
                    }
                    return result;
                }), cache));
            }
        }
        // `options.cacheOptions`
        options.cacheOptions = { ...options.cacheOptions };
        // `options.dnsCache`
        if (options.dnsCache === true) {
            if (!globalDnsCache) {
                globalDnsCache = new cacheable_lookup_1.default();
            }
            options.dnsCache = globalDnsCache;
        }
        else if (!is_1.default.undefined(options.dnsCache) && !options.dnsCache.lookup) {
            throw new TypeError(`Parameter \`dnsCache\` must be a CacheableLookup instance or a boolean, got ${is_1.default(options.dnsCache)}`);
        }
        // `options.timeout`
        if (is_1.default.number(options.timeout)) {
            options.timeout = { request: options.timeout };
        }
        else if (defaults && options.timeout !== defaults.timeout) {
            options.timeout = {
                ...defaults.timeout,
                ...options.timeout
            };
        }
        else {
            options.timeout = { ...options.timeout };
        }
        // `options.context`
        if (!options.context) {
            options.context = {};
        }
        // `options.hooks`
        const areHooksDefault = options.hooks === (defaults === null || defaults === void 0 ? void 0 : defaults.hooks);
        options.hooks = { ...options.hooks };
        for (const event of exports.knownHookEvents) {
            if (event in options.hooks) {
                if (is_1.default.array(options.hooks[event])) {
                    // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044
                    options.hooks[event] = [...options.hooks[event]];
                }
                else {
                    throw new TypeError(`Parameter \`${event}\` must be an Array, got ${is_1.default(options.hooks[event])}`);
                }
            }
            else {
                options.hooks[event] = [];
            }
        }
        if (defaults && !areHooksDefault) {
            for (const event of exports.knownHookEvents) {
                const defaultHooks = defaults.hooks[event];
                if (defaultHooks.length > 0) {
                    // See https://github.com/microsoft/TypeScript/issues/31445#issuecomment-576929044
                    options.hooks[event] = [
                        ...defaults.hooks[event],
                        ...options.hooks[event]
                    ];
                }
            }
        }
        // DNS options
        if ('family' in options) {
            deprecation_warning_1.default('"options.family" was never documented, please use "options.dnsLookupIpVersion"');
        }
        // HTTPS options
        if (defaults === null || defaults === void 0 ? void 0 : defaults.https) {
            options.https = { ...defaults.https, ...options.https };
        }
        if ('rejectUnauthorized' in options) {
            deprecation_warning_1.default('"options.rejectUnauthorized" is now deprecated, please use "options.https.rejectUnauthorized"');
        }
        if ('checkServerIdentity' in options) {
            deprecation_warning_1.default('"options.checkServerIdentity" was never documented, please use "options.https.checkServerIdentity"');
        }
        if ('ca' in options) {
            deprecation_warning_1.default('"options.ca" was never documented, please use "options.https.certificateAuthority"');
        }
        if ('key' in options) {
            deprecation_warning_1.default('"options.key" was never documented, please use "options.https.key"');
        }
        if ('cert' in options) {
            deprecation_warning_1.default('"options.cert" was never documented, please use "options.https.certificate"');
        }
        if ('passphrase' in options) {
            deprecation_warning_1.default('"options.passphrase" was never documented, please use "options.https.passphrase"');
        }
        if ('pfx' in options) {
            deprecation_warning_1.default('"options.pfx" was never documented, please use "options.https.pfx"');
        }
        // Other options
        if ('followRedirects' in options) {
            throw new TypeError('The `followRedirects` option does not exist. Use `followRedirect` instead.');
        }
        if (options.agent) {
            for (const key in options.agent) {
                if (key !== 'http' && key !== 'https' && key !== 'http2') {
                    throw new TypeError(`Expected the \`options.agent\` properties to be \`http\`, \`https\` or \`http2\`, got \`${key}\``);
                }
            }
        }
        options.maxRedirects = (_e = options.maxRedirects) !== null && _e !== void 0 ? _e : 0;
        // Set non-enumerable properties
        exports.setNonEnumerableProperties([defaults, rawOptions], options);
        return normalize_arguments_1.default(options, defaults);
    }
    _lockWrite() {
        const onLockedWrite = () => {
            throw new TypeError('The payload has been already provided');
        };
        this.write = onLockedWrite;
        this.end = onLockedWrite;
    }
    _unlockWrite() {
        this.write = super.write;
        this.end = super.end;
    }
    async _finalizeBody() {
        const { options } = this;
        const { headers } = options;
        const isForm = !is_1.default.undefined(options.form);
        const isJSON = !is_1.default.undefined(options.json);
        const isBody = !is_1.default.undefined(options.body);
        const hasPayload = isForm || isJSON || isBody;
        const cannotHaveBody = exports.withoutBody.has(options.method) && !(options.method === 'GET' && options.allowGetBody);
        this._cannotHaveBody = cannotHaveBody;
        if (hasPayload) {
            if (cannotHaveBody) {
                throw new TypeError(`The \`${options.method}\` method cannot be used with a body`);
            }
            if ([isBody, isForm, isJSON].filter(isTrue => isTrue).length > 1) {
                throw new TypeError('The `body`, `json` and `form` options are mutually exclusive');
            }
            if (isBody &&
                !(options.body instanceof stream_1.Readable) &&
                !is_1.default.string(options.body) &&
                !is_1.default.buffer(options.body) &&
                !is_form_data_1.default(options.body)) {
                throw new TypeError('The `body` option must be a stream.Readable, string or Buffer');
            }
            if (isForm && !is_1.default.object(options.form)) {
                throw new TypeError('The `form` option must be an Object');
            }
            {
                // Serialize body
                const noContentType = !is_1.default.string(headers['content-type']);
                if (isBody) {
                    // Special case for https://github.com/form-data/form-data
                    if (is_form_data_1.default(options.body) && noContentType) {
                        headers['content-type'] = `multipart/form-data; boundary=${options.body.getBoundary()}`;
                    }
                    this[kBody] = options.body;
                }
                else if (isForm) {
                    if (noContentType) {
                        headers['content-type'] = 'application/x-www-form-urlencoded';
                    }
                    this[kBody] = (new url_1.URLSearchParams(options.form)).toString();
                }
                else {
                    if (noContentType) {
                        headers['content-type'] = 'application/json';
                    }
                    this[kBody] = options.stringifyJson(options.json);
                }
                const uploadBodySize = await get_body_size_1.default(this[kBody], options.headers);
                // See https://tools.ietf.org/html/rfc7230#section-3.3.2
                // A user agent SHOULD send a Content-Length in a request message when
                // no Transfer-Encoding is sent and the request method defines a meaning
                // for an enclosed payload body.  For example, a Content-Length header
                // field is normally sent in a POST request even when the value is 0
                // (indicating an empty payload body).  A user agent SHOULD NOT send a
                // Content-Length header field when the request message does not contain
                // a payload body and the method semantics do not anticipate such a
                // body.
                if (is_1.default.undefined(headers['content-length']) && is_1.default.undefined(headers['transfer-encoding'])) {
                    if (!cannotHaveBody && !is_1.default.undefined(uploadBodySize)) {
                        headers['content-length'] = String(uploadBodySize);
                    }
                }
            }
        }
        else if (cannotHaveBody) {
            this._lockWrite();
        }
        else {
            this._unlockWrite();
        }
        this[kBodySize] = Number(headers['content-length']) || undefined;
    }
    async _onResponseBase(response) {
        const { options } = this;
        const { url } = options;
        this[kOriginalResponse] = response;
        if (options.decompress) {
            response = decompressResponse(response);
        }
        const statusCode = response.statusCode;
        const typedResponse = response;
        typedResponse.statusMessage = typedResponse.statusMessage ? typedResponse.statusMessage : http.STATUS_CODES[statusCode];
        typedResponse.url = options.url.toString();
        typedResponse.requestUrl = this.requestUrl;
        typedResponse.redirectUrls = this.redirects;
        typedResponse.request = this;
        typedResponse.isFromCache = response.fromCache || false;
        typedResponse.ip = this.ip;
        typedResponse.retryCount = this.retryCount;
        this[kIsFromCache] = typedResponse.isFromCache;
        this[kResponseSize] = Number(response.headers['content-length']) || undefined;
        this[kResponse] = response;
        response.once('end', () => {
            this[kResponseSize] = this[kDownloadedSize];
            this.emit('downloadProgress', this.downloadProgress);
        });
        response.once('error', (error) => {
            // Force clean-up, because some packages don't do this.
            // TODO: Fix decompress-response
            response.destroy();
            this._beforeError(new ReadError(error, this));
        });
        response.once('aborted', () => {
            this._beforeError(new ReadError({
                name: 'Error',
                message: 'The server aborted pending request',
                code: 'ECONNRESET'
            }, this));
        });
        this.emit('downloadProgress', this.downloadProgress);
        const rawCookies = response.headers['set-cookie'];
        if (is_1.default.object(options.cookieJar) && rawCookies) {
            let promises = rawCookies.map(async (rawCookie) => options.cookieJar.setCookie(rawCookie, url.toString()));
            if (options.ignoreInvalidCookies) {
                promises = promises.map(async (p) => p.catch(() => { }));
            }
            try {
                await Promise.all(promises);
            }
            catch (error) {
                this._beforeError(error);
                return;
            }
        }
        if (options.followRedirect && response.headers.location && redirectCodes.has(statusCode)) {
            // We're being redirected, we don't care about the response.
            // It'd be best to abort the request, but we can't because
            // we would have to sacrifice the TCP connection. We don't want that.
            response.resume();
            if (this[kRequest]) {
                this[kCancelTimeouts]();
                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
                delete this[kRequest];
                this[kUnproxyEvents]();
            }
            const shouldBeGet = statusCode === 303 && options.method !== 'GET' && options.method !== 'HEAD';
            if (shouldBeGet || !options.methodRewriting) {
                // Server responded with "see other", indicating that the resource exists at another location,
                // and the client should request it from that location via GET or HEAD.
                options.method = 'GET';
                if ('body' in options) {
                    delete options.body;
                }
                if ('json' in options) {
                    delete options.json;
                }
                if ('form' in options) {
                    delete options.form;
                }
                this[kBody] = undefined;
                delete options.headers['content-length'];
            }
            if (this.redirects.length >= options.maxRedirects) {
                this._beforeError(new MaxRedirectsError(this));
                return;
            }
            try {
                // Do not remove. See https://github.com/sindresorhus/got/pull/214
                const redirectBuffer = Buffer.from(response.headers.location, 'binary').toString();
                // Handles invalid URLs. See https://github.com/sindresorhus/got/issues/604
                const redirectUrl = new url_1.URL(redirectBuffer, url);
                const redirectString = redirectUrl.toString();
                decodeURI(redirectString);
                // Redirecting to a different site, clear sensitive data.
                if (redirectUrl.hostname !== url.hostname || redirectUrl.port !== url.port) {
                    if ('host' in options.headers) {
                        delete options.headers.host;
                    }
                    if ('cookie' in options.headers) {
                        delete options.headers.cookie;
                    }
                    if ('authorization' in options.headers) {
                        delete options.headers.authorization;
                    }
                    if (options.username || options.password) {
                        options.username = '';
                        options.password = '';
                    }
                }
                else {
                    redirectUrl.username = options.username;
                    redirectUrl.password = options.password;
                }
                this.redirects.push(redirectString);
                options.url = redirectUrl;
                for (const hook of options.hooks.beforeRedirect) {
                    // eslint-disable-next-line no-await-in-loop
                    await hook(options, typedResponse);
                }
                this.emit('redirect', typedResponse, options);
                await this._makeRequest();
            }
            catch (error) {
                this._beforeError(error);
                return;
            }
            return;
        }
        if (options.isStream && options.throwHttpErrors && !is_response_ok_1.isResponseOk(typedResponse)) {
            this._beforeError(new HTTPError(typedResponse));
            return;
        }
        response.on('readable', () => {
            if (this[kTriggerRead]) {
                this._read();
            }
        });
        this.on('resume', () => {
            response.resume();
        });
        this.on('pause', () => {
            response.pause();
        });
        response.once('end', () => {
            this.push(null);
        });
        this.emit('response', response);
        for (const destination of this[kServerResponsesPiped]) {
            if (destination.headersSent) {
                continue;
            }
            // eslint-disable-next-line guard-for-in
            for (const key in response.headers) {
                const isAllowed = options.decompress ? key !== 'content-encoding' : true;
                const value = response.headers[key];
                if (isAllowed) {
                    destination.setHeader(key, value);
                }
            }
            destination.statusCode = statusCode;
        }
    }
    async _onResponse(response) {
        try {
            await this._onResponseBase(response);
        }
        catch (error) {
            /* istanbul ignore next: better safe than sorry */
            this._beforeError(error);
        }
    }
    _onRequest(request) {
        const { options } = this;
        const { timeout, url } = options;
        http_timer_1.default(request);
        this[kCancelTimeouts] = timed_out_1.default(request, timeout, url);
        const responseEventName = options.cache ? 'cacheableResponse' : 'response';
        request.once(responseEventName, (response) => {
            void this._onResponse(response);
        });
        request.once('error', (error) => {
            var _a;
            // Force clean-up, because some packages (e.g. nock) don't do this.
            request.destroy();
            // Node.js <= 12.18.2 mistakenly emits the response `end` first.
            (_a = request.res) === null || _a === void 0 ? void 0 : _a.removeAllListeners('end');
            error = error instanceof timed_out_1.TimeoutError ? new TimeoutError(error, this.timings, this) : new RequestError(error.message, error, this);
            this._beforeError(error);
        });
        this[kUnproxyEvents] = proxy_events_1.default(request, this, proxiedRequestEvents);
        this[kRequest] = request;
        this.emit('uploadProgress', this.uploadProgress);
        // Send body
        const body = this[kBody];
        const currentRequest = this.redirects.length === 0 ? this : request;
        if (is_1.default.nodeStream(body)) {
            body.pipe(currentRequest);
            body.once('error', (error) => {
                this._beforeError(new UploadError(error, this));
            });
        }
        else {
            this._unlockWrite();
            if (!is_1.default.undefined(body)) {
                this._writeRequest(body, undefined, () => { });
                currentRequest.end();
                this._lockWrite();
            }
            else if (this._cannotHaveBody || this._noPipe) {
                currentRequest.end();
                this._lockWrite();
            }
        }
        this.emit('request', request);
    }
    async _createCacheableRequest(url, options) {
        return new Promise((resolve, reject) => {
            // TODO: Remove `utils/url-to-options.ts` when `cacheable-request` is fixed
            Object.assign(options, url_to_options_1.default(url));
            // `http-cache-semantics` checks this
            // TODO: Fix this ignore.
            // @ts-expect-error
            delete options.url;
            let request;
            // This is ugly
            const cacheRequest = cacheableStore.get(options.cache)(options, async (response) => {
                // TODO: Fix `cacheable-response`
                response._readableState.autoDestroy = false;
                if (request) {
                    (await request).emit('cacheableResponse', response);
                }
                resolve(response);
            });
            // Restore options
            options.url = url;
            cacheRequest.once('error', reject);
            cacheRequest.once('request', async (requestOrPromise) => {
                request = requestOrPromise;
                resolve(request);
            });
        });
    }
    async _makeRequest() {
        var _a, _b, _c, _d, _e;
        const { options } = this;
        const { headers } = options;
        for (const key in headers) {
            if (is_1.default.undefined(headers[key])) {
                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete
                delete headers[key];
            }
            else if (is_1.default.null_(headers[key])) {
                throw new TypeError(`Use \`undefined\` instead of \`null\` to delete the \`${key}\` header`);
            }
        }
        if (options.decompress && is_1.default.undefined(headers['accept-encoding'])) {
            headers['accept-encoding'] = supportsBrotli ? 'gzip, deflate, br' : 'gzip, deflate';
        }
        // Set cookies
        if (options.cookieJar) {
            const cookieString = await options.cookieJar.getCookieString(options.url.toString());
            if (is_1.default.nonEmptyString(cookieString)) {
                options.headers.cookie = cookieString;
            }
        }
        for (const hook of options.hooks.beforeRequest) {
            // eslint-disable-next-line no-await-in-loop
            const result = await hook(options);
            if (!is_1.default.undefined(result)) {
                // @ts-expect-error Skip the type mismatch to support abstract responses
                options.request = () => result;
                break;
            }
        }
        if (options.body && this[kBody] !== options.body) {
            this[kBody] = options.body;
        }
        const { agent, request, timeout, url } = options;
        if (options.dnsCache && !('lookup' in options)) {
            options.lookup = options.dnsCache.lookup;
        }
        // UNIX sockets
        if (url.hostname === 'unix') {
            const matches = /(?<socketPath>.+?):(?<path>.+)/.exec(`${url.pathname}${url.search}`);
            if (matches === null || matches === void 0 ? void 0 : matches.groups) {
                const { socketPath, path } = matches.groups;
                Object.assign(options, {
                    socketPath,
                    path,
                    host: ''
                });
            }
        }
        const isHttps = url.protocol === 'https:';
        // Fallback function
        let fallbackFn;
        if (options.http2) {
            fallbackFn = http2wrapper.auto;
        }
        else {
            fallbackFn = isHttps ? https.request : http.request;
        }
        const realFn = (_a = options.request) !== null && _a !== void 0 ? _a : fallbackFn;
        // Cache support
        const fn = options.cache ? this._createCacheableRequest : realFn;
        // Pass an agent directly when HTTP2 is disabled
        if (agent && !options.http2) {
            options.agent = agent[isHttps ? 'https' : 'http'];
        }
        // Prepare plain HTTP request options
        options[kRequest] = realFn;
        delete options.request;
        // TODO: Fix this ignore.
        // @ts-expect-error
        delete options.timeout;
        const requestOptions = options;
        requestOptions.shared = (_b = options.cacheOptions) === null || _b === void 0 ? void 0 : _b.shared;
        requestOptions.cacheHeuristic = (_c = options.cacheOptions) === null || _c === void 0 ? void 0 : _c.cacheHeuristic;
        requestOptions.immutableMinTimeToLive = (_d = options.cacheOptions) === null || _d === void 0 ? void 0 : _d.immutableMinTimeToLive;
        requestOptions.ignoreCargoCult = (_e = options.cacheOptions) === null || _e === void 0 ? void 0 : _e.ignoreCargoCult;
        // If `dnsLookupIpVersion` is not present do not override `family`
        if (options.dnsLookupIpVersion !== undefined) {
            try {
                requestOptions.family = dns_ip_version_1.dnsLookupIpVersionToFamily(options.dnsLookupIpVersion);
            }
            catch (_f) {
                throw new Error('Invalid `dnsLookupIpVersion` option value');
            }
        }
        // HTTPS options remapping
        if (options.https) {
            if ('rejectUnauthorized' in options.https) {
                requestOptions.rejectUnauthorized = options.https.rejectUnauthorized;
            }
            if (options.https.checkServerIdentity) {
                requestOptions.checkServerIdentity = options.https.checkServerIdentity;
            }
            if (options.https.certificateAuthority) {
                requestOptions.ca = options.https.certificateAuthority;
            }
            if (options.https.certificate) {
                requestOptions.cert = options.https.certificate;
            }
            if (options.https.key) {
                requestOptions.key = options.https.key;
            }
            if (options.https.passphrase) {
                requestOptions.passphrase = options.https.passphrase;
            }
            if (options.https.pfx) {
                requestOptions.pfx = options.https.pfx;
            }
        }
        try {
            let requestOrResponse = await fn(url, requestOptions);
            if (is_1.default.undefined(requestOrResponse)) {
                requestOrResponse = fallbackFn(url, requestOptions);
            }
            // Restore options
            options.request = request;
            options.timeout = timeout;
            options.agent = agent;
            // HTTPS options restore
            if (options.https) {
                if ('rejectUnauthorized' in options.https) {
                    delete requestOptions.rejectUnauthorized;
                }
                if (options.https.checkServerIdentity) {
                    // @ts-expect-error - This one will be removed when we remove the alias.
                    delete requestOptions.checkServerIdentity;
                }
                if (options.https.certificateAuthority) {
                    delete requestOptions.ca;
                }
                if (options.https.certificate) {
                    delete requestOptions.cert;
                }
                if (options.https.key) {
                    delete requestOptions.key;
                }
                if (options.https.passphrase) {
                    delete requestOptions.passphrase;
                }
                if (options.https.pfx) {
                    delete requestOptions.pfx;
                }
            }
            if (isClientRequest(requestOrResponse)) {
                this._onRequest(requestOrResponse);
                // Emit the response after the stream has been ended
            }
            else if (this.writable) {
                this.once('finish', () => {
                    void this._onResponse(requestOrResponse);
                });
                this._unlockWrite();
                this.end();
                this._lockWrite();
            }
            else {
                void this._onResponse(requestOrResponse);
            }
        }
        catch (error) {
            if (error instanceof CacheableRequest.CacheError) {
                throw new CacheError(error, this);
            }
            throw new RequestError(error.message, error, this);
        }
    }
    async _error(error) {
        try {
            for (const hook of this.options.hooks.beforeError) {
                // eslint-disable-next-line no-await-in-loop
                error = await hook(error);
            }
        }
        catch (error_) {
            error = new RequestError(error_.message, error_, this);
        }
        this.destroy(error);
    }
    _beforeError(error) {
        if (this[kStopReading]) {
            return;
        }
        const { options } = this;
        const retryCount = this.retryCount + 1;
        this[kStopReading] = true;
        if (!(error instanceof RequestError)) {
            error = new RequestError(error.message, error, this);
        }
        const typedError = error;
        const { response } = typedError;
        void (async () => {
            if (response && !response.body) {
                response.setEncoding(this._readableState.encoding);
                try {
                    response.rawBody = await get_buffer_1.default(response);
                    response.body = response.rawBody.toString();
                }
                catch (_a) { }
            }
            if (this.listenerCount('retry') !== 0) {
                let backoff;
                try {
                    let retryAfter;
                    if (response && 'retry-after' in response.headers) {
                        retryAfter = Number(response.headers['retry-after']);
                        if (Number.isNaN(retryAfter)) {
                            retryAfter = Date.parse(response.headers['retry-after']) - Date.now();
                            if (retryAfter <= 0) {
                                retryAfter = 1;
                            }
                        }
                        else {
                            retryAfter *= 1000;
                        }
                    }
                    backoff = await options.retry.calculateDelay({
                        attemptCount: retryCount,
                        retryOptions: options.retry,
                        error: typedError,
                        retryAfter,
                        computedValue: calculate_retry_delay_1.default({
                            attemptCount: retryCount,
                            retryOptions: options.retry,
                            error: typedError,
                            retryAfter,
                            computedValue: 0
                        })
                    });
                }
                catch (error_) {
                    void this._error(new RequestError(error_.message, error_, this));
                    return;
                }
                if (backoff) {
                    const retry = async () => {
                        try {
                            for (const hook of this.options.hooks.beforeRetry) {
                                // eslint-disable-next-line no-await-in-loop
                                await hook(this.options, typedError, retryCount);
                            }
                        }
                        catch (error_) {
                            void this._error(new RequestError(error_.message, error, this));
                            return;
                        }
                        // Something forced us to abort the retry
                        if (this.destroyed) {
                            return;
                        }
                        this.destroy();
                        this.emit('retry', retryCount, error);
                    };
                    this[kRetryTimeout] = setTimeout(retry, backoff);
                    return;
                }
            }
            void this._error(typedError);
        })();
    }
    _read() {
        this[kTriggerRead] = true;
        const response = this[kResponse];
        if (response && !this[kStopReading]) {
            // We cannot put this in the `if` above
            // because `.read()` also triggers the `end` event
            if (response.readableLength) {
                this[kTriggerRead] = false;
            }
            let data;
            while ((data = response.read()) !== null) {
                this[kDownloadedSize] += data.length;
                this[kStartedReading] = true;
                const progress = this.downloadProgress;
                if (progress.percent < 1) {
                    this.emit('downloadProgress', progress);
                }
                this.push(data);
            }
        }
    }
    // Node.js 12 has incorrect types, so the encoding must be a string
    _write(chunk, encoding, callback) {
        const write = () => {
            this._writeRequest(chunk, encoding, callback);
        };
        if (this.requestInitialized) {
            write();
        }
        else {
            this[kJobs].push(write);
        }
    }
    _writeRequest(chunk, encoding, callback) {
        if (this[kRequest].destroyed) {
            // Probably the `ClientRequest` instance will throw
            return;
        }
        this._progressCallbacks.push(() => {
            this[kUploadedSize] += Buffer.byteLength(chunk, encoding);
            const progress = this.uploadProgress;
            if (progress.percent < 1) {
                this.emit('uploadProgress', progress);
            }
        });
        // TODO: What happens if it's from cache? Then this[kRequest] won't be defined.
        this[kRequest].write(chunk, encoding, (error) => {
            if (!error && this._progressCallbacks.length > 0) {
                this._progressCallbacks.shift()();
            }
            callback(error);
        });
    }
    _final(callback) {
        const endRequest = () => {
            // FIX: Node.js 10 calls the write callback AFTER the end callback!
            while (this._progressCallbacks.length !== 0) {
                this._progressCallbacks.shift()();
            }
            // We need to check if `this[kRequest]` is present,
            // because it isn't when we use cache.
            if (!(kRequest in this)) {
                callback();
                return;
            }
            if (this[kRequest].destroyed) {
                callback();
                return;
            }
            this[kRequest].end((error) => {
                if (!error) {
                    this[kBodySize] = this[kUploadedSize];
                    this.emit('uploadProgress', this.uploadProgress);
                    this[kRequest].emit('upload-complete');
                }
                callback(error);
            });
        };
        if (this.requestInitialized) {
            endRequest();
        }
        else {
            this[kJobs].push(endRequest);
        }
    }
    _destroy(error, callback) {
        var _a;
        this[kStopReading] = true;
        // Prevent further retries
        clearTimeout(this[kRetryTimeout]);
        if (kRequest in this) {
            this[kCancelTimeouts]();
            // TODO: Remove the next `if` when these get fixed:
            // - https://github.com/nodejs/node/issues/32851
            if (!((_a = this[kResponse]) === null || _a === void 0 ? void 0 : _a.complete)) {
                this[kRequest].destroy();
            }
        }
        if (error !== null && !is_1.default.undefined(error) && !(error instanceof RequestError)) {
            error = new RequestError(error.message, error, this);
        }
        callback(error);
    }
    get _isAboutToError() {
        return this[kStopReading];
    }
    /**
    The remote IP address.
    */
    get ip() {
        var _a;
        return (_a = this.socket) === null || _a === void 0 ? void 0 : _a.remoteAddress;
    }
    /**
    Indicates whether the request has been aborted or not.
    */
    get aborted() {
        var _a, _b, _c;
        return ((_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.destroyed) !== null && _b !== void 0 ? _b : this.destroyed) && !((_c = this[kOriginalResponse]) === null || _c === void 0 ? void 0 : _c.complete);
    }
    get socket() {
        var _a, _b;
        return (_b = (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.socket) !== null && _b !== void 0 ? _b : undefined;
    }
    /**
    Progress event for downloading (receiving a response).
    */
    get downloadProgress() {
        let percent;
        if (this[kResponseSize]) {
            percent = this[kDownloadedSize] / this[kResponseSize];
        }
        else if (this[kResponseSize] === this[kDownloadedSize]) {
            percent = 1;
        }
        else {
            percent = 0;
        }
        return {
            percent,
            transferred: this[kDownloadedSize],
            total: this[kResponseSize]
        };
    }
    /**
    Progress event for uploading (sending a request).
    */
    get uploadProgress() {
        let percent;
        if (this[kBodySize]) {
            percent = this[kUploadedSize] / this[kBodySize];
        }
        else if (this[kBodySize] === this[kUploadedSize]) {
            percent = 1;
        }
        else {
            percent = 0;
        }
        return {
            percent,
            transferred: this[kUploadedSize],
            total: this[kBodySize]
        };
    }
    /**
    The object contains the following properties:

    - `start` - Time when the request started.
    - `socket` - Time when a socket was assigned to the request.
    - `lookup` - Time when the DNS lookup finished.
    - `connect` - Time when the socket successfully connected.
    - `secureConnect` - Time when the socket securely connected.
    - `upload` - Time when the request finished uploading.
    - `response` - Time when the request fired `response` event.
    - `end` - Time when the response fired `end` event.
    - `error` - Time when the request fired `error` event.
    - `abort` - Time when the request fired `abort` event.
    - `phases`
        - `wait` - `timings.socket - timings.start`
        - `dns` - `timings.lookup - timings.socket`
        - `tcp` - `timings.connect - timings.lookup`
        - `tls` - `timings.secureConnect - timings.connect`
        - `request` - `timings.upload - (timings.secureConnect || timings.connect)`
        - `firstByte` - `timings.response - timings.upload`
        - `download` - `timings.end - timings.response`
        - `total` - `(timings.end || timings.error || timings.abort) - timings.start`

    If something has not been measured yet, it will be `undefined`.

    __Note__: The time is a `number` representing the milliseconds elapsed since the UNIX epoch.
    */
    get timings() {
        var _a;
        return (_a = this[kRequest]) === null || _a === void 0 ? void 0 : _a.timings;
    }
    /**
    Whether the response was retrieved from the cache.
    */
    get isFromCache() {
        return this[kIsFromCache];
    }
    pipe(destination, options) {
        if (this[kStartedReading]) {
            throw new Error('Failed to pipe. The response has been emitted already.');
        }
        if (destination instanceof http_1.ServerResponse) {
            this[kServerResponsesPiped].add(destination);
        }
        return super.pipe(destination, options);
    }
    unpipe(destination) {
        if (destination instanceof http_1.ServerResponse) {
            this[kServerResponsesPiped].delete(destination);
        }
        super.unpipe(destination);
        return this;
    }
}
exports.default = Request;


/***/ }),

/***/ 94993:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dnsLookupIpVersionToFamily = exports.isDnsLookupIpVersion = void 0;
const conversionTable = {
    auto: 0,
    ipv4: 4,
    ipv6: 6
};
exports.isDnsLookupIpVersion = (value) => {
    return value in conversionTable;
};
exports.dnsLookupIpVersionToFamily = (dnsLookupIpVersion) => {
    if (exports.isDnsLookupIpVersion(dnsLookupIpVersion)) {
        return conversionTable[dnsLookupIpVersion];
    }
    throw new Error('Invalid DNS lookup IP version');
};


/***/ }),

/***/ 94564:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const fs_1 = __nccwpck_require__(35747);
const util_1 = __nccwpck_require__(31669);
const is_1 = __nccwpck_require__(7678);
const is_form_data_1 = __nccwpck_require__(90040);
const statAsync = util_1.promisify(fs_1.stat);
exports.default = async (body, headers) => {
    if (headers && 'content-length' in headers) {
        return Number(headers['content-length']);
    }
    if (!body) {
        return 0;
    }
    if (is_1.default.string(body)) {
        return Buffer.byteLength(body);
    }
    if (is_1.default.buffer(body)) {
        return body.length;
    }
    if (is_form_data_1.default(body)) {
        return util_1.promisify(body.getLength.bind(body))();
    }
    if (body instanceof fs_1.ReadStream) {
        const { size } = await statAsync(body.path);
        if (size === 0) {
            return undefined;
        }
        return size;
    }
    return undefined;
};


/***/ }),

/***/ 34500:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
// TODO: Update https://github.com/sindresorhus/get-stream
const getBuffer = async (stream) => {
    const chunks = [];
    let length = 0;
    for await (const chunk of stream) {
        chunks.push(chunk);
        length += Buffer.byteLength(chunk);
    }
    if (Buffer.isBuffer(chunks[0])) {
        return Buffer.concat(chunks, length);
    }
    return Buffer.from(chunks.join(''));
};
exports.default = getBuffer;


/***/ }),

/***/ 90040:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const is_1 = __nccwpck_require__(7678);
exports.default = (body) => is_1.default.nodeStream(body) && is_1.default.function_(body.getBoundary);


/***/ }),

/***/ 49298:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isResponseOk = void 0;
exports.isResponseOk = (response) => {
    const { statusCode } = response;
    const limitStatusCode = response.request.options.followRedirect ? 299 : 399;
    return (statusCode >= 200 && statusCode <= limitStatusCode) || statusCode === 304;
};


/***/ }),

/***/ 9219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
/* istanbul ignore file: deprecated */
const url_1 = __nccwpck_require__(78835);
const keys = [
    'protocol',
    'host',
    'hostname',
    'port',
    'pathname',
    'search'
];
exports.default = (origin, options) => {
    var _a, _b;
    if (options.path) {
        if (options.pathname) {
            throw new TypeError('Parameters `path` and `pathname` are mutually exclusive.');
        }
        if (options.search) {
            throw new TypeError('Parameters `path` and `search` are mutually exclusive.');
        }
        if (options.searchParams) {
            throw new TypeError('Parameters `path` and `searchParams` are mutually exclusive.');
        }
    }
    if (options.search && options.searchParams) {
        throw new TypeError('Parameters `search` and `searchParams` are mutually exclusive.');
    }
    if (!origin) {
        if (!options.protocol) {
            throw new TypeError('No URL protocol specified');
        }
        origin = `${options.protocol}//${(_b = (_a = options.hostname) !== null && _a !== void 0 ? _a : options.host) !== null && _b !== void 0 ? _b : ''}`;
    }
    const url = new url_1.URL(origin);
    if (options.path) {
        const searchIndex = options.path.indexOf('?');
        if (searchIndex === -1) {
            options.pathname = options.path;
        }
        else {
            options.pathname = options.path.slice(0, searchIndex);
            options.search = options.path.slice(searchIndex + 1);
        }
        delete options.path;
    }
    for (const key of keys) {
        if (options[key]) {
            url[key] = options[key].toString();
        }
    }
    return url;
};


/***/ }),

/***/ 53021:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function default_1(from, to, events) {
    const fns = {};
    for (const event of events) {
        fns[event] = (...args) => {
            to.emit(event, ...args);
        };
        from.on(event, fns[event]);
    }
    return () => {
        for (const event of events) {
            from.off(event, fns[event]);
        }
    };
}
exports.default = default_1;


/***/ }),

/***/ 52454:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TimeoutError = void 0;
const net = __nccwpck_require__(11631);
const unhandle_1 = __nccwpck_require__(81593);
const reentry = Symbol('reentry');
const noop = () => { };
class TimeoutError extends Error {
    constructor(threshold, event) {
        super(`Timeout awaiting '${event}' for ${threshold}ms`);
        this.event = event;
        this.name = 'TimeoutError';
        this.code = 'ETIMEDOUT';
    }
}
exports.TimeoutError = TimeoutError;
exports.default = (request, delays, options) => {
    if (reentry in request) {
        return noop;
    }
    request[reentry] = true;
    const cancelers = [];
    const { once, unhandleAll } = unhandle_1.default();
    const addTimeout = (delay, callback, event) => {
        var _a;
        const timeout = setTimeout(callback, delay, delay, event);
        (_a = timeout.unref) === null || _a === void 0 ? void 0 : _a.call(timeout);
        const cancel = () => {
            clearTimeout(timeout);
        };
        cancelers.push(cancel);
        return cancel;
    };
    const { host, hostname } = options;
    const timeoutHandler = (delay, event) => {
        request.destroy(new TimeoutError(delay, event));
    };
    const cancelTimeouts = () => {
        for (const cancel of cancelers) {
            cancel();
        }
        unhandleAll();
    };
    request.once('error', error => {
        cancelTimeouts();
        // Save original behavior
        /* istanbul ignore next */
        if (request.listenerCount('error') === 0) {
            throw error;
        }
    });
    request.once('close', cancelTimeouts);
    once(request, 'response', (response) => {
        once(response, 'end', cancelTimeouts);
    });
    if (typeof delays.request !== 'undefined') {
        addTimeout(delays.request, timeoutHandler, 'request');
    }
    if (typeof delays.socket !== 'undefined') {
        const socketTimeoutHandler = () => {
            timeoutHandler(delays.socket, 'socket');
        };
        request.setTimeout(delays.socket, socketTimeoutHandler);
        // `request.setTimeout(0)` causes a memory leak.
        // We can just remove the listener and forget about the timer - it's unreffed.
        // See https://github.com/sindresorhus/got/issues/690
        cancelers.push(() => {
            request.removeListener('timeout', socketTimeoutHandler);
        });
    }
    once(request, 'socket', (socket) => {
        var _a;
        const { socketPath } = request;
        /* istanbul ignore next: hard to test */
        if (socket.connecting) {
            const hasPath = Boolean(socketPath !== null && socketPath !== void 0 ? socketPath : net.isIP((_a = hostname !== null && hostname !== void 0 ? hostname : host) !== null && _a !== void 0 ? _a : '') !== 0);
            if (typeof delays.lookup !== 'undefined' && !hasPath && typeof socket.address().address === 'undefined') {
                const cancelTimeout = addTimeout(delays.lookup, timeoutHandler, 'lookup');
                once(socket, 'lookup', cancelTimeout);
            }
            if (typeof delays.connect !== 'undefined') {
                const timeConnect = () => addTimeout(delays.connect, timeoutHandler, 'connect');
                if (hasPath) {
                    once(socket, 'connect', timeConnect());
                }
                else {
                    once(socket, 'lookup', (error) => {
                        if (error === null) {
                            once(socket, 'connect', timeConnect());
                        }
                    });
                }
            }
            if (typeof delays.secureConnect !== 'undefined' && options.protocol === 'https:') {
                once(socket, 'connect', () => {
                    const cancelTimeout = addTimeout(delays.secureConnect, timeoutHandler, 'secureConnect');
                    once(socket, 'secureConnect', cancelTimeout);
                });
            }
        }
        if (typeof delays.send !== 'undefined') {
            const timeRequest = () => addTimeout(delays.send, timeoutHandler, 'send');
            /* istanbul ignore next: hard to test */
            if (socket.connecting) {
                once(socket, 'connect', () => {
                    once(request, 'upload-complete', timeRequest());
                });
            }
            else {
                once(request, 'upload-complete', timeRequest());
            }
        }
    });
    if (typeof delays.response !== 'undefined') {
        once(request, 'upload-complete', () => {
            const cancelTimeout = addTimeout(delays.response, timeoutHandler, 'response');
            once(request, 'response', cancelTimeout);
        });
    }
    return cancelTimeouts;
};


/***/ }),

/***/ 81593:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
// When attaching listeners, it's very easy to forget about them.
// Especially if you do error handling and set timeouts.
// So instead of checking if it's proper to throw an error on every timeout ever,
// use this simple tool which will remove all listeners you have attached.
exports.default = () => {
    const handlers = [];
    return {
        once(origin, event, fn) {
            origin.once(event, fn);
            handlers.push({ origin, event, fn });
        },
        unhandleAll() {
            for (const handler of handlers) {
                const { origin, event, fn } = handler;
                origin.removeListener(event, fn);
            }
            handlers.length = 0;
        }
    };
};


/***/ }),

/***/ 8026:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const is_1 = __nccwpck_require__(7678);
exports.default = (url) => {
    // Cast to URL
    url = url;
    const options = {
        protocol: url.protocol,
        hostname: is_1.default.string(url.hostname) && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,
        host: url.host,
        hash: url.hash,
        search: url.search,
        pathname: url.pathname,
        href: url.href,
        path: `${url.pathname || ''}${url.search || ''}`
    };
    if (is_1.default.string(url.port) && url.port.length > 0) {
        options.port = Number(url.port);
    }
    if (url.username || url.password) {
        options.auth = `${url.username || ''}:${url.password || ''}`;
    }
    return options;
};


/***/ }),

/***/ 7288:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
class WeakableMap {
    constructor() {
        this.weakMap = new WeakMap();
        this.map = new Map();
    }
    set(key, value) {
        if (typeof key === 'object') {
            this.weakMap.set(key, value);
        }
        else {
            this.map.set(key, value);
        }
    }
    get(key) {
        if (typeof key === 'object') {
            return this.weakMap.get(key);
        }
        return this.map.get(key);
    }
    has(key) {
        if (typeof key === 'object') {
            return this.weakMap.has(key);
        }
        return this.map.has(key);
    }
}
exports.default = WeakableMap;


/***/ }),

/***/ 34337:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.defaultHandler = void 0;
const is_1 = __nccwpck_require__(7678);
const as_promise_1 = __nccwpck_require__(36056);
const create_rejection_1 = __nccwpck_require__(26457);
const core_1 = __nccwpck_require__(60094);
const deep_freeze_1 = __nccwpck_require__(70285);
const errors = {
    RequestError: as_promise_1.RequestError,
    CacheError: as_promise_1.CacheError,
    ReadError: as_promise_1.ReadError,
    HTTPError: as_promise_1.HTTPError,
    MaxRedirectsError: as_promise_1.MaxRedirectsError,
    TimeoutError: as_promise_1.TimeoutError,
    ParseError: as_promise_1.ParseError,
    CancelError: as_promise_1.CancelError,
    UnsupportedProtocolError: as_promise_1.UnsupportedProtocolError,
    UploadError: as_promise_1.UploadError
};
// The `delay` package weighs 10KB (!)
const delay = async (ms) => new Promise(resolve => {
    setTimeout(resolve, ms);
});
const { normalizeArguments } = core_1.default;
const mergeOptions = (...sources) => {
    let mergedOptions;
    for (const source of sources) {
        mergedOptions = normalizeArguments(undefined, source, mergedOptions);
    }
    return mergedOptions;
};
const getPromiseOrStream = (options) => options.isStream ? new core_1.default(undefined, options) : as_promise_1.default(options);
const isGotInstance = (value) => ('defaults' in value && 'options' in value.defaults);
const aliases = [
    'get',
    'post',
    'put',
    'patch',
    'head',
    'delete'
];
exports.defaultHandler = (options, next) => next(options);
const callInitHooks = (hooks, options) => {
    if (hooks) {
        for (const hook of hooks) {
            hook(options);
        }
    }
};
const create = (defaults) => {
    // Proxy properties from next handlers
    defaults._rawHandlers = defaults.handlers;
    defaults.handlers = defaults.handlers.map(fn => ((options, next) => {
        // This will be assigned by assigning result
        let root;
        const result = fn(options, newOptions => {
            root = next(newOptions);
            return root;
        });
        if (result !== root && !options.isStream && root) {
            const typedResult = result;
            const { then: promiseThen, catch: promiseCatch, finally: promiseFianlly } = typedResult;
            Object.setPrototypeOf(typedResult, Object.getPrototypeOf(root));
            Object.defineProperties(typedResult, Object.getOwnPropertyDescriptors(root));
            // These should point to the new promise
            // eslint-disable-next-line promise/prefer-await-to-then
            typedResult.then = promiseThen;
            typedResult.catch = promiseCatch;
            typedResult.finally = promiseFianlly;
        }
        return result;
    }));
    // Got interface
    const got = ((url, options = {}, _defaults) => {
        var _a, _b;
        let iteration = 0;
        const iterateHandlers = (newOptions) => {
            return defaults.handlers[iteration++](newOptions, iteration === defaults.handlers.length ? getPromiseOrStream : iterateHandlers);
        };
        // TODO: Remove this in Got 12.
        if (is_1.default.plainObject(url)) {
            const mergedOptions = {
                ...url,
                ...options
            };
            core_1.setNonEnumerableProperties([url, options], mergedOptions);
            options = mergedOptions;
            url = undefined;
        }
        try {
            // Call `init` hooks
            let initHookError;
            try {
                callInitHooks(defaults.options.hooks.init, options);
                callInitHooks((_a = options.hooks) === null || _a === void 0 ? void 0 : _a.init, options);
            }
            catch (error) {
                initHookError = error;
            }
            // Normalize options & call handlers
            const normalizedOptions = normalizeArguments(url, options, _defaults !== null && _defaults !== void 0 ? _defaults : defaults.options);
            normalizedOptions[core_1.kIsNormalizedAlready] = true;
            if (initHookError) {
                throw new as_promise_1.RequestError(initHookError.message, initHookError, normalizedOptions);
            }
            return iterateHandlers(normalizedOptions);
        }
        catch (error) {
            if (options.isStream) {
                throw error;
            }
            else {
                return create_rejection_1.default(error, defaults.options.hooks.beforeError, (_b = options.hooks) === null || _b === void 0 ? void 0 : _b.beforeError);
            }
        }
    });
    got.extend = (...instancesOrOptions) => {
        const optionsArray = [defaults.options];
        let handlers = [...defaults._rawHandlers];
        let isMutableDefaults;
        for (const value of instancesOrOptions) {
            if (isGotInstance(value)) {
                optionsArray.push(value.defaults.options);
                handlers.push(...value.defaults._rawHandlers);
                isMutableDefaults = value.defaults.mutableDefaults;
            }
            else {
                optionsArray.push(value);
                if ('handlers' in value) {
                    handlers.push(...value.handlers);
                }
                isMutableDefaults = value.mutableDefaults;
            }
        }
        handlers = handlers.filter(handler => handler !== exports.defaultHandler);
        if (handlers.length === 0) {
            handlers.push(exports.defaultHandler);
        }
        return create({
            options: mergeOptions(...optionsArray),
            handlers,
            mutableDefaults: Boolean(isMutableDefaults)
        });
    };
    // Pagination
    const paginateEach = (async function* (url, options) {
        // TODO: Remove this `@ts-expect-error` when upgrading to TypeScript 4.
        // Error: Argument of type 'Merge<Options, PaginationOptions<T, R>> | undefined' is not assignable to parameter of type 'Options | undefined'.
        // @ts-expect-error
        let normalizedOptions = normalizeArguments(url, options, defaults.options);
        normalizedOptions.resolveBodyOnly = false;
        const pagination = normalizedOptions.pagination;
        if (!is_1.default.object(pagination)) {
            throw new TypeError('`options.pagination` must be implemented');
        }
        const all = [];
        let { countLimit } = pagination;
        let numberOfRequests = 0;
        while (numberOfRequests < pagination.requestLimit) {
            if (numberOfRequests !== 0) {
                // eslint-disable-next-line no-await-in-loop
                await delay(pagination.backoff);
            }
            // @ts-expect-error FIXME!
            // TODO: Throw when result is not an instance of Response
            // eslint-disable-next-line no-await-in-loop
            const result = (await got(undefined, undefined, normalizedOptions));
            // eslint-disable-next-line no-await-in-loop
            const parsed = await pagination.transform(result);
            const current = [];
            for (const item of parsed) {
                if (pagination.filter(item, all, current)) {
                    if (!pagination.shouldContinue(item, all, current)) {
                        return;
                    }
                    yield item;
                    if (pagination.stackAllItems) {
                        all.push(item);
                    }
                    current.push(item);
                    if (--countLimit <= 0) {
                        return;
                    }
                }
            }
            const optionsToMerge = pagination.paginate(result, all, current);
            if (optionsToMerge === false) {
                return;
            }
            if (optionsToMerge === result.request.options) {
                normalizedOptions = result.request.options;
            }
            else if (optionsToMerge !== undefined) {
                normalizedOptions = normalizeArguments(undefined, optionsToMerge, normalizedOptions);
            }
            numberOfRequests++;
        }
    });
    got.paginate = paginateEach;
    got.paginate.all = (async (url, options) => {
        const results = [];
        for await (const item of paginateEach(url, options)) {
            results.push(item);
        }
        return results;
    });
    // For those who like very descriptive names
    got.paginate.each = paginateEach;
    // Stream API
    got.stream = ((url, options) => got(url, { ...options, isStream: true }));
    // Shortcuts
    for (const method of aliases) {
        got[method] = ((url, options) => got(url, { ...options, method }));
        got.stream[method] = ((url, options) => {
            return got(url, { ...options, method, isStream: true });
        });
    }
    Object.assign(got, errors);
    Object.defineProperty(got, 'defaults', {
        value: defaults.mutableDefaults ? defaults : deep_freeze_1.default(defaults),
        writable: defaults.mutableDefaults,
        configurable: defaults.mutableDefaults,
        enumerable: true
    });
    got.mergeOptions = mergeOptions;
    return got;
};
exports.default = create;
__exportStar(__nccwpck_require__(72613), exports);


/***/ }),

/***/ 93061:
/***/ (function(module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const url_1 = __nccwpck_require__(78835);
const create_1 = __nccwpck_require__(34337);
const defaults = {
    options: {
        method: 'GET',
        retry: {
            limit: 2,
            methods: [
                'GET',
                'PUT',
                'HEAD',
                'DELETE',
                'OPTIONS',
                'TRACE'
            ],
            statusCodes: [
                408,
                413,
                429,
                500,
                502,
                503,
                504,
                521,
                522,
                524
            ],
            errorCodes: [
                'ETIMEDOUT',
                'ECONNRESET',
                'EADDRINUSE',
                'ECONNREFUSED',
                'EPIPE',
                'ENOTFOUND',
                'ENETUNREACH',
                'EAI_AGAIN'
            ],
            maxRetryAfter: undefined,
            calculateDelay: ({ computedValue }) => computedValue
        },
        timeout: {},
        headers: {
            'user-agent': 'got (https://github.com/sindresorhus/got)'
        },
        hooks: {
            init: [],
            beforeRequest: [],
            beforeRedirect: [],
            beforeRetry: [],
            beforeError: [],
            afterResponse: []
        },
        cache: undefined,
        dnsCache: undefined,
        decompress: true,
        throwHttpErrors: true,
        followRedirect: true,
        isStream: false,
        responseType: 'text',
        resolveBodyOnly: false,
        maxRedirects: 10,
        prefixUrl: '',
        methodRewriting: true,
        ignoreInvalidCookies: false,
        context: {},
        // TODO: Set this to `true` when Got 12 gets released
        http2: false,
        allowGetBody: false,
        https: undefined,
        pagination: {
            transform: (response) => {
                if (response.request.options.responseType === 'json') {
                    return response.body;
                }
                return JSON.parse(response.body);
            },
            paginate: response => {
                if (!Reflect.has(response.headers, 'link')) {
                    return false;
                }
                const items = response.headers.link.split(',');
                let next;
                for (const item of items) {
                    const parsed = item.split(';');
                    if (parsed[1].includes('next')) {
                        next = parsed[0].trimStart().trim();
                        next = next.slice(1, -1);
                        break;
                    }
                }
                if (next) {
                    const options = {
                        url: new url_1.URL(next)
                    };
                    return options;
                }
                return false;
            },
            filter: () => true,
            shouldContinue: () => true,
            countLimit: Infinity,
            backoff: 0,
            requestLimit: 10000,
            stackAllItems: true
        },
        parseJson: (text) => JSON.parse(text),
        stringifyJson: (object) => JSON.stringify(object),
        cacheOptions: {}
    },
    handlers: [create_1.defaultHandler],
    mutableDefaults: false
};
const got = create_1.default(defaults);
exports.default = got;
// For CommonJS default export support
module.exports = got;
module.exports.default = got;
module.exports.__esModule = true; // Workaround for TS issue: https://github.com/sindresorhus/got/pull/1267
__exportStar(__nccwpck_require__(34337), exports);
__exportStar(__nccwpck_require__(36056), exports);


/***/ }),

/***/ 72613:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 70285:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const is_1 = __nccwpck_require__(7678);
function deepFreeze(object) {
    for (const value of Object.values(object)) {
        if (is_1.default.plainObject(value) || is_1.default.array(value)) {
            deepFreeze(value);
        }
    }
    return Object.freeze(object);
}
exports.default = deepFreeze;


/***/ }),

/***/ 397:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const alreadyWarned = new Set();
exports.default = (message) => {
    if (alreadyWarned.has(message)) {
        return;
    }
    alreadyWarned.add(message);
    // @ts-expect-error Missing types.
    process.emitWarning(`Got: ${message}`, {
        type: 'DeprecationWarning'
    });
};


/***/ }),

/***/ 67356:
/***/ ((module) => {

"use strict";


module.exports = clone

var getPrototypeOf = Object.getPrototypeOf || function (obj) {
  return obj.__proto__
}

function clone (obj) {
  if (obj === null || typeof obj !== 'object')
    return obj

  if (obj instanceof Object)
    var copy = { __proto__: getPrototypeOf(obj) }
  else
    var copy = Object.create(null)

  Object.getOwnPropertyNames(obj).forEach(function (key) {
    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))
  })

  return copy
}


/***/ }),

/***/ 77758:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(35747)
var polyfills = __nccwpck_require__(20263)
var legacy = __nccwpck_require__(73086)
var clone = __nccwpck_require__(67356)

var util = __nccwpck_require__(31669)

/* istanbul ignore next - node 0.x polyfill */
var gracefulQueue
var previousSymbol

/* istanbul ignore else - node 0.x polyfill */
if (typeof Symbol === 'function' && typeof Symbol.for === 'function') {
  gracefulQueue = Symbol.for('graceful-fs.queue')
  // This is used in testing by future versions
  previousSymbol = Symbol.for('graceful-fs.previous')
} else {
  gracefulQueue = '___graceful-fs.queue'
  previousSymbol = '___graceful-fs.previous'
}

function noop () {}

function publishQueue(context, queue) {
  Object.defineProperty(context, gracefulQueue, {
    get: function() {
      return queue
    }
  })
}

var debug = noop
if (util.debuglog)
  debug = util.debuglog('gfs4')
else if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || ''))
  debug = function() {
    var m = util.format.apply(util, arguments)
    m = 'GFS4: ' + m.split(/\n/).join('\nGFS4: ')
    console.error(m)
  }

// Once time initialization
if (!fs[gracefulQueue]) {
  // This queue can be shared by multiple loaded instances
  var queue = global[gracefulQueue] || []
  publishQueue(fs, queue)

  // Patch fs.close/closeSync to shared queue version, because we need
  // to retry() whenever a close happens *anywhere* in the program.
  // This is essential when multiple graceful-fs instances are
  // in play at the same time.
  fs.close = (function (fs$close) {
    function close (fd, cb) {
      return fs$close.call(fs, fd, function (err) {
        // This function uses the graceful-fs shared queue
        if (!err) {
          resetQueue()
        }

        if (typeof cb === 'function')
          cb.apply(this, arguments)
      })
    }

    Object.defineProperty(close, previousSymbol, {
      value: fs$close
    })
    return close
  })(fs.close)

  fs.closeSync = (function (fs$closeSync) {
    function closeSync (fd) {
      // This function uses the graceful-fs shared queue
      fs$closeSync.apply(fs, arguments)
      resetQueue()
    }

    Object.defineProperty(closeSync, previousSymbol, {
      value: fs$closeSync
    })
    return closeSync
  })(fs.closeSync)

  if (/\bgfs4\b/i.test(process.env.NODE_DEBUG || '')) {
    process.on('exit', function() {
      debug(fs[gracefulQueue])
      __nccwpck_require__(42357).equal(fs[gracefulQueue].length, 0)
    })
  }
}

if (!global[gracefulQueue]) {
  publishQueue(global, fs[gracefulQueue]);
}

module.exports = patch(clone(fs))
if (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {
    module.exports = patch(fs)
    fs.__patched = true;
}

function patch (fs) {
  // Everything that references the open() function needs to be in here
  polyfills(fs)
  fs.gracefulify = patch

  fs.createReadStream = createReadStream
  fs.createWriteStream = createWriteStream
  var fs$readFile = fs.readFile
  fs.readFile = readFile
  function readFile (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$readFile(path, options, cb)

    function go$readFile (path, options, cb, startTime) {
      return fs$readFile(path, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$readFile, [path, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$writeFile = fs.writeFile
  fs.writeFile = writeFile
  function writeFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$writeFile(path, data, options, cb)

    function go$writeFile (path, data, options, cb, startTime) {
      return fs$writeFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$writeFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$appendFile = fs.appendFile
  if (fs$appendFile)
    fs.appendFile = appendFile
  function appendFile (path, data, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$appendFile(path, data, options, cb)

    function go$appendFile (path, data, options, cb, startTime) {
      return fs$appendFile(path, data, options, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$appendFile, [path, data, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$copyFile = fs.copyFile
  if (fs$copyFile)
    fs.copyFile = copyFile
  function copyFile (src, dest, flags, cb) {
    if (typeof flags === 'function') {
      cb = flags
      flags = 0
    }
    return go$copyFile(src, dest, flags, cb)

    function go$copyFile (src, dest, flags, cb, startTime) {
      return fs$copyFile(src, dest, flags, function (err) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$copyFile, [src, dest, flags, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  var fs$readdir = fs.readdir
  fs.readdir = readdir
  function readdir (path, options, cb) {
    if (typeof options === 'function')
      cb = options, options = null

    return go$readdir(path, options, cb)

    function go$readdir (path, options, cb, startTime) {
      return fs$readdir(path, options, function (err, files) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$readdir, [path, options, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (files && files.sort)
            files.sort()

          if (typeof cb === 'function')
            cb.call(this, err, files)
        }
      })
    }
  }

  if (process.version.substr(0, 4) === 'v0.8') {
    var legStreams = legacy(fs)
    ReadStream = legStreams.ReadStream
    WriteStream = legStreams.WriteStream
  }

  var fs$ReadStream = fs.ReadStream
  if (fs$ReadStream) {
    ReadStream.prototype = Object.create(fs$ReadStream.prototype)
    ReadStream.prototype.open = ReadStream$open
  }

  var fs$WriteStream = fs.WriteStream
  if (fs$WriteStream) {
    WriteStream.prototype = Object.create(fs$WriteStream.prototype)
    WriteStream.prototype.open = WriteStream$open
  }

  Object.defineProperty(fs, 'ReadStream', {
    get: function () {
      return ReadStream
    },
    set: function (val) {
      ReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  Object.defineProperty(fs, 'WriteStream', {
    get: function () {
      return WriteStream
    },
    set: function (val) {
      WriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  // legacy names
  var FileReadStream = ReadStream
  Object.defineProperty(fs, 'FileReadStream', {
    get: function () {
      return FileReadStream
    },
    set: function (val) {
      FileReadStream = val
    },
    enumerable: true,
    configurable: true
  })
  var FileWriteStream = WriteStream
  Object.defineProperty(fs, 'FileWriteStream', {
    get: function () {
      return FileWriteStream
    },
    set: function (val) {
      FileWriteStream = val
    },
    enumerable: true,
    configurable: true
  })

  function ReadStream (path, options) {
    if (this instanceof ReadStream)
      return fs$ReadStream.apply(this, arguments), this
    else
      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)
  }

  function ReadStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        if (that.autoClose)
          that.destroy()

        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
        that.read()
      }
    })
  }

  function WriteStream (path, options) {
    if (this instanceof WriteStream)
      return fs$WriteStream.apply(this, arguments), this
    else
      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)
  }

  function WriteStream$open () {
    var that = this
    open(that.path, that.flags, that.mode, function (err, fd) {
      if (err) {
        that.destroy()
        that.emit('error', err)
      } else {
        that.fd = fd
        that.emit('open', fd)
      }
    })
  }

  function createReadStream (path, options) {
    return new fs.ReadStream(path, options)
  }

  function createWriteStream (path, options) {
    return new fs.WriteStream(path, options)
  }

  var fs$open = fs.open
  fs.open = open
  function open (path, flags, mode, cb) {
    if (typeof mode === 'function')
      cb = mode, mode = null

    return go$open(path, flags, mode, cb)

    function go$open (path, flags, mode, cb, startTime) {
      return fs$open(path, flags, mode, function (err, fd) {
        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))
          enqueue([go$open, [path, flags, mode, cb], err, startTime || Date.now(), Date.now()])
        else {
          if (typeof cb === 'function')
            cb.apply(this, arguments)
        }
      })
    }
  }

  return fs
}

function enqueue (elem) {
  debug('ENQUEUE', elem[0].name, elem[1])
  fs[gracefulQueue].push(elem)
  retry()
}

// keep track of the timeout between retry() calls
var retryTimer

// reset the startTime and lastTime to now
// this resets the start of the 60 second overall timeout as well as the
// delay between attempts so that we'll retry these jobs sooner
function resetQueue () {
  var now = Date.now()
  for (var i = 0; i < fs[gracefulQueue].length; ++i) {
    // entries that are only a length of 2 are from an older version, don't
    // bother modifying those since they'll be retried anyway.
    if (fs[gracefulQueue][i].length > 2) {
      fs[gracefulQueue][i][3] = now // startTime
      fs[gracefulQueue][i][4] = now // lastTime
    }
  }
  // call retry to make sure we're actively processing the queue
  retry()
}

function retry () {
  // clear the timer and remove it to help prevent unintended concurrency
  clearTimeout(retryTimer)
  retryTimer = undefined

  if (fs[gracefulQueue].length === 0)
    return

  var elem = fs[gracefulQueue].shift()
  var fn = elem[0]
  var args = elem[1]
  // these items may be unset if they were added by an older graceful-fs
  var err = elem[2]
  var startTime = elem[3]
  var lastTime = elem[4]

  // if we don't have a startTime we have no way of knowing if we've waited
  // long enough, so go ahead and retry this item now
  if (startTime === undefined) {
    debug('RETRY', fn.name, args)
    fn.apply(null, args)
  } else if (Date.now() - startTime >= 60000) {
    // it's been more than 60 seconds total, bail now
    debug('TIMEOUT', fn.name, args)
    var cb = args.pop()
    if (typeof cb === 'function')
      cb.call(null, err)
  } else {
    // the amount of time between the last attempt and right now
    var sinceAttempt = Date.now() - lastTime
    // the amount of time between when we first tried, and when we last tried
    // rounded up to at least 1
    var sinceStart = Math.max(lastTime - startTime, 1)
    // backoff. wait longer than the total time we've been retrying, but only
    // up to a maximum of 100ms
    var desiredDelay = Math.min(sinceStart * 1.2, 100)
    // it's been long enough since the last retry, do it again
    if (sinceAttempt >= desiredDelay) {
      debug('RETRY', fn.name, args)
      fn.apply(null, args.concat([startTime]))
    } else {
      // if we can't do this job yet, push it to the end of the queue
      // and let the next iteration check again
      fs[gracefulQueue].push(elem)
    }
  }

  // schedule our next run if one isn't already scheduled
  if (retryTimer === undefined) {
    retryTimer = setTimeout(retry, 0)
  }
}


/***/ }),

/***/ 73086:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var Stream = __nccwpck_require__(92413).Stream

module.exports = legacy

function legacy (fs) {
  return {
    ReadStream: ReadStream,
    WriteStream: WriteStream
  }

  function ReadStream (path, options) {
    if (!(this instanceof ReadStream)) return new ReadStream(path, options);

    Stream.call(this);

    var self = this;

    this.path = path;
    this.fd = null;
    this.readable = true;
    this.paused = false;

    this.flags = 'r';
    this.mode = 438; /*=0666*/
    this.bufferSize = 64 * 1024;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.encoding) this.setEncoding(this.encoding);

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.end === undefined) {
        this.end = Infinity;
      } else if ('number' !== typeof this.end) {
        throw TypeError('end must be a Number');
      }

      if (this.start > this.end) {
        throw new Error('start must be <= end');
      }

      this.pos = this.start;
    }

    if (this.fd !== null) {
      process.nextTick(function() {
        self._read();
      });
      return;
    }

    fs.open(this.path, this.flags, this.mode, function (err, fd) {
      if (err) {
        self.emit('error', err);
        self.readable = false;
        return;
      }

      self.fd = fd;
      self.emit('open', fd);
      self._read();
    })
  }

  function WriteStream (path, options) {
    if (!(this instanceof WriteStream)) return new WriteStream(path, options);

    Stream.call(this);

    this.path = path;
    this.fd = null;
    this.writable = true;

    this.flags = 'w';
    this.encoding = 'binary';
    this.mode = 438; /*=0666*/
    this.bytesWritten = 0;

    options = options || {};

    // Mixin options into this
    var keys = Object.keys(options);
    for (var index = 0, length = keys.length; index < length; index++) {
      var key = keys[index];
      this[key] = options[key];
    }

    if (this.start !== undefined) {
      if ('number' !== typeof this.start) {
        throw TypeError('start must be a Number');
      }
      if (this.start < 0) {
        throw new Error('start must be >= zero');
      }

      this.pos = this.start;
    }

    this.busy = false;
    this._queue = [];

    if (this.fd === null) {
      this._open = fs.open;
      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);
      this.flush();
    }
  }
}


/***/ }),

/***/ 20263:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var constants = __nccwpck_require__(27619)

var origCwd = process.cwd
var cwd = null

var platform = process.env.GRACEFUL_FS_PLATFORM || process.platform

process.cwd = function() {
  if (!cwd)
    cwd = origCwd.call(process)
  return cwd
}
try {
  process.cwd()
} catch (er) {}

// This check is needed until node.js 12 is required
if (typeof process.chdir === 'function') {
  var chdir = process.chdir
  process.chdir = function (d) {
    cwd = null
    chdir.call(process, d)
  }
  if (Object.setPrototypeOf) Object.setPrototypeOf(process.chdir, chdir)
}

module.exports = patch

function patch (fs) {
  // (re-)implement some things that are known busted or missing.

  // lchmod, broken prior to 0.6.2
  // back-port the fix here.
  if (constants.hasOwnProperty('O_SYMLINK') &&
      process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)) {
    patchLchmod(fs)
  }

  // lutimes implementation, or no-op
  if (!fs.lutimes) {
    patchLutimes(fs)
  }

  // https://github.com/isaacs/node-graceful-fs/issues/4
  // Chown should not fail on einval or eperm if non-root.
  // It should not fail on enosys ever, as this just indicates
  // that a fs doesn't support the intended operation.

  fs.chown = chownFix(fs.chown)
  fs.fchown = chownFix(fs.fchown)
  fs.lchown = chownFix(fs.lchown)

  fs.chmod = chmodFix(fs.chmod)
  fs.fchmod = chmodFix(fs.fchmod)
  fs.lchmod = chmodFix(fs.lchmod)

  fs.chownSync = chownFixSync(fs.chownSync)
  fs.fchownSync = chownFixSync(fs.fchownSync)
  fs.lchownSync = chownFixSync(fs.lchownSync)

  fs.chmodSync = chmodFixSync(fs.chmodSync)
  fs.fchmodSync = chmodFixSync(fs.fchmodSync)
  fs.lchmodSync = chmodFixSync(fs.lchmodSync)

  fs.stat = statFix(fs.stat)
  fs.fstat = statFix(fs.fstat)
  fs.lstat = statFix(fs.lstat)

  fs.statSync = statFixSync(fs.statSync)
  fs.fstatSync = statFixSync(fs.fstatSync)
  fs.lstatSync = statFixSync(fs.lstatSync)

  // if lchmod/lchown do not exist, then make them no-ops
  if (!fs.lchmod) {
    fs.lchmod = function (path, mode, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchmodSync = function () {}
  }
  if (!fs.lchown) {
    fs.lchown = function (path, uid, gid, cb) {
      if (cb) process.nextTick(cb)
    }
    fs.lchownSync = function () {}
  }

  // on Windows, A/V software can lock the directory, causing this
  // to fail with an EACCES or EPERM if the directory contains newly
  // created files.  Try again on failure, for up to 60 seconds.

  // Set the timeout this long because some Windows Anti-Virus, such as Parity
  // bit9, may lock files for up to a minute, causing npm package install
  // failures. Also, take care to yield the scheduler. Windows scheduling gives
  // CPU to a busy looping process, which can cause the program causing the lock
  // contention to be starved of CPU by node, so the contention doesn't resolve.
  if (platform === "win32") {
    fs.rename = (function (fs$rename) { return function (from, to, cb) {
      var start = Date.now()
      var backoff = 0;
      fs$rename(from, to, function CB (er) {
        if (er
            && (er.code === "EACCES" || er.code === "EPERM")
            && Date.now() - start < 60000) {
          setTimeout(function() {
            fs.stat(to, function (stater, st) {
              if (stater && stater.code === "ENOENT")
                fs$rename(from, to, CB);
              else
                cb(er)
            })
          }, backoff)
          if (backoff < 100)
            backoff += 10;
          return;
        }
        if (cb) cb(er)
      })
    }})(fs.rename)
  }

  // if read() returns EAGAIN, then just try it again.
  fs.read = (function (fs$read) {
    function read (fd, buffer, offset, length, position, callback_) {
      var callback
      if (callback_ && typeof callback_ === 'function') {
        var eagCounter = 0
        callback = function (er, _, __) {
          if (er && er.code === 'EAGAIN' && eagCounter < 10) {
            eagCounter ++
            return fs$read.call(fs, fd, buffer, offset, length, position, callback)
          }
          callback_.apply(this, arguments)
        }
      }
      return fs$read.call(fs, fd, buffer, offset, length, position, callback)
    }

    // This ensures `util.promisify` works as it does for native `fs.read`.
    if (Object.setPrototypeOf) Object.setPrototypeOf(read, fs$read)
    return read
  })(fs.read)

  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {
    var eagCounter = 0
    while (true) {
      try {
        return fs$readSync.call(fs, fd, buffer, offset, length, position)
      } catch (er) {
        if (er.code === 'EAGAIN' && eagCounter < 10) {
          eagCounter ++
          continue
        }
        throw er
      }
    }
  }})(fs.readSync)

  function patchLchmod (fs) {
    fs.lchmod = function (path, mode, callback) {
      fs.open( path
             , constants.O_WRONLY | constants.O_SYMLINK
             , mode
             , function (err, fd) {
        if (err) {
          if (callback) callback(err)
          return
        }
        // prefer to return the chmod error, if one occurs,
        // but still try to close, and report closing errors if they occur.
        fs.fchmod(fd, mode, function (err) {
          fs.close(fd, function(err2) {
            if (callback) callback(err || err2)
          })
        })
      })
    }

    fs.lchmodSync = function (path, mode) {
      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)

      // prefer to return the chmod error, if one occurs,
      // but still try to close, and report closing errors if they occur.
      var threw = true
      var ret
      try {
        ret = fs.fchmodSync(fd, mode)
        threw = false
      } finally {
        if (threw) {
          try {
            fs.closeSync(fd)
          } catch (er) {}
        } else {
          fs.closeSync(fd)
        }
      }
      return ret
    }
  }

  function patchLutimes (fs) {
    if (constants.hasOwnProperty("O_SYMLINK")) {
      fs.lutimes = function (path, at, mt, cb) {
        fs.open(path, constants.O_SYMLINK, function (er, fd) {
          if (er) {
            if (cb) cb(er)
            return
          }
          fs.futimes(fd, at, mt, function (er) {
            fs.close(fd, function (er2) {
              if (cb) cb(er || er2)
            })
          })
        })
      }

      fs.lutimesSync = function (path, at, mt) {
        var fd = fs.openSync(path, constants.O_SYMLINK)
        var ret
        var threw = true
        try {
          ret = fs.futimesSync(fd, at, mt)
          threw = false
        } finally {
          if (threw) {
            try {
              fs.closeSync(fd)
            } catch (er) {}
          } else {
            fs.closeSync(fd)
          }
        }
        return ret
      }

    } else {
      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }
      fs.lutimesSync = function () {}
    }
  }

  function chmodFix (orig) {
    if (!orig) return orig
    return function (target, mode, cb) {
      return orig.call(fs, target, mode, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chmodFixSync (orig) {
    if (!orig) return orig
    return function (target, mode) {
      try {
        return orig.call(fs, target, mode)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }


  function chownFix (orig) {
    if (!orig) return orig
    return function (target, uid, gid, cb) {
      return orig.call(fs, target, uid, gid, function (er) {
        if (chownErOk(er)) er = null
        if (cb) cb.apply(this, arguments)
      })
    }
  }

  function chownFixSync (orig) {
    if (!orig) return orig
    return function (target, uid, gid) {
      try {
        return orig.call(fs, target, uid, gid)
      } catch (er) {
        if (!chownErOk(er)) throw er
      }
    }
  }

  function statFix (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options, cb) {
      if (typeof options === 'function') {
        cb = options
        options = null
      }
      function callback (er, stats) {
        if (stats) {
          if (stats.uid < 0) stats.uid += 0x100000000
          if (stats.gid < 0) stats.gid += 0x100000000
        }
        if (cb) cb.apply(this, arguments)
      }
      return options ? orig.call(fs, target, options, callback)
        : orig.call(fs, target, callback)
    }
  }

  function statFixSync (orig) {
    if (!orig) return orig
    // Older versions of Node erroneously returned signed integers for
    // uid + gid.
    return function (target, options) {
      var stats = options ? orig.call(fs, target, options)
        : orig.call(fs, target)
      if (stats.uid < 0) stats.uid += 0x100000000
      if (stats.gid < 0) stats.gid += 0x100000000
      return stats;
    }
  }

  // ENOSYS means that the fs doesn't support the op. Just ignore
  // that, because it doesn't matter.
  //
  // if there's no getuid, or if getuid() is something other
  // than 0, and the error is EINVAL or EPERM, then just ignore
  // it.
  //
  // This specific case is a silent failure in cp, install, tar,
  // and most other unix tools that manage permissions.
  //
  // When running as root, or if other types of errors are
  // encountered, then it's strict.
  function chownErOk (er) {
    if (!er)
      return true

    if (er.code === "ENOSYS")
      return true

    var nonroot = !process.getuid || process.getuid() !== 0
    if (nonroot) {
      if (er.code === "EINVAL" || er.code === "EPERM")
        return true
    }

    return false
  }
}


/***/ }),

/***/ 31621:
/***/ ((module) => {

"use strict";

module.exports = (flag, argv) => {
	argv = argv || process.argv;
	const prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');
	const pos = argv.indexOf(prefix + flag);
	const terminatorPos = argv.indexOf('--');
	return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);
};


/***/ }),

/***/ 61002:
/***/ ((module) => {

"use strict";

// rfc7231 6.1
const statusCodeCacheableByDefault = new Set([
    200,
    203,
    204,
    206,
    300,
    301,
    404,
    405,
    410,
    414,
    501,
]);

// This implementation does not understand partial responses (206)
const understoodStatuses = new Set([
    200,
    203,
    204,
    300,
    301,
    302,
    303,
    307,
    308,
    404,
    405,
    410,
    414,
    501,
]);

const errorStatusCodes = new Set([
    500,
    502,
    503, 
    504,
]);

const hopByHopHeaders = {
    date: true, // included, because we add Age update Date
    connection: true,
    'keep-alive': true,
    'proxy-authenticate': true,
    'proxy-authorization': true,
    te: true,
    trailer: true,
    'transfer-encoding': true,
    upgrade: true,
};

const excludedFromRevalidationUpdate = {
    // Since the old body is reused, it doesn't make sense to change properties of the body
    'content-length': true,
    'content-encoding': true,
    'transfer-encoding': true,
    'content-range': true,
};

function toNumberOrZero(s) {
    const n = parseInt(s, 10);
    return isFinite(n) ? n : 0;
}

// RFC 5861
function isErrorResponse(response) {
    // consider undefined response as faulty
    if(!response) {
        return true
    }
    return errorStatusCodes.has(response.status);
}

function parseCacheControl(header) {
    const cc = {};
    if (!header) return cc;

    // TODO: When there is more than one value present for a given directive (e.g., two Expires header fields, multiple Cache-Control: max-age directives),
    // the directive's value is considered invalid. Caches are encouraged to consider responses that have invalid freshness information to be stale
    const parts = header.trim().split(/\s*,\s*/); // TODO: lame parsing
    for (const part of parts) {
        const [k, v] = part.split(/\s*=\s*/, 2);
        cc[k] = v === undefined ? true : v.replace(/^"|"$/g, ''); // TODO: lame unquoting
    }

    return cc;
}

function formatCacheControl(cc) {
    let parts = [];
    for (const k in cc) {
        const v = cc[k];
        parts.push(v === true ? k : k + '=' + v);
    }
    if (!parts.length) {
        return undefined;
    }
    return parts.join(', ');
}

module.exports = class CachePolicy {
    constructor(
        req,
        res,
        {
            shared,
            cacheHeuristic,
            immutableMinTimeToLive,
            ignoreCargoCult,
            _fromObject,
        } = {}
    ) {
        if (_fromObject) {
            this._fromObject(_fromObject);
            return;
        }

        if (!res || !res.headers) {
            throw Error('Response headers missing');
        }
        this._assertRequestHasHeaders(req);

        this._responseTime = this.now();
        this._isShared = shared !== false;
        this._cacheHeuristic =
            undefined !== cacheHeuristic ? cacheHeuristic : 0.1; // 10% matches IE
        this._immutableMinTtl =
            undefined !== immutableMinTimeToLive
                ? immutableMinTimeToLive
                : 24 * 3600 * 1000;

        this._status = 'status' in res ? res.status : 200;
        this._resHeaders = res.headers;
        this._rescc = parseCacheControl(res.headers['cache-control']);
        this._method = 'method' in req ? req.method : 'GET';
        this._url = req.url;
        this._host = req.headers.host;
        this._noAuthorization = !req.headers.authorization;
        this._reqHeaders = res.headers.vary ? req.headers : null; // Don't keep all request headers if they won't be used
        this._reqcc = parseCacheControl(req.headers['cache-control']);

        // Assume that if someone uses legacy, non-standard uncecessary options they don't understand caching,
        // so there's no point stricly adhering to the blindly copy&pasted directives.
        if (
            ignoreCargoCult &&
            'pre-check' in this._rescc &&
            'post-check' in this._rescc
        ) {
            delete this._rescc['pre-check'];
            delete this._rescc['post-check'];
            delete this._rescc['no-cache'];
            delete this._rescc['no-store'];
            delete this._rescc['must-revalidate'];
            this._resHeaders = Object.assign({}, this._resHeaders, {
                'cache-control': formatCacheControl(this._rescc),
            });
            delete this._resHeaders.expires;
            delete this._resHeaders.pragma;
        }

        // When the Cache-Control header field is not present in a request, caches MUST consider the no-cache request pragma-directive
        // as having the same effect as if "Cache-Control: no-cache" were present (see Section 5.2.1).
        if (
            res.headers['cache-control'] == null &&
            /no-cache/.test(res.headers.pragma)
        ) {
            this._rescc['no-cache'] = true;
        }
    }

    now() {
        return Date.now();
    }

    storable() {
        // The "no-store" request directive indicates that a cache MUST NOT store any part of either this request or any response to it.
        return !!(
            !this._reqcc['no-store'] &&
            // A cache MUST NOT store a response to any request, unless:
            // The request method is understood by the cache and defined as being cacheable, and
            ('GET' === this._method ||
                'HEAD' === this._method ||
                ('POST' === this._method && this._hasExplicitExpiration())) &&
            // the response status code is understood by the cache, and
            understoodStatuses.has(this._status) &&
            // the "no-store" cache directive does not appear in request or response header fields, and
            !this._rescc['no-store'] &&
            // the "private" response directive does not appear in the response, if the cache is shared, and
            (!this._isShared || !this._rescc.private) &&
            // the Authorization header field does not appear in the request, if the cache is shared,
            (!this._isShared ||
                this._noAuthorization ||
                this._allowsStoringAuthenticated()) &&
            // the response either:
            // contains an Expires header field, or
            (this._resHeaders.expires ||
                // contains a max-age response directive, or
                // contains a s-maxage response directive and the cache is shared, or
                // contains a public response directive.
                this._rescc['max-age'] ||
                (this._isShared && this._rescc['s-maxage']) ||
                this._rescc.public ||
                // has a status code that is defined as cacheable by default
                statusCodeCacheableByDefault.has(this._status))
        );
    }

    _hasExplicitExpiration() {
        // 4.2.1 Calculating Freshness Lifetime
        return (
            (this._isShared && this._rescc['s-maxage']) ||
            this._rescc['max-age'] ||
            this._resHeaders.expires
        );
    }

    _assertRequestHasHeaders(req) {
        if (!req || !req.headers) {
            throw Error('Request headers missing');
        }
    }

    satisfiesWithoutRevalidation(req) {
        this._assertRequestHasHeaders(req);

        // When presented with a request, a cache MUST NOT reuse a stored response, unless:
        // the presented request does not contain the no-cache pragma (Section 5.4), nor the no-cache cache directive,
        // unless the stored response is successfully validated (Section 4.3), and
        const requestCC = parseCacheControl(req.headers['cache-control']);
        if (requestCC['no-cache'] || /no-cache/.test(req.headers.pragma)) {
            return false;
        }

        if (requestCC['max-age'] && this.age() > requestCC['max-age']) {
            return false;
        }

        if (
            requestCC['min-fresh'] &&
            this.timeToLive() < 1000 * requestCC['min-fresh']
        ) {
            return false;
        }

        // the stored response is either:
        // fresh, or allowed to be served stale
        if (this.stale()) {
            const allowsStale =
                requestCC['max-stale'] &&
                !this._rescc['must-revalidate'] &&
                (true === requestCC['max-stale'] ||
                    requestCC['max-stale'] > this.age() - this.maxAge());
            if (!allowsStale) {
                return false;
            }
        }

        return this._requestMatches(req, false);
    }

    _requestMatches(req, allowHeadMethod) {
        // The presented effective request URI and that of the stored response match, and
        return (
            (!this._url || this._url === req.url) &&
            this._host === req.headers.host &&
            // the request method associated with the stored response allows it to be used for the presented request, and
            (!req.method ||
                this._method === req.method ||
                (allowHeadMethod && 'HEAD' === req.method)) &&
            // selecting header fields nominated by the stored response (if any) match those presented, and
            this._varyMatches(req)
        );
    }

    _allowsStoringAuthenticated() {
        //  following Cache-Control response directives (Section 5.2.2) have such an effect: must-revalidate, public, and s-maxage.
        return (
            this._rescc['must-revalidate'] ||
            this._rescc.public ||
            this._rescc['s-maxage']
        );
    }

    _varyMatches(req) {
        if (!this._resHeaders.vary) {
            return true;
        }

        // A Vary header field-value of "*" always fails to match
        if (this._resHeaders.vary === '*') {
            return false;
        }

        const fields = this._resHeaders.vary
            .trim()
            .toLowerCase()
            .split(/\s*,\s*/);
        for (const name of fields) {
            if (req.headers[name] !== this._reqHeaders[name]) return false;
        }
        return true;
    }

    _copyWithoutHopByHopHeaders(inHeaders) {
        const headers = {};
        for (const name in inHeaders) {
            if (hopByHopHeaders[name]) continue;
            headers[name] = inHeaders[name];
        }
        // 9.1.  Connection
        if (inHeaders.connection) {
            const tokens = inHeaders.connection.trim().split(/\s*,\s*/);
            for (const name of tokens) {
                delete headers[name];
            }
        }
        if (headers.warning) {
            const warnings = headers.warning.split(/,/).filter(warning => {
                return !/^\s*1[0-9][0-9]/.test(warning);
            });
            if (!warnings.length) {
                delete headers.warning;
            } else {
                headers.warning = warnings.join(',').trim();
            }
        }
        return headers;
    }

    responseHeaders() {
        const headers = this._copyWithoutHopByHopHeaders(this._resHeaders);
        const age = this.age();

        // A cache SHOULD generate 113 warning if it heuristically chose a freshness
        // lifetime greater than 24 hours and the response's age is greater than 24 hours.
        if (
            age > 3600 * 24 &&
            !this._hasExplicitExpiration() &&
            this.maxAge() > 3600 * 24
        ) {
            headers.warning =
                (headers.warning ? `${headers.warning}, ` : '') +
                '113 - "rfc7234 5.5.4"';
        }
        headers.age = `${Math.round(age)}`;
        headers.date = new Date(this.now()).toUTCString();
        return headers;
    }

    /**
     * Value of the Date response header or current time if Date was invalid
     * @return timestamp
     */
    date() {
        const serverDate = Date.parse(this._resHeaders.date);
        if (isFinite(serverDate)) {
            return serverDate;
        }
        return this._responseTime;
    }

    /**
     * Value of the Age header, in seconds, updated for the current time.
     * May be fractional.
     *
     * @return Number
     */
    age() {
        let age = this._ageValue();

        const residentTime = (this.now() - this._responseTime) / 1000;
        return age + residentTime;
    }

    _ageValue() {
        return toNumberOrZero(this._resHeaders.age);
    }

    /**
     * Value of applicable max-age (or heuristic equivalent) in seconds. This counts since response's `Date`.
     *
     * For an up-to-date value, see `timeToLive()`.
     *
     * @return Number
     */
    maxAge() {
        if (!this.storable() || this._rescc['no-cache']) {
            return 0;
        }

        // Shared responses with cookies are cacheable according to the RFC, but IMHO it'd be unwise to do so by default
        // so this implementation requires explicit opt-in via public header
        if (
            this._isShared &&
            (this._resHeaders['set-cookie'] &&
                !this._rescc.public &&
                !this._rescc.immutable)
        ) {
            return 0;
        }

        if (this._resHeaders.vary === '*') {
            return 0;
        }

        if (this._isShared) {
            if (this._rescc['proxy-revalidate']) {
                return 0;
            }
            // if a response includes the s-maxage directive, a shared cache recipient MUST ignore the Expires field.
            if (this._rescc['s-maxage']) {
                return toNumberOrZero(this._rescc['s-maxage']);
            }
        }

        // If a response includes a Cache-Control field with the max-age directive, a recipient MUST ignore the Expires field.
        if (this._rescc['max-age']) {
            return toNumberOrZero(this._rescc['max-age']);
        }

        const defaultMinTtl = this._rescc.immutable ? this._immutableMinTtl : 0;

        const serverDate = this.date();
        if (this._resHeaders.expires) {
            const expires = Date.parse(this._resHeaders.expires);
            // A cache recipient MUST interpret invalid date formats, especially the value "0", as representing a time in the past (i.e., "already expired").
            if (Number.isNaN(expires) || expires < serverDate) {
                return 0;
            }
            return Math.max(defaultMinTtl, (expires - serverDate) / 1000);
        }

        if (this._resHeaders['last-modified']) {
            const lastModified = Date.parse(this._resHeaders['last-modified']);
            if (isFinite(lastModified) && serverDate > lastModified) {
                return Math.max(
                    defaultMinTtl,
                    ((serverDate - lastModified) / 1000) * this._cacheHeuristic
                );
            }
        }

        return defaultMinTtl;
    }

    timeToLive() {
        const age = this.maxAge() - this.age();
        const staleIfErrorAge = age + toNumberOrZero(this._rescc['stale-if-error']);
        const staleWhileRevalidateAge = age + toNumberOrZero(this._rescc['stale-while-revalidate']);
        return Math.max(0, age, staleIfErrorAge, staleWhileRevalidateAge) * 1000;
    }

    stale() {
        return this.maxAge() <= this.age();
    }

    _useStaleIfError() {
        return this.maxAge() + toNumberOrZero(this._rescc['stale-if-error']) > this.age();
    }

    useStaleWhileRevalidate() {
        return this.maxAge() + toNumberOrZero(this._rescc['stale-while-revalidate']) > this.age();
    }

    static fromObject(obj) {
        return new this(undefined, undefined, { _fromObject: obj });
    }

    _fromObject(obj) {
        if (this._responseTime) throw Error('Reinitialized');
        if (!obj || obj.v !== 1) throw Error('Invalid serialization');

        this._responseTime = obj.t;
        this._isShared = obj.sh;
        this._cacheHeuristic = obj.ch;
        this._immutableMinTtl =
            obj.imm !== undefined ? obj.imm : 24 * 3600 * 1000;
        this._status = obj.st;
        this._resHeaders = obj.resh;
        this._rescc = obj.rescc;
        this._method = obj.m;
        this._url = obj.u;
        this._host = obj.h;
        this._noAuthorization = obj.a;
        this._reqHeaders = obj.reqh;
        this._reqcc = obj.reqcc;
    }

    toObject() {
        return {
            v: 1,
            t: this._responseTime,
            sh: this._isShared,
            ch: this._cacheHeuristic,
            imm: this._immutableMinTtl,
            st: this._status,
            resh: this._resHeaders,
            rescc: this._rescc,
            m: this._method,
            u: this._url,
            h: this._host,
            a: this._noAuthorization,
            reqh: this._reqHeaders,
            reqcc: this._reqcc,
        };
    }

    /**
     * Headers for sending to the origin server to revalidate stale response.
     * Allows server to return 304 to allow reuse of the previous response.
     *
     * Hop by hop headers are always stripped.
     * Revalidation headers may be added or removed, depending on request.
     */
    revalidationHeaders(incomingReq) {
        this._assertRequestHasHeaders(incomingReq);
        const headers = this._copyWithoutHopByHopHeaders(incomingReq.headers);

        // This implementation does not understand range requests
        delete headers['if-range'];

        if (!this._requestMatches(incomingReq, true) || !this.storable()) {
            // revalidation allowed via HEAD
            // not for the same resource, or wasn't allowed to be cached anyway
            delete headers['if-none-match'];
            delete headers['if-modified-since'];
            return headers;
        }

        /* MUST send that entity-tag in any cache validation request (using If-Match or If-None-Match) if an entity-tag has been provided by the origin server. */
        if (this._resHeaders.etag) {
            headers['if-none-match'] = headers['if-none-match']
                ? `${headers['if-none-match']}, ${this._resHeaders.etag}`
                : this._resHeaders.etag;
        }

        // Clients MAY issue simple (non-subrange) GET requests with either weak validators or strong validators. Clients MUST NOT use weak validators in other forms of request.
        const forbidsWeakValidators =
            headers['accept-ranges'] ||
            headers['if-match'] ||
            headers['if-unmodified-since'] ||
            (this._method && this._method != 'GET');

        /* SHOULD send the Last-Modified value in non-subrange cache validation requests (using If-Modified-Since) if only a Last-Modified value has been provided by the origin server.
        Note: This implementation does not understand partial responses (206) */
        if (forbidsWeakValidators) {
            delete headers['if-modified-since'];

            if (headers['if-none-match']) {
                const etags = headers['if-none-match']
                    .split(/,/)
                    .filter(etag => {
                        return !/^\s*W\//.test(etag);
                    });
                if (!etags.length) {
                    delete headers['if-none-match'];
                } else {
                    headers['if-none-match'] = etags.join(',').trim();
                }
            }
        } else if (
            this._resHeaders['last-modified'] &&
            !headers['if-modified-since']
        ) {
            headers['if-modified-since'] = this._resHeaders['last-modified'];
        }

        return headers;
    }

    /**
     * Creates new CachePolicy with information combined from the previews response,
     * and the new revalidation response.
     *
     * Returns {policy, modified} where modified is a boolean indicating
     * whether the response body has been modified, and old cached body can't be used.
     *
     * @return {Object} {policy: CachePolicy, modified: Boolean}
     */
    revalidatedPolicy(request, response) {
        this._assertRequestHasHeaders(request);
        if(this._useStaleIfError() && isErrorResponse(response)) {  // I consider the revalidation request unsuccessful
          return {
            modified: false,
            matches: false,
            policy: this,
          };
        }
        if (!response || !response.headers) {
            throw Error('Response headers missing');
        }

        // These aren't going to be supported exactly, since one CachePolicy object
        // doesn't know about all the other cached objects.
        let matches = false;
        if (response.status !== undefined && response.status != 304) {
            matches = false;
        } else if (
            response.headers.etag &&
            !/^\s*W\//.test(response.headers.etag)
        ) {
            // "All of the stored responses with the same strong validator are selected.
            // If none of the stored responses contain the same strong validator,
            // then the cache MUST NOT use the new response to update any stored responses."
            matches =
                this._resHeaders.etag &&
                this._resHeaders.etag.replace(/^\s*W\//, '') ===
                    response.headers.etag;
        } else if (this._resHeaders.etag && response.headers.etag) {
            // "If the new response contains a weak validator and that validator corresponds
            // to one of the cache's stored responses,
            // then the most recent of those matching stored responses is selected for update."
            matches =
                this._resHeaders.etag.replace(/^\s*W\//, '') ===
                response.headers.etag.replace(/^\s*W\//, '');
        } else if (this._resHeaders['last-modified']) {
            matches =
                this._resHeaders['last-modified'] ===
                response.headers['last-modified'];
        } else {
            // If the new response does not include any form of validator (such as in the case where
            // a client generates an If-Modified-Since request from a source other than the Last-Modified
            // response header field), and there is only one stored response, and that stored response also
            // lacks a validator, then that stored response is selected for update.
            if (
                !this._resHeaders.etag &&
                !this._resHeaders['last-modified'] &&
                !response.headers.etag &&
                !response.headers['last-modified']
            ) {
                matches = true;
            }
        }

        if (!matches) {
            return {
                policy: new this.constructor(request, response),
                // Client receiving 304 without body, even if it's invalid/mismatched has no option
                // but to reuse a cached body. We don't have a good way to tell clients to do
                // error recovery in such case.
                modified: response.status != 304,
                matches: false,
            };
        }

        // use other header fields provided in the 304 (Not Modified) response to replace all instances
        // of the corresponding header fields in the stored response.
        const headers = {};
        for (const k in this._resHeaders) {
            headers[k] =
                k in response.headers && !excludedFromRevalidationUpdate[k]
                    ? response.headers[k]
                    : this._resHeaders[k];
        }

        const newResponse = Object.assign({}, response, {
            status: this._status,
            method: this._method,
            headers,
        });
        return {
            policy: new this.constructor(request, newResponse, {
                shared: this._isShared,
                cacheHeuristic: this._cacheHeuristic,
                immutableMinTimeToLive: this._immutableMinTtl,
            }),
            modified: false,
            matches: true,
        };
    }
};


/***/ }),

/***/ 79898:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const EventEmitter = __nccwpck_require__(28614);
const tls = __nccwpck_require__(4016);
const http2 = __nccwpck_require__(97565);
const QuickLRU = __nccwpck_require__(49273);

const kCurrentStreamsCount = Symbol('currentStreamsCount');
const kRequest = Symbol('request');
const kOriginSet = Symbol('cachedOriginSet');
const kGracefullyClosing = Symbol('gracefullyClosing');

const nameKeys = [
	// `http2.connect()` options
	'maxDeflateDynamicTableSize',
	'maxSessionMemory',
	'maxHeaderListPairs',
	'maxOutstandingPings',
	'maxReservedRemoteStreams',
	'maxSendHeaderBlockLength',
	'paddingStrategy',

	// `tls.connect()` options
	'localAddress',
	'path',
	'rejectUnauthorized',
	'minDHSize',

	// `tls.createSecureContext()` options
	'ca',
	'cert',
	'clientCertEngine',
	'ciphers',
	'key',
	'pfx',
	'servername',
	'minVersion',
	'maxVersion',
	'secureProtocol',
	'crl',
	'honorCipherOrder',
	'ecdhCurve',
	'dhparam',
	'secureOptions',
	'sessionIdContext'
];

const getSortedIndex = (array, value, compare) => {
	let low = 0;
	let high = array.length;

	while (low < high) {
		const mid = (low + high) >>> 1;

		/* istanbul ignore next */
		if (compare(array[mid], value)) {
			// This never gets called because we use descending sort. Better to have this anyway.
			low = mid + 1;
		} else {
			high = mid;
		}
	}

	return low;
};

const compareSessions = (a, b) => {
	return a.remoteSettings.maxConcurrentStreams > b.remoteSettings.maxConcurrentStreams;
};

// See https://tools.ietf.org/html/rfc8336
const closeCoveredSessions = (where, session) => {
	// Clients SHOULD NOT emit new requests on any connection whose Origin
	// Set is a proper subset of another connection's Origin Set, and they
	// SHOULD close it once all outstanding requests are satisfied.
	for (const coveredSession of where) {
		if (
			// The set is a proper subset when its length is less than the other set.
			coveredSession[kOriginSet].length < session[kOriginSet].length &&

			// And the other set includes all elements of the subset.
			coveredSession[kOriginSet].every(origin => session[kOriginSet].includes(origin)) &&

			// Makes sure that the session can handle all requests from the covered session.
			coveredSession[kCurrentStreamsCount] + session[kCurrentStreamsCount] <= session.remoteSettings.maxConcurrentStreams
		) {
			// This allows pending requests to finish and prevents making new requests.
			gracefullyClose(coveredSession);
		}
	}
};

// This is basically inverted `closeCoveredSessions(...)`.
const closeSessionIfCovered = (where, coveredSession) => {
	for (const session of where) {
		if (
			coveredSession[kOriginSet].length < session[kOriginSet].length &&
			coveredSession[kOriginSet].every(origin => session[kOriginSet].includes(origin)) &&
			coveredSession[kCurrentStreamsCount] + session[kCurrentStreamsCount] <= session.remoteSettings.maxConcurrentStreams
		) {
			gracefullyClose(coveredSession);
		}
	}
};

const getSessions = ({agent, isFree}) => {
	const result = {};

	// eslint-disable-next-line guard-for-in
	for (const normalizedOptions in agent.sessions) {
		const sessions = agent.sessions[normalizedOptions];

		const filtered = sessions.filter(session => {
			const result = session[Agent.kCurrentStreamsCount] < session.remoteSettings.maxConcurrentStreams;

			return isFree ? result : !result;
		});

		if (filtered.length !== 0) {
			result[normalizedOptions] = filtered;
		}
	}

	return result;
};

const gracefullyClose = session => {
	session[kGracefullyClosing] = true;

	if (session[kCurrentStreamsCount] === 0) {
		session.close();
	}
};

class Agent extends EventEmitter {
	constructor({timeout = 60000, maxSessions = Infinity, maxFreeSessions = 10, maxCachedTlsSessions = 100} = {}) {
		super();

		// A session is considered busy when its current streams count
		// is equal to or greater than the `maxConcurrentStreams` value.

		// A session is considered free when its current streams count
		// is less than the `maxConcurrentStreams` value.

		// SESSIONS[NORMALIZED_OPTIONS] = [];
		this.sessions = {};

		// The queue for creating new sessions. It looks like this:
		// QUEUE[NORMALIZED_OPTIONS][NORMALIZED_ORIGIN] = ENTRY_FUNCTION
		//
		// The entry function has `listeners`, `completed` and `destroyed` properties.
		// `listeners` is an array of objects containing `resolve` and `reject` functions.
		// `completed` is a boolean. It's set to true after ENTRY_FUNCTION is executed.
		// `destroyed` is a boolean. If it's set to true, the session will be destroyed if hasn't connected yet.
		this.queue = {};

		// Each session will use this timeout value.
		this.timeout = timeout;

		// Max sessions in total
		this.maxSessions = maxSessions;

		// Max free sessions in total
		// TODO: decreasing `maxFreeSessions` should close some sessions
		this.maxFreeSessions = maxFreeSessions;

		this._freeSessionsCount = 0;
		this._sessionsCount = 0;

		// We don't support push streams by default.
		this.settings = {
			enablePush: false
		};

		// Reusing TLS sessions increases performance.
		this.tlsSessionCache = new QuickLRU({maxSize: maxCachedTlsSessions});
	}

	static normalizeOrigin(url, servername) {
		if (typeof url === 'string') {
			url = new URL(url);
		}

		if (servername && url.hostname !== servername) {
			url.hostname = servername;
		}

		return url.origin;
	}

	normalizeOptions(options) {
		let normalized = '';

		if (options) {
			for (const key of nameKeys) {
				if (options[key]) {
					normalized += `:${options[key]}`;
				}
			}
		}

		return normalized;
	}

	_tryToCreateNewSession(normalizedOptions, normalizedOrigin) {
		if (!(normalizedOptions in this.queue) || !(normalizedOrigin in this.queue[normalizedOptions])) {
			return;
		}

		const item = this.queue[normalizedOptions][normalizedOrigin];

		// The entry function can be run only once.
		// BUG: The session may be never created when:
		// - the first condition is false AND
		// - this function is never called with the same arguments in the future.
		if (this._sessionsCount < this.maxSessions && !item.completed) {
			item.completed = true;

			item();
		}
	}

	getSession(origin, options, listeners) {
		return new Promise((resolve, reject) => {
			if (Array.isArray(listeners)) {
				listeners = [...listeners];

				// Resolve the current promise ASAP, we're just moving the listeners.
				// They will be executed at a different time.
				resolve();
			} else {
				listeners = [{resolve, reject}];
			}

			const normalizedOptions = this.normalizeOptions(options);
			const normalizedOrigin = Agent.normalizeOrigin(origin, options && options.servername);

			if (normalizedOrigin === undefined) {
				for (const {reject} of listeners) {
					reject(new TypeError('The `origin` argument needs to be a string or an URL object'));
				}

				return;
			}

			if (normalizedOptions in this.sessions) {
				const sessions = this.sessions[normalizedOptions];

				let maxConcurrentStreams = -1;
				let currentStreamsCount = -1;
				let optimalSession;

				// We could just do this.sessions[normalizedOptions].find(...) but that isn't optimal.
				// Additionally, we are looking for session which has biggest current pending streams count.
				for (const session of sessions) {
					const sessionMaxConcurrentStreams = session.remoteSettings.maxConcurrentStreams;

					if (sessionMaxConcurrentStreams < maxConcurrentStreams) {
						break;
					}

					if (session[kOriginSet].includes(normalizedOrigin)) {
						const sessionCurrentStreamsCount = session[kCurrentStreamsCount];

						if (
							sessionCurrentStreamsCount >= sessionMaxConcurrentStreams ||
							session[kGracefullyClosing] ||
							// Unfortunately the `close` event isn't called immediately,
							// so `session.destroyed` is `true`, but `session.closed` is `false`.
							session.destroyed
						) {
							continue;
						}

						// We only need set this once.
						if (!optimalSession) {
							maxConcurrentStreams = sessionMaxConcurrentStreams;
						}

						// We're looking for the session which has biggest current pending stream count,
						// in order to minimalize the amount of active sessions.
						if (sessionCurrentStreamsCount > currentStreamsCount) {
							optimalSession = session;
							currentStreamsCount = sessionCurrentStreamsCount;
						}
					}
				}

				if (optimalSession) {
					/* istanbul ignore next: safety check */
					if (listeners.length !== 1) {
						for (const {reject} of listeners) {
							const error = new Error(
								`Expected the length of listeners to be 1, got ${listeners.length}.\n` +
								'Please report this to https://github.com/szmarczak/http2-wrapper/'
							);

							reject(error);
						}

						return;
					}

					listeners[0].resolve(optimalSession);
					return;
				}
			}

			if (normalizedOptions in this.queue) {
				if (normalizedOrigin in this.queue[normalizedOptions]) {
					// There's already an item in the queue, just attach ourselves to it.
					this.queue[normalizedOptions][normalizedOrigin].listeners.push(...listeners);

					// This shouldn't be executed here.
					// See the comment inside _tryToCreateNewSession.
					this._tryToCreateNewSession(normalizedOptions, normalizedOrigin);
					return;
				}
			} else {
				this.queue[normalizedOptions] = {};
			}

			// The entry must be removed from the queue IMMEDIATELY when:
			// 1. the session connects successfully,
			// 2. an error occurs.
			const removeFromQueue = () => {
				// Our entry can be replaced. We cannot remove the new one.
				if (normalizedOptions in this.queue && this.queue[normalizedOptions][normalizedOrigin] === entry) {
					delete this.queue[normalizedOptions][normalizedOrigin];

					if (Object.keys(this.queue[normalizedOptions]).length === 0) {
						delete this.queue[normalizedOptions];
					}
				}
			};

			// The main logic is here
			const entry = () => {
				const name = `${normalizedOrigin}:${normalizedOptions}`;
				let receivedSettings = false;

				try {
					const session = http2.connect(origin, {
						createConnection: this.createConnection,
						settings: this.settings,
						session: this.tlsSessionCache.get(name),
						...options
					});
					session[kCurrentStreamsCount] = 0;
					session[kGracefullyClosing] = false;

					const isFree = () => session[kCurrentStreamsCount] < session.remoteSettings.maxConcurrentStreams;
					let wasFree = true;

					session.socket.once('session', tlsSession => {
						this.tlsSessionCache.set(name, tlsSession);
					});

					session.once('error', error => {
						// Listeners are empty when the session successfully connected.
						for (const {reject} of listeners) {
							reject(error);
						}

						// The connection got broken, purge the cache.
						this.tlsSessionCache.delete(name);
					});

					session.setTimeout(this.timeout, () => {
						// Terminates all streams owned by this session.
						// TODO: Maybe the streams should have a "Session timed out" error?
						session.destroy();
					});

					session.once('close', () => {
						if (receivedSettings) {
							// 1. If it wasn't free then no need to decrease because
							//    it has been decreased already in session.request().
							// 2. `stream.once('close')` won't increment the count
							//    because the session is already closed.
							if (wasFree) {
								this._freeSessionsCount--;
							}

							this._sessionsCount--;

							// This cannot be moved to the stream logic,
							// because there may be a session that hadn't made a single request.
							const where = this.sessions[normalizedOptions];
							where.splice(where.indexOf(session), 1);

							if (where.length === 0) {
								delete this.sessions[normalizedOptions];
							}
						} else {
							// Broken connection
							const error = new Error('Session closed without receiving a SETTINGS frame');
							error.code = 'HTTP2WRAPPER_NOSETTINGS';

							for (const {reject} of listeners) {
								reject(error);
							}

							removeFromQueue();
						}

						// There may be another session awaiting.
						this._tryToCreateNewSession(normalizedOptions, normalizedOrigin);
					});

					// Iterates over the queue and processes listeners.
					const processListeners = () => {
						if (!(normalizedOptions in this.queue) || !isFree()) {
							return;
						}

						for (const origin of session[kOriginSet]) {
							if (origin in this.queue[normalizedOptions]) {
								const {listeners} = this.queue[normalizedOptions][origin];

								// Prevents session overloading.
								while (listeners.length !== 0 && isFree()) {
									// We assume `resolve(...)` calls `request(...)` *directly*,
									// otherwise the session will get overloaded.
									listeners.shift().resolve(session);
								}

								const where = this.queue[normalizedOptions];
								if (where[origin].listeners.length === 0) {
									delete where[origin];

									if (Object.keys(where).length === 0) {
										delete this.queue[normalizedOptions];
										break;
									}
								}

								// We're no longer free, no point in continuing.
								if (!isFree()) {
									break;
								}
							}
						}
					};

					// The Origin Set cannot shrink. No need to check if it suddenly became covered by another one.
					session.on('origin', () => {
						session[kOriginSet] = session.originSet;

						if (!isFree()) {
							// The session is full.
							return;
						}

						processListeners();

						// Close covered sessions (if possible).
						closeCoveredSessions(this.sessions[normalizedOptions], session);
					});

					session.once('remoteSettings', () => {
						// Fix Node.js bug preventing the process from exiting
						session.ref();
						session.unref();

						this._sessionsCount++;

						// The Agent could have been destroyed already.
						if (entry.destroyed) {
							const error = new Error('Agent has been destroyed');

							for (const listener of listeners) {
								listener.reject(error);
							}

							session.destroy();
							return;
						}

						session[kOriginSet] = session.originSet;

						{
							const where = this.sessions;

							if (normalizedOptions in where) {
								const sessions = where[normalizedOptions];
								sessions.splice(getSortedIndex(sessions, session, compareSessions), 0, session);
							} else {
								where[normalizedOptions] = [session];
							}
						}

						this._freeSessionsCount += 1;
						receivedSettings = true;

						this.emit('session', session);

						processListeners();
						removeFromQueue();

						// TODO: Close last recently used (or least used?) session
						if (session[kCurrentStreamsCount] === 0 && this._freeSessionsCount > this.maxFreeSessions) {
							session.close();
						}

						// Check if we haven't managed to execute all listeners.
						if (listeners.length !== 0) {
							// Request for a new session with predefined listeners.
							this.getSession(normalizedOrigin, options, listeners);
							listeners.length = 0;
						}

						// `session.remoteSettings.maxConcurrentStreams` might get increased
						session.on('remoteSettings', () => {
							processListeners();

							// In case the Origin Set changes
							closeCoveredSessions(this.sessions[normalizedOptions], session);
						});
					});

					// Shim `session.request()` in order to catch all streams
					session[kRequest] = session.request;
					session.request = (headers, streamOptions) => {
						if (session[kGracefullyClosing]) {
							throw new Error('The session is gracefully closing. No new streams are allowed.');
						}

						const stream = session[kRequest](headers, streamOptions);

						// The process won't exit until the session is closed or all requests are gone.
						session.ref();

						++session[kCurrentStreamsCount];

						if (session[kCurrentStreamsCount] === session.remoteSettings.maxConcurrentStreams) {
							this._freeSessionsCount--;
						}

						stream.once('close', () => {
							wasFree = isFree();

							--session[kCurrentStreamsCount];

							if (!session.destroyed && !session.closed) {
								closeSessionIfCovered(this.sessions[normalizedOptions], session);

								if (isFree() && !session.closed) {
									if (!wasFree) {
										this._freeSessionsCount++;

										wasFree = true;
									}

									const isEmpty = session[kCurrentStreamsCount] === 0;

									if (isEmpty) {
										session.unref();
									}

									if (
										isEmpty &&
										(
											this._freeSessionsCount > this.maxFreeSessions ||
											session[kGracefullyClosing]
										)
									) {
										session.close();
									} else {
										closeCoveredSessions(this.sessions[normalizedOptions], session);
										processListeners();
									}
								}
							}
						});

						return stream;
					};
				} catch (error) {
					for (const listener of listeners) {
						listener.reject(error);
					}

					removeFromQueue();
				}
			};

			entry.listeners = listeners;
			entry.completed = false;
			entry.destroyed = false;

			this.queue[normalizedOptions][normalizedOrigin] = entry;
			this._tryToCreateNewSession(normalizedOptions, normalizedOrigin);
		});
	}

	request(origin, options, headers, streamOptions) {
		return new Promise((resolve, reject) => {
			this.getSession(origin, options, [{
				reject,
				resolve: session => {
					try {
						resolve(session.request(headers, streamOptions));
					} catch (error) {
						reject(error);
					}
				}
			}]);
		});
	}

	createConnection(origin, options) {
		return Agent.connect(origin, options);
	}

	static connect(origin, options) {
		options.ALPNProtocols = ['h2'];

		const port = origin.port || 443;
		const host = origin.hostname || origin.host;

		if (typeof options.servername === 'undefined') {
			options.servername = host;
		}

		return tls.connect(port, host, options);
	}

	closeFreeSessions() {
		for (const sessions of Object.values(this.sessions)) {
			for (const session of sessions) {
				if (session[kCurrentStreamsCount] === 0) {
					session.close();
				}
			}
		}
	}

	destroy(reason) {
		for (const sessions of Object.values(this.sessions)) {
			for (const session of sessions) {
				session.destroy(reason);
			}
		}

		for (const entriesOfAuthority of Object.values(this.queue)) {
			for (const entry of Object.values(entriesOfAuthority)) {
				entry.destroyed = true;
			}
		}

		// New requests should NOT attach to destroyed sessions
		this.queue = {};
	}

	get freeSessions() {
		return getSessions({agent: this, isFree: true});
	}

	get busySessions() {
		return getSessions({agent: this, isFree: false});
	}
}

Agent.kCurrentStreamsCount = kCurrentStreamsCount;
Agent.kGracefullyClosing = kGracefullyClosing;

module.exports = {
	Agent,
	globalAgent: new Agent()
};


/***/ }),

/***/ 97167:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const http = __nccwpck_require__(98605);
const https = __nccwpck_require__(57211);
const resolveALPN = __nccwpck_require__(46624);
const QuickLRU = __nccwpck_require__(49273);
const Http2ClientRequest = __nccwpck_require__(59632);
const calculateServerName = __nccwpck_require__(51982);
const urlToOptions = __nccwpck_require__(92686);

const cache = new QuickLRU({maxSize: 100});
const queue = new Map();

const installSocket = (agent, socket, options) => {
	socket._httpMessage = {shouldKeepAlive: true};

	const onFree = () => {
		agent.emit('free', socket, options);
	};

	socket.on('free', onFree);

	const onClose = () => {
		agent.removeSocket(socket, options);
	};

	socket.on('close', onClose);

	const onRemove = () => {
		agent.removeSocket(socket, options);
		socket.off('close', onClose);
		socket.off('free', onFree);
		socket.off('agentRemove', onRemove);
	};

	socket.on('agentRemove', onRemove);

	agent.emit('free', socket, options);
};

const resolveProtocol = async options => {
	const name = `${options.host}:${options.port}:${options.ALPNProtocols.sort()}`;

	if (!cache.has(name)) {
		if (queue.has(name)) {
			const result = await queue.get(name);
			return result.alpnProtocol;
		}

		const {path, agent} = options;
		options.path = options.socketPath;

		const resultPromise = resolveALPN(options);
		queue.set(name, resultPromise);

		try {
			const {socket, alpnProtocol} = await resultPromise;
			cache.set(name, alpnProtocol);

			options.path = path;

			if (alpnProtocol === 'h2') {
				// https://github.com/nodejs/node/issues/33343
				socket.destroy();
			} else {
				const {globalAgent} = https;
				const defaultCreateConnection = https.Agent.prototype.createConnection;

				if (agent) {
					if (agent.createConnection === defaultCreateConnection) {
						installSocket(agent, socket, options);
					} else {
						socket.destroy();
					}
				} else if (globalAgent.createConnection === defaultCreateConnection) {
					installSocket(globalAgent, socket, options);
				} else {
					socket.destroy();
				}
			}

			queue.delete(name);

			return alpnProtocol;
		} catch (error) {
			queue.delete(name);

			throw error;
		}
	}

	return cache.get(name);
};

module.exports = async (input, options, callback) => {
	if (typeof input === 'string' || input instanceof URL) {
		input = urlToOptions(new URL(input));
	}

	if (typeof options === 'function') {
		callback = options;
		options = undefined;
	}

	options = {
		ALPNProtocols: ['h2', 'http/1.1'],
		...input,
		...options,
		resolveSocket: true
	};

	if (!Array.isArray(options.ALPNProtocols) || options.ALPNProtocols.length === 0) {
		throw new Error('The `ALPNProtocols` option must be an Array with at least one entry');
	}

	options.protocol = options.protocol || 'https:';
	const isHttps = options.protocol === 'https:';

	options.host = options.hostname || options.host || 'localhost';
	options.session = options.tlsSession;
	options.servername = options.servername || calculateServerName(options);
	options.port = options.port || (isHttps ? 443 : 80);
	options._defaultAgent = isHttps ? https.globalAgent : http.globalAgent;

	const agents = options.agent;

	if (agents) {
		if (agents.addRequest) {
			throw new Error('The `options.agent` object can contain only `http`, `https` or `http2` properties');
		}

		options.agent = agents[isHttps ? 'https' : 'http'];
	}

	if (isHttps) {
		const protocol = await resolveProtocol(options);

		if (protocol === 'h2') {
			if (agents) {
				options.agent = agents.http2;
			}

			return new Http2ClientRequest(options, callback);
		}
	}

	return http.request(options, callback);
};

module.exports.protocolCache = cache;


/***/ }),

/***/ 59632:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const http2 = __nccwpck_require__(97565);
const {Writable} = __nccwpck_require__(92413);
const {Agent, globalAgent} = __nccwpck_require__(79898);
const IncomingMessage = __nccwpck_require__(82575);
const urlToOptions = __nccwpck_require__(92686);
const proxyEvents = __nccwpck_require__(81818);
const isRequestPseudoHeader = __nccwpck_require__(11199);
const {
	ERR_INVALID_ARG_TYPE,
	ERR_INVALID_PROTOCOL,
	ERR_HTTP_HEADERS_SENT,
	ERR_INVALID_HTTP_TOKEN,
	ERR_HTTP_INVALID_HEADER_VALUE,
	ERR_INVALID_CHAR
} = __nccwpck_require__(7087);

const {
	HTTP2_HEADER_STATUS,
	HTTP2_HEADER_METHOD,
	HTTP2_HEADER_PATH,
	HTTP2_METHOD_CONNECT
} = http2.constants;

const kHeaders = Symbol('headers');
const kOrigin = Symbol('origin');
const kSession = Symbol('session');
const kOptions = Symbol('options');
const kFlushedHeaders = Symbol('flushedHeaders');
const kJobs = Symbol('jobs');

const isValidHttpToken = /^[\^`\-\w!#$%&*+.|~]+$/;
const isInvalidHeaderValue = /[^\t\u0020-\u007E\u0080-\u00FF]/;

class ClientRequest extends Writable {
	constructor(input, options, callback) {
		super({
			autoDestroy: false
		});

		const hasInput = typeof input === 'string' || input instanceof URL;
		if (hasInput) {
			input = urlToOptions(input instanceof URL ? input : new URL(input));
		}

		if (typeof options === 'function' || options === undefined) {
			// (options, callback)
			callback = options;
			options = hasInput ? input : {...input};
		} else {
			// (input, options, callback)
			options = {...input, ...options};
		}

		if (options.h2session) {
			this[kSession] = options.h2session;
		} else if (options.agent === false) {
			this.agent = new Agent({maxFreeSessions: 0});
		} else if (typeof options.agent === 'undefined' || options.agent === null) {
			if (typeof options.createConnection === 'function') {
				// This is a workaround - we don't have to create the session on our own.
				this.agent = new Agent({maxFreeSessions: 0});
				this.agent.createConnection = options.createConnection;
			} else {
				this.agent = globalAgent;
			}
		} else if (typeof options.agent.request === 'function') {
			this.agent = options.agent;
		} else {
			throw new ERR_INVALID_ARG_TYPE('options.agent', ['Agent-like Object', 'undefined', 'false'], options.agent);
		}

		if (options.protocol && options.protocol !== 'https:') {
			throw new ERR_INVALID_PROTOCOL(options.protocol, 'https:');
		}

		const port = options.port || options.defaultPort || (this.agent && this.agent.defaultPort) || 443;
		const host = options.hostname || options.host || 'localhost';

		// Don't enforce the origin via options. It may be changed in an Agent.
		delete options.hostname;
		delete options.host;
		delete options.port;

		const {timeout} = options;
		options.timeout = undefined;

		this[kHeaders] = Object.create(null);
		this[kJobs] = [];

		this.socket = null;
		this.connection = null;

		this.method = options.method || 'GET';
		this.path = options.path;

		this.res = null;
		this.aborted = false;
		this.reusedSocket = false;

		if (options.headers) {
			for (const [header, value] of Object.entries(options.headers)) {
				this.setHeader(header, value);
			}
		}

		if (options.auth && !('authorization' in this[kHeaders])) {
			this[kHeaders].authorization = 'Basic ' + Buffer.from(options.auth).toString('base64');
		}

		options.session = options.tlsSession;
		options.path = options.socketPath;

		this[kOptions] = options;

		// Clients that generate HTTP/2 requests directly SHOULD use the :authority pseudo-header field instead of the Host header field.
		if (port === 443) {
			this[kOrigin] = `https://${host}`;

			if (!(':authority' in this[kHeaders])) {
				this[kHeaders][':authority'] = host;
			}
		} else {
			this[kOrigin] = `https://${host}:${port}`;

			if (!(':authority' in this[kHeaders])) {
				this[kHeaders][':authority'] = `${host}:${port}`;
			}
		}

		if (timeout) {
			this.setTimeout(timeout);
		}

		if (callback) {
			this.once('response', callback);
		}

		this[kFlushedHeaders] = false;
	}

	get method() {
		return this[kHeaders][HTTP2_HEADER_METHOD];
	}

	set method(value) {
		if (value) {
			this[kHeaders][HTTP2_HEADER_METHOD] = value.toUpperCase();
		}
	}

	get path() {
		return this[kHeaders][HTTP2_HEADER_PATH];
	}

	set path(value) {
		if (value) {
			this[kHeaders][HTTP2_HEADER_PATH] = value;
		}
	}

	get _mustNotHaveABody() {
		return this.method === 'GET' || this.method === 'HEAD' || this.method === 'DELETE';
	}

	_write(chunk, encoding, callback) {
		// https://github.com/nodejs/node/blob/654df09ae0c5e17d1b52a900a545f0664d8c7627/lib/internal/http2/util.js#L148-L156
		if (this._mustNotHaveABody) {
			callback(new Error('The GET, HEAD and DELETE methods must NOT have a body'));
			/* istanbul ignore next: Node.js 12 throws directly */
			return;
		}

		this.flushHeaders();

		const callWrite = () => this._request.write(chunk, encoding, callback);
		if (this._request) {
			callWrite();
		} else {
			this[kJobs].push(callWrite);
		}
	}

	_final(callback) {
		if (this.destroyed) {
			return;
		}

		this.flushHeaders();

		const callEnd = () => {
			// For GET, HEAD and DELETE
			if (this._mustNotHaveABody) {
				callback();
				return;
			}

			this._request.end(callback);
		};

		if (this._request) {
			callEnd();
		} else {
			this[kJobs].push(callEnd);
		}
	}

	abort() {
		if (this.res && this.res.complete) {
			return;
		}

		if (!this.aborted) {
			process.nextTick(() => this.emit('abort'));
		}

		this.aborted = true;

		this.destroy();
	}

	_destroy(error, callback) {
		if (this.res) {
			this.res._dump();
		}

		if (this._request) {
			this._request.destroy();
		}

		callback(error);
	}

	async flushHeaders() {
		if (this[kFlushedHeaders] || this.destroyed) {
			return;
		}

		this[kFlushedHeaders] = true;

		const isConnectMethod = this.method === HTTP2_METHOD_CONNECT;

		// The real magic is here
		const onStream = stream => {
			this._request = stream;

			if (this.destroyed) {
				stream.destroy();
				return;
			}

			// Forwards `timeout`, `continue`, `close` and `error` events to this instance.
			if (!isConnectMethod) {
				proxyEvents(stream, this, ['timeout', 'continue', 'close', 'error']);
			}

			// Wait for the `finish` event. We don't want to emit the `response` event
			// before `request.end()` is called.
			const waitForEnd = fn => {
				return (...args) => {
					if (!this.writable && !this.destroyed) {
						fn(...args);
					} else {
						this.once('finish', () => {
							fn(...args);
						});
					}
				};
			};

			// This event tells we are ready to listen for the data.
			stream.once('response', waitForEnd((headers, flags, rawHeaders) => {
				// If we were to emit raw request stream, it would be as fast as the native approach.
				// Note that wrapping the raw stream in a Proxy instance won't improve the performance (already tested it).
				const response = new IncomingMessage(this.socket, stream.readableHighWaterMark);
				this.res = response;

				response.req = this;
				response.statusCode = headers[HTTP2_HEADER_STATUS];
				response.headers = headers;
				response.rawHeaders = rawHeaders;

				response.once('end', () => {
					if (this.aborted) {
						response.aborted = true;
						response.emit('aborted');
					} else {
						response.complete = true;

						// Has no effect, just be consistent with the Node.js behavior
						response.socket = null;
						response.connection = null;
					}
				});

				if (isConnectMethod) {
					response.upgrade = true;

					// The HTTP1 API says the socket is detached here,
					// but we can't do that so we pass the original HTTP2 request.
					if (this.emit('connect', response, stream, Buffer.alloc(0))) {
						this.emit('close');
					} else {
						// No listeners attached, destroy the original request.
						stream.destroy();
					}
				} else {
					// Forwards data
					stream.on('data', chunk => {
						if (!response._dumped && !response.push(chunk)) {
							stream.pause();
						}
					});

					stream.once('end', () => {
						response.push(null);
					});

					if (!this.emit('response', response)) {
						// No listeners attached, dump the response.
						response._dump();
					}
				}
			}));

			// Emits `information` event
			stream.once('headers', waitForEnd(
				headers => this.emit('information', {statusCode: headers[HTTP2_HEADER_STATUS]})
			));

			stream.once('trailers', waitForEnd((trailers, flags, rawTrailers) => {
				const {res} = this;

				// Assigns trailers to the response object.
				res.trailers = trailers;
				res.rawTrailers = rawTrailers;
			}));

			const {socket} = stream.session;
			this.socket = socket;
			this.connection = socket;

			for (const job of this[kJobs]) {
				job();
			}

			this.emit('socket', this.socket);
		};

		// Makes a HTTP2 request
		if (this[kSession]) {
			try {
				onStream(this[kSession].request(this[kHeaders]));
			} catch (error) {
				this.emit('error', error);
			}
		} else {
			this.reusedSocket = true;

			try {
				onStream(await this.agent.request(this[kOrigin], this[kOptions], this[kHeaders]));
			} catch (error) {
				this.emit('error', error);
			}
		}
	}

	getHeader(name) {
		if (typeof name !== 'string') {
			throw new ERR_INVALID_ARG_TYPE('name', 'string', name);
		}

		return this[kHeaders][name.toLowerCase()];
	}

	get headersSent() {
		return this[kFlushedHeaders];
	}

	removeHeader(name) {
		if (typeof name !== 'string') {
			throw new ERR_INVALID_ARG_TYPE('name', 'string', name);
		}

		if (this.headersSent) {
			throw new ERR_HTTP_HEADERS_SENT('remove');
		}

		delete this[kHeaders][name.toLowerCase()];
	}

	setHeader(name, value) {
		if (this.headersSent) {
			throw new ERR_HTTP_HEADERS_SENT('set');
		}

		if (typeof name !== 'string' || (!isValidHttpToken.test(name) && !isRequestPseudoHeader(name))) {
			throw new ERR_INVALID_HTTP_TOKEN('Header name', name);
		}

		if (typeof value === 'undefined') {
			throw new ERR_HTTP_INVALID_HEADER_VALUE(value, name);
		}

		if (isInvalidHeaderValue.test(value)) {
			throw new ERR_INVALID_CHAR('header content', name);
		}

		this[kHeaders][name.toLowerCase()] = value;
	}

	setNoDelay() {
		// HTTP2 sockets cannot be malformed, do nothing.
	}

	setSocketKeepAlive() {
		// HTTP2 sockets cannot be malformed, do nothing.
	}

	setTimeout(ms, callback) {
		const applyTimeout = () => this._request.setTimeout(ms, callback);

		if (this._request) {
			applyTimeout();
		} else {
			this[kJobs].push(applyTimeout);
		}

		return this;
	}

	get maxHeadersCount() {
		if (!this.destroyed && this._request) {
			return this._request.session.localSettings.maxHeaderListSize;
		}

		return undefined;
	}

	set maxHeadersCount(_value) {
		// Updating HTTP2 settings would affect all requests, do nothing.
	}
}

module.exports = ClientRequest;


/***/ }),

/***/ 82575:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const {Readable} = __nccwpck_require__(92413);

class IncomingMessage extends Readable {
	constructor(socket, highWaterMark) {
		super({
			highWaterMark,
			autoDestroy: false
		});

		this.statusCode = null;
		this.statusMessage = '';
		this.httpVersion = '2.0';
		this.httpVersionMajor = 2;
		this.httpVersionMinor = 0;
		this.headers = {};
		this.trailers = {};
		this.req = null;

		this.aborted = false;
		this.complete = false;
		this.upgrade = null;

		this.rawHeaders = [];
		this.rawTrailers = [];

		this.socket = socket;
		this.connection = socket;

		this._dumped = false;
	}

	_destroy(error) {
		this.req._request.destroy(error);
	}

	setTimeout(ms, callback) {
		this.req.setTimeout(ms, callback);
		return this;
	}

	_dump() {
		if (!this._dumped) {
			this._dumped = true;

			this.removeAllListeners('data');
			this.resume();
		}
	}

	_read() {
		if (this.req) {
			this.req._request.resume();
		}
	}
}

module.exports = IncomingMessage;


/***/ }),

/***/ 54645:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const http2 = __nccwpck_require__(97565);
const agent = __nccwpck_require__(79898);
const ClientRequest = __nccwpck_require__(59632);
const IncomingMessage = __nccwpck_require__(82575);
const auto = __nccwpck_require__(97167);

const request = (url, options, callback) => {
	return new ClientRequest(url, options, callback);
};

const get = (url, options, callback) => {
	// eslint-disable-next-line unicorn/prevent-abbreviations
	const req = new ClientRequest(url, options, callback);
	req.end();

	return req;
};

module.exports = {
	...http2,
	ClientRequest,
	IncomingMessage,
	...agent,
	request,
	get,
	auto
};


/***/ }),

/***/ 51982:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const net = __nccwpck_require__(11631);
/* istanbul ignore file: https://github.com/nodejs/node/blob/v13.0.1/lib/_http_agent.js */

module.exports = options => {
	let servername = options.host;
	const hostHeader = options.headers && options.headers.host;

	if (hostHeader) {
		if (hostHeader.startsWith('[')) {
			const index = hostHeader.indexOf(']');
			if (index === -1) {
				servername = hostHeader;
			} else {
				servername = hostHeader.slice(1, -1);
			}
		} else {
			servername = hostHeader.split(':', 1)[0];
		}
	}

	if (net.isIP(servername)) {
		return '';
	}

	return servername;
};


/***/ }),

/***/ 7087:
/***/ ((module) => {

"use strict";

/* istanbul ignore file: https://github.com/nodejs/node/blob/master/lib/internal/errors.js */

const makeError = (Base, key, getMessage) => {
	module.exports[key] = class NodeError extends Base {
		constructor(...args) {
			super(typeof getMessage === 'string' ? getMessage : getMessage(args));
			this.name = `${super.name} [${key}]`;
			this.code = key;
		}
	};
};

makeError(TypeError, 'ERR_INVALID_ARG_TYPE', args => {
	const type = args[0].includes('.') ? 'property' : 'argument';

	let valid = args[1];
	const isManyTypes = Array.isArray(valid);

	if (isManyTypes) {
		valid = `${valid.slice(0, -1).join(', ')} or ${valid.slice(-1)}`;
	}

	return `The "${args[0]}" ${type} must be ${isManyTypes ? 'one of' : 'of'} type ${valid}. Received ${typeof args[2]}`;
});

makeError(TypeError, 'ERR_INVALID_PROTOCOL', args => {
	return `Protocol "${args[0]}" not supported. Expected "${args[1]}"`;
});

makeError(Error, 'ERR_HTTP_HEADERS_SENT', args => {
	return `Cannot ${args[0]} headers after they are sent to the client`;
});

makeError(TypeError, 'ERR_INVALID_HTTP_TOKEN', args => {
	return `${args[0]} must be a valid HTTP token [${args[1]}]`;
});

makeError(TypeError, 'ERR_HTTP_INVALID_HEADER_VALUE', args => {
	return `Invalid value "${args[0]} for header "${args[1]}"`;
});

makeError(TypeError, 'ERR_INVALID_CHAR', args => {
	return `Invalid character in ${args[0]} [${args[1]}]`;
});


/***/ }),

/***/ 11199:
/***/ ((module) => {

"use strict";


module.exports = header => {
	switch (header) {
		case ':method':
		case ':scheme':
		case ':authority':
		case ':path':
			return true;
		default:
			return false;
	}
};


/***/ }),

/***/ 81818:
/***/ ((module) => {

"use strict";


module.exports = (from, to, events) => {
	for (const event of events) {
		from.on(event, (...args) => to.emit(event, ...args));
	}
};


/***/ }),

/***/ 92686:
/***/ ((module) => {

"use strict";

/* istanbul ignore file: https://github.com/nodejs/node/blob/a91293d4d9ab403046ab5eb022332e4e3d249bd3/lib/internal/url.js#L1257 */

module.exports = url => {
	const options = {
		protocol: url.protocol,
		hostname: typeof url.hostname === 'string' && url.hostname.startsWith('[') ? url.hostname.slice(1, -1) : url.hostname,
		host: url.host,
		hash: url.hash,
		search: url.search,
		pathname: url.pathname,
		href: url.href,
		path: `${url.pathname || ''}${url.search || ''}`
	};

	if (typeof url.port === 'string' && url.port.length !== 0) {
		options.port = Number(url.port);
	}

	if (url.username || url.password) {
		options.auth = `${url.username || ''}:${url.password || ''}`;
	}

	return options;
};


/***/ }),

/***/ 52492:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var wrappy = __nccwpck_require__(62940)
var reqs = Object.create(null)
var once = __nccwpck_require__(1223)

module.exports = wrappy(inflight)

function inflight (key, cb) {
  if (reqs[key]) {
    reqs[key].push(cb)
    return null
  } else {
    reqs[key] = [cb]
    return makeres(key)
  }
}

function makeres (key) {
  return once(function RES () {
    var cbs = reqs[key]
    var len = cbs.length
    var args = slice(arguments)

    // XXX It's somewhat ambiguous whether a new callback added in this
    // pass should be queued for later execution if something in the
    // list of callbacks throws, or if it should just be discarded.
    // However, it's such an edge case that it hardly matters, and either
    // choice is likely as surprising as the other.
    // As it happens, we do go ahead and schedule it for later execution.
    try {
      for (var i = 0; i < len; i++) {
        cbs[i].apply(null, args)
      }
    } finally {
      if (cbs.length > len) {
        // added more in the interim.
        // de-zalgo, just in case, but don't call again.
        cbs.splice(0, len)
        process.nextTick(function () {
          RES.apply(null, args)
        })
      } else {
        delete reqs[key]
      }
    }
  })
}

function slice (args) {
  var length = args.length
  var array = []

  for (var i = 0; i < length; i++) array[i] = args[i]
  return array
}


/***/ }),

/***/ 44124:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

try {
  var util = __nccwpck_require__(31669);
  /* istanbul ignore next */
  if (typeof util.inherits !== 'function') throw '';
  module.exports = util.inherits;
} catch (e) {
  /* istanbul ignore next */
  module.exports = __nccwpck_require__(8544);
}


/***/ }),

/***/ 8544:
/***/ ((module) => {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      })
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor
      var TempCtor = function () {}
      TempCtor.prototype = superCtor.prototype
      ctor.prototype = new TempCtor()
      ctor.prototype.constructor = ctor
    }
  }
}


/***/ }),

/***/ 76435:
/***/ ((module) => {

/*!
 * is-extglob <https://github.com/jonschlinkert/is-extglob>
 *
 * Copyright (c) 2014-2016, Jon Schlinkert.
 * Licensed under the MIT License.
 */

module.exports = function isExtglob(str) {
  if (typeof str !== 'string' || str === '') {
    return false;
  }

  var match;
  while ((match = /(\\).|([@?!+*]\(.*\))/g.exec(str))) {
    if (match[2]) return true;
    str = str.slice(match.index + match[0].length);
  }

  return false;
};


/***/ }),

/***/ 34466:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/*!
 * is-glob <https://github.com/jonschlinkert/is-glob>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

var isExtglob = __nccwpck_require__(76435);
var chars = { '{': '}', '(': ')', '[': ']'};
var strictRegex = /\\(.)|(^!|\*|[\].+)]\?|\[[^\\\]]+\]|\{[^\\}]+\}|\(\?[:!=][^\\)]+\)|\([^|]+\|[^\\)]+\))/;
var relaxedRegex = /\\(.)|(^!|[*?{}()[\]]|\(\?)/;

module.exports = function isGlob(str, options) {
  if (typeof str !== 'string' || str === '') {
    return false;
  }

  if (isExtglob(str)) {
    return true;
  }

  var regex = strictRegex;
  var match;

  // optionally relax regex
  if (options && options.strict === false) {
    regex = relaxedRegex;
  }

  while ((match = regex.exec(str))) {
    if (match[2]) return true;
    var idx = match.index + match[0].length;

    // if an open bracket/brace/paren is escaped,
    // set the index to the next closing character
    var open = match[1];
    var close = open ? chars[open] : null;
    if (open && close) {
      var n = str.indexOf(close, idx);
      if (n !== -1) {
        idx = n + 1;
      }
    }

    str = str.slice(idx);
  }
  return false;
};


/***/ }),

/***/ 75680:
/***/ ((module) => {

"use strict";
/*!
 * is-number <https://github.com/jonschlinkert/is-number>
 *
 * Copyright (c) 2014-present, Jon Schlinkert.
 * Released under the MIT License.
 */



module.exports = function(num) {
  if (typeof num === 'number') {
    return num - num === 0;
  }
  if (typeof num === 'string' && num.trim() !== '') {
    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);
  }
  return false;
};


/***/ }),

/***/ 97126:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(35747)
var core
if (process.platform === 'win32' || global.TESTING_WINDOWS) {
  core = __nccwpck_require__(42001)
} else {
  core = __nccwpck_require__(9728)
}

module.exports = isexe
isexe.sync = sync

function isexe (path, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  if (!cb) {
    if (typeof Promise !== 'function') {
      throw new TypeError('callback not provided')
    }

    return new Promise(function (resolve, reject) {
      isexe(path, options || {}, function (er, is) {
        if (er) {
          reject(er)
        } else {
          resolve(is)
        }
      })
    })
  }

  core(path, options || {}, function (er, is) {
    // ignore EACCES because that just means we aren't allowed to run it
    if (er) {
      if (er.code === 'EACCES' || options && options.ignoreErrors) {
        er = null
        is = false
      }
    }
    cb(er, is)
  })
}

function sync (path, options) {
  // my kingdom for a filtered catch
  try {
    return core.sync(path, options || {})
  } catch (er) {
    if (options && options.ignoreErrors || er.code === 'EACCES') {
      return false
    } else {
      throw er
    }
  }
}


/***/ }),

/***/ 9728:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __nccwpck_require__(35747)

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), options)
}

function checkStat (stat, options) {
  return stat.isFile() && checkMode(stat, options)
}

function checkMode (stat, options) {
  var mod = stat.mode
  var uid = stat.uid
  var gid = stat.gid

  var myUid = options.uid !== undefined ?
    options.uid : process.getuid && process.getuid()
  var myGid = options.gid !== undefined ?
    options.gid : process.getgid && process.getgid()

  var u = parseInt('100', 8)
  var g = parseInt('010', 8)
  var o = parseInt('001', 8)
  var ug = u | g

  var ret = (mod & o) ||
    (mod & g) && gid === myGid ||
    (mod & u) && uid === myUid ||
    (mod & ug) && myUid === 0

  return ret
}


/***/ }),

/***/ 42001:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __nccwpck_require__(35747)

function checkPathExt (path, options) {
  var pathext = options.pathExt !== undefined ?
    options.pathExt : process.env.PATHEXT

  if (!pathext) {
    return true
  }

  pathext = pathext.split(';')
  if (pathext.indexOf('') !== -1) {
    return true
  }
  for (var i = 0; i < pathext.length; i++) {
    var p = pathext[i].toLowerCase()
    if (p && path.substr(-p.length).toLowerCase() === p) {
      return true
    }
  }
  return false
}

function checkStat (stat, path, options) {
  if (!stat.isSymbolicLink() && !stat.isFile()) {
    return false
  }
  return checkPathExt(path, options)
}

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, path, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), path, options)
}


/***/ }),

/***/ 22820:
/***/ ((__unused_webpack_module, exports) => {

//TODO: handle reviver/dehydrate function like normal
//and handle indentation, like normal.
//if anyone needs this... please send pull request.

exports.stringify = function stringify (o) {
  if('undefined' == typeof o) return o

  if(o && Buffer.isBuffer(o))
    return JSON.stringify(':base64:' + o.toString('base64'))

  if(o && o.toJSON)
    o =  o.toJSON()

  if(o && 'object' === typeof o) {
    var s = ''
    var array = Array.isArray(o)
    s = array ? '[' : '{'
    var first = true

    for(var k in o) {
      var ignore = 'function' == typeof o[k] || (!array && 'undefined' === typeof o[k])
      if(Object.hasOwnProperty.call(o, k) && !ignore) {
        if(!first)
          s += ','
        first = false
        if (array) {
          if(o[k] == undefined)
            s += 'null'
          else
            s += stringify(o[k])
        } else if (o[k] !== void(0)) {
          s += stringify(k) + ':' + stringify(o[k])
        }
      }
    }

    s += array ? ']' : '}'

    return s
  } else if ('string' === typeof o) {
    return JSON.stringify(/^:/.test(o) ? ':' + o : o)
  } else if ('undefined' === typeof o) {
    return 'null';
  } else
    return JSON.stringify(o)
}

exports.parse = function (s) {
  return JSON.parse(s, function (key, value) {
    if('string' === typeof value) {
      if(/^:base64:/.test(value))
        return Buffer.from(value.substring(8), 'base64')
      else
        return /^:/.test(value) ? value.substring(1) : value 
    }
    return value
  })
}


/***/ }),

/***/ 26160:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var _fs
try {
  _fs = __nccwpck_require__(77758)
} catch (_) {
  _fs = __nccwpck_require__(35747)
}

function readFile (file, options, callback) {
  if (callback == null) {
    callback = options
    options = {}
  }

  if (typeof options === 'string') {
    options = {encoding: options}
  }

  options = options || {}
  var fs = options.fs || _fs

  var shouldThrow = true
  if ('throws' in options) {
    shouldThrow = options.throws
  }

  fs.readFile(file, options, function (err, data) {
    if (err) return callback(err)

    data = stripBom(data)

    var obj
    try {
      obj = JSON.parse(data, options ? options.reviver : null)
    } catch (err2) {
      if (shouldThrow) {
        err2.message = file + ': ' + err2.message
        return callback(err2)
      } else {
        return callback(null, null)
      }
    }

    callback(null, obj)
  })
}

function readFileSync (file, options) {
  options = options || {}
  if (typeof options === 'string') {
    options = {encoding: options}
  }

  var fs = options.fs || _fs

  var shouldThrow = true
  if ('throws' in options) {
    shouldThrow = options.throws
  }

  try {
    var content = fs.readFileSync(file, options)
    content = stripBom(content)
    return JSON.parse(content, options.reviver)
  } catch (err) {
    if (shouldThrow) {
      err.message = file + ': ' + err.message
      throw err
    } else {
      return null
    }
  }
}

function stringify (obj, options) {
  var spaces
  var EOL = '\n'
  if (typeof options === 'object' && options !== null) {
    if (options.spaces) {
      spaces = options.spaces
    }
    if (options.EOL) {
      EOL = options.EOL
    }
  }

  var str = JSON.stringify(obj, options ? options.replacer : null, spaces)

  return str.replace(/\n/g, EOL) + EOL
}

function writeFile (file, obj, options, callback) {
  if (callback == null) {
    callback = options
    options = {}
  }
  options = options || {}
  var fs = options.fs || _fs

  var str = ''
  try {
    str = stringify(obj, options)
  } catch (err) {
    // Need to return whether a callback was passed or not
    if (callback) callback(err, null)
    return
  }

  fs.writeFile(file, str, options, callback)
}

function writeFileSync (file, obj, options) {
  options = options || {}
  var fs = options.fs || _fs

  var str = stringify(obj, options)
  // not sure if fs.writeFileSync returns anything, but just in case
  return fs.writeFileSync(file, str, options)
}

function stripBom (content) {
  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified
  if (Buffer.isBuffer(content)) content = content.toString('utf8')
  content = content.replace(/^\uFEFF/, '')
  return content
}

var jsonfile = {
  readFile: readFile,
  readFileSync: readFileSync,
  writeFile: writeFile,
  writeFileSync: writeFileSync
}

module.exports = jsonfile


/***/ }),

/***/ 51531:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const EventEmitter = __nccwpck_require__(28614);
const JSONB = __nccwpck_require__(22820);

const loadStore = options => {
	const adapters = {
		redis: '@keyv/redis',
		mongodb: '@keyv/mongo',
		mongo: '@keyv/mongo',
		sqlite: '@keyv/sqlite',
		postgresql: '@keyv/postgres',
		postgres: '@keyv/postgres',
		mysql: '@keyv/mysql',
	};
	if (options.adapter || options.uri) {
		const adapter = options.adapter || /^[^:]*/.exec(options.uri)[0];
		return new (require(adapters[adapter]))(options);
	}

	return new Map();
};

class Keyv extends EventEmitter {
	constructor(uri, options) {
		super();
		this.opts = Object.assign(
			{
				namespace: 'keyv',
				serialize: JSONB.stringify,
				deserialize: JSONB.parse,
			},
			(typeof uri === 'string') ? { uri } : uri,
			options,
		);

		if (!this.opts.store) {
			const adapterOptions = Object.assign({}, this.opts);
			this.opts.store = loadStore(adapterOptions);
		}

		if (typeof this.opts.store.on === 'function') {
			this.opts.store.on('error', error => this.emit('error', error));
		}

		this.opts.store.namespace = this.opts.namespace;
	}

	_getKeyPrefix(key) {
		return `${this.opts.namespace}:${key}`;
	}

	get(key, options) {
		const keyPrefixed = this._getKeyPrefix(key);
		const { store } = this.opts;
		return Promise.resolve()
			.then(() => store.get(keyPrefixed))
			.then(data => (typeof data === 'string') ? this.opts.deserialize(data) : data)
			.then(data => {
				if (data === undefined) {
					return undefined;
				}

				if (typeof data.expires === 'number' && Date.now() > data.expires) {
					this.delete(key);
					return undefined;
				}

				return (options && options.raw) ? data : data.value;
			});
	}

	set(key, value, ttl) {
		const keyPrefixed = this._getKeyPrefix(key);
		if (typeof ttl === 'undefined') {
			ttl = this.opts.ttl;
		}

		if (ttl === 0) {
			ttl = undefined;
		}

		const { store } = this.opts;

		return Promise.resolve()
			.then(() => {
				const expires = (typeof ttl === 'number') ? (Date.now() + ttl) : null;
				value = { value, expires };
				return this.opts.serialize(value);
			})
			.then(value => store.set(keyPrefixed, value, ttl))
			.then(() => true);
	}

	delete(key) {
		const keyPrefixed = this._getKeyPrefix(key);
		const { store } = this.opts;
		return Promise.resolve()
			.then(() => store.delete(keyPrefixed));
	}

	clear() {
		const { store } = this.opts;
		return Promise.resolve()
			.then(() => store.clear());
	}
}

module.exports = Keyv;


/***/ }),

/***/ 63447:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const path = __nccwpck_require__(85622);
const fs = __nccwpck_require__(35747);
const {promisify} = __nccwpck_require__(31669);
const pLocate = __nccwpck_require__(90104);

const fsStat = promisify(fs.stat);
const fsLStat = promisify(fs.lstat);

const typeMappings = {
	directory: 'isDirectory',
	file: 'isFile'
};

function checkType({type}) {
	if (type in typeMappings) {
		return;
	}

	throw new Error(`Invalid type specified: ${type}`);
}

const matchType = (type, stat) => type === undefined || stat[typeMappings[type]]();

module.exports = async (paths, options) => {
	options = {
		cwd: process.cwd(),
		type: 'file',
		allowSymlinks: true,
		...options
	};
	checkType(options);
	const statFn = options.allowSymlinks ? fsStat : fsLStat;

	return pLocate(paths, async path_ => {
		try {
			const stat = await statFn(path.resolve(options.cwd, path_));
			return matchType(options.type, stat);
		} catch (_) {
			return false;
		}
	}, options);
};

module.exports.sync = (paths, options) => {
	options = {
		cwd: process.cwd(),
		allowSymlinks: true,
		type: 'file',
		...options
	};
	checkType(options);
	const statFn = options.allowSymlinks ? fs.statSync : fs.lstatSync;

	for (const path_ of paths) {
		try {
			const stat = statFn(path.resolve(options.cwd, path_));

			if (matchType(options.type, stat)) {
				return path_;
			}
		} catch (_) {
		}
	}
};


/***/ }),

/***/ 9662:
/***/ ((module) => {

"use strict";

module.exports = object => {
	const result = {};

	for (const [key, value] of Object.entries(object)) {
		result[key.toLowerCase()] = value;
	}

	return result;
};


/***/ }),

/***/ 7129:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = LRUCache

// This will be a proper iterable 'Map' in engines that support it,
// or a fakey-fake PseudoMap in older versions.
var Map = __nccwpck_require__(3541)
var util = __nccwpck_require__(31669)

// A linked list to keep track of recently-used-ness
var Yallist = __nccwpck_require__(40665)

// use symbols if possible, otherwise just _props
var hasSymbol = typeof Symbol === 'function' && process.env._nodeLRUCacheForceNoSymbol !== '1'
var makeSymbol
if (hasSymbol) {
  makeSymbol = function (key) {
    return Symbol(key)
  }
} else {
  makeSymbol = function (key) {
    return '_' + key
  }
}

var MAX = makeSymbol('max')
var LENGTH = makeSymbol('length')
var LENGTH_CALCULATOR = makeSymbol('lengthCalculator')
var ALLOW_STALE = makeSymbol('allowStale')
var MAX_AGE = makeSymbol('maxAge')
var DISPOSE = makeSymbol('dispose')
var NO_DISPOSE_ON_SET = makeSymbol('noDisposeOnSet')
var LRU_LIST = makeSymbol('lruList')
var CACHE = makeSymbol('cache')

function naiveLength () { return 1 }

// lruList is a yallist where the head is the youngest
// item, and the tail is the oldest.  the list contains the Hit
// objects as the entries.
// Each Hit object has a reference to its Yallist.Node.  This
// never changes.
//
// cache is a Map (or PseudoMap) that matches the keys to
// the Yallist.Node object.
function LRUCache (options) {
  if (!(this instanceof LRUCache)) {
    return new LRUCache(options)
  }

  if (typeof options === 'number') {
    options = { max: options }
  }

  if (!options) {
    options = {}
  }

  var max = this[MAX] = options.max
  // Kind of weird to have a default max of Infinity, but oh well.
  if (!max ||
      !(typeof max === 'number') ||
      max <= 0) {
    this[MAX] = Infinity
  }

  var lc = options.length || naiveLength
  if (typeof lc !== 'function') {
    lc = naiveLength
  }
  this[LENGTH_CALCULATOR] = lc

  this[ALLOW_STALE] = options.stale || false
  this[MAX_AGE] = options.maxAge || 0
  this[DISPOSE] = options.dispose
  this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false
  this.reset()
}

// resize the cache when the max changes.
Object.defineProperty(LRUCache.prototype, 'max', {
  set: function (mL) {
    if (!mL || !(typeof mL === 'number') || mL <= 0) {
      mL = Infinity
    }
    this[MAX] = mL
    trim(this)
  },
  get: function () {
    return this[MAX]
  },
  enumerable: true
})

Object.defineProperty(LRUCache.prototype, 'allowStale', {
  set: function (allowStale) {
    this[ALLOW_STALE] = !!allowStale
  },
  get: function () {
    return this[ALLOW_STALE]
  },
  enumerable: true
})

Object.defineProperty(LRUCache.prototype, 'maxAge', {
  set: function (mA) {
    if (!mA || !(typeof mA === 'number') || mA < 0) {
      mA = 0
    }
    this[MAX_AGE] = mA
    trim(this)
  },
  get: function () {
    return this[MAX_AGE]
  },
  enumerable: true
})

// resize the cache when the lengthCalculator changes.
Object.defineProperty(LRUCache.prototype, 'lengthCalculator', {
  set: function (lC) {
    if (typeof lC !== 'function') {
      lC = naiveLength
    }
    if (lC !== this[LENGTH_CALCULATOR]) {
      this[LENGTH_CALCULATOR] = lC
      this[LENGTH] = 0
      this[LRU_LIST].forEach(function (hit) {
        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)
        this[LENGTH] += hit.length
      }, this)
    }
    trim(this)
  },
  get: function () { return this[LENGTH_CALCULATOR] },
  enumerable: true
})

Object.defineProperty(LRUCache.prototype, 'length', {
  get: function () { return this[LENGTH] },
  enumerable: true
})

Object.defineProperty(LRUCache.prototype, 'itemCount', {
  get: function () { return this[LRU_LIST].length },
  enumerable: true
})

LRUCache.prototype.rforEach = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this[LRU_LIST].tail; walker !== null;) {
    var prev = walker.prev
    forEachStep(this, fn, walker, thisp)
    walker = prev
  }
}

function forEachStep (self, fn, node, thisp) {
  var hit = node.value
  if (isStale(self, hit)) {
    del(self, node)
    if (!self[ALLOW_STALE]) {
      hit = undefined
    }
  }
  if (hit) {
    fn.call(thisp, hit.value, hit.key, self)
  }
}

LRUCache.prototype.forEach = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this[LRU_LIST].head; walker !== null;) {
    var next = walker.next
    forEachStep(this, fn, walker, thisp)
    walker = next
  }
}

LRUCache.prototype.keys = function () {
  return this[LRU_LIST].toArray().map(function (k) {
    return k.key
  }, this)
}

LRUCache.prototype.values = function () {
  return this[LRU_LIST].toArray().map(function (k) {
    return k.value
  }, this)
}

LRUCache.prototype.reset = function () {
  if (this[DISPOSE] &&
      this[LRU_LIST] &&
      this[LRU_LIST].length) {
    this[LRU_LIST].forEach(function (hit) {
      this[DISPOSE](hit.key, hit.value)
    }, this)
  }

  this[CACHE] = new Map() // hash of items by key
  this[LRU_LIST] = new Yallist() // list of items in order of use recency
  this[LENGTH] = 0 // length of items in the list
}

LRUCache.prototype.dump = function () {
  return this[LRU_LIST].map(function (hit) {
    if (!isStale(this, hit)) {
      return {
        k: hit.key,
        v: hit.value,
        e: hit.now + (hit.maxAge || 0)
      }
    }
  }, this).toArray().filter(function (h) {
    return h
  })
}

LRUCache.prototype.dumpLru = function () {
  return this[LRU_LIST]
}

/* istanbul ignore next */
LRUCache.prototype.inspect = function (n, opts) {
  var str = 'LRUCache {'
  var extras = false

  var as = this[ALLOW_STALE]
  if (as) {
    str += '\n  allowStale: true'
    extras = true
  }

  var max = this[MAX]
  if (max && max !== Infinity) {
    if (extras) {
      str += ','
    }
    str += '\n  max: ' + util.inspect(max, opts)
    extras = true
  }

  var maxAge = this[MAX_AGE]
  if (maxAge) {
    if (extras) {
      str += ','
    }
    str += '\n  maxAge: ' + util.inspect(maxAge, opts)
    extras = true
  }

  var lc = this[LENGTH_CALCULATOR]
  if (lc && lc !== naiveLength) {
    if (extras) {
      str += ','
    }
    str += '\n  length: ' + util.inspect(this[LENGTH], opts)
    extras = true
  }

  var didFirst = false
  this[LRU_LIST].forEach(function (item) {
    if (didFirst) {
      str += ',\n  '
    } else {
      if (extras) {
        str += ',\n'
      }
      didFirst = true
      str += '\n  '
    }
    var key = util.inspect(item.key).split('\n').join('\n  ')
    var val = { value: item.value }
    if (item.maxAge !== maxAge) {
      val.maxAge = item.maxAge
    }
    if (lc !== naiveLength) {
      val.length = item.length
    }
    if (isStale(this, item)) {
      val.stale = true
    }

    val = util.inspect(val, opts).split('\n').join('\n  ')
    str += key + ' => ' + val
  })

  if (didFirst || extras) {
    str += '\n'
  }
  str += '}'

  return str
}

LRUCache.prototype.set = function (key, value, maxAge) {
  maxAge = maxAge || this[MAX_AGE]

  var now = maxAge ? Date.now() : 0
  var len = this[LENGTH_CALCULATOR](value, key)

  if (this[CACHE].has(key)) {
    if (len > this[MAX]) {
      del(this, this[CACHE].get(key))
      return false
    }

    var node = this[CACHE].get(key)
    var item = node.value

    // dispose of the old one before overwriting
    // split out into 2 ifs for better coverage tracking
    if (this[DISPOSE]) {
      if (!this[NO_DISPOSE_ON_SET]) {
        this[DISPOSE](key, item.value)
      }
    }

    item.now = now
    item.maxAge = maxAge
    item.value = value
    this[LENGTH] += len - item.length
    item.length = len
    this.get(key)
    trim(this)
    return true
  }

  var hit = new Entry(key, value, len, now, maxAge)

  // oversized objects fall out of cache automatically.
  if (hit.length > this[MAX]) {
    if (this[DISPOSE]) {
      this[DISPOSE](key, value)
    }
    return false
  }

  this[LENGTH] += hit.length
  this[LRU_LIST].unshift(hit)
  this[CACHE].set(key, this[LRU_LIST].head)
  trim(this)
  return true
}

LRUCache.prototype.has = function (key) {
  if (!this[CACHE].has(key)) return false
  var hit = this[CACHE].get(key).value
  if (isStale(this, hit)) {
    return false
  }
  return true
}

LRUCache.prototype.get = function (key) {
  return get(this, key, true)
}

LRUCache.prototype.peek = function (key) {
  return get(this, key, false)
}

LRUCache.prototype.pop = function () {
  var node = this[LRU_LIST].tail
  if (!node) return null
  del(this, node)
  return node.value
}

LRUCache.prototype.del = function (key) {
  del(this, this[CACHE].get(key))
}

LRUCache.prototype.load = function (arr) {
  // reset the cache
  this.reset()

  var now = Date.now()
  // A previous serialized cache has the most recent items first
  for (var l = arr.length - 1; l >= 0; l--) {
    var hit = arr[l]
    var expiresAt = hit.e || 0
    if (expiresAt === 0) {
      // the item was created without expiration in a non aged cache
      this.set(hit.k, hit.v)
    } else {
      var maxAge = expiresAt - now
      // dont add already expired items
      if (maxAge > 0) {
        this.set(hit.k, hit.v, maxAge)
      }
    }
  }
}

LRUCache.prototype.prune = function () {
  var self = this
  this[CACHE].forEach(function (value, key) {
    get(self, key, false)
  })
}

function get (self, key, doUse) {
  var node = self[CACHE].get(key)
  if (node) {
    var hit = node.value
    if (isStale(self, hit)) {
      del(self, node)
      if (!self[ALLOW_STALE]) hit = undefined
    } else {
      if (doUse) {
        self[LRU_LIST].unshiftNode(node)
      }
    }
    if (hit) hit = hit.value
  }
  return hit
}

function isStale (self, hit) {
  if (!hit || (!hit.maxAge && !self[MAX_AGE])) {
    return false
  }
  var stale = false
  var diff = Date.now() - hit.now
  if (hit.maxAge) {
    stale = diff > hit.maxAge
  } else {
    stale = self[MAX_AGE] && (diff > self[MAX_AGE])
  }
  return stale
}

function trim (self) {
  if (self[LENGTH] > self[MAX]) {
    for (var walker = self[LRU_LIST].tail;
      self[LENGTH] > self[MAX] && walker !== null;) {
      // We know that we're about to delete this one, and also
      // what the next least recently used key will be, so just
      // go ahead and set it now.
      var prev = walker.prev
      del(self, walker)
      walker = prev
    }
  }
}

function del (self, node) {
  if (node) {
    var hit = node.value
    if (self[DISPOSE]) {
      self[DISPOSE](hit.key, hit.value)
    }
    self[LENGTH] -= hit.length
    self[CACHE].delete(hit.key)
    self[LRU_LIST].removeNode(node)
  }
}

// classy, since V8 prefers predictable objects.
function Entry (key, value, length, now, maxAge) {
  this.key = key
  this.value = value
  this.length = length
  this.now = now
  this.maxAge = maxAge || 0
}


/***/ }),

/***/ 39126:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const fs = __nccwpck_require__(35747);
const path = __nccwpck_require__(85622);
const {promisify} = __nccwpck_require__(31669);
const semver = __nccwpck_require__(13689);

const useNativeRecursiveOption = semver.satisfies(process.version, '>=10.12.0');

// https://github.com/nodejs/node/issues/8987
// https://github.com/libuv/libuv/pull/1088
const checkPath = pth => {
	if (process.platform === 'win32') {
		const pathHasInvalidWinCharacters = /[<>:"|?*]/.test(pth.replace(path.parse(pth).root, ''));

		if (pathHasInvalidWinCharacters) {
			const error = new Error(`Path contains invalid characters: ${pth}`);
			error.code = 'EINVAL';
			throw error;
		}
	}
};

const processOptions = options => {
	// https://github.com/sindresorhus/make-dir/issues/18
	const defaults = {
		mode: 0o777,
		fs
	};

	return {
		...defaults,
		...options
	};
};

const permissionError = pth => {
	// This replicates the exception of `fs.mkdir` with native the
	// `recusive` option when run on an invalid drive under Windows.
	const error = new Error(`operation not permitted, mkdir '${pth}'`);
	error.code = 'EPERM';
	error.errno = -4048;
	error.path = pth;
	error.syscall = 'mkdir';
	return error;
};

const makeDir = async (input, options) => {
	checkPath(input);
	options = processOptions(options);

	const mkdir = promisify(options.fs.mkdir);
	const stat = promisify(options.fs.stat);

	if (useNativeRecursiveOption && options.fs.mkdir === fs.mkdir) {
		const pth = path.resolve(input);

		await mkdir(pth, {
			mode: options.mode,
			recursive: true
		});

		return pth;
	}

	const make = async pth => {
		try {
			await mkdir(pth, options.mode);

			return pth;
		} catch (error) {
			if (error.code === 'EPERM') {
				throw error;
			}

			if (error.code === 'ENOENT') {
				if (path.dirname(pth) === pth) {
					throw permissionError(pth);
				}

				if (error.message.includes('null bytes')) {
					throw error;
				}

				await make(path.dirname(pth));

				return make(pth);
			}

			try {
				const stats = await stat(pth);
				if (!stats.isDirectory()) {
					throw new Error('The path is not a directory');
				}
			} catch (_) {
				throw error;
			}

			return pth;
		}
	};

	return make(path.resolve(input));
};

module.exports = makeDir;

module.exports.sync = (input, options) => {
	checkPath(input);
	options = processOptions(options);

	if (useNativeRecursiveOption && options.fs.mkdirSync === fs.mkdirSync) {
		const pth = path.resolve(input);

		fs.mkdirSync(pth, {
			mode: options.mode,
			recursive: true
		});

		return pth;
	}

	const make = pth => {
		try {
			options.fs.mkdirSync(pth, options.mode);
		} catch (error) {
			if (error.code === 'EPERM') {
				throw error;
			}

			if (error.code === 'ENOENT') {
				if (path.dirname(pth) === pth) {
					throw permissionError(pth);
				}

				if (error.message.includes('null bytes')) {
					throw error;
				}

				make(path.dirname(pth));
				return make(pth);
			}

			try {
				if (!options.fs.statSync(pth).isDirectory()) {
					throw new Error('The path is not a directory');
				}
			} catch (_) {
				throw error;
			}
		}

		return pth;
	};

	return make(path.resolve(input));
};


/***/ }),

/***/ 13689:
/***/ ((module, exports) => {

exports = module.exports = SemVer

var debug
/* istanbul ignore next */
if (typeof process === 'object' &&
    process.env &&
    process.env.NODE_DEBUG &&
    /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
  debug = function () {
    var args = Array.prototype.slice.call(arguments, 0)
    args.unshift('SEMVER')
    console.log.apply(console, args)
  }
} else {
  debug = function () {}
}

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
exports.SEMVER_SPEC_VERSION = '2.0.0'

var MAX_LENGTH = 256
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
  /* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
var MAX_SAFE_COMPONENT_LENGTH = 16

// The actual regexps go on exports.re
var re = exports.re = []
var src = exports.src = []
var t = exports.tokens = {}
var R = 0

function tok (n) {
  t[n] = R++
}

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

tok('NUMERICIDENTIFIER')
src[t.NUMERICIDENTIFIER] = '0|[1-9]\\d*'
tok('NUMERICIDENTIFIERLOOSE')
src[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

tok('NONNUMERICIDENTIFIER')
src[t.NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'

// ## Main Version
// Three dot-separated numeric identifiers.

tok('MAINVERSION')
src[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[t.NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[t.NUMERICIDENTIFIER] + ')'

tok('MAINVERSIONLOOSE')
src[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

tok('PRERELEASEIDENTIFIER')
src[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +
                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'

tok('PRERELEASEIDENTIFIERLOOSE')
src[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +
                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

tok('PRERELEASE')
src[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +
                  '(?:\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'

tok('PRERELEASELOOSE')
src[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +
                       '(?:\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

tok('BUILDIDENTIFIER')
src[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

tok('BUILD')
src[t.BUILD] = '(?:\\+(' + src[t.BUILDIDENTIFIER] +
             '(?:\\.' + src[t.BUILDIDENTIFIER] + ')*))'

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

tok('FULL')
tok('FULLPLAIN')
src[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +
                  src[t.PRERELEASE] + '?' +
                  src[t.BUILD] + '?'

src[t.FULL] = '^' + src[t.FULLPLAIN] + '$'

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
tok('LOOSEPLAIN')
src[t.LOOSEPLAIN] = '[v=\\s]*' + src[t.MAINVERSIONLOOSE] +
                  src[t.PRERELEASELOOSE] + '?' +
                  src[t.BUILD] + '?'

tok('LOOSE')
src[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'

tok('GTLT')
src[t.GTLT] = '((?:<|>)?=?)'

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
tok('XRANGEIDENTIFIERLOOSE')
src[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'
tok('XRANGEIDENTIFIER')
src[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\*'

tok('XRANGEPLAIN')
src[t.XRANGEPLAIN] = '[v=\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[t.XRANGEIDENTIFIER] + ')' +
                   '(?:' + src[t.PRERELEASE] + ')?' +
                   src[t.BUILD] + '?' +
                   ')?)?'

tok('XRANGEPLAINLOOSE')
src[t.XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +
                        src[t.BUILD] + '?' +
                        ')?)?'

tok('XRANGE')
src[t.XRANGE] = '^' + src[t.GTLT] + '\\s*' + src[t.XRANGEPLAIN] + '$'
tok('XRANGELOOSE')
src[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\s*' + src[t.XRANGEPLAINLOOSE] + '$'

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
tok('COERCE')
src[t.COERCE] = '(^|[^\\d])' +
              '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:$|[^\\d])'
tok('COERCERTL')
re[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')

// Tilde ranges.
// Meaning is "reasonably at or greater than"
tok('LONETILDE')
src[t.LONETILDE] = '(?:~>?)'

tok('TILDETRIM')
src[t.TILDETRIM] = '(\\s*)' + src[t.LONETILDE] + '\\s+'
re[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')
var tildeTrimReplace = '$1~'

tok('TILDE')
src[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'
tok('TILDELOOSE')
src[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'

// Caret ranges.
// Meaning is "at least and backwards compatible with"
tok('LONECARET')
src[t.LONECARET] = '(?:\\^)'

tok('CARETTRIM')
src[t.CARETTRIM] = '(\\s*)' + src[t.LONECARET] + '\\s+'
re[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')
var caretTrimReplace = '$1^'

tok('CARET')
src[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'
tok('CARETLOOSE')
src[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'

// A simple gt/lt/eq thing, or just "" to indicate "any version"
tok('COMPARATORLOOSE')
src[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'
tok('COMPARATOR')
src[t.COMPARATOR] = '^' + src[t.GTLT] + '\\s*(' + src[t.FULLPLAIN] + ')$|^$'

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
tok('COMPARATORTRIM')
src[t.COMPARATORTRIM] = '(\\s*)' + src[t.GTLT] +
                      '\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'

// this one has to use the /g flag
re[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')
var comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
tok('HYPHENRANGE')
src[t.HYPHENRANGE] = '^\\s*(' + src[t.XRANGEPLAIN] + ')' +
                   '\\s+-\\s+' +
                   '(' + src[t.XRANGEPLAIN] + ')' +
                   '\\s*$'

tok('HYPHENRANGELOOSE')
src[t.HYPHENRANGELOOSE] = '^\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +
                        '\\s+-\\s+' +
                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +
                        '\\s*$'

// Star ranges basically just allow anything at all.
tok('STAR')
src[t.STAR] = '(<|>)?=?\\s*\\*'

// Compile to actual regexp objects.
// All are flag-free, unless they were created above with a flag.
for (var i = 0; i < R; i++) {
  debug(i, src[i])
  if (!re[i]) {
    re[i] = new RegExp(src[i])
  }
}

exports.parse = parse
function parse (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  if (version.length > MAX_LENGTH) {
    return null
  }

  var r = options.loose ? re[t.LOOSE] : re[t.FULL]
  if (!r.test(version)) {
    return null
  }

  try {
    return new SemVer(version, options)
  } catch (er) {
    return null
  }
}

exports.valid = valid
function valid (version, options) {
  var v = parse(version, options)
  return v ? v.version : null
}

exports.clean = clean
function clean (version, options) {
  var s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}

exports.SemVer = SemVer

function SemVer (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }
  if (version instanceof SemVer) {
    if (version.loose === options.loose) {
      return version
    } else {
      version = version.version
    }
  } else if (typeof version !== 'string') {
    throw new TypeError('Invalid Version: ' + version)
  }

  if (version.length > MAX_LENGTH) {
    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
  }

  if (!(this instanceof SemVer)) {
    return new SemVer(version, options)
  }

  debug('SemVer', version, options)
  this.options = options
  this.loose = !!options.loose

  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])

  if (!m) {
    throw new TypeError('Invalid Version: ' + version)
  }

  this.raw = version

  // these are actually numbers
  this.major = +m[1]
  this.minor = +m[2]
  this.patch = +m[3]

  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
    throw new TypeError('Invalid major version')
  }

  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
    throw new TypeError('Invalid minor version')
  }

  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
    throw new TypeError('Invalid patch version')
  }

  // numberify any prerelease numeric ids
  if (!m[4]) {
    this.prerelease = []
  } else {
    this.prerelease = m[4].split('.').map(function (id) {
      if (/^[0-9]+$/.test(id)) {
        var num = +id
        if (num >= 0 && num < MAX_SAFE_INTEGER) {
          return num
        }
      }
      return id
    })
  }

  this.build = m[5] ? m[5].split('.') : []
  this.format()
}

SemVer.prototype.format = function () {
  this.version = this.major + '.' + this.minor + '.' + this.patch
  if (this.prerelease.length) {
    this.version += '-' + this.prerelease.join('.')
  }
  return this.version
}

SemVer.prototype.toString = function () {
  return this.version
}

SemVer.prototype.compare = function (other) {
  debug('SemVer.compare', this.version, this.options, other)
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return this.compareMain(other) || this.comparePre(other)
}

SemVer.prototype.compareMain = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return compareIdentifiers(this.major, other.major) ||
         compareIdentifiers(this.minor, other.minor) ||
         compareIdentifiers(this.patch, other.patch)
}

SemVer.prototype.comparePre = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  // NOT having a prerelease is > having one
  if (this.prerelease.length && !other.prerelease.length) {
    return -1
  } else if (!this.prerelease.length && other.prerelease.length) {
    return 1
  } else if (!this.prerelease.length && !other.prerelease.length) {
    return 0
  }

  var i = 0
  do {
    var a = this.prerelease[i]
    var b = other.prerelease[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

SemVer.prototype.compareBuild = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  var i = 0
  do {
    var a = this.build[i]
    var b = other.build[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

// preminor will bump the version up to the next minor release, and immediately
// down to pre-release. premajor and prepatch work the same way.
SemVer.prototype.inc = function (release, identifier) {
  switch (release) {
    case 'premajor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor = 0
      this.major++
      this.inc('pre', identifier)
      break
    case 'preminor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor++
      this.inc('pre', identifier)
      break
    case 'prepatch':
      // If this is already a prerelease, it will bump to the next version
      // drop any prereleases that might already exist, since they are not
      // relevant at this point.
      this.prerelease.length = 0
      this.inc('patch', identifier)
      this.inc('pre', identifier)
      break
    // If the input is a non-prerelease version, this acts the same as
    // prepatch.
    case 'prerelease':
      if (this.prerelease.length === 0) {
        this.inc('patch', identifier)
      }
      this.inc('pre', identifier)
      break

    case 'major':
      // If this is a pre-major version, bump up to the same major version.
      // Otherwise increment major.
      // 1.0.0-5 bumps to 1.0.0
      // 1.1.0 bumps to 2.0.0
      if (this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0) {
        this.major++
      }
      this.minor = 0
      this.patch = 0
      this.prerelease = []
      break
    case 'minor':
      // If this is a pre-minor version, bump up to the same minor version.
      // Otherwise increment minor.
      // 1.2.0-5 bumps to 1.2.0
      // 1.2.1 bumps to 1.3.0
      if (this.patch !== 0 || this.prerelease.length === 0) {
        this.minor++
      }
      this.patch = 0
      this.prerelease = []
      break
    case 'patch':
      // If this is not a pre-release version, it will increment the patch.
      // If it is a pre-release it will bump up to the same patch version.
      // 1.2.0-5 patches to 1.2.0
      // 1.2.0 patches to 1.2.1
      if (this.prerelease.length === 0) {
        this.patch++
      }
      this.prerelease = []
      break
    // This probably shouldn't be used publicly.
    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
    case 'pre':
      if (this.prerelease.length === 0) {
        this.prerelease = [0]
      } else {
        var i = this.prerelease.length
        while (--i >= 0) {
          if (typeof this.prerelease[i] === 'number') {
            this.prerelease[i]++
            i = -2
          }
        }
        if (i === -1) {
          // didn't increment anything
          this.prerelease.push(0)
        }
      }
      if (identifier) {
        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
        if (this.prerelease[0] === identifier) {
          if (isNaN(this.prerelease[1])) {
            this.prerelease = [identifier, 0]
          }
        } else {
          this.prerelease = [identifier, 0]
        }
      }
      break

    default:
      throw new Error('invalid increment argument: ' + release)
  }
  this.format()
  this.raw = this.version
  return this
}

exports.inc = inc
function inc (version, release, loose, identifier) {
  if (typeof (loose) === 'string') {
    identifier = loose
    loose = undefined
  }

  try {
    return new SemVer(version, loose).inc(release, identifier).version
  } catch (er) {
    return null
  }
}

exports.diff = diff
function diff (version1, version2) {
  if (eq(version1, version2)) {
    return null
  } else {
    var v1 = parse(version1)
    var v2 = parse(version2)
    var prefix = ''
    if (v1.prerelease.length || v2.prerelease.length) {
      prefix = 'pre'
      var defaultResult = 'prerelease'
    }
    for (var key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return prefix + key
        }
      }
    }
    return defaultResult // may be undefined
  }
}

exports.compareIdentifiers = compareIdentifiers

var numeric = /^[0-9]+$/
function compareIdentifiers (a, b) {
  var anum = numeric.test(a)
  var bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

exports.rcompareIdentifiers = rcompareIdentifiers
function rcompareIdentifiers (a, b) {
  return compareIdentifiers(b, a)
}

exports.major = major
function major (a, loose) {
  return new SemVer(a, loose).major
}

exports.minor = minor
function minor (a, loose) {
  return new SemVer(a, loose).minor
}

exports.patch = patch
function patch (a, loose) {
  return new SemVer(a, loose).patch
}

exports.compare = compare
function compare (a, b, loose) {
  return new SemVer(a, loose).compare(new SemVer(b, loose))
}

exports.compareLoose = compareLoose
function compareLoose (a, b) {
  return compare(a, b, true)
}

exports.compareBuild = compareBuild
function compareBuild (a, b, loose) {
  var versionA = new SemVer(a, loose)
  var versionB = new SemVer(b, loose)
  return versionA.compare(versionB) || versionA.compareBuild(versionB)
}

exports.rcompare = rcompare
function rcompare (a, b, loose) {
  return compare(b, a, loose)
}

exports.sort = sort
function sort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(a, b, loose)
  })
}

exports.rsort = rsort
function rsort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compareBuild(b, a, loose)
  })
}

exports.gt = gt
function gt (a, b, loose) {
  return compare(a, b, loose) > 0
}

exports.lt = lt
function lt (a, b, loose) {
  return compare(a, b, loose) < 0
}

exports.eq = eq
function eq (a, b, loose) {
  return compare(a, b, loose) === 0
}

exports.neq = neq
function neq (a, b, loose) {
  return compare(a, b, loose) !== 0
}

exports.gte = gte
function gte (a, b, loose) {
  return compare(a, b, loose) >= 0
}

exports.lte = lte
function lte (a, b, loose) {
  return compare(a, b, loose) <= 0
}

exports.cmp = cmp
function cmp (a, op, b, loose) {
  switch (op) {
    case '===':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a === b

    case '!==':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError('Invalid operator: ' + op)
  }
}

exports.Comparator = Comparator
function Comparator (comp, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (comp instanceof Comparator) {
    if (comp.loose === !!options.loose) {
      return comp
    } else {
      comp = comp.value
    }
  }

  if (!(this instanceof Comparator)) {
    return new Comparator(comp, options)
  }

  debug('comparator', comp, options)
  this.options = options
  this.loose = !!options.loose
  this.parse(comp)

  if (this.semver === ANY) {
    this.value = ''
  } else {
    this.value = this.operator + this.semver.version
  }

  debug('comp', this)
}

var ANY = {}
Comparator.prototype.parse = function (comp) {
  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
  var m = comp.match(r)

  if (!m) {
    throw new TypeError('Invalid comparator: ' + comp)
  }

  this.operator = m[1] !== undefined ? m[1] : ''
  if (this.operator === '=') {
    this.operator = ''
  }

  // if it literally is just '>' or '' then allow anything.
  if (!m[2]) {
    this.semver = ANY
  } else {
    this.semver = new SemVer(m[2], this.options.loose)
  }
}

Comparator.prototype.toString = function () {
  return this.value
}

Comparator.prototype.test = function (version) {
  debug('Comparator.test', version, this.options.loose)

  if (this.semver === ANY || version === ANY) {
    return true
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  return cmp(version, this.operator, this.semver, this.options)
}

Comparator.prototype.intersects = function (comp, options) {
  if (!(comp instanceof Comparator)) {
    throw new TypeError('a Comparator is required')
  }

  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  var rangeTmp

  if (this.operator === '') {
    if (this.value === '') {
      return true
    }
    rangeTmp = new Range(comp.value, options)
    return satisfies(this.value, rangeTmp, options)
  } else if (comp.operator === '') {
    if (comp.value === '') {
      return true
    }
    rangeTmp = new Range(this.value, options)
    return satisfies(comp.semver, rangeTmp, options)
  }

  var sameDirectionIncreasing =
    (this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '>=' || comp.operator === '>')
  var sameDirectionDecreasing =
    (this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '<=' || comp.operator === '<')
  var sameSemVer = this.semver.version === comp.semver.version
  var differentDirectionsInclusive =
    (this.operator === '>=' || this.operator === '<=') &&
    (comp.operator === '>=' || comp.operator === '<=')
  var oppositeDirectionsLessThan =
    cmp(this.semver, '<', comp.semver, options) &&
    ((this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '<=' || comp.operator === '<'))
  var oppositeDirectionsGreaterThan =
    cmp(this.semver, '>', comp.semver, options) &&
    ((this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '>=' || comp.operator === '>'))

  return sameDirectionIncreasing || sameDirectionDecreasing ||
    (sameSemVer && differentDirectionsInclusive) ||
    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan
}

exports.Range = Range
function Range (range, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (range instanceof Range) {
    if (range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease) {
      return range
    } else {
      return new Range(range.raw, options)
    }
  }

  if (range instanceof Comparator) {
    return new Range(range.value, options)
  }

  if (!(this instanceof Range)) {
    return new Range(range, options)
  }

  this.options = options
  this.loose = !!options.loose
  this.includePrerelease = !!options.includePrerelease

  // First, split based on boolean or ||
  this.raw = range
  this.set = range.split(/\s*\|\|\s*/).map(function (range) {
    return this.parseRange(range.trim())
  }, this).filter(function (c) {
    // throw out any that are not relevant for whatever reason
    return c.length
  })

  if (!this.set.length) {
    throw new TypeError('Invalid SemVer Range: ' + range)
  }

  this.format()
}

Range.prototype.format = function () {
  this.range = this.set.map(function (comps) {
    return comps.join(' ').trim()
  }).join('||').trim()
  return this.range
}

Range.prototype.toString = function () {
  return this.range
}

Range.prototype.parseRange = function (range) {
  var loose = this.options.loose
  range = range.trim()
  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]
  range = range.replace(hr, hyphenReplace)
  debug('hyphen replace', range)
  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)
  debug('comparator trim', range, re[t.COMPARATORTRIM])

  // `~ 1.2.3` => `~1.2.3`
  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)

  // `^ 1.2.3` => `^1.2.3`
  range = range.replace(re[t.CARETTRIM], caretTrimReplace)

  // normalize spaces
  range = range.split(/\s+/).join(' ')

  // At this point, the range is completely trimmed and
  // ready to be split into comparators.

  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
  var set = range.split(' ').map(function (comp) {
    return parseComparator(comp, this.options)
  }, this).join(' ').split(/\s+/)
  if (this.options.loose) {
    // in loose mode, throw out any that are not valid comparators
    set = set.filter(function (comp) {
      return !!comp.match(compRe)
    })
  }
  set = set.map(function (comp) {
    return new Comparator(comp, this.options)
  }, this)

  return set
}

Range.prototype.intersects = function (range, options) {
  if (!(range instanceof Range)) {
    throw new TypeError('a Range is required')
  }

  return this.set.some(function (thisComparators) {
    return (
      isSatisfiable(thisComparators, options) &&
      range.set.some(function (rangeComparators) {
        return (
          isSatisfiable(rangeComparators, options) &&
          thisComparators.every(function (thisComparator) {
            return rangeComparators.every(function (rangeComparator) {
              return thisComparator.intersects(rangeComparator, options)
            })
          })
        )
      })
    )
  })
}

// take a set of comparators and determine whether there
// exists a version which can satisfy it
function isSatisfiable (comparators, options) {
  var result = true
  var remainingComparators = comparators.slice()
  var testComparator = remainingComparators.pop()

  while (result && remainingComparators.length) {
    result = remainingComparators.every(function (otherComparator) {
      return testComparator.intersects(otherComparator, options)
    })

    testComparator = remainingComparators.pop()
  }

  return result
}

// Mostly just for testing and legacy API reasons
exports.toComparators = toComparators
function toComparators (range, options) {
  return new Range(range, options).set.map(function (comp) {
    return comp.map(function (c) {
      return c.value
    }).join(' ').trim().split(' ')
  })
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
function parseComparator (comp, options) {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

function isX (id) {
  return !id || id.toLowerCase() === 'x' || id === '*'
}

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
function replaceTildes (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceTilde(comp, options)
  }).join(' ')
}

function replaceTilde (comp, options) {
  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('tilde', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
            ' <' + M + '.' + (+m + 1) + '.0'
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0
      ret = '>=' + M + '.' + m + '.' + p +
            ' <' + M + '.' + (+m + 1) + '.0'
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
// ^1.2.3 --> >=1.2.3 <2.0.0
// ^1.2.0 --> >=1.2.0 <2.0.0
function replaceCarets (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceCaret(comp, options)
  }).join(' ')
}

function replaceCaret (comp, options) {
  debug('caret', comp, options)
  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('caret', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      if (M === '0') {
        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
      } else {
        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
              ' <' + (+M + 1) + '.0.0'
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p +
              ' <' + (+M + 1) + '.0.0'
      }
    }

    debug('caret return', ret)
    return ret
  })
}

function replaceXRanges (comp, options) {
  debug('replaceXRanges', comp, options)
  return comp.split(/\s+/).map(function (comp) {
    return replaceXRange(comp, options)
  }).join(' ')
}

function replaceXRange (comp, options) {
  comp = comp.trim()
  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]
  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    var xM = isX(M)
    var xm = xM || isX(m)
    var xp = xm || isX(p)
    var anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    // if we're including prereleases in the match, then we need
    // to fix this to -0, the lowest possible prerelease value
    pr = options.includePrerelease ? '-0' : ''

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0-0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        // >1.2.3 => >= 1.2.4
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      ret = gtlt + M + '.' + m + '.' + p + pr
    } else if (xm) {
      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr
    } else if (xp) {
      ret = '>=' + M + '.' + m + '.0' + pr +
        ' <' + M + '.' + (+m + 1) + '.0' + pr
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
function replaceStars (comp, options) {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[t.STAR], '')
}

// This function is passed to string.replace(re[t.HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0
function hyphenReplace ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = '>=' + fM + '.0.0'
  } else if (isX(fp)) {
    from = '>=' + fM + '.' + fm + '.0'
  } else {
    from = '>=' + from
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = '<' + (+tM + 1) + '.0.0'
  } else if (isX(tp)) {
    to = '<' + tM + '.' + (+tm + 1) + '.0'
  } else if (tpr) {
    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr
  } else {
    to = '<=' + to
  }

  return (from + ' ' + to).trim()
}

// if ANY of the sets match ALL of its comparators, then pass
Range.prototype.test = function (version) {
  if (!version) {
    return false
  }

  if (typeof version === 'string') {
    try {
      version = new SemVer(version, this.options)
    } catch (er) {
      return false
    }
  }

  for (var i = 0; i < this.set.length; i++) {
    if (testSet(this.set[i], version, this.options)) {
      return true
    }
  }
  return false
}

function testSet (set, version, options) {
  for (var i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        var allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}

exports.satisfies = satisfies
function satisfies (version, range, options) {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}

exports.maxSatisfying = maxSatisfying
function maxSatisfying (versions, range, options) {
  var max = null
  var maxSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}

exports.minSatisfying = minSatisfying
function minSatisfying (versions, range, options) {
  var min = null
  var minSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}

exports.minVersion = minVersion
function minVersion (range, loose) {
  range = new Range(range, loose)

  var minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    comparators.forEach(function (comparator) {
      // Clone to avoid manipulating the comparator's semver object.
      var compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!minver || gt(minver, compver)) {
            minver = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error('Unexpected operation: ' + comparator.operator)
      }
    })
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}

exports.validRange = validRange
function validRange (range, options) {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}

// Determine if version is less than all the versions possible in the range
exports.ltr = ltr
function ltr (version, range, options) {
  return outside(version, range, '<', options)
}

// Determine if version is greater than all the versions possible in the range.
exports.gtr = gtr
function gtr (version, range, options) {
  return outside(version, range, '>', options)
}

exports.outside = outside
function outside (version, range, hilo, options) {
  version = new SemVer(version, options)
  range = new Range(range, options)

  var gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisifes the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    var high = null
    var low = null

    comparators.forEach(function (comparator) {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

exports.prerelease = prerelease
function prerelease (version, options) {
  var parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}

exports.intersects = intersects
function intersects (r1, r2, options) {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2)
}

exports.coerce = coerce
function coerce (version, options) {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version === 'number') {
    version = String(version)
  }

  if (typeof version !== 'string') {
    return null
  }

  options = options || {}

  var match = null
  if (!options.rtl) {
    match = version.match(re[t.COERCE])
  } else {
    // Find the right-most coercible string that does not share
    // a terminus with a more left-ward coercible string.
    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'
    //
    // Walk through the string checking with a /g regexp
    // Manually set the index so as to pick up overlapping matches.
    // Stop when we get a match that ends at the string end, since no
    // coercible string can be more right-ward without the same terminus.
    var next
    while ((next = re[t.COERCERTL].exec(version)) &&
      (!match || match.index + match[0].length !== version.length)
    ) {
      if (!match ||
          next.index + next[0].length !== match.index + match[0].length) {
        match = next
      }
      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length
    }
    // leave it in a clean state
    re[t.COERCERTL].lastIndex = -1
  }

  if (match === null) {
    return null
  }

  return parse(match[2] +
    '.' + (match[3] || '0') +
    '.' + (match[4] || '0'), options)
}


/***/ }),

/***/ 82578:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

/*
 * merge2
 * https://github.com/teambition/merge2
 *
 * Copyright (c) 2014-2020 Teambition
 * Licensed under the MIT license.
 */
const Stream = __nccwpck_require__(92413)
const PassThrough = Stream.PassThrough
const slice = Array.prototype.slice

module.exports = merge2

function merge2 () {
  const streamsQueue = []
  const args = slice.call(arguments)
  let merging = false
  let options = args[args.length - 1]

  if (options && !Array.isArray(options) && options.pipe == null) {
    args.pop()
  } else {
    options = {}
  }

  const doEnd = options.end !== false
  const doPipeError = options.pipeError === true
  if (options.objectMode == null) {
    options.objectMode = true
  }
  if (options.highWaterMark == null) {
    options.highWaterMark = 64 * 1024
  }
  const mergedStream = PassThrough(options)

  function addStream () {
    for (let i = 0, len = arguments.length; i < len; i++) {
      streamsQueue.push(pauseStreams(arguments[i], options))
    }
    mergeStream()
    return this
  }

  function mergeStream () {
    if (merging) {
      return
    }
    merging = true

    let streams = streamsQueue.shift()
    if (!streams) {
      process.nextTick(endStream)
      return
    }
    if (!Array.isArray(streams)) {
      streams = [streams]
    }

    let pipesCount = streams.length + 1

    function next () {
      if (--pipesCount > 0) {
        return
      }
      merging = false
      mergeStream()
    }

    function pipe (stream) {
      function onend () {
        stream.removeListener('merge2UnpipeEnd', onend)
        stream.removeListener('end', onend)
        if (doPipeError) {
          stream.removeListener('error', onerror)
        }
        next()
      }
      function onerror (err) {
        mergedStream.emit('error', err)
      }
      // skip ended stream
      if (stream._readableState.endEmitted) {
        return next()
      }

      stream.on('merge2UnpipeEnd', onend)
      stream.on('end', onend)

      if (doPipeError) {
        stream.on('error', onerror)
      }

      stream.pipe(mergedStream, { end: false })
      // compatible for old stream
      stream.resume()
    }

    for (let i = 0; i < streams.length; i++) {
      pipe(streams[i])
    }

    next()
  }

  function endStream () {
    merging = false
    // emit 'queueDrain' when all streams merged.
    mergedStream.emit('queueDrain')
    if (doEnd) {
      mergedStream.end()
    }
  }

  mergedStream.setMaxListeners(0)
  mergedStream.add = addStream
  mergedStream.on('unpipe', function (stream) {
    stream.emit('merge2UnpipeEnd')
  })

  if (args.length) {
    addStream.apply(null, args)
  }
  return mergedStream
}

// check and pause streams for pipe.
function pauseStreams (streams, options) {
  if (!Array.isArray(streams)) {
    // Backwards-compat with old-style streams
    if (!streams._readableState && streams.pipe) {
      streams = streams.pipe(PassThrough(options))
    }
    if (!streams._readableState || !streams.pause || !streams.pipe) {
      throw new Error('Only readable stream can be merged.')
    }
    streams.pause()
  } else {
    for (let i = 0, len = streams.length; i < len; i++) {
      streams[i] = pauseStreams(streams[i], options)
    }
  }
  return streams
}


/***/ }),

/***/ 76228:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const util = __nccwpck_require__(31669);
const braces = __nccwpck_require__(50610);
const picomatch = __nccwpck_require__(78569);
const utils = __nccwpck_require__(30479);
const isEmptyString = val => val === '' || val === './';

/**
 * Returns an array of strings that match one or more glob patterns.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm(list, patterns[, options]);
 *
 * console.log(mm(['a.js', 'a.txt'], ['*.js']));
 * //=> [ 'a.js' ]
 * ```
 * @param {String|Array<string>} `list` List of strings to match.
 * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options)
 * @return {Array} Returns an array of matches
 * @summary false
 * @api public
 */

const micromatch = (list, patterns, options) => {
  patterns = [].concat(patterns);
  list = [].concat(list);

  let omit = new Set();
  let keep = new Set();
  let items = new Set();
  let negatives = 0;

  let onResult = state => {
    items.add(state.output);
    if (options && options.onResult) {
      options.onResult(state);
    }
  };

  for (let i = 0; i < patterns.length; i++) {
    let isMatch = picomatch(String(patterns[i]), { ...options, onResult }, true);
    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;
    if (negated) negatives++;

    for (let item of list) {
      let matched = isMatch(item, true);

      let match = negated ? !matched.isMatch : matched.isMatch;
      if (!match) continue;

      if (negated) {
        omit.add(matched.output);
      } else {
        omit.delete(matched.output);
        keep.add(matched.output);
      }
    }
  }

  let result = negatives === patterns.length ? [...items] : [...keep];
  let matches = result.filter(item => !omit.has(item));

  if (options && matches.length === 0) {
    if (options.failglob === true) {
      throw new Error(`No matches found for "${patterns.join(', ')}"`);
    }

    if (options.nonull === true || options.nullglob === true) {
      return options.unescape ? patterns.map(p => p.replace(/\\/g, '')) : patterns;
    }
  }

  return matches;
};

/**
 * Backwards compatibility
 */

micromatch.match = micromatch;

/**
 * Returns a matcher function from the given glob `pattern` and `options`.
 * The returned function takes a string to match as its only argument and returns
 * true if the string is a match.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.matcher(pattern[, options]);
 *
 * const isMatch = mm.matcher('*.!(*a)');
 * console.log(isMatch('a.a')); //=> false
 * console.log(isMatch('a.b')); //=> true
 * ```
 * @param {String} `pattern` Glob pattern
 * @param {Object} `options`
 * @return {Function} Returns a matcher function.
 * @api public
 */

micromatch.matcher = (pattern, options) => picomatch(pattern, options);

/**
 * Returns true if **any** of the given glob `patterns` match the specified `string`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.isMatch(string, patterns[, options]);
 *
 * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true
 * console.log(mm.isMatch('a.a', 'b.*')); //=> false
 * ```
 * @param {String} `str` The string to test.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `[options]` See available [options](#options).
 * @return {Boolean} Returns true if any patterns match `str`
 * @api public
 */

micromatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);

/**
 * Backwards compatibility
 */

micromatch.any = micromatch.isMatch;

/**
 * Returns a list of strings that _**do not match any**_ of the given `patterns`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.not(list, patterns[, options]);
 *
 * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));
 * //=> ['b.b', 'c.c']
 * ```
 * @param {Array} `list` Array of strings to match.
 * @param {String|Array} `patterns` One or more glob pattern to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Array} Returns an array of strings that **do not match** the given patterns.
 * @api public
 */

micromatch.not = (list, patterns, options = {}) => {
  patterns = [].concat(patterns).map(String);
  let result = new Set();
  let items = [];

  let onResult = state => {
    if (options.onResult) options.onResult(state);
    items.push(state.output);
  };

  let matches = micromatch(list, patterns, { ...options, onResult });

  for (let item of items) {
    if (!matches.includes(item)) {
      result.add(item);
    }
  }
  return [...result];
};

/**
 * Returns true if the given `string` contains the given pattern. Similar
 * to [.isMatch](#isMatch) but the pattern can match any part of the string.
 *
 * ```js
 * var mm = require('micromatch');
 * // mm.contains(string, pattern[, options]);
 *
 * console.log(mm.contains('aa/bb/cc', '*b'));
 * //=> true
 * console.log(mm.contains('aa/bb/cc', '*d'));
 * //=> false
 * ```
 * @param {String} `str` The string to match.
 * @param {String|Array} `patterns` Glob pattern to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if any of the patterns matches any part of `str`.
 * @api public
 */

micromatch.contains = (str, pattern, options) => {
  if (typeof str !== 'string') {
    throw new TypeError(`Expected a string: "${util.inspect(str)}"`);
  }

  if (Array.isArray(pattern)) {
    return pattern.some(p => micromatch.contains(str, p, options));
  }

  if (typeof pattern === 'string') {
    if (isEmptyString(str) || isEmptyString(pattern)) {
      return false;
    }

    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {
      return true;
    }
  }

  return micromatch.isMatch(str, pattern, { ...options, contains: true });
};

/**
 * Filter the keys of the given object with the given `glob` pattern
 * and `options`. Does not attempt to match nested keys. If you need this feature,
 * use [glob-object][] instead.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.matchKeys(object, patterns[, options]);
 *
 * const obj = { aa: 'a', ab: 'b', ac: 'c' };
 * console.log(mm.matchKeys(obj, '*b'));
 * //=> { ab: 'b' }
 * ```
 * @param {Object} `object` The object with keys to filter.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Object} Returns an object with only keys that match the given patterns.
 * @api public
 */

micromatch.matchKeys = (obj, patterns, options) => {
  if (!utils.isObject(obj)) {
    throw new TypeError('Expected the first argument to be an object');
  }
  let keys = micromatch(Object.keys(obj), patterns, options);
  let res = {};
  for (let key of keys) res[key] = obj[key];
  return res;
};

/**
 * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.some(list, patterns[, options]);
 *
 * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));
 * // true
 * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));
 * // false
 * ```
 * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`
 * @api public
 */

micromatch.some = (list, patterns, options) => {
  let items = [].concat(list);

  for (let pattern of [].concat(patterns)) {
    let isMatch = picomatch(String(pattern), options);
    if (items.some(item => isMatch(item))) {
      return true;
    }
  }
  return false;
};

/**
 * Returns true if every string in the given `list` matches
 * any of the given glob `patterns`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.every(list, patterns[, options]);
 *
 * console.log(mm.every('foo.js', ['foo.js']));
 * // true
 * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));
 * // true
 * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));
 * // false
 * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));
 * // false
 * ```
 * @param {String|Array} `list` The string or array of strings to test.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`
 * @api public
 */

micromatch.every = (list, patterns, options) => {
  let items = [].concat(list);

  for (let pattern of [].concat(patterns)) {
    let isMatch = picomatch(String(pattern), options);
    if (!items.every(item => isMatch(item))) {
      return false;
    }
  }
  return true;
};

/**
 * Returns true if **all** of the given `patterns` match
 * the specified string.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.all(string, patterns[, options]);
 *
 * console.log(mm.all('foo.js', ['foo.js']));
 * // true
 *
 * console.log(mm.all('foo.js', ['*.js', '!foo.js']));
 * // false
 *
 * console.log(mm.all('foo.js', ['*.js', 'foo.js']));
 * // true
 *
 * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));
 * // true
 * ```
 * @param {String|Array} `str` The string to test.
 * @param {String|Array} `patterns` One or more glob patterns to use for matching.
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Boolean} Returns true if any patterns match `str`
 * @api public
 */

micromatch.all = (str, patterns, options) => {
  if (typeof str !== 'string') {
    throw new TypeError(`Expected a string: "${util.inspect(str)}"`);
  }

  return [].concat(patterns).every(p => picomatch(p, options)(str));
};

/**
 * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.capture(pattern, string[, options]);
 *
 * console.log(mm.capture('test/*.js', 'test/foo.js'));
 * //=> ['foo']
 * console.log(mm.capture('test/*.js', 'foo/bar.css'));
 * //=> null
 * ```
 * @param {String} `glob` Glob pattern to use for matching.
 * @param {String} `input` String to match
 * @param {Object} `options` See available [options](#options) for changing how matches are performed
 * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.
 * @api public
 */

micromatch.capture = (glob, input, options) => {
  let posix = utils.isWindows(options);
  let regex = picomatch.makeRe(String(glob), { ...options, capture: true });
  let match = regex.exec(posix ? utils.toPosixSlashes(input) : input);

  if (match) {
    return match.slice(1).map(v => v === void 0 ? '' : v);
  }
};

/**
 * Create a regular expression from the given glob `pattern`.
 *
 * ```js
 * const mm = require('micromatch');
 * // mm.makeRe(pattern[, options]);
 *
 * console.log(mm.makeRe('*.js'));
 * //=> /^(?:(\.[\\\/])?(?!\.)(?=.)[^\/]*?\.js)$/
 * ```
 * @param {String} `pattern` A glob pattern to convert to regex.
 * @param {Object} `options`
 * @return {RegExp} Returns a regex created from the given pattern.
 * @api public
 */

micromatch.makeRe = (...args) => picomatch.makeRe(...args);

/**
 * Scan a glob pattern to separate the pattern into segments. Used
 * by the [split](#split) method.
 *
 * ```js
 * const mm = require('micromatch');
 * const state = mm.scan(pattern[, options]);
 * ```
 * @param {String} `pattern`
 * @param {Object} `options`
 * @return {Object} Returns an object with
 * @api public
 */

micromatch.scan = (...args) => picomatch.scan(...args);

/**
 * Parse a glob pattern to create the source string for a regular
 * expression.
 *
 * ```js
 * const mm = require('micromatch');
 * const state = mm(pattern[, options]);
 * ```
 * @param {String} `glob`
 * @param {Object} `options`
 * @return {Object} Returns an object with useful properties and output to be used as regex source string.
 * @api public
 */

micromatch.parse = (patterns, options) => {
  let res = [];
  for (let pattern of [].concat(patterns || [])) {
    for (let str of braces(String(pattern), options)) {
      res.push(picomatch.parse(str, options));
    }
  }
  return res;
};

/**
 * Process the given brace `pattern`.
 *
 * ```js
 * const { braces } = require('micromatch');
 * console.log(braces('foo/{a,b,c}/bar'));
 * //=> [ 'foo/(a|b|c)/bar' ]
 *
 * console.log(braces('foo/{a,b,c}/bar', { expand: true }));
 * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]
 * ```
 * @param {String} `pattern` String with brace pattern to process.
 * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.
 * @return {Array}
 * @api public
 */

micromatch.braces = (pattern, options) => {
  if (typeof pattern !== 'string') throw new TypeError('Expected a string');
  if ((options && options.nobrace === true) || !/\{.*\}/.test(pattern)) {
    return [pattern];
  }
  return braces(pattern, options);
};

/**
 * Expand braces
 */

micromatch.braceExpand = (pattern, options) => {
  if (typeof pattern !== 'string') throw new TypeError('Expected a string');
  return micromatch.braces(pattern, { ...options, expand: true });
};

/**
 * Expose micromatch
 */

module.exports = micromatch;


/***/ }),

/***/ 42610:
/***/ ((module) => {

"use strict";


// We define these manually to ensure they're always copied
// even if they would move up the prototype chain
// https://nodejs.org/api/http.html#http_class_http_incomingmessage
const knownProps = [
	'destroy',
	'setTimeout',
	'socket',
	'headers',
	'trailers',
	'rawHeaders',
	'statusCode',
	'httpVersion',
	'httpVersionMinor',
	'httpVersionMajor',
	'rawTrailers',
	'statusMessage'
];

module.exports = (fromStream, toStream) => {
	const fromProps = new Set(Object.keys(fromStream).concat(knownProps));

	for (const prop of fromProps) {
		// Don't overwrite existing properties
		if (prop in toStream) {
			continue;
		}

		toStream[prop] = typeof fromStream[prop] === 'function' ? fromStream[prop].bind(fromStream) : fromStream[prop];
	}
};


/***/ }),

/***/ 83973:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = minimatch
minimatch.Minimatch = Minimatch

var path = { sep: '/' }
try {
  path = __nccwpck_require__(85622)
} catch (er) {}

var GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}
var expand = __nccwpck_require__(33717)

var plTypes = {
  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},
  '?': { open: '(?:', close: ')?' },
  '+': { open: '(?:', close: ')+' },
  '*': { open: '(?:', close: ')*' },
  '@': { open: '(?:', close: ')' }
}

// any single thing other than /
// don't need to escape / when using new RegExp()
var qmark = '[^/]'

// * => any number of characters
var star = qmark + '*?'

// ** when dots are allowed.  Anything goes, except .. and .
// not (^ or / followed by one or two dots followed by $ or /),
// followed by anything, any number of times.
var twoStarDot = '(?:(?!(?:\\\/|^)(?:\\.{1,2})($|\\\/)).)*?'

// not a ^ or / followed by a dot,
// followed by anything, any number of times.
var twoStarNoDot = '(?:(?!(?:\\\/|^)\\.).)*?'

// characters that need to be escaped in RegExp.
var reSpecials = charSet('().*{}+?[]^$\\!')

// "abc" -> { a:true, b:true, c:true }
function charSet (s) {
  return s.split('').reduce(function (set, c) {
    set[c] = true
    return set
  }, {})
}

// normalizes slashes.
var slashSplit = /\/+/

minimatch.filter = filter
function filter (pattern, options) {
  options = options || {}
  return function (p, i, list) {
    return minimatch(p, pattern, options)
  }
}

function ext (a, b) {
  a = a || {}
  b = b || {}
  var t = {}
  Object.keys(b).forEach(function (k) {
    t[k] = b[k]
  })
  Object.keys(a).forEach(function (k) {
    t[k] = a[k]
  })
  return t
}

minimatch.defaults = function (def) {
  if (!def || !Object.keys(def).length) return minimatch

  var orig = minimatch

  var m = function minimatch (p, pattern, options) {
    return orig.minimatch(p, pattern, ext(def, options))
  }

  m.Minimatch = function Minimatch (pattern, options) {
    return new orig.Minimatch(pattern, ext(def, options))
  }

  return m
}

Minimatch.defaults = function (def) {
  if (!def || !Object.keys(def).length) return Minimatch
  return minimatch.defaults(def).Minimatch
}

function minimatch (p, pattern, options) {
  if (typeof pattern !== 'string') {
    throw new TypeError('glob pattern string required')
  }

  if (!options) options = {}

  // shortcut: comments match nothing.
  if (!options.nocomment && pattern.charAt(0) === '#') {
    return false
  }

  // "" only matches ""
  if (pattern.trim() === '') return p === ''

  return new Minimatch(pattern, options).match(p)
}

function Minimatch (pattern, options) {
  if (!(this instanceof Minimatch)) {
    return new Minimatch(pattern, options)
  }

  if (typeof pattern !== 'string') {
    throw new TypeError('glob pattern string required')
  }

  if (!options) options = {}
  pattern = pattern.trim()

  // windows support: need to use /, not \
  if (path.sep !== '/') {
    pattern = pattern.split(path.sep).join('/')
  }

  this.options = options
  this.set = []
  this.pattern = pattern
  this.regexp = null
  this.negate = false
  this.comment = false
  this.empty = false

  // make the set of regexps etc.
  this.make()
}

Minimatch.prototype.debug = function () {}

Minimatch.prototype.make = make
function make () {
  // don't do it more than once.
  if (this._made) return

  var pattern = this.pattern
  var options = this.options

  // empty patterns and comments match nothing.
  if (!options.nocomment && pattern.charAt(0) === '#') {
    this.comment = true
    return
  }
  if (!pattern) {
    this.empty = true
    return
  }

  // step 1: figure out negation, etc.
  this.parseNegate()

  // step 2: expand braces
  var set = this.globSet = this.braceExpand()

  if (options.debug) this.debug = console.error

  this.debug(this.pattern, set)

  // step 3: now we have a set, so turn each one into a series of path-portion
  // matching patterns.
  // These will be regexps, except in the case of "**", which is
  // set to the GLOBSTAR object for globstar behavior,
  // and will not contain any / characters
  set = this.globParts = set.map(function (s) {
    return s.split(slashSplit)
  })

  this.debug(this.pattern, set)

  // glob --> regexps
  set = set.map(function (s, si, set) {
    return s.map(this.parse, this)
  }, this)

  this.debug(this.pattern, set)

  // filter out everything that didn't compile properly.
  set = set.filter(function (s) {
    return s.indexOf(false) === -1
  })

  this.debug(this.pattern, set)

  this.set = set
}

Minimatch.prototype.parseNegate = parseNegate
function parseNegate () {
  var pattern = this.pattern
  var negate = false
  var options = this.options
  var negateOffset = 0

  if (options.nonegate) return

  for (var i = 0, l = pattern.length
    ; i < l && pattern.charAt(i) === '!'
    ; i++) {
    negate = !negate
    negateOffset++
  }

  if (negateOffset) this.pattern = pattern.substr(negateOffset)
  this.negate = negate
}

// Brace expansion:
// a{b,c}d -> abd acd
// a{b,}c -> abc ac
// a{0..3}d -> a0d a1d a2d a3d
// a{b,c{d,e}f}g -> abg acdfg acefg
// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg
//
// Invalid sets are not expanded.
// a{2..}b -> a{2..}b
// a{b}c -> a{b}c
minimatch.braceExpand = function (pattern, options) {
  return braceExpand(pattern, options)
}

Minimatch.prototype.braceExpand = braceExpand

function braceExpand (pattern, options) {
  if (!options) {
    if (this instanceof Minimatch) {
      options = this.options
    } else {
      options = {}
    }
  }

  pattern = typeof pattern === 'undefined'
    ? this.pattern : pattern

  if (typeof pattern === 'undefined') {
    throw new TypeError('undefined pattern')
  }

  if (options.nobrace ||
    !pattern.match(/\{.*\}/)) {
    // shortcut. no need to expand.
    return [pattern]
  }

  return expand(pattern)
}

// parse a component of the expanded set.
// At this point, no pattern may contain "/" in it
// so we're going to return a 2d array, where each entry is the full
// pattern, split on '/', and then turned into a regular expression.
// A regexp is made at the end which joins each array with an
// escaped /, and another full one which joins each regexp with |.
//
// Following the lead of Bash 4.1, note that "**" only has special meaning
// when it is the *only* thing in a path portion.  Otherwise, any series
// of * is equivalent to a single *.  Globstar behavior is enabled by
// default, and can be disabled by setting options.noglobstar.
Minimatch.prototype.parse = parse
var SUBPARSE = {}
function parse (pattern, isSub) {
  if (pattern.length > 1024 * 64) {
    throw new TypeError('pattern is too long')
  }

  var options = this.options

  // shortcuts
  if (!options.noglobstar && pattern === '**') return GLOBSTAR
  if (pattern === '') return ''

  var re = ''
  var hasMagic = !!options.nocase
  var escaping = false
  // ? => one single character
  var patternListStack = []
  var negativeLists = []
  var stateChar
  var inClass = false
  var reClassStart = -1
  var classStart = -1
  // . and .. never match anything that doesn't start with .,
  // even when options.dot is set.
  var patternStart = pattern.charAt(0) === '.' ? '' // anything
  // not (start or / followed by . or .. followed by / or end)
  : options.dot ? '(?!(?:^|\\\/)\\.{1,2}(?:$|\\\/))'
  : '(?!\\.)'
  var self = this

  function clearStateChar () {
    if (stateChar) {
      // we had some state-tracking character
      // that wasn't consumed by this pass.
      switch (stateChar) {
        case '*':
          re += star
          hasMagic = true
        break
        case '?':
          re += qmark
          hasMagic = true
        break
        default:
          re += '\\' + stateChar
        break
      }
      self.debug('clearStateChar %j %j', stateChar, re)
      stateChar = false
    }
  }

  for (var i = 0, len = pattern.length, c
    ; (i < len) && (c = pattern.charAt(i))
    ; i++) {
    this.debug('%s\t%s %s %j', pattern, i, re, c)

    // skip over any that are escaped.
    if (escaping && reSpecials[c]) {
      re += '\\' + c
      escaping = false
      continue
    }

    switch (c) {
      case '/':
        // completely not allowed, even escaped.
        // Should already be path-split by now.
        return false

      case '\\':
        clearStateChar()
        escaping = true
      continue

      // the various stateChar values
      // for the "extglob" stuff.
      case '?':
      case '*':
      case '+':
      case '@':
      case '!':
        this.debug('%s\t%s %s %j <-- stateChar', pattern, i, re, c)

        // all of those are literals inside a class, except that
        // the glob [!a] means [^a] in regexp
        if (inClass) {
          this.debug('  in class')
          if (c === '!' && i === classStart + 1) c = '^'
          re += c
          continue
        }

        // if we already have a stateChar, then it means
        // that there was something like ** or +? in there.
        // Handle the stateChar, then proceed with this one.
        self.debug('call clearStateChar %j', stateChar)
        clearStateChar()
        stateChar = c
        // if extglob is disabled, then +(asdf|foo) isn't a thing.
        // just clear the statechar *now*, rather than even diving into
        // the patternList stuff.
        if (options.noext) clearStateChar()
      continue

      case '(':
        if (inClass) {
          re += '('
          continue
        }

        if (!stateChar) {
          re += '\\('
          continue
        }

        patternListStack.push({
          type: stateChar,
          start: i - 1,
          reStart: re.length,
          open: plTypes[stateChar].open,
          close: plTypes[stateChar].close
        })
        // negation is (?:(?!js)[^/]*)
        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'
        this.debug('plType %j %j', stateChar, re)
        stateChar = false
      continue

      case ')':
        if (inClass || !patternListStack.length) {
          re += '\\)'
          continue
        }

        clearStateChar()
        hasMagic = true
        var pl = patternListStack.pop()
        // negation is (?:(?!js)[^/]*)
        // The others are (?:<pattern>)<type>
        re += pl.close
        if (pl.type === '!') {
          negativeLists.push(pl)
        }
        pl.reEnd = re.length
      continue

      case '|':
        if (inClass || !patternListStack.length || escaping) {
          re += '\\|'
          escaping = false
          continue
        }

        clearStateChar()
        re += '|'
      continue

      // these are mostly the same in regexp and glob
      case '[':
        // swallow any state-tracking char before the [
        clearStateChar()

        if (inClass) {
          re += '\\' + c
          continue
        }

        inClass = true
        classStart = i
        reClassStart = re.length
        re += c
      continue

      case ']':
        //  a right bracket shall lose its special
        //  meaning and represent itself in
        //  a bracket expression if it occurs
        //  first in the list.  -- POSIX.2 2.8.3.2
        if (i === classStart + 1 || !inClass) {
          re += '\\' + c
          escaping = false
          continue
        }

        // handle the case where we left a class open.
        // "[z-a]" is valid, equivalent to "\[z-a\]"
        if (inClass) {
          // split where the last [ was, make sure we don't have
          // an invalid re. if so, re-walk the contents of the
          // would-be class to re-translate any characters that
          // were passed through as-is
          // TODO: It would probably be faster to determine this
          // without a try/catch and a new RegExp, but it's tricky
          // to do safely.  For now, this is safe and works.
          var cs = pattern.substring(classStart + 1, i)
          try {
            RegExp('[' + cs + ']')
          } catch (er) {
            // not a valid class!
            var sp = this.parse(cs, SUBPARSE)
            re = re.substr(0, reClassStart) + '\\[' + sp[0] + '\\]'
            hasMagic = hasMagic || sp[1]
            inClass = false
            continue
          }
        }

        // finish up the class.
        hasMagic = true
        inClass = false
        re += c
      continue

      default:
        // swallow any state char that wasn't consumed
        clearStateChar()

        if (escaping) {
          // no need
          escaping = false
        } else if (reSpecials[c]
          && !(c === '^' && inClass)) {
          re += '\\'
        }

        re += c

    } // switch
  } // for

  // handle the case where we left a class open.
  // "[abc" is valid, equivalent to "\[abc"
  if (inClass) {
    // split where the last [ was, and escape it
    // this is a huge pita.  We now have to re-walk
    // the contents of the would-be class to re-translate
    // any characters that were passed through as-is
    cs = pattern.substr(classStart + 1)
    sp = this.parse(cs, SUBPARSE)
    re = re.substr(0, reClassStart) + '\\[' + sp[0]
    hasMagic = hasMagic || sp[1]
  }

  // handle the case where we had a +( thing at the *end*
  // of the pattern.
  // each pattern list stack adds 3 chars, and we need to go through
  // and escape any | chars that were passed through as-is for the regexp.
  // Go through and escape them, taking care not to double-escape any
  // | chars that were already escaped.
  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {
    var tail = re.slice(pl.reStart + pl.open.length)
    this.debug('setting tail', re, pl)
    // maybe some even number of \, then maybe 1 \, followed by a |
    tail = tail.replace(/((?:\\{2}){0,64})(\\?)\|/g, function (_, $1, $2) {
      if (!$2) {
        // the | isn't already escaped, so escape it.
        $2 = '\\'
      }

      // need to escape all those slashes *again*, without escaping the
      // one that we need for escaping the | character.  As it works out,
      // escaping an even number of slashes can be done by simply repeating
      // it exactly after itself.  That's why this trick works.
      //
      // I am sorry that you have to see this.
      return $1 + $1 + $2 + '|'
    })

    this.debug('tail=%j\n   %s', tail, tail, pl, re)
    var t = pl.type === '*' ? star
      : pl.type === '?' ? qmark
      : '\\' + pl.type

    hasMagic = true
    re = re.slice(0, pl.reStart) + t + '\\(' + tail
  }

  // handle trailing things that only matter at the very end.
  clearStateChar()
  if (escaping) {
    // trailing \\
    re += '\\\\'
  }

  // only need to apply the nodot start if the re starts with
  // something that could conceivably capture a dot
  var addPatternStart = false
  switch (re.charAt(0)) {
    case '.':
    case '[':
    case '(': addPatternStart = true
  }

  // Hack to work around lack of negative lookbehind in JS
  // A pattern like: *.!(x).!(y|z) needs to ensure that a name
  // like 'a.xyz.yz' doesn't match.  So, the first negative
  // lookahead, has to look ALL the way ahead, to the end of
  // the pattern.
  for (var n = negativeLists.length - 1; n > -1; n--) {
    var nl = negativeLists[n]

    var nlBefore = re.slice(0, nl.reStart)
    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)
    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)
    var nlAfter = re.slice(nl.reEnd)

    nlLast += nlAfter

    // Handle nested stuff like *(*.js|!(*.json)), where open parens
    // mean that we should *not* include the ) in the bit that is considered
    // "after" the negated section.
    var openParensBefore = nlBefore.split('(').length - 1
    var cleanAfter = nlAfter
    for (i = 0; i < openParensBefore; i++) {
      cleanAfter = cleanAfter.replace(/\)[+*?]?/, '')
    }
    nlAfter = cleanAfter

    var dollar = ''
    if (nlAfter === '' && isSub !== SUBPARSE) {
      dollar = '$'
    }
    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast
    re = newRe
  }

  // if the re is not "" at this point, then we need to make sure
  // it doesn't match against an empty path part.
  // Otherwise a/* will match a/, which it should not.
  if (re !== '' && hasMagic) {
    re = '(?=.)' + re
  }

  if (addPatternStart) {
    re = patternStart + re
  }

  // parsing just a piece of a larger pattern.
  if (isSub === SUBPARSE) {
    return [re, hasMagic]
  }

  // skip the regexp for non-magical patterns
  // unescape anything in it, though, so that it'll be
  // an exact match against a file etc.
  if (!hasMagic) {
    return globUnescape(pattern)
  }

  var flags = options.nocase ? 'i' : ''
  try {
    var regExp = new RegExp('^' + re + '$', flags)
  } catch (er) {
    // If it was an invalid regular expression, then it can't match
    // anything.  This trick looks for a character after the end of
    // the string, which is of course impossible, except in multi-line
    // mode, but it's not a /m regex.
    return new RegExp('$.')
  }

  regExp._glob = pattern
  regExp._src = re

  return regExp
}

minimatch.makeRe = function (pattern, options) {
  return new Minimatch(pattern, options || {}).makeRe()
}

Minimatch.prototype.makeRe = makeRe
function makeRe () {
  if (this.regexp || this.regexp === false) return this.regexp

  // at this point, this.set is a 2d array of partial
  // pattern strings, or "**".
  //
  // It's better to use .match().  This function shouldn't
  // be used, really, but it's pretty convenient sometimes,
  // when you just want to work with a regex.
  var set = this.set

  if (!set.length) {
    this.regexp = false
    return this.regexp
  }
  var options = this.options

  var twoStar = options.noglobstar ? star
    : options.dot ? twoStarDot
    : twoStarNoDot
  var flags = options.nocase ? 'i' : ''

  var re = set.map(function (pattern) {
    return pattern.map(function (p) {
      return (p === GLOBSTAR) ? twoStar
      : (typeof p === 'string') ? regExpEscape(p)
      : p._src
    }).join('\\\/')
  }).join('|')

  // must match entire pattern
  // ending in a * or ** will make it less strict.
  re = '^(?:' + re + ')$'

  // can match anything, as long as it's not this.
  if (this.negate) re = '^(?!' + re + ').*$'

  try {
    this.regexp = new RegExp(re, flags)
  } catch (ex) {
    this.regexp = false
  }
  return this.regexp
}

minimatch.match = function (list, pattern, options) {
  options = options || {}
  var mm = new Minimatch(pattern, options)
  list = list.filter(function (f) {
    return mm.match(f)
  })
  if (mm.options.nonull && !list.length) {
    list.push(pattern)
  }
  return list
}

Minimatch.prototype.match = match
function match (f, partial) {
  this.debug('match', f, this.pattern)
  // short-circuit in the case of busted things.
  // comments, etc.
  if (this.comment) return false
  if (this.empty) return f === ''

  if (f === '/' && partial) return true

  var options = this.options

  // windows: need to use /, not \
  if (path.sep !== '/') {
    f = f.split(path.sep).join('/')
  }

  // treat the test path as a set of pathparts.
  f = f.split(slashSplit)
  this.debug(this.pattern, 'split', f)

  // just ONE of the pattern sets in this.set needs to match
  // in order for it to be valid.  If negating, then just one
  // match means that we have failed.
  // Either way, return on the first hit.

  var set = this.set
  this.debug(this.pattern, 'set', set)

  // Find the basename of the path by looking for the last non-empty segment
  var filename
  var i
  for (i = f.length - 1; i >= 0; i--) {
    filename = f[i]
    if (filename) break
  }

  for (i = 0; i < set.length; i++) {
    var pattern = set[i]
    var file = f
    if (options.matchBase && pattern.length === 1) {
      file = [filename]
    }
    var hit = this.matchOne(file, pattern, partial)
    if (hit) {
      if (options.flipNegate) return true
      return !this.negate
    }
  }

  // didn't get any hits.  this is success if it's a negative
  // pattern, failure otherwise.
  if (options.flipNegate) return false
  return this.negate
}

// set partial to true to test if, for example,
// "/a/b" matches the start of "/*/b/*/d"
// Partial means, if you run out of file before you run
// out of pattern, then that's fine, as long as all
// the parts match.
Minimatch.prototype.matchOne = function (file, pattern, partial) {
  var options = this.options

  this.debug('matchOne',
    { 'this': this, file: file, pattern: pattern })

  this.debug('matchOne', file.length, pattern.length)

  for (var fi = 0,
      pi = 0,
      fl = file.length,
      pl = pattern.length
      ; (fi < fl) && (pi < pl)
      ; fi++, pi++) {
    this.debug('matchOne loop')
    var p = pattern[pi]
    var f = file[fi]

    this.debug(pattern, p, f)

    // should be impossible.
    // some invalid regexp stuff in the set.
    if (p === false) return false

    if (p === GLOBSTAR) {
      this.debug('GLOBSTAR', [pattern, p, f])

      // "**"
      // a/**/b/**/c would match the following:
      // a/b/x/y/z/c
      // a/x/y/z/b/c
      // a/b/x/b/x/c
      // a/b/c
      // To do this, take the rest of the pattern after
      // the **, and see if it would match the file remainder.
      // If so, return success.
      // If not, the ** "swallows" a segment, and try again.
      // This is recursively awful.
      //
      // a/**/b/**/c matching a/b/x/y/z/c
      // - a matches a
      // - doublestar
      //   - matchOne(b/x/y/z/c, b/**/c)
      //     - b matches b
      //     - doublestar
      //       - matchOne(x/y/z/c, c) -> no
      //       - matchOne(y/z/c, c) -> no
      //       - matchOne(z/c, c) -> no
      //       - matchOne(c, c) yes, hit
      var fr = fi
      var pr = pi + 1
      if (pr === pl) {
        this.debug('** at the end')
        // a ** at the end will just swallow the rest.
        // We have found a match.
        // however, it will not swallow /.x, unless
        // options.dot is set.
        // . and .. are *never* matched by **, for explosively
        // exponential reasons.
        for (; fi < fl; fi++) {
          if (file[fi] === '.' || file[fi] === '..' ||
            (!options.dot && file[fi].charAt(0) === '.')) return false
        }
        return true
      }

      // ok, let's see if we can swallow whatever we can.
      while (fr < fl) {
        var swallowee = file[fr]

        this.debug('\nglobstar while', file, fr, pattern, pr, swallowee)

        // XXX remove this slice.  Just pass the start index.
        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {
          this.debug('globstar found match!', fr, fl, swallowee)
          // found a match.
          return true
        } else {
          // can't swallow "." or ".." ever.
          // can only swallow ".foo" when explicitly asked.
          if (swallowee === '.' || swallowee === '..' ||
            (!options.dot && swallowee.charAt(0) === '.')) {
            this.debug('dot detected!', file, fr, pattern, pr)
            break
          }

          // ** swallows a segment, and continue.
          this.debug('globstar swallow a segment, and continue')
          fr++
        }
      }

      // no match was found.
      // However, in partial mode, we can't say this is necessarily over.
      // If there's more *pattern* left, then
      if (partial) {
        // ran out of file
        this.debug('\n>>> no match, partial?', file, fr, pattern, pr)
        if (fr === fl) return true
      }
      return false
    }

    // something other than **
    // non-magic patterns just have to match exactly
    // patterns with magic have been turned into regexps.
    var hit
    if (typeof p === 'string') {
      if (options.nocase) {
        hit = f.toLowerCase() === p.toLowerCase()
      } else {
        hit = f === p
      }
      this.debug('string match', p, f, hit)
    } else {
      hit = f.match(p)
      this.debug('pattern match', p, f, hit)
    }

    if (!hit) return false
  }

  // Note: ending in / means that we'll get a final ""
  // at the end of the pattern.  This can only match a
  // corresponding "" at the end of the file.
  // If the file ends in /, then it can only match a
  // a pattern that ends in /, unless the pattern just
  // doesn't have any more for it. But, a/b/ should *not*
  // match "a/b/*", even though "" matches against the
  // [^/]*? pattern, except in partial mode, where it might
  // simply not be reached yet.
  // However, a/b/ should still satisfy a/*

  // now either we fell off the end of the pattern, or we're done.
  if (fi === fl && pi === pl) {
    // ran out of pattern and filename at the same time.
    // an exact hit!
    return true
  } else if (fi === fl) {
    // ran out of file, but still had pattern left.
    // this is ok if we're doing the match as part of
    // a glob fs traversal.
    return partial
  } else if (pi === pl) {
    // ran out of pattern, still have file left.
    // this is only acceptable if we're on the very last
    // empty segment of a file with a trailing slash.
    // a/* should match a/b/
    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')
    return emptyFileEnd
  }

  // should be unreachable.
  throw new Error('wtf?')
}

// replace stuff like \* with *
function globUnescape (s) {
  return s.replace(/\\(.)/g, '$1')
}

function regExpEscape (s) {
  return s.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, '\\$&')
}


/***/ }),

/***/ 80900:
/***/ ((module) => {

/**
 * Helpers.
 */

var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;

/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function(val, options) {
  options = options || {};
  var type = typeof val;
  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }
  throw new Error(
    'val is not a non-empty string or a valid number. val=' +
      JSON.stringify(val)
  );
};

/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */

function parse(str) {
  str = String(str);
  if (str.length > 100) {
    return;
  }
  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
    str
  );
  if (!match) {
    return;
  }
  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();
  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;
    case 'weeks':
    case 'week':
    case 'w':
      return n * w;
    case 'days':
    case 'day':
    case 'd':
      return n * d;
    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;
    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;
    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;
    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;
    default:
      return undefined;
  }
}

/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtShort(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }
  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }
  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }
  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }
  return ms + 'ms';
}

/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */

function fmtLong(ms) {
  var msAbs = Math.abs(ms);
  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }
  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }
  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }
  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }
  return ms + ' ms';
}

/**
 * Pluralization helper.
 */

function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}


/***/ }),

/***/ 10128:
/***/ ((module) => {

/*!
 * node-version
 * Copyright(c) 2011-2018 Rodolphe Stoclin
 * MIT Licensed
 */

module.exports = (function() {
  var version = process.versions.node;

  var split = version.split('.');

  return {
    original: 'v' + version,
    short: split[0] + '.' + split[1],
    long: version,
    major: split[0],
    minor: split[1],
    build: split[2]
  };
})();


/***/ }),

/***/ 17952:
/***/ ((module) => {

"use strict";


// https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs
const DATA_URL_DEFAULT_MIME_TYPE = 'text/plain';
const DATA_URL_DEFAULT_CHARSET = 'us-ascii';

const testParameter = (name, filters) => {
	return filters.some(filter => filter instanceof RegExp ? filter.test(name) : filter === name);
};

const normalizeDataURL = (urlString, {stripHash}) => {
	const match = /^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(urlString);

	if (!match) {
		throw new Error(`Invalid URL: ${urlString}`);
	}

	let {type, data, hash} = match.groups;
	const mediaType = type.split(';');
	hash = stripHash ? '' : hash;

	let isBase64 = false;
	if (mediaType[mediaType.length - 1] === 'base64') {
		mediaType.pop();
		isBase64 = true;
	}

	// Lowercase MIME type
	const mimeType = (mediaType.shift() || '').toLowerCase();
	const attributes = mediaType
		.map(attribute => {
			let [key, value = ''] = attribute.split('=').map(string => string.trim());

			// Lowercase `charset`
			if (key === 'charset') {
				value = value.toLowerCase();

				if (value === DATA_URL_DEFAULT_CHARSET) {
					return '';
				}
			}

			return `${key}${value ? `=${value}` : ''}`;
		})
		.filter(Boolean);

	const normalizedMediaType = [
		...attributes
	];

	if (isBase64) {
		normalizedMediaType.push('base64');
	}

	if (normalizedMediaType.length !== 0 || (mimeType && mimeType !== DATA_URL_DEFAULT_MIME_TYPE)) {
		normalizedMediaType.unshift(mimeType);
	}

	return `data:${normalizedMediaType.join(';')},${isBase64 ? data.trim() : data}${hash ? `#${hash}` : ''}`;
};

const normalizeUrl = (urlString, options) => {
	options = {
		defaultProtocol: 'http:',
		normalizeProtocol: true,
		forceHttp: false,
		forceHttps: false,
		stripAuthentication: true,
		stripHash: false,
		stripTextFragment: true,
		stripWWW: true,
		removeQueryParameters: [/^utm_\w+/i],
		removeTrailingSlash: true,
		removeSingleSlash: true,
		removeDirectoryIndex: false,
		sortQueryParameters: true,
		...options
	};

	urlString = urlString.trim();

	// Data URL
	if (/^data:/i.test(urlString)) {
		return normalizeDataURL(urlString, options);
	}

	if (/^view-source:/i.test(urlString)) {
		throw new Error('`view-source:` is not supported as it is a non-standard protocol');
	}

	const hasRelativeProtocol = urlString.startsWith('//');
	const isRelativeUrl = !hasRelativeProtocol && /^\.*\//.test(urlString);

	// Prepend protocol
	if (!isRelativeUrl) {
		urlString = urlString.replace(/^(?!(?:\w+:)?\/\/)|^\/\//, options.defaultProtocol);
	}

	const urlObj = new URL(urlString);

	if (options.forceHttp && options.forceHttps) {
		throw new Error('The `forceHttp` and `forceHttps` options cannot be used together');
	}

	if (options.forceHttp && urlObj.protocol === 'https:') {
		urlObj.protocol = 'http:';
	}

	if (options.forceHttps && urlObj.protocol === 'http:') {
		urlObj.protocol = 'https:';
	}

	// Remove auth
	if (options.stripAuthentication) {
		urlObj.username = '';
		urlObj.password = '';
	}

	// Remove hash
	if (options.stripHash) {
		urlObj.hash = '';
	} else if (options.stripTextFragment) {
		urlObj.hash = urlObj.hash.replace(/#?:~:text.*?$/i, '');
	}

	// Remove duplicate slashes if not preceded by a protocol
	if (urlObj.pathname) {
		urlObj.pathname = urlObj.pathname.replace(/(?<!\b(?:[a-z][a-z\d+\-.]{1,50}:))\/{2,}/g, '/');
	}

	// Decode URI octets
	if (urlObj.pathname) {
		try {
			urlObj.pathname = decodeURI(urlObj.pathname);
		} catch (_) {}
	}

	// Remove directory index
	if (options.removeDirectoryIndex === true) {
		options.removeDirectoryIndex = [/^index\.[a-z]+$/];
	}

	if (Array.isArray(options.removeDirectoryIndex) && options.removeDirectoryIndex.length > 0) {
		let pathComponents = urlObj.pathname.split('/');
		const lastComponent = pathComponents[pathComponents.length - 1];

		if (testParameter(lastComponent, options.removeDirectoryIndex)) {
			pathComponents = pathComponents.slice(0, pathComponents.length - 1);
			urlObj.pathname = pathComponents.slice(1).join('/') + '/';
		}
	}

	if (urlObj.hostname) {
		// Remove trailing dot
		urlObj.hostname = urlObj.hostname.replace(/\.$/, '');

		// Remove `www.`
		if (options.stripWWW && /^www\.(?!www\.)(?:[a-z\-\d]{1,63})\.(?:[a-z.\-\d]{2,63})$/.test(urlObj.hostname)) {
			// Each label should be max 63 at length (min: 1).
			// Source: https://en.wikipedia.org/wiki/Hostname#Restrictions_on_valid_host_names
			// Each TLD should be up to 63 characters long (min: 2).
			// It is technically possible to have a single character TLD, but none currently exist.
			urlObj.hostname = urlObj.hostname.replace(/^www\./, '');
		}
	}

	// Remove query unwanted parameters
	if (Array.isArray(options.removeQueryParameters)) {
		for (const key of [...urlObj.searchParams.keys()]) {
			if (testParameter(key, options.removeQueryParameters)) {
				urlObj.searchParams.delete(key);
			}
		}
	}

	if (options.removeQueryParameters === true) {
		urlObj.search = '';
	}

	// Sort query parameters
	if (options.sortQueryParameters) {
		urlObj.searchParams.sort();
	}

	if (options.removeTrailingSlash) {
		urlObj.pathname = urlObj.pathname.replace(/\/$/, '');
	}

	const oldUrlString = urlString;

	// Take advantage of many of the Node `url` normalizations
	urlString = urlObj.toString();

	if (!options.removeSingleSlash && urlObj.pathname === '/' && !oldUrlString.endsWith('/') && urlObj.hash === '') {
		urlString = urlString.replace(/\/$/, '');
	}

	// Remove ending `/` unless removeSingleSlash is false
	if ((options.removeTrailingSlash || urlObj.pathname === '/') && urlObj.hash === '' && options.removeSingleSlash) {
		urlString = urlString.replace(/\/$/, '');
	}

	// Restore relative protocol, if applicable
	if (hasRelativeProtocol && !options.normalizeProtocol) {
		urlString = urlString.replace(/^http:\/\//, '//');
	}

	// Remove http/https
	if (options.stripProtocol) {
		urlString = urlString.replace(/^(?:https?:)?\/\//, '');
	}

	return urlString;
};

module.exports = normalizeUrl;


/***/ }),

/***/ 17426:
/***/ ((module) => {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/


/* eslint-disable no-unused-vars */
var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
	if (val === null || val === undefined) {
		throw new TypeError('Object.assign cannot be called with null or undefined');
	}

	return Object(val);
}

function shouldUseNative() {
	try {
		if (!Object.assign) {
			return false;
		}

		// Detect buggy property enumeration order in older V8 versions.

		// https://bugs.chromium.org/p/v8/issues/detail?id=4118
		var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
		test1[5] = 'de';
		if (Object.getOwnPropertyNames(test1)[0] === '5') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test2 = {};
		for (var i = 0; i < 10; i++) {
			test2['_' + String.fromCharCode(i)] = i;
		}
		var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
			return test2[n];
		});
		if (order2.join('') !== '0123456789') {
			return false;
		}

		// https://bugs.chromium.org/p/v8/issues/detail?id=3056
		var test3 = {};
		'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
			test3[letter] = letter;
		});
		if (Object.keys(Object.assign({}, test3)).join('') !==
				'abcdefghijklmnopqrst') {
			return false;
		}

		return true;
	} catch (err) {
		// We don't expect any of the above to throw, but better to be safe.
		return false;
	}
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
	var from;
	var to = toObject(target);
	var symbols;

	for (var s = 1; s < arguments.length; s++) {
		from = Object(arguments[s]);

		for (var key in from) {
			if (hasOwnProperty.call(from, key)) {
				to[key] = from[key];
			}
		}

		if (getOwnPropertySymbols) {
			symbols = getOwnPropertySymbols(from);
			for (var i = 0; i < symbols.length; i++) {
				if (propIsEnumerable.call(from, symbols[i])) {
					to[symbols[i]] = from[symbols[i]];
				}
			}
		}
	}

	return to;
};


/***/ }),

/***/ 1223:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var wrappy = __nccwpck_require__(62940)
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}


/***/ }),

/***/ 19072:
/***/ ((module) => {

"use strict";


class CancelError extends Error {
	constructor(reason) {
		super(reason || 'Promise was canceled');
		this.name = 'CancelError';
	}

	get isCanceled() {
		return true;
	}
}

class PCancelable {
	static fn(userFn) {
		return (...arguments_) => {
			return new PCancelable((resolve, reject, onCancel) => {
				arguments_.push(onCancel);
				// eslint-disable-next-line promise/prefer-await-to-then
				userFn(...arguments_).then(resolve, reject);
			});
		};
	}

	constructor(executor) {
		this._cancelHandlers = [];
		this._isPending = true;
		this._isCanceled = false;
		this._rejectOnCancel = true;

		this._promise = new Promise((resolve, reject) => {
			this._reject = reject;

			const onResolve = value => {
				if (!this._isCanceled || !onCancel.shouldReject) {
					this._isPending = false;
					resolve(value);
				}
			};

			const onReject = error => {
				this._isPending = false;
				reject(error);
			};

			const onCancel = handler => {
				if (!this._isPending) {
					throw new Error('The `onCancel` handler was attached after the promise settled.');
				}

				this._cancelHandlers.push(handler);
			};

			Object.defineProperties(onCancel, {
				shouldReject: {
					get: () => this._rejectOnCancel,
					set: boolean => {
						this._rejectOnCancel = boolean;
					}
				}
			});

			return executor(onResolve, onReject, onCancel);
		});
	}

	then(onFulfilled, onRejected) {
		// eslint-disable-next-line promise/prefer-await-to-then
		return this._promise.then(onFulfilled, onRejected);
	}

	catch(onRejected) {
		return this._promise.catch(onRejected);
	}

	finally(onFinally) {
		return this._promise.finally(onFinally);
	}

	cancel(reason) {
		if (!this._isPending || this._isCanceled) {
			return;
		}

		this._isCanceled = true;

		if (this._cancelHandlers.length > 0) {
			try {
				for (const handler of this._cancelHandlers) {
					handler();
				}
			} catch (error) {
				this._reject(error);
				return;
			}
		}

		if (this._rejectOnCancel) {
			this._reject(new CancelError(reason));
		}
	}

	get isCanceled() {
		return this._isCanceled;
	}
}

Object.setPrototypeOf(PCancelable.prototype, Promise.prototype);

module.exports = PCancelable;
module.exports.CancelError = CancelError;


/***/ }),

/***/ 57684:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const pTry = __nccwpck_require__(80746);

const pLimit = concurrency => {
	if (!((Number.isInteger(concurrency) || concurrency === Infinity) && concurrency > 0)) {
		return Promise.reject(new TypeError('Expected `concurrency` to be a number from 1 and up'));
	}

	const queue = [];
	let activeCount = 0;

	const next = () => {
		activeCount--;

		if (queue.length > 0) {
			queue.shift()();
		}
	};

	const run = (fn, resolve, ...args) => {
		activeCount++;

		const result = pTry(fn, ...args);

		resolve(result);

		result.then(next, next);
	};

	const enqueue = (fn, resolve, ...args) => {
		if (activeCount < concurrency) {
			run(fn, resolve, ...args);
		} else {
			queue.push(run.bind(null, fn, resolve, ...args));
		}
	};

	const generator = (fn, ...args) => new Promise(resolve => enqueue(fn, resolve, ...args));
	Object.defineProperties(generator, {
		activeCount: {
			get: () => activeCount
		},
		pendingCount: {
			get: () => queue.length
		},
		clearQueue: {
			value: () => {
				queue.length = 0;
			}
		}
	});

	return generator;
};

module.exports = pLimit;
module.exports.default = pLimit;


/***/ }),

/***/ 90104:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const pLimit = __nccwpck_require__(57684);

class EndError extends Error {
	constructor(value) {
		super();
		this.value = value;
	}
}

// The input can also be a promise, so we await it
const testElement = async (element, tester) => tester(await element);

// The input can also be a promise, so we `Promise.all()` them both
const finder = async element => {
	const values = await Promise.all(element);
	if (values[1] === true) {
		throw new EndError(values[0]);
	}

	return false;
};

const pLocate = async (iterable, tester, options) => {
	options = {
		concurrency: Infinity,
		preserveOrder: true,
		...options
	};

	const limit = pLimit(options.concurrency);

	// Start all the promises concurrently with optional limit
	const items = [...iterable].map(element => [element, limit(testElement, element, tester)]);

	// Check the promises either serially or concurrently
	const checkLimit = pLimit(options.preserveOrder ? 1 : Infinity);

	try {
		await Promise.all(items.map(element => checkLimit(finder, element)));
	} catch (error) {
		if (error instanceof EndError) {
			return error.value;
		}

		throw error;
	}
};

module.exports = pLocate;
// TODO: Remove this for the next major release
module.exports.default = pLocate;


/***/ }),

/***/ 80746:
/***/ ((module) => {

"use strict";


const pTry = (fn, ...arguments_) => new Promise(resolve => {
	resolve(fn(...arguments_));
});

module.exports = pTry;
// TODO: remove this in the next major version
module.exports.default = pTry;


/***/ }),

/***/ 96978:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const fs = __nccwpck_require__(35747);
const {promisify} = __nccwpck_require__(31669);

const pAccess = promisify(fs.access);

module.exports = async path => {
	try {
		await pAccess(path);
		return true;
	} catch (_) {
		return false;
	}
};

module.exports.sync = path => {
	try {
		fs.accessSync(path);
		return true;
	} catch (_) {
		return false;
	}
};


/***/ }),

/***/ 38714:
/***/ ((module) => {

"use strict";


function posix(path) {
	return path.charAt(0) === '/';
}

function win32(path) {
	// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56
	var splitDeviceRe = /^([a-zA-Z]:|[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/]+)?([\\\/])?([\s\S]*?)$/;
	var result = splitDeviceRe.exec(path);
	var device = result[1] || '';
	var isUnc = Boolean(device && device.charAt(1) !== ':');

	// UNC paths are always absolute
	return Boolean(result[2] || isUnc);
}

module.exports = process.platform === 'win32' ? win32 : posix;
module.exports.posix = posix;
module.exports.win32 = win32;


/***/ }),

/***/ 78569:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = __nccwpck_require__(33322);


/***/ }),

/***/ 16099:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(85622);
const WIN_SLASH = '\\\\/';
const WIN_NO_SLASH = `[^${WIN_SLASH}]`;

/**
 * Posix glob regex
 */

const DOT_LITERAL = '\\.';
const PLUS_LITERAL = '\\+';
const QMARK_LITERAL = '\\?';
const SLASH_LITERAL = '\\/';
const ONE_CHAR = '(?=.)';
const QMARK = '[^/]';
const END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;
const START_ANCHOR = `(?:^|${SLASH_LITERAL})`;
const DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;
const NO_DOT = `(?!${DOT_LITERAL})`;
const NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;
const NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;
const NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;
const QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;
const STAR = `${QMARK}*?`;

const POSIX_CHARS = {
  DOT_LITERAL,
  PLUS_LITERAL,
  QMARK_LITERAL,
  SLASH_LITERAL,
  ONE_CHAR,
  QMARK,
  END_ANCHOR,
  DOTS_SLASH,
  NO_DOT,
  NO_DOTS,
  NO_DOT_SLASH,
  NO_DOTS_SLASH,
  QMARK_NO_DOT,
  STAR,
  START_ANCHOR
};

/**
 * Windows glob regex
 */

const WINDOWS_CHARS = {
  ...POSIX_CHARS,

  SLASH_LITERAL: `[${WIN_SLASH}]`,
  QMARK: WIN_NO_SLASH,
  STAR: `${WIN_NO_SLASH}*?`,
  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,
  NO_DOT: `(?!${DOT_LITERAL})`,
  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,
  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,
  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,
  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,
  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,
  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`
};

/**
 * POSIX Bracket Regex
 */

const POSIX_REGEX_SOURCE = {
  alnum: 'a-zA-Z0-9',
  alpha: 'a-zA-Z',
  ascii: '\\x00-\\x7F',
  blank: ' \\t',
  cntrl: '\\x00-\\x1F\\x7F',
  digit: '0-9',
  graph: '\\x21-\\x7E',
  lower: 'a-z',
  print: '\\x20-\\x7E ',
  punct: '\\-!"#$%&\'()\\*+,./:;<=>?@[\\]^_`{|}~',
  space: ' \\t\\r\\n\\v\\f',
  upper: 'A-Z',
  word: 'A-Za-z0-9_',
  xdigit: 'A-Fa-f0-9'
};

module.exports = {
  MAX_LENGTH: 1024 * 64,
  POSIX_REGEX_SOURCE,

  // regular expressions
  REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g,
  REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/,
  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/,
  REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g,
  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g,
  REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g,

  // Replace globs with equivalent patterns to reduce parsing time.
  REPLACEMENTS: {
    '***': '*',
    '**/**': '**',
    '**/**/**': '**'
  },

  // Digits
  CHAR_0: 48, /* 0 */
  CHAR_9: 57, /* 9 */

  // Alphabet chars.
  CHAR_UPPERCASE_A: 65, /* A */
  CHAR_LOWERCASE_A: 97, /* a */
  CHAR_UPPERCASE_Z: 90, /* Z */
  CHAR_LOWERCASE_Z: 122, /* z */

  CHAR_LEFT_PARENTHESES: 40, /* ( */
  CHAR_RIGHT_PARENTHESES: 41, /* ) */

  CHAR_ASTERISK: 42, /* * */

  // Non-alphabetic chars.
  CHAR_AMPERSAND: 38, /* & */
  CHAR_AT: 64, /* @ */
  CHAR_BACKWARD_SLASH: 92, /* \ */
  CHAR_CARRIAGE_RETURN: 13, /* \r */
  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */
  CHAR_COLON: 58, /* : */
  CHAR_COMMA: 44, /* , */
  CHAR_DOT: 46, /* . */
  CHAR_DOUBLE_QUOTE: 34, /* " */
  CHAR_EQUAL: 61, /* = */
  CHAR_EXCLAMATION_MARK: 33, /* ! */
  CHAR_FORM_FEED: 12, /* \f */
  CHAR_FORWARD_SLASH: 47, /* / */
  CHAR_GRAVE_ACCENT: 96, /* ` */
  CHAR_HASH: 35, /* # */
  CHAR_HYPHEN_MINUS: 45, /* - */
  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */
  CHAR_LEFT_CURLY_BRACE: 123, /* { */
  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */
  CHAR_LINE_FEED: 10, /* \n */
  CHAR_NO_BREAK_SPACE: 160, /* \u00A0 */
  CHAR_PERCENT: 37, /* % */
  CHAR_PLUS: 43, /* + */
  CHAR_QUESTION_MARK: 63, /* ? */
  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */
  CHAR_RIGHT_CURLY_BRACE: 125, /* } */
  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */
  CHAR_SEMICOLON: 59, /* ; */
  CHAR_SINGLE_QUOTE: 39, /* ' */
  CHAR_SPACE: 32, /*   */
  CHAR_TAB: 9, /* \t */
  CHAR_UNDERSCORE: 95, /* _ */
  CHAR_VERTICAL_LINE: 124, /* | */
  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \uFEFF */

  SEP: path.sep,

  /**
   * Create EXTGLOB_CHARS
   */

  extglobChars(chars) {
    return {
      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },
      '?': { type: 'qmark', open: '(?:', close: ')?' },
      '+': { type: 'plus', open: '(?:', close: ')+' },
      '*': { type: 'star', open: '(?:', close: ')*' },
      '@': { type: 'at', open: '(?:', close: ')' }
    };
  },

  /**
   * Create GLOB_CHARS
   */

  globChars(win32) {
    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;
  }
};


/***/ }),

/***/ 92139:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const constants = __nccwpck_require__(16099);
const utils = __nccwpck_require__(30479);

/**
 * Constants
 */

const {
  MAX_LENGTH,
  POSIX_REGEX_SOURCE,
  REGEX_NON_SPECIAL_CHARS,
  REGEX_SPECIAL_CHARS_BACKREF,
  REPLACEMENTS
} = constants;

/**
 * Helpers
 */

const expandRange = (args, options) => {
  if (typeof options.expandRange === 'function') {
    return options.expandRange(...args, options);
  }

  args.sort();
  const value = `[${args.join('-')}]`;

  try {
    /* eslint-disable-next-line no-new */
    new RegExp(value);
  } catch (ex) {
    return args.map(v => utils.escapeRegex(v)).join('..');
  }

  return value;
};

/**
 * Create the message for a syntax error
 */

const syntaxError = (type, char) => {
  return `Missing ${type}: "${char}" - use "\\\\${char}" to match literal characters`;
};

/**
 * Parse the given input string.
 * @param {String} input
 * @param {Object} options
 * @return {Object}
 */

const parse = (input, options) => {
  if (typeof input !== 'string') {
    throw new TypeError('Expected a string');
  }

  input = REPLACEMENTS[input] || input;

  const opts = { ...options };
  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;

  let len = input.length;
  if (len > max) {
    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);
  }

  const bos = { type: 'bos', value: '', output: opts.prepend || '' };
  const tokens = [bos];

  const capture = opts.capture ? '' : '?:';
  const win32 = utils.isWindows(options);

  // create constants based on platform, for windows or posix
  const PLATFORM_CHARS = constants.globChars(win32);
  const EXTGLOB_CHARS = constants.extglobChars(PLATFORM_CHARS);

  const {
    DOT_LITERAL,
    PLUS_LITERAL,
    SLASH_LITERAL,
    ONE_CHAR,
    DOTS_SLASH,
    NO_DOT,
    NO_DOT_SLASH,
    NO_DOTS_SLASH,
    QMARK,
    QMARK_NO_DOT,
    STAR,
    START_ANCHOR
  } = PLATFORM_CHARS;

  const globstar = opts => {
    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;
  };

  const nodot = opts.dot ? '' : NO_DOT;
  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;
  let star = opts.bash === true ? globstar(opts) : STAR;

  if (opts.capture) {
    star = `(${star})`;
  }

  // minimatch options support
  if (typeof opts.noext === 'boolean') {
    opts.noextglob = opts.noext;
  }

  const state = {
    input,
    index: -1,
    start: 0,
    dot: opts.dot === true,
    consumed: '',
    output: '',
    prefix: '',
    backtrack: false,
    negated: false,
    brackets: 0,
    braces: 0,
    parens: 0,
    quotes: 0,
    globstar: false,
    tokens
  };

  input = utils.removePrefix(input, state);
  len = input.length;

  const extglobs = [];
  const braces = [];
  const stack = [];
  let prev = bos;
  let value;

  /**
   * Tokenizing helpers
   */

  const eos = () => state.index === len - 1;
  const peek = state.peek = (n = 1) => input[state.index + n];
  const advance = state.advance = () => input[++state.index] || '';
  const remaining = () => input.slice(state.index + 1);
  const consume = (value = '', num = 0) => {
    state.consumed += value;
    state.index += num;
  };

  const append = token => {
    state.output += token.output != null ? token.output : token.value;
    consume(token.value);
  };

  const negate = () => {
    let count = 1;

    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {
      advance();
      state.start++;
      count++;
    }

    if (count % 2 === 0) {
      return false;
    }

    state.negated = true;
    state.start++;
    return true;
  };

  const increment = type => {
    state[type]++;
    stack.push(type);
  };

  const decrement = type => {
    state[type]--;
    stack.pop();
  };

  /**
   * Push tokens onto the tokens array. This helper speeds up
   * tokenizing by 1) helping us avoid backtracking as much as possible,
   * and 2) helping us avoid creating extra tokens when consecutive
   * characters are plain text. This improves performance and simplifies
   * lookbehinds.
   */

  const push = tok => {
    if (prev.type === 'globstar') {
      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');
      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));

      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {
        state.output = state.output.slice(0, -prev.output.length);
        prev.type = 'star';
        prev.value = '*';
        prev.output = star;
        state.output += prev.output;
      }
    }

    if (extglobs.length && tok.type !== 'paren') {
      extglobs[extglobs.length - 1].inner += tok.value;
    }

    if (tok.value || tok.output) append(tok);
    if (prev && prev.type === 'text' && tok.type === 'text') {
      prev.value += tok.value;
      prev.output = (prev.output || '') + tok.value;
      return;
    }

    tok.prev = prev;
    tokens.push(tok);
    prev = tok;
  };

  const extglobOpen = (type, value) => {
    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };

    token.prev = prev;
    token.parens = state.parens;
    token.output = state.output;
    const output = (opts.capture ? '(' : '') + token.open;

    increment('parens');
    push({ type, value, output: state.output ? '' : ONE_CHAR });
    push({ type: 'paren', extglob: true, value: advance(), output });
    extglobs.push(token);
  };

  const extglobClose = token => {
    let output = token.close + (opts.capture ? ')' : '');
    let rest;

    if (token.type === 'negate') {
      let extglobStar = star;

      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {
        extglobStar = globstar(opts);
      }

      if (extglobStar !== star || eos() || /^\)+$/.test(remaining())) {
        output = token.close = `)$))${extglobStar}`;
      }

      if (token.inner.includes('*') && (rest = remaining()) && /^\.[^\\/.]+$/.test(rest)) {
        output = token.close = `)${rest})${extglobStar})`;
      }

      if (token.prev.type === 'bos') {
        state.negatedExtglob = true;
      }
    }

    push({ type: 'paren', extglob: true, value, output });
    decrement('parens');
  };

  /**
   * Fast paths
   */

  if (opts.fastpaths !== false && !/(^[*!]|[/()[\]{}"])/.test(input)) {
    let backslashes = false;

    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {
      if (first === '\\') {
        backslashes = true;
        return m;
      }

      if (first === '?') {
        if (esc) {
          return esc + first + (rest ? QMARK.repeat(rest.length) : '');
        }
        if (index === 0) {
          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');
        }
        return QMARK.repeat(chars.length);
      }

      if (first === '.') {
        return DOT_LITERAL.repeat(chars.length);
      }

      if (first === '*') {
        if (esc) {
          return esc + first + (rest ? star : '');
        }
        return star;
      }
      return esc ? m : `\\${m}`;
    });

    if (backslashes === true) {
      if (opts.unescape === true) {
        output = output.replace(/\\/g, '');
      } else {
        output = output.replace(/\\+/g, m => {
          return m.length % 2 === 0 ? '\\\\' : (m ? '\\' : '');
        });
      }
    }

    if (output === input && opts.contains === true) {
      state.output = input;
      return state;
    }

    state.output = utils.wrapOutput(output, state, options);
    return state;
  }

  /**
   * Tokenize input until we reach end-of-string
   */

  while (!eos()) {
    value = advance();

    if (value === '\u0000') {
      continue;
    }

    /**
     * Escaped characters
     */

    if (value === '\\') {
      const next = peek();

      if (next === '/' && opts.bash !== true) {
        continue;
      }

      if (next === '.' || next === ';') {
        continue;
      }

      if (!next) {
        value += '\\';
        push({ type: 'text', value });
        continue;
      }

      // collapse slashes to reduce potential for exploits
      const match = /^\\+/.exec(remaining());
      let slashes = 0;

      if (match && match[0].length > 2) {
        slashes = match[0].length;
        state.index += slashes;
        if (slashes % 2 !== 0) {
          value += '\\';
        }
      }

      if (opts.unescape === true) {
        value = advance();
      } else {
        value += advance();
      }

      if (state.brackets === 0) {
        push({ type: 'text', value });
        continue;
      }
    }

    /**
     * If we're inside a regex character class, continue
     * until we reach the closing bracket.
     */

    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {
      if (opts.posix !== false && value === ':') {
        const inner = prev.value.slice(1);
        if (inner.includes('[')) {
          prev.posix = true;

          if (inner.includes(':')) {
            const idx = prev.value.lastIndexOf('[');
            const pre = prev.value.slice(0, idx);
            const rest = prev.value.slice(idx + 2);
            const posix = POSIX_REGEX_SOURCE[rest];
            if (posix) {
              prev.value = pre + posix;
              state.backtrack = true;
              advance();

              if (!bos.output && tokens.indexOf(prev) === 1) {
                bos.output = ONE_CHAR;
              }
              continue;
            }
          }
        }
      }

      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {
        value = `\\${value}`;
      }

      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {
        value = `\\${value}`;
      }

      if (opts.posix === true && value === '!' && prev.value === '[') {
        value = '^';
      }

      prev.value += value;
      append({ value });
      continue;
    }

    /**
     * If we're inside a quoted string, continue
     * until we reach the closing double quote.
     */

    if (state.quotes === 1 && value !== '"') {
      value = utils.escapeRegex(value);
      prev.value += value;
      append({ value });
      continue;
    }

    /**
     * Double quotes
     */

    if (value === '"') {
      state.quotes = state.quotes === 1 ? 0 : 1;
      if (opts.keepQuotes === true) {
        push({ type: 'text', value });
      }
      continue;
    }

    /**
     * Parentheses
     */

    if (value === '(') {
      increment('parens');
      push({ type: 'paren', value });
      continue;
    }

    if (value === ')') {
      if (state.parens === 0 && opts.strictBrackets === true) {
        throw new SyntaxError(syntaxError('opening', '('));
      }

      const extglob = extglobs[extglobs.length - 1];
      if (extglob && state.parens === extglob.parens + 1) {
        extglobClose(extglobs.pop());
        continue;
      }

      push({ type: 'paren', value, output: state.parens ? ')' : '\\)' });
      decrement('parens');
      continue;
    }

    /**
     * Square brackets
     */

    if (value === '[') {
      if (opts.nobracket === true || !remaining().includes(']')) {
        if (opts.nobracket !== true && opts.strictBrackets === true) {
          throw new SyntaxError(syntaxError('closing', ']'));
        }

        value = `\\${value}`;
      } else {
        increment('brackets');
      }

      push({ type: 'bracket', value });
      continue;
    }

    if (value === ']') {
      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {
        push({ type: 'text', value, output: `\\${value}` });
        continue;
      }

      if (state.brackets === 0) {
        if (opts.strictBrackets === true) {
          throw new SyntaxError(syntaxError('opening', '['));
        }

        push({ type: 'text', value, output: `\\${value}` });
        continue;
      }

      decrement('brackets');

      const prevValue = prev.value.slice(1);
      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {
        value = `/${value}`;
      }

      prev.value += value;
      append({ value });

      // when literal brackets are explicitly disabled
      // assume we should match with a regex character class
      if (opts.literalBrackets === false || utils.hasRegexChars(prevValue)) {
        continue;
      }

      const escaped = utils.escapeRegex(prev.value);
      state.output = state.output.slice(0, -prev.value.length);

      // when literal brackets are explicitly enabled
      // assume we should escape the brackets to match literal characters
      if (opts.literalBrackets === true) {
        state.output += escaped;
        prev.value = escaped;
        continue;
      }

      // when the user specifies nothing, try to match both
      prev.value = `(${capture}${escaped}|${prev.value})`;
      state.output += prev.value;
      continue;
    }

    /**
     * Braces
     */

    if (value === '{' && opts.nobrace !== true) {
      increment('braces');

      const open = {
        type: 'brace',
        value,
        output: '(',
        outputIndex: state.output.length,
        tokensIndex: state.tokens.length
      };

      braces.push(open);
      push(open);
      continue;
    }

    if (value === '}') {
      const brace = braces[braces.length - 1];

      if (opts.nobrace === true || !brace) {
        push({ type: 'text', value, output: value });
        continue;
      }

      let output = ')';

      if (brace.dots === true) {
        const arr = tokens.slice();
        const range = [];

        for (let i = arr.length - 1; i >= 0; i--) {
          tokens.pop();
          if (arr[i].type === 'brace') {
            break;
          }
          if (arr[i].type !== 'dots') {
            range.unshift(arr[i].value);
          }
        }

        output = expandRange(range, opts);
        state.backtrack = true;
      }

      if (brace.comma !== true && brace.dots !== true) {
        const out = state.output.slice(0, brace.outputIndex);
        const toks = state.tokens.slice(brace.tokensIndex);
        brace.value = brace.output = '\\{';
        value = output = '\\}';
        state.output = out;
        for (const t of toks) {
          state.output += (t.output || t.value);
        }
      }

      push({ type: 'brace', value, output });
      decrement('braces');
      braces.pop();
      continue;
    }

    /**
     * Pipes
     */

    if (value === '|') {
      if (extglobs.length > 0) {
        extglobs[extglobs.length - 1].conditions++;
      }
      push({ type: 'text', value });
      continue;
    }

    /**
     * Commas
     */

    if (value === ',') {
      let output = value;

      const brace = braces[braces.length - 1];
      if (brace && stack[stack.length - 1] === 'braces') {
        brace.comma = true;
        output = '|';
      }

      push({ type: 'comma', value, output });
      continue;
    }

    /**
     * Slashes
     */

    if (value === '/') {
      // if the beginning of the glob is "./", advance the start
      // to the current index, and don't add the "./" characters
      // to the state. This greatly simplifies lookbehinds when
      // checking for BOS characters like "!" and "." (not "./")
      if (prev.type === 'dot' && state.index === state.start + 1) {
        state.start = state.index + 1;
        state.consumed = '';
        state.output = '';
        tokens.pop();
        prev = bos; // reset "prev" to the first token
        continue;
      }

      push({ type: 'slash', value, output: SLASH_LITERAL });
      continue;
    }

    /**
     * Dots
     */

    if (value === '.') {
      if (state.braces > 0 && prev.type === 'dot') {
        if (prev.value === '.') prev.output = DOT_LITERAL;
        const brace = braces[braces.length - 1];
        prev.type = 'dots';
        prev.output += value;
        prev.value += value;
        brace.dots = true;
        continue;
      }

      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {
        push({ type: 'text', value, output: DOT_LITERAL });
        continue;
      }

      push({ type: 'dot', value, output: DOT_LITERAL });
      continue;
    }

    /**
     * Question marks
     */

    if (value === '?') {
      const isGroup = prev && prev.value === '(';
      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {
        extglobOpen('qmark', value);
        continue;
      }

      if (prev && prev.type === 'paren') {
        const next = peek();
        let output = value;

        if (next === '<' && !utils.supportsLookbehinds()) {
          throw new Error('Node.js v10 or higher is required for regex lookbehinds');
        }

        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\w+>)/.test(remaining()))) {
          output = `\\${value}`;
        }

        push({ type: 'text', value, output });
        continue;
      }

      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {
        push({ type: 'qmark', value, output: QMARK_NO_DOT });
        continue;
      }

      push({ type: 'qmark', value, output: QMARK });
      continue;
    }

    /**
     * Exclamation
     */

    if (value === '!') {
      if (opts.noextglob !== true && peek() === '(') {
        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {
          extglobOpen('negate', value);
          continue;
        }
      }

      if (opts.nonegate !== true && state.index === 0) {
        negate();
        continue;
      }
    }

    /**
     * Plus
     */

    if (value === '+') {
      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {
        extglobOpen('plus', value);
        continue;
      }

      if ((prev && prev.value === '(') || opts.regex === false) {
        push({ type: 'plus', value, output: PLUS_LITERAL });
        continue;
      }

      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {
        push({ type: 'plus', value });
        continue;
      }

      push({ type: 'plus', value: PLUS_LITERAL });
      continue;
    }

    /**
     * Plain text
     */

    if (value === '@') {
      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {
        push({ type: 'at', extglob: true, value, output: '' });
        continue;
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Plain text
     */

    if (value !== '*') {
      if (value === '$' || value === '^') {
        value = `\\${value}`;
      }

      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());
      if (match) {
        value += match[0];
        state.index += match[0].length;
      }

      push({ type: 'text', value });
      continue;
    }

    /**
     * Stars
     */

    if (prev && (prev.type === 'globstar' || prev.star === true)) {
      prev.type = 'star';
      prev.star = true;
      prev.value += value;
      prev.output = star;
      state.backtrack = true;
      state.globstar = true;
      consume(value);
      continue;
    }

    let rest = remaining();
    if (opts.noextglob !== true && /^\([^?]/.test(rest)) {
      extglobOpen('star', value);
      continue;
    }

    if (prev.type === 'star') {
      if (opts.noglobstar === true) {
        consume(value);
        continue;
      }

      const prior = prev.prev;
      const before = prior.prev;
      const isStart = prior.type === 'slash' || prior.type === 'bos';
      const afterStar = before && (before.type === 'star' || before.type === 'globstar');

      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {
        push({ type: 'star', value, output: '' });
        continue;
      }

      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');
      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');
      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {
        push({ type: 'star', value, output: '' });
        continue;
      }

      // strip consecutive `/**/`
      while (rest.slice(0, 3) === '/**') {
        const after = input[state.index + 4];
        if (after && after !== '/') {
          break;
        }
        rest = rest.slice(3);
        consume('/**', 3);
      }

      if (prior.type === 'bos' && eos()) {
        prev.type = 'globstar';
        prev.value += value;
        prev.output = globstar(opts);
        state.output = prev.output;
        state.globstar = true;
        consume(value);
        continue;
      }

      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {
        state.output = state.output.slice(0, -(prior.output + prev.output).length);
        prior.output = `(?:${prior.output}`;

        prev.type = 'globstar';
        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');
        prev.value += value;
        state.globstar = true;
        state.output += prior.output + prev.output;
        consume(value);
        continue;
      }

      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {
        const end = rest[1] !== void 0 ? '|$' : '';

        state.output = state.output.slice(0, -(prior.output + prev.output).length);
        prior.output = `(?:${prior.output}`;

        prev.type = 'globstar';
        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;
        prev.value += value;

        state.output += prior.output + prev.output;
        state.globstar = true;

        consume(value + advance());

        push({ type: 'slash', value: '/', output: '' });
        continue;
      }

      if (prior.type === 'bos' && rest[0] === '/') {
        prev.type = 'globstar';
        prev.value += value;
        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;
        state.output = prev.output;
        state.globstar = true;
        consume(value + advance());
        push({ type: 'slash', value: '/', output: '' });
        continue;
      }

      // remove single star from output
      state.output = state.output.slice(0, -prev.output.length);

      // reset previous token to globstar
      prev.type = 'globstar';
      prev.output = globstar(opts);
      prev.value += value;

      // reset output with globstar
      state.output += prev.output;
      state.globstar = true;
      consume(value);
      continue;
    }

    const token = { type: 'star', value, output: star };

    if (opts.bash === true) {
      token.output = '.*?';
      if (prev.type === 'bos' || prev.type === 'slash') {
        token.output = nodot + token.output;
      }
      push(token);
      continue;
    }

    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {
      token.output = value;
      push(token);
      continue;
    }

    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {
      if (prev.type === 'dot') {
        state.output += NO_DOT_SLASH;
        prev.output += NO_DOT_SLASH;

      } else if (opts.dot === true) {
        state.output += NO_DOTS_SLASH;
        prev.output += NO_DOTS_SLASH;

      } else {
        state.output += nodot;
        prev.output += nodot;
      }

      if (peek() !== '*') {
        state.output += ONE_CHAR;
        prev.output += ONE_CHAR;
      }
    }

    push(token);
  }

  while (state.brackets > 0) {
    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ']'));
    state.output = utils.escapeLast(state.output, '[');
    decrement('brackets');
  }

  while (state.parens > 0) {
    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', ')'));
    state.output = utils.escapeLast(state.output, '(');
    decrement('parens');
  }

  while (state.braces > 0) {
    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError('closing', '}'));
    state.output = utils.escapeLast(state.output, '{');
    decrement('braces');
  }

  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {
    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });
  }

  // rebuild the output if we had to backtrack at any point
  if (state.backtrack === true) {
    state.output = '';

    for (const token of state.tokens) {
      state.output += token.output != null ? token.output : token.value;

      if (token.suffix) {
        state.output += token.suffix;
      }
    }
  }

  return state;
};

/**
 * Fast paths for creating regular expressions for common glob patterns.
 * This can significantly speed up processing and has very little downside
 * impact when none of the fast paths match.
 */

parse.fastpaths = (input, options) => {
  const opts = { ...options };
  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;
  const len = input.length;
  if (len > max) {
    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);
  }

  input = REPLACEMENTS[input] || input;
  const win32 = utils.isWindows(options);

  // create constants based on platform, for windows or posix
  const {
    DOT_LITERAL,
    SLASH_LITERAL,
    ONE_CHAR,
    DOTS_SLASH,
    NO_DOT,
    NO_DOTS,
    NO_DOTS_SLASH,
    STAR,
    START_ANCHOR
  } = constants.globChars(win32);

  const nodot = opts.dot ? NO_DOTS : NO_DOT;
  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;
  const capture = opts.capture ? '' : '?:';
  const state = { negated: false, prefix: '' };
  let star = opts.bash === true ? '.*?' : STAR;

  if (opts.capture) {
    star = `(${star})`;
  }

  const globstar = opts => {
    if (opts.noglobstar === true) return star;
    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;
  };

  const create = str => {
    switch (str) {
      case '*':
        return `${nodot}${ONE_CHAR}${star}`;

      case '.*':
        return `${DOT_LITERAL}${ONE_CHAR}${star}`;

      case '*.*':
        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;

      case '*/*':
        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;

      case '**':
        return nodot + globstar(opts);

      case '**/*':
        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;

      case '**/*.*':
        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;

      case '**/.*':
        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;

      default: {
        const match = /^(.*?)\.(\w+)$/.exec(str);
        if (!match) return;

        const source = create(match[1]);
        if (!source) return;

        return source + DOT_LITERAL + match[2];
      }
    }
  };

  const output = utils.removePrefix(input, state);
  let source = create(output);

  if (source && opts.strictSlashes !== true) {
    source += `${SLASH_LITERAL}?`;
  }

  return source;
};

module.exports = parse;


/***/ }),

/***/ 33322:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(85622);
const scan = __nccwpck_require__(32429);
const parse = __nccwpck_require__(92139);
const utils = __nccwpck_require__(30479);
const constants = __nccwpck_require__(16099);
const isObject = val => val && typeof val === 'object' && !Array.isArray(val);

/**
 * Creates a matcher function from one or more glob patterns. The
 * returned function takes a string to match as its first argument,
 * and returns true if the string is a match. The returned matcher
 * function also takes a boolean as the second argument that, when true,
 * returns an object with additional information.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch(glob[, options]);
 *
 * const isMatch = picomatch('*.!(*a)');
 * console.log(isMatch('a.a')); //=> false
 * console.log(isMatch('a.b')); //=> true
 * ```
 * @name picomatch
 * @param {String|Array} `globs` One or more glob patterns.
 * @param {Object=} `options`
 * @return {Function=} Returns a matcher function.
 * @api public
 */

const picomatch = (glob, options, returnState = false) => {
  if (Array.isArray(glob)) {
    const fns = glob.map(input => picomatch(input, options, returnState));
    const arrayMatcher = str => {
      for (const isMatch of fns) {
        const state = isMatch(str);
        if (state) return state;
      }
      return false;
    };
    return arrayMatcher;
  }

  const isState = isObject(glob) && glob.tokens && glob.input;

  if (glob === '' || (typeof glob !== 'string' && !isState)) {
    throw new TypeError('Expected pattern to be a non-empty string');
  }

  const opts = options || {};
  const posix = utils.isWindows(options);
  const regex = isState
    ? picomatch.compileRe(glob, options)
    : picomatch.makeRe(glob, options, false, true);

  const state = regex.state;
  delete regex.state;

  let isIgnored = () => false;
  if (opts.ignore) {
    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };
    isIgnored = picomatch(opts.ignore, ignoreOpts, returnState);
  }

  const matcher = (input, returnObject = false) => {
    const { isMatch, match, output } = picomatch.test(input, regex, options, { glob, posix });
    const result = { glob, state, regex, posix, input, output, match, isMatch };

    if (typeof opts.onResult === 'function') {
      opts.onResult(result);
    }

    if (isMatch === false) {
      result.isMatch = false;
      return returnObject ? result : false;
    }

    if (isIgnored(input)) {
      if (typeof opts.onIgnore === 'function') {
        opts.onIgnore(result);
      }
      result.isMatch = false;
      return returnObject ? result : false;
    }

    if (typeof opts.onMatch === 'function') {
      opts.onMatch(result);
    }
    return returnObject ? result : true;
  };

  if (returnState) {
    matcher.state = state;
  }

  return matcher;
};

/**
 * Test `input` with the given `regex`. This is used by the main
 * `picomatch()` function to test the input string.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.test(input, regex[, options]);
 *
 * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\/([^/]*?))$/));
 * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }
 * ```
 * @param {String} `input` String to test.
 * @param {RegExp} `regex`
 * @return {Object} Returns an object with matching info.
 * @api public
 */

picomatch.test = (input, regex, options, { glob, posix } = {}) => {
  if (typeof input !== 'string') {
    throw new TypeError('Expected input to be a string');
  }

  if (input === '') {
    return { isMatch: false, output: '' };
  }

  const opts = options || {};
  const format = opts.format || (posix ? utils.toPosixSlashes : null);
  let match = input === glob;
  let output = (match && format) ? format(input) : input;

  if (match === false) {
    output = format ? format(input) : input;
    match = output === glob;
  }

  if (match === false || opts.capture === true) {
    if (opts.matchBase === true || opts.basename === true) {
      match = picomatch.matchBase(input, regex, options, posix);
    } else {
      match = regex.exec(output);
    }
  }

  return { isMatch: Boolean(match), match, output };
};

/**
 * Match the basename of a filepath.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.matchBase(input, glob[, options]);
 * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true
 * ```
 * @param {String} `input` String to test.
 * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).
 * @return {Boolean}
 * @api public
 */

picomatch.matchBase = (input, glob, options, posix = utils.isWindows(options)) => {
  const regex = glob instanceof RegExp ? glob : picomatch.makeRe(glob, options);
  return regex.test(path.basename(input));
};

/**
 * Returns true if **any** of the given glob `patterns` match the specified `string`.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.isMatch(string, patterns[, options]);
 *
 * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true
 * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false
 * ```
 * @param {String|Array} str The string to test.
 * @param {String|Array} patterns One or more glob patterns to use for matching.
 * @param {Object} [options] See available [options](#options).
 * @return {Boolean} Returns true if any patterns match `str`
 * @api public
 */

picomatch.isMatch = (str, patterns, options) => picomatch(patterns, options)(str);

/**
 * Parse a glob pattern to create the source string for a regular
 * expression.
 *
 * ```js
 * const picomatch = require('picomatch');
 * const result = picomatch.parse(pattern[, options]);
 * ```
 * @param {String} `pattern`
 * @param {Object} `options`
 * @return {Object} Returns an object with useful properties and output to be used as a regex source string.
 * @api public
 */

picomatch.parse = (pattern, options) => {
  if (Array.isArray(pattern)) return pattern.map(p => picomatch.parse(p, options));
  return parse(pattern, { ...options, fastpaths: false });
};

/**
 * Scan a glob pattern to separate the pattern into segments.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.scan(input[, options]);
 *
 * const result = picomatch.scan('!./foo/*.js');
 * console.log(result);
 * { prefix: '!./',
 *   input: '!./foo/*.js',
 *   start: 3,
 *   base: 'foo',
 *   glob: '*.js',
 *   isBrace: false,
 *   isBracket: false,
 *   isGlob: true,
 *   isExtglob: false,
 *   isGlobstar: false,
 *   negated: true }
 * ```
 * @param {String} `input` Glob pattern to scan.
 * @param {Object} `options`
 * @return {Object} Returns an object with
 * @api public
 */

picomatch.scan = (input, options) => scan(input, options);

/**
 * Compile a regular expression from the `state` object returned by the
 * [parse()](#parse) method.
 *
 * @param {Object} `state`
 * @param {Object} `options`
 * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.
 * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.
 * @return {RegExp}
 * @api public
 */

picomatch.compileRe = (state, options, returnOutput = false, returnState = false) => {
  if (returnOutput === true) {
    return state.output;
  }

  const opts = options || {};
  const prepend = opts.contains ? '' : '^';
  const append = opts.contains ? '' : '$';

  let source = `${prepend}(?:${state.output})${append}`;
  if (state && state.negated === true) {
    source = `^(?!${source}).*$`;
  }

  const regex = picomatch.toRegex(source, options);
  if (returnState === true) {
    regex.state = state;
  }

  return regex;
};

/**
 * Create a regular expression from a parsed glob pattern.
 *
 * ```js
 * const picomatch = require('picomatch');
 * const state = picomatch.parse('*.js');
 * // picomatch.compileRe(state[, options]);
 *
 * console.log(picomatch.compileRe(state));
 * //=> /^(?:(?!\.)(?=.)[^/]*?\.js)$/
 * ```
 * @param {String} `state` The object returned from the `.parse` method.
 * @param {Object} `options`
 * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.
 * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.
 * @return {RegExp} Returns a regex created from the given pattern.
 * @api public
 */

picomatch.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {
  if (!input || typeof input !== 'string') {
    throw new TypeError('Expected a non-empty string');
  }

  let parsed = { negated: false, fastpaths: true };

  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {
    parsed.output = parse.fastpaths(input, options);
  }

  if (!parsed.output) {
    parsed = parse(input, options);
  }

  return picomatch.compileRe(parsed, options, returnOutput, returnState);
};

/**
 * Create a regular expression from the given regex source string.
 *
 * ```js
 * const picomatch = require('picomatch');
 * // picomatch.toRegex(source[, options]);
 *
 * const { output } = picomatch.parse('*.js');
 * console.log(picomatch.toRegex(output));
 * //=> /^(?:(?!\.)(?=.)[^/]*?\.js)$/
 * ```
 * @param {String} `source` Regular expression source string.
 * @param {Object} `options`
 * @return {RegExp}
 * @api public
 */

picomatch.toRegex = (source, options) => {
  try {
    const opts = options || {};
    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));
  } catch (err) {
    if (options && options.debug === true) throw err;
    return /$^/;
  }
};

/**
 * Picomatch constants.
 * @return {Object}
 */

picomatch.constants = constants;

/**
 * Expose "picomatch"
 */

module.exports = picomatch;


/***/ }),

/***/ 32429:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const utils = __nccwpck_require__(30479);
const {
  CHAR_ASTERISK,             /* * */
  CHAR_AT,                   /* @ */
  CHAR_BACKWARD_SLASH,       /* \ */
  CHAR_COMMA,                /* , */
  CHAR_DOT,                  /* . */
  CHAR_EXCLAMATION_MARK,     /* ! */
  CHAR_FORWARD_SLASH,        /* / */
  CHAR_LEFT_CURLY_BRACE,     /* { */
  CHAR_LEFT_PARENTHESES,     /* ( */
  CHAR_LEFT_SQUARE_BRACKET,  /* [ */
  CHAR_PLUS,                 /* + */
  CHAR_QUESTION_MARK,        /* ? */
  CHAR_RIGHT_CURLY_BRACE,    /* } */
  CHAR_RIGHT_PARENTHESES,    /* ) */
  CHAR_RIGHT_SQUARE_BRACKET  /* ] */
} = __nccwpck_require__(16099);

const isPathSeparator = code => {
  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;
};

const depth = token => {
  if (token.isPrefix !== true) {
    token.depth = token.isGlobstar ? Infinity : 1;
  }
};

/**
 * Quickly scans a glob pattern and returns an object with a handful of
 * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),
 * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not
 * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).
 *
 * ```js
 * const pm = require('picomatch');
 * console.log(pm.scan('foo/bar/*.js'));
 * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }
 * ```
 * @param {String} `str`
 * @param {Object} `options`
 * @return {Object} Returns an object with tokens and regex source string.
 * @api public
 */

const scan = (input, options) => {
  const opts = options || {};

  const length = input.length - 1;
  const scanToEnd = opts.parts === true || opts.scanToEnd === true;
  const slashes = [];
  const tokens = [];
  const parts = [];

  let str = input;
  let index = -1;
  let start = 0;
  let lastIndex = 0;
  let isBrace = false;
  let isBracket = false;
  let isGlob = false;
  let isExtglob = false;
  let isGlobstar = false;
  let braceEscaped = false;
  let backslashes = false;
  let negated = false;
  let negatedExtglob = false;
  let finished = false;
  let braces = 0;
  let prev;
  let code;
  let token = { value: '', depth: 0, isGlob: false };

  const eos = () => index >= length;
  const peek = () => str.charCodeAt(index + 1);
  const advance = () => {
    prev = code;
    return str.charCodeAt(++index);
  };

  while (index < length) {
    code = advance();
    let next;

    if (code === CHAR_BACKWARD_SLASH) {
      backslashes = token.backslashes = true;
      code = advance();

      if (code === CHAR_LEFT_CURLY_BRACE) {
        braceEscaped = true;
      }
      continue;
    }

    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE) {
      braces++;

      while (eos() !== true && (code = advance())) {
        if (code === CHAR_BACKWARD_SLASH) {
          backslashes = token.backslashes = true;
          advance();
          continue;
        }

        if (code === CHAR_LEFT_CURLY_BRACE) {
          braces++;
          continue;
        }

        if (braceEscaped !== true && code === CHAR_DOT && (code = advance()) === CHAR_DOT) {
          isBrace = token.isBrace = true;
          isGlob = token.isGlob = true;
          finished = true;

          if (scanToEnd === true) {
            continue;
          }

          break;
        }

        if (braceEscaped !== true && code === CHAR_COMMA) {
          isBrace = token.isBrace = true;
          isGlob = token.isGlob = true;
          finished = true;

          if (scanToEnd === true) {
            continue;
          }

          break;
        }

        if (code === CHAR_RIGHT_CURLY_BRACE) {
          braces--;

          if (braces === 0) {
            braceEscaped = false;
            isBrace = token.isBrace = true;
            finished = true;
            break;
          }
        }
      }

      if (scanToEnd === true) {
        continue;
      }

      break;
    }

    if (code === CHAR_FORWARD_SLASH) {
      slashes.push(index);
      tokens.push(token);
      token = { value: '', depth: 0, isGlob: false };

      if (finished === true) continue;
      if (prev === CHAR_DOT && index === (start + 1)) {
        start += 2;
        continue;
      }

      lastIndex = index + 1;
      continue;
    }

    if (opts.noext !== true) {
      const isExtglobChar = code === CHAR_PLUS
        || code === CHAR_AT
        || code === CHAR_ASTERISK
        || code === CHAR_QUESTION_MARK
        || code === CHAR_EXCLAMATION_MARK;

      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES) {
        isGlob = token.isGlob = true;
        isExtglob = token.isExtglob = true;
        finished = true;
        if (code === CHAR_EXCLAMATION_MARK && index === start) {
          negatedExtglob = true;
        }

        if (scanToEnd === true) {
          while (eos() !== true && (code = advance())) {
            if (code === CHAR_BACKWARD_SLASH) {
              backslashes = token.backslashes = true;
              code = advance();
              continue;
            }

            if (code === CHAR_RIGHT_PARENTHESES) {
              isGlob = token.isGlob = true;
              finished = true;
              break;
            }
          }
          continue;
        }
        break;
      }
    }

    if (code === CHAR_ASTERISK) {
      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;
      isGlob = token.isGlob = true;
      finished = true;

      if (scanToEnd === true) {
        continue;
      }
      break;
    }

    if (code === CHAR_QUESTION_MARK) {
      isGlob = token.isGlob = true;
      finished = true;

      if (scanToEnd === true) {
        continue;
      }
      break;
    }

    if (code === CHAR_LEFT_SQUARE_BRACKET) {
      while (eos() !== true && (next = advance())) {
        if (next === CHAR_BACKWARD_SLASH) {
          backslashes = token.backslashes = true;
          advance();
          continue;
        }

        if (next === CHAR_RIGHT_SQUARE_BRACKET) {
          isBracket = token.isBracket = true;
          isGlob = token.isGlob = true;
          finished = true;
          break;
        }
      }

      if (scanToEnd === true) {
        continue;
      }

      break;
    }

    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {
      negated = token.negated = true;
      start++;
      continue;
    }

    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES) {
      isGlob = token.isGlob = true;

      if (scanToEnd === true) {
        while (eos() !== true && (code = advance())) {
          if (code === CHAR_LEFT_PARENTHESES) {
            backslashes = token.backslashes = true;
            code = advance();
            continue;
          }

          if (code === CHAR_RIGHT_PARENTHESES) {
            finished = true;
            break;
          }
        }
        continue;
      }
      break;
    }

    if (isGlob === true) {
      finished = true;

      if (scanToEnd === true) {
        continue;
      }

      break;
    }
  }

  if (opts.noext === true) {
    isExtglob = false;
    isGlob = false;
  }

  let base = str;
  let prefix = '';
  let glob = '';

  if (start > 0) {
    prefix = str.slice(0, start);
    str = str.slice(start);
    lastIndex -= start;
  }

  if (base && isGlob === true && lastIndex > 0) {
    base = str.slice(0, lastIndex);
    glob = str.slice(lastIndex);
  } else if (isGlob === true) {
    base = '';
    glob = str;
  } else {
    base = str;
  }

  if (base && base !== '' && base !== '/' && base !== str) {
    if (isPathSeparator(base.charCodeAt(base.length - 1))) {
      base = base.slice(0, -1);
    }
  }

  if (opts.unescape === true) {
    if (glob) glob = utils.removeBackslashes(glob);

    if (base && backslashes === true) {
      base = utils.removeBackslashes(base);
    }
  }

  const state = {
    prefix,
    input,
    start,
    base,
    glob,
    isBrace,
    isBracket,
    isGlob,
    isExtglob,
    isGlobstar,
    negated,
    negatedExtglob
  };

  if (opts.tokens === true) {
    state.maxDepth = 0;
    if (!isPathSeparator(code)) {
      tokens.push(token);
    }
    state.tokens = tokens;
  }

  if (opts.parts === true || opts.tokens === true) {
    let prevIndex;

    for (let idx = 0; idx < slashes.length; idx++) {
      const n = prevIndex ? prevIndex + 1 : start;
      const i = slashes[idx];
      const value = input.slice(n, i);
      if (opts.tokens) {
        if (idx === 0 && start !== 0) {
          tokens[idx].isPrefix = true;
          tokens[idx].value = prefix;
        } else {
          tokens[idx].value = value;
        }
        depth(tokens[idx]);
        state.maxDepth += tokens[idx].depth;
      }
      if (idx !== 0 || value !== '') {
        parts.push(value);
      }
      prevIndex = i;
    }

    if (prevIndex && prevIndex + 1 < input.length) {
      const value = input.slice(prevIndex + 1);
      parts.push(value);

      if (opts.tokens) {
        tokens[tokens.length - 1].value = value;
        depth(tokens[tokens.length - 1]);
        state.maxDepth += tokens[tokens.length - 1].depth;
      }
    }

    state.slashes = slashes;
    state.parts = parts;
  }

  return state;
};

module.exports = scan;


/***/ }),

/***/ 30479:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(85622);
const win32 = process.platform === 'win32';
const {
  REGEX_BACKSLASH,
  REGEX_REMOVE_BACKSLASH,
  REGEX_SPECIAL_CHARS,
  REGEX_SPECIAL_CHARS_GLOBAL
} = __nccwpck_require__(16099);

exports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);
exports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);
exports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);
exports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\$1');
exports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');

exports.removeBackslashes = str => {
  return str.replace(REGEX_REMOVE_BACKSLASH, match => {
    return match === '\\' ? '' : match;
  });
};

exports.supportsLookbehinds = () => {
  const segs = process.version.slice(1).split('.').map(Number);
  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {
    return true;
  }
  return false;
};

exports.isWindows = options => {
  if (options && typeof options.windows === 'boolean') {
    return options.windows;
  }
  return win32 === true || path.sep === '\\';
};

exports.escapeLast = (input, char, lastIdx) => {
  const idx = input.lastIndexOf(char, lastIdx);
  if (idx === -1) return input;
  if (input[idx - 1] === '\\') return exports.escapeLast(input, char, idx - 1);
  return `${input.slice(0, idx)}\\${input.slice(idx)}`;
};

exports.removePrefix = (input, state = {}) => {
  let output = input;
  if (output.startsWith('./')) {
    output = output.slice(2);
    state.prefix = './';
  }
  return output;
};

exports.wrapOutput = (input, state = {}, options = {}) => {
  const prepend = options.contains ? '' : '^';
  const append = options.contains ? '' : '$';

  let output = `${prepend}(?:${input})${append}`;
  if (state.negated === true) {
    output = `(?:^(?!${output}).*$)`;
  }
  return output;
};


/***/ }),

/***/ 64810:
/***/ ((module) => {

"use strict";


var processFn = function (fn, P, opts) {
	return function () {
		var that = this;
		var args = new Array(arguments.length);

		for (var i = 0; i < arguments.length; i++) {
			args[i] = arguments[i];
		}

		return new P(function (resolve, reject) {
			args.push(function (err, result) {
				if (err) {
					reject(err);
				} else if (opts.multiArgs) {
					var results = new Array(arguments.length - 1);

					for (var i = 1; i < arguments.length; i++) {
						results[i - 1] = arguments[i];
					}

					resolve(results);
				} else {
					resolve(result);
				}
			});

			fn.apply(that, args);
		});
	};
};

var pify = module.exports = function (obj, P, opts) {
	if (typeof P !== 'function') {
		opts = P;
		P = Promise;
	}

	opts = opts || {};
	opts.exclude = opts.exclude || [/.+Sync$/];

	var filter = function (key) {
		var match = function (pattern) {
			return typeof pattern === 'string' ? key === pattern : pattern.test(key);
		};

		return opts.include ? opts.include.some(match) : !opts.exclude.some(match);
	};

	var ret = typeof obj === 'function' ? function () {
		if (opts.excludeMain) {
			return obj.apply(this, arguments);
		}

		return processFn(obj, P, opts).apply(this, arguments);
	} : {};

	return Object.keys(obj).reduce(function (ret, key) {
		var x = obj[key];

		ret[key] = typeof x === 'function' && filter(key) ? processFn(x, P, opts) : x;

		return ret;
	}, ret);
};

pify.all = pify;


/***/ }),

/***/ 15222:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = typeof Promise === 'function' ? Promise : __nccwpck_require__(58058);


/***/ }),

/***/ 58058:
/***/ ((module) => {

"use strict";


var PENDING = 'pending';
var SETTLED = 'settled';
var FULFILLED = 'fulfilled';
var REJECTED = 'rejected';
var NOOP = function () {};
var isNode = typeof global !== 'undefined' && typeof global.process !== 'undefined' && typeof global.process.emit === 'function';

var asyncSetTimer = typeof setImmediate === 'undefined' ? setTimeout : setImmediate;
var asyncQueue = [];
var asyncTimer;

function asyncFlush() {
	// run promise callbacks
	for (var i = 0; i < asyncQueue.length; i++) {
		asyncQueue[i][0](asyncQueue[i][1]);
	}

	// reset async asyncQueue
	asyncQueue = [];
	asyncTimer = false;
}

function asyncCall(callback, arg) {
	asyncQueue.push([callback, arg]);

	if (!asyncTimer) {
		asyncTimer = true;
		asyncSetTimer(asyncFlush, 0);
	}
}

function invokeResolver(resolver, promise) {
	function resolvePromise(value) {
		resolve(promise, value);
	}

	function rejectPromise(reason) {
		reject(promise, reason);
	}

	try {
		resolver(resolvePromise, rejectPromise);
	} catch (e) {
		rejectPromise(e);
	}
}

function invokeCallback(subscriber) {
	var owner = subscriber.owner;
	var settled = owner._state;
	var value = owner._data;
	var callback = subscriber[settled];
	var promise = subscriber.then;

	if (typeof callback === 'function') {
		settled = FULFILLED;
		try {
			value = callback(value);
		} catch (e) {
			reject(promise, e);
		}
	}

	if (!handleThenable(promise, value)) {
		if (settled === FULFILLED) {
			resolve(promise, value);
		}

		if (settled === REJECTED) {
			reject(promise, value);
		}
	}
}

function handleThenable(promise, value) {
	var resolved;

	try {
		if (promise === value) {
			throw new TypeError('A promises callback cannot return that same promise.');
		}

		if (value && (typeof value === 'function' || typeof value === 'object')) {
			// then should be retrieved only once
			var then = value.then;

			if (typeof then === 'function') {
				then.call(value, function (val) {
					if (!resolved) {
						resolved = true;

						if (value === val) {
							fulfill(promise, val);
						} else {
							resolve(promise, val);
						}
					}
				}, function (reason) {
					if (!resolved) {
						resolved = true;

						reject(promise, reason);
					}
				});

				return true;
			}
		}
	} catch (e) {
		if (!resolved) {
			reject(promise, e);
		}

		return true;
	}

	return false;
}

function resolve(promise, value) {
	if (promise === value || !handleThenable(promise, value)) {
		fulfill(promise, value);
	}
}

function fulfill(promise, value) {
	if (promise._state === PENDING) {
		promise._state = SETTLED;
		promise._data = value;

		asyncCall(publishFulfillment, promise);
	}
}

function reject(promise, reason) {
	if (promise._state === PENDING) {
		promise._state = SETTLED;
		promise._data = reason;

		asyncCall(publishRejection, promise);
	}
}

function publish(promise) {
	promise._then = promise._then.forEach(invokeCallback);
}

function publishFulfillment(promise) {
	promise._state = FULFILLED;
	publish(promise);
}

function publishRejection(promise) {
	promise._state = REJECTED;
	publish(promise);
	if (!promise._handled && isNode) {
		global.process.emit('unhandledRejection', promise._data, promise);
	}
}

function notifyRejectionHandled(promise) {
	global.process.emit('rejectionHandled', promise);
}

/**
 * @class
 */
function Promise(resolver) {
	if (typeof resolver !== 'function') {
		throw new TypeError('Promise resolver ' + resolver + ' is not a function');
	}

	if (this instanceof Promise === false) {
		throw new TypeError('Failed to construct \'Promise\': Please use the \'new\' operator, this object constructor cannot be called as a function.');
	}

	this._then = [];

	invokeResolver(resolver, this);
}

Promise.prototype = {
	constructor: Promise,

	_state: PENDING,
	_then: null,
	_data: undefined,
	_handled: false,

	then: function (onFulfillment, onRejection) {
		var subscriber = {
			owner: this,
			then: new this.constructor(NOOP),
			fulfilled: onFulfillment,
			rejected: onRejection
		};

		if ((onRejection || onFulfillment) && !this._handled) {
			this._handled = true;
			if (this._state === REJECTED && isNode) {
				asyncCall(notifyRejectionHandled, this);
			}
		}

		if (this._state === FULFILLED || this._state === REJECTED) {
			// already resolved, call callback async
			asyncCall(invokeCallback, subscriber);
		} else {
			// subscribe
			this._then.push(subscriber);
		}

		return subscriber.then;
	},

	catch: function (onRejection) {
		return this.then(null, onRejection);
	}
};

Promise.all = function (promises) {
	if (!Array.isArray(promises)) {
		throw new TypeError('You must pass an array to Promise.all().');
	}

	return new Promise(function (resolve, reject) {
		var results = [];
		var remaining = 0;

		function resolver(index) {
			remaining++;
			return function (value) {
				results[index] = value;
				if (!--remaining) {
					resolve(results);
				}
			};
		}

		for (var i = 0, promise; i < promises.length; i++) {
			promise = promises[i];

			if (promise && typeof promise.then === 'function') {
				promise.then(resolver(i), reject);
			} else {
				results[i] = promise;
			}
		}

		if (!remaining) {
			resolve(results);
		}
	});
};

Promise.race = function (promises) {
	if (!Array.isArray(promises)) {
		throw new TypeError('You must pass an array to Promise.race().');
	}

	return new Promise(function (resolve, reject) {
		for (var i = 0, promise; i < promises.length; i++) {
			promise = promises[i];

			if (promise && typeof promise.then === 'function') {
				promise.then(resolve, reject);
			} else {
				resolve(promise);
			}
		}
	});
};

Promise.resolve = function (value) {
	if (value && typeof value === 'object' && value.constructor === Promise) {
		return value;
	}

	return new Promise(function (resolve) {
		resolve(value);
	});
};

Promise.reject = function (reason) {
	return new Promise(function (resolve, reject) {
		reject(reason);
	});
};

module.exports = Promise;


/***/ }),

/***/ 98098:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const path = __nccwpck_require__(85622);
const findUp = __nccwpck_require__(9486);

const pkgDir = async cwd => {
	const filePath = await findUp('package.json', {cwd});
	return filePath && path.dirname(filePath);
};

module.exports = pkgDir;
// TODO: Remove this for the next major release
module.exports.default = pkgDir;

module.exports.sync = cwd => {
	const filePath = findUp.sync('package.json', {cwd});
	return filePath && path.dirname(filePath);
};


/***/ }),

/***/ 90680:
/***/ (function(module) {

(function (root) {

  // Store setTimeout reference so promise-polyfill will be unaffected by
  // other code modifying setTimeout (like sinon.useFakeTimers())
  var setTimeoutFunc = setTimeout;

  function noop() {}
  
  // Polyfill for Function.prototype.bind
  function bind(fn, thisArg) {
    return function () {
      fn.apply(thisArg, arguments);
    };
  }

  function Promise(fn) {
    if (!(this instanceof Promise)) throw new TypeError('Promises must be constructed via new');
    if (typeof fn !== 'function') throw new TypeError('not a function');
    this._state = 0;
    this._handled = false;
    this._value = undefined;
    this._deferreds = [];

    doResolve(fn, this);
  }

  function handle(self, deferred) {
    while (self._state === 3) {
      self = self._value;
    }
    if (self._state === 0) {
      self._deferreds.push(deferred);
      return;
    }
    self._handled = true;
    Promise._immediateFn(function () {
      var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
      if (cb === null) {
        (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
        return;
      }
      var ret;
      try {
        ret = cb(self._value);
      } catch (e) {
        reject(deferred.promise, e);
        return;
      }
      resolve(deferred.promise, ret);
    });
  }

  function resolve(self, newValue) {
    try {
      // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
      if (newValue === self) throw new TypeError('A promise cannot be resolved with itself.');
      if (newValue && (typeof newValue === 'object' || typeof newValue === 'function')) {
        var then = newValue.then;
        if (newValue instanceof Promise) {
          self._state = 3;
          self._value = newValue;
          finale(self);
          return;
        } else if (typeof then === 'function') {
          doResolve(bind(then, newValue), self);
          return;
        }
      }
      self._state = 1;
      self._value = newValue;
      finale(self);
    } catch (e) {
      reject(self, e);
    }
  }

  function reject(self, newValue) {
    self._state = 2;
    self._value = newValue;
    finale(self);
  }

  function finale(self) {
    if (self._state === 2 && self._deferreds.length === 0) {
      Promise._immediateFn(function() {
        if (!self._handled) {
          Promise._unhandledRejectionFn(self._value);
        }
      });
    }

    for (var i = 0, len = self._deferreds.length; i < len; i++) {
      handle(self, self._deferreds[i]);
    }
    self._deferreds = null;
  }

  function Handler(onFulfilled, onRejected, promise) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.promise = promise;
  }

  /**
   * Take a potentially misbehaving resolver function and make sure
   * onFulfilled and onRejected are only called once.
   *
   * Makes no guarantees about asynchrony.
   */
  function doResolve(fn, self) {
    var done = false;
    try {
      fn(function (value) {
        if (done) return;
        done = true;
        resolve(self, value);
      }, function (reason) {
        if (done) return;
        done = true;
        reject(self, reason);
      });
    } catch (ex) {
      if (done) return;
      done = true;
      reject(self, ex);
    }
  }

  Promise.prototype['catch'] = function (onRejected) {
    return this.then(null, onRejected);
  };

  Promise.prototype.then = function (onFulfilled, onRejected) {
    var prom = new (this.constructor)(noop);

    handle(this, new Handler(onFulfilled, onRejected, prom));
    return prom;
  };

  Promise.all = function (arr) {
    return new Promise(function (resolve, reject) {
      if (!arr || typeof arr.length === 'undefined') throw new TypeError('Promise.all accepts an array');
      var args = Array.prototype.slice.call(arr);
      if (args.length === 0) return resolve([]);
      var remaining = args.length;

      function res(i, val) {
        try {
          if (val && (typeof val === 'object' || typeof val === 'function')) {
            var then = val.then;
            if (typeof then === 'function') {
              then.call(val, function (val) {
                res(i, val);
              }, reject);
              return;
            }
          }
          args[i] = val;
          if (--remaining === 0) {
            resolve(args);
          }
        } catch (ex) {
          reject(ex);
        }
      }

      for (var i = 0; i < args.length; i++) {
        res(i, args[i]);
      }
    });
  };

  Promise.resolve = function (value) {
    if (value && typeof value === 'object' && value.constructor === Promise) {
      return value;
    }

    return new Promise(function (resolve) {
      resolve(value);
    });
  };

  Promise.reject = function (value) {
    return new Promise(function (resolve, reject) {
      reject(value);
    });
  };

  Promise.race = function (values) {
    return new Promise(function (resolve, reject) {
      for (var i = 0, len = values.length; i < len; i++) {
        values[i].then(resolve, reject);
      }
    });
  };

  // Use polyfill for setImmediate for performance gains
  Promise._immediateFn = (typeof setImmediate === 'function' && function (fn) { setImmediate(fn); }) ||
    function (fn) {
      setTimeoutFunc(fn, 0);
    };

  Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
    if (typeof console !== 'undefined' && console) {
      console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
    }
  };

  /**
   * Set the immediate function to execute callbacks
   * @param fn {function} Function to execute
   * @deprecated
   */
  Promise._setImmediateFn = function _setImmediateFn(fn) {
    Promise._immediateFn = fn;
  };

  /**
   * Change the function to execute on unhandled rejection
   * @param {function} fn Function to execute on unhandled rejection
   * @deprecated
   */
  Promise._setUnhandledRejectionFn = function _setUnhandledRejectionFn(fn) {
    Promise._unhandledRejectionFn = fn;
  };
  
  if ( true && module.exports) {
    module.exports = Promise;
  } else if (!root.Promise) {
    root.Promise = Promise;
  }

})(this);


/***/ }),

/***/ 3541:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

if (process.env.npm_package_name === 'pseudomap' &&
    process.env.npm_lifecycle_script === 'test')
  process.env.TEST_PSEUDOMAP = 'true'

if (typeof Map === 'function' && !process.env.TEST_PSEUDOMAP) {
  module.exports = Map
} else {
  module.exports = __nccwpck_require__(57967)
}


/***/ }),

/***/ 57967:
/***/ ((module) => {

var hasOwnProperty = Object.prototype.hasOwnProperty

module.exports = PseudoMap

function PseudoMap (set) {
  if (!(this instanceof PseudoMap)) // whyyyyyyy
    throw new TypeError("Constructor PseudoMap requires 'new'")

  this.clear()

  if (set) {
    if ((set instanceof PseudoMap) ||
        (typeof Map === 'function' && set instanceof Map))
      set.forEach(function (value, key) {
        this.set(key, value)
      }, this)
    else if (Array.isArray(set))
      set.forEach(function (kv) {
        this.set(kv[0], kv[1])
      }, this)
    else
      throw new TypeError('invalid argument')
  }
}

PseudoMap.prototype.forEach = function (fn, thisp) {
  thisp = thisp || this
  Object.keys(this._data).forEach(function (k) {
    if (k !== 'size')
      fn.call(thisp, this._data[k].value, this._data[k].key)
  }, this)
}

PseudoMap.prototype.has = function (k) {
  return !!find(this._data, k)
}

PseudoMap.prototype.get = function (k) {
  var res = find(this._data, k)
  return res && res.value
}

PseudoMap.prototype.set = function (k, v) {
  set(this._data, k, v)
}

PseudoMap.prototype.delete = function (k) {
  var res = find(this._data, k)
  if (res) {
    delete this._data[res._index]
    this._data.size--
  }
}

PseudoMap.prototype.clear = function () {
  var data = Object.create(null)
  data.size = 0

  Object.defineProperty(this, '_data', {
    value: data,
    enumerable: false,
    configurable: true,
    writable: false
  })
}

Object.defineProperty(PseudoMap.prototype, 'size', {
  get: function () {
    return this._data.size
  },
  set: function (n) {},
  enumerable: true,
  configurable: true
})

PseudoMap.prototype.values =
PseudoMap.prototype.keys =
PseudoMap.prototype.entries = function () {
  throw new Error('iterators are not implemented in this version')
}

// Either identical, or both NaN
function same (a, b) {
  return a === b || a !== a && b !== b
}

function Entry (k, v, i) {
  this.key = k
  this.value = v
  this._index = i
}

function find (data, k) {
  for (var i = 0, s = '_' + k, key = s;
       hasOwnProperty.call(data, key);
       key = s + i++) {
    if (same(data[key].key, k))
      return data[key]
  }
}

function set (data, k, v) {
  for (var i = 0, s = '_' + k, key = s;
       hasOwnProperty.call(data, key);
       key = s + i++) {
    if (same(data[key].key, k)) {
      data[key].value = v
      return
    }
  }
  data.size++
  data[key] = new Entry(k, v, key)
}


/***/ }),

/***/ 18341:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var once = __nccwpck_require__(1223)
var eos = __nccwpck_require__(81205)
var fs = __nccwpck_require__(35747) // we only need fs to get the ReadStream and WriteStream prototypes

var noop = function () {}
var ancient = /^v?\.0/.test(process.version)

var isFn = function (fn) {
  return typeof fn === 'function'
}

var isFS = function (stream) {
  if (!ancient) return false // newer node version do not need to care about fs is a special way
  if (!fs) return false // browser
  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)
}

var isRequest = function (stream) {
  return stream.setHeader && isFn(stream.abort)
}

var destroyer = function (stream, reading, writing, callback) {
  callback = once(callback)

  var closed = false
  stream.on('close', function () {
    closed = true
  })

  eos(stream, {readable: reading, writable: writing}, function (err) {
    if (err) return callback(err)
    closed = true
    callback()
  })

  var destroyed = false
  return function (err) {
    if (closed) return
    if (destroyed) return
    destroyed = true

    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks
    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want

    if (isFn(stream.destroy)) return stream.destroy()

    callback(err || new Error('stream was destroyed'))
  }
}

var call = function (fn) {
  fn()
}

var pipe = function (from, to) {
  return from.pipe(to)
}

var pump = function () {
  var streams = Array.prototype.slice.call(arguments)
  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop

  if (Array.isArray(streams[0])) streams = streams[0]
  if (streams.length < 2) throw new Error('pump requires two streams per minimum')

  var error
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1
    var writing = i > 0
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err
      if (err) destroys.forEach(call)
      if (reading) return
      destroys.forEach(call)
      callback(error)
    })
  })

  return streams.reduce(pipe)
}

module.exports = pump


/***/ }),

/***/ 89795:
/***/ ((module) => {

/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
let promise

module.exports = typeof queueMicrotask === 'function'
  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)
  // reuse resolved promise, and allocate it lazily
  : cb => (promise || (promise = Promise.resolve()))
    .then(cb)
    .catch(err => setTimeout(() => { throw err }, 0))


/***/ }),

/***/ 49273:
/***/ ((module) => {

"use strict";


class QuickLRU {
	constructor(options = {}) {
		if (!(options.maxSize && options.maxSize > 0)) {
			throw new TypeError('`maxSize` must be a number greater than 0');
		}

		this.maxSize = options.maxSize;
		this.onEviction = options.onEviction;
		this.cache = new Map();
		this.oldCache = new Map();
		this._size = 0;
	}

	_set(key, value) {
		this.cache.set(key, value);
		this._size++;

		if (this._size >= this.maxSize) {
			this._size = 0;

			if (typeof this.onEviction === 'function') {
				for (const [key, value] of this.oldCache.entries()) {
					this.onEviction(key, value);
				}
			}

			this.oldCache = this.cache;
			this.cache = new Map();
		}
	}

	get(key) {
		if (this.cache.has(key)) {
			return this.cache.get(key);
		}

		if (this.oldCache.has(key)) {
			const value = this.oldCache.get(key);
			this.oldCache.delete(key);
			this._set(key, value);
			return value;
		}
	}

	set(key, value) {
		if (this.cache.has(key)) {
			this.cache.set(key, value);
		} else {
			this._set(key, value);
		}

		return this;
	}

	has(key) {
		return this.cache.has(key) || this.oldCache.has(key);
	}

	peek(key) {
		if (this.cache.has(key)) {
			return this.cache.get(key);
		}

		if (this.oldCache.has(key)) {
			return this.oldCache.get(key);
		}
	}

	delete(key) {
		const deleted = this.cache.delete(key);
		if (deleted) {
			this._size--;
		}

		return this.oldCache.delete(key) || deleted;
	}

	clear() {
		this.cache.clear();
		this.oldCache.clear();
		this._size = 0;
	}

	* keys() {
		for (const [key] of this) {
			yield key;
		}
	}

	* values() {
		for (const [, value] of this) {
			yield value;
		}
	}

	* [Symbol.iterator]() {
		for (const item of this.cache) {
			yield item;
		}

		for (const item of this.oldCache) {
			const [key] = item;
			if (!this.cache.has(key)) {
				yield item;
			}
		}
	}

	get size() {
		let oldCacheSize = 0;
		for (const key of this.oldCache.keys()) {
			if (!this.cache.has(key)) {
				oldCacheSize++;
			}
		}

		return Math.min(this._size + oldCacheSize, this.maxSize);
	}
}

module.exports = QuickLRU;


/***/ }),

/***/ 27312:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var path = __nccwpck_require__(85622);

module.exports = {
    regex: {
        position: 0,
        string: true,
        describe: "JavaScript regex for searching file e.g. '\\d+'",
        demandOption: true
    },
    paths: {
        position: 1,
        array: true,
        describe: "File or directory to search",
        default: ["*"]
    },
    stdin: {
        abbr: 'z',
        boolean: true,
        describe: 'Use standard in for input'
    },
    recursive: {
        abbr: 'r',
        boolean: true,
        describe: "Recursively search directories"
    },
    ignoreCase: {
        abbr: 'i',
        boolean: true,
        describe: "Ignore case when searching"
    },
    multiline: {
        abbr: 'm',
        boolean: true,
        describe: "Match line by line",
        default: true
    },
    include: {
        string: true,
        describe: "Only search in these files, e.g. '*.js,*.foo'"
    },
    exclude: {
        string: true,
        describe: "Don't search in these files, e.g. '*.min.js'"
    },
    'exclude-list': {
        string: true,
        describe: "Path of file containing a new-line separated list of files to ignore",
        default: __nccwpck_require__.ab + "defaultignore",
        hidden: true
    },
    n: {
        number: true,
        describe: "Limit the number of lines to preview"
    },
    count: {
        abbr: 'c',
        boolean: true,
        describe: 'Display count of occurances in each file'
    },
    quiet: {
        abbr: 'q',
        boolean: true,
        describe: "Just print the names of the files matches occured in (faster)"
    },
    color: {
        string: true,
        describe: "Highlight color",
        choices: ['red', 'green', 'blue', 'cyan', 'yellow', 'magenta', 'bold', 'italic'],
        default: 'cyan'
    },
    fileColor: {
        string: true,
        describe: "Highlight matching file's name in color",
        choices: ['red', 'green', 'blue', 'cyan', 'yellow', 'magenta', 'bold', 'italic'],
        default: 'yellow'
    },
    async: {
        abbr: 'a',
        boolean: true,
        describe: "Asynchronously read/write files in directory (faster)",
        hidden: true
    },
    noColor: {
        boolean: true,
        describe: "Disable color output"
    }
};


/***/ }),

/***/ 16104:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const escapeStringRegexp = __nccwpck_require__(98691);
const ansiStyles = __nccwpck_require__(52068);
const stdoutColor = __nccwpck_require__(59318).stdout;

const template = __nccwpck_require__(37684);

const isSimpleWindowsTerm = process.platform === 'win32' && !(process.env.TERM || '').toLowerCase().startsWith('xterm');

// `supportsColor.level` → `ansiStyles.color[name]` mapping
const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m'];

// `color-convert` models to exclude from the Chalk API due to conflicts and such
const skipModels = new Set(['gray']);

const styles = Object.create(null);

function applyOptions(obj, options) {
	options = options || {};

	// Detect level if not set manually
	const scLevel = stdoutColor ? stdoutColor.level : 0;
	obj.level = options.level === undefined ? scLevel : options.level;
	obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;
}

function Chalk(options) {
	// We check for this.template here since calling `chalk.constructor()`
	// by itself will have a `this` of a previously constructed chalk object
	if (!this || !(this instanceof Chalk) || this.template) {
		const chalk = {};
		applyOptions(chalk, options);

		chalk.template = function () {
			const args = [].slice.call(arguments);
			return chalkTag.apply(null, [chalk.template].concat(args));
		};

		Object.setPrototypeOf(chalk, Chalk.prototype);
		Object.setPrototypeOf(chalk.template, chalk);

		chalk.template.constructor = Chalk;

		return chalk.template;
	}

	applyOptions(this, options);
}

// Use bright blue on Windows as the normal blue color is illegible
if (isSimpleWindowsTerm) {
	ansiStyles.blue.open = '\u001B[94m';
}

for (const key of Object.keys(ansiStyles)) {
	ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');

	styles[key] = {
		get() {
			const codes = ansiStyles[key];
			return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);
		}
	};
}

styles.visible = {
	get() {
		return build.call(this, this._styles || [], true, 'visible');
	}
};

ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');
for (const model of Object.keys(ansiStyles.color.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	styles[model] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.color.close,
					closeRe: ansiStyles.color.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');
for (const model of Object.keys(ansiStyles.bgColor.ansi)) {
	if (skipModels.has(model)) {
		continue;
	}

	const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);
	styles[bgModel] = {
		get() {
			const level = this.level;
			return function () {
				const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);
				const codes = {
					open,
					close: ansiStyles.bgColor.close,
					closeRe: ansiStyles.bgColor.closeRe
				};
				return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
			};
		}
	};
}

const proto = Object.defineProperties(() => {}, styles);

function build(_styles, _empty, key) {
	const builder = function () {
		return applyStyle.apply(builder, arguments);
	};

	builder._styles = _styles;
	builder._empty = _empty;

	const self = this;

	Object.defineProperty(builder, 'level', {
		enumerable: true,
		get() {
			return self.level;
		},
		set(level) {
			self.level = level;
		}
	});

	Object.defineProperty(builder, 'enabled', {
		enumerable: true,
		get() {
			return self.enabled;
		},
		set(enabled) {
			self.enabled = enabled;
		}
	});

	// See below for fix regarding invisible grey/dim combination on Windows
	builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey';

	// `__proto__` is used because we must return a function, but there is
	// no way to create a function with a different prototype
	builder.__proto__ = proto; // eslint-disable-line no-proto

	return builder;
}

function applyStyle() {
	// Support varags, but simply cast to string in case there's only one arg
	const args = arguments;
	const argsLen = args.length;
	let str = String(arguments[0]);

	if (argsLen === 0) {
		return '';
	}

	if (argsLen > 1) {
		// Don't slice `arguments`, it prevents V8 optimizations
		for (let a = 1; a < argsLen; a++) {
			str += ' ' + args[a];
		}
	}

	if (!this.enabled || this.level <= 0 || !str) {
		return this._empty ? '' : str;
	}

	// Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
	// see https://github.com/chalk/chalk/issues/58
	// If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.
	const originalDim = ansiStyles.dim.open;
	if (isSimpleWindowsTerm && this.hasGrey) {
		ansiStyles.dim.open = '';
	}

	for (const code of this._styles.slice().reverse()) {
		// Replace any instances already present with a re-opening code
		// otherwise only the part of the string until said closing code
		// will be colored, and the rest will simply be 'plain'.
		str = code.open + str.replace(code.closeRe, code.open) + code.close;

		// Close the styling before a linebreak and reopen
		// after next line to fix a bleed issue on macOS
		// https://github.com/chalk/chalk/pull/92
		str = str.replace(/\r?\n/g, `${code.close}$&${code.open}`);
	}

	// Reset the original `dim` if we changed it to work around the Windows dimmed gray issue
	ansiStyles.dim.open = originalDim;

	return str;
}

function chalkTag(chalk, strings) {
	if (!Array.isArray(strings)) {
		// If chalk() was called by itself or with a string,
		// return the string itself as a string.
		return [].slice.call(arguments, 1).join(' ');
	}

	const args = [].slice.call(arguments, 2);
	const parts = [strings.raw[0]];

	for (let i = 1; i < strings.length; i++) {
		parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));
		parts.push(String(strings.raw[i]));
	}

	return template(chalk, parts.join(''));
}

Object.defineProperties(Chalk.prototype, styles);

module.exports = Chalk(); // eslint-disable-line new-cap
module.exports.supportsColor = stdoutColor;
module.exports.default = module.exports; // For TypeScript


/***/ }),

/***/ 37684:
/***/ ((module) => {

"use strict";

const TEMPLATE_REGEX = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
const STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
const STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
const ESCAPE_REGEX = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;

const ESCAPES = new Map([
	['n', '\n'],
	['r', '\r'],
	['t', '\t'],
	['b', '\b'],
	['f', '\f'],
	['v', '\v'],
	['0', '\0'],
	['\\', '\\'],
	['e', '\u001B'],
	['a', '\u0007']
]);

function unescape(c) {
	if ((c[0] === 'u' && c.length === 5) || (c[0] === 'x' && c.length === 3)) {
		return String.fromCharCode(parseInt(c.slice(1), 16));
	}

	return ESCAPES.get(c) || c;
}

function parseArguments(name, args) {
	const results = [];
	const chunks = args.trim().split(/\s*,\s*/g);
	let matches;

	for (const chunk of chunks) {
		if (!isNaN(chunk)) {
			results.push(Number(chunk));
		} else if ((matches = chunk.match(STRING_REGEX))) {
			results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));
		} else {
			throw new Error(`Invalid Chalk template style argument: ${chunk} (in style '${name}')`);
		}
	}

	return results;
}

function parseStyle(style) {
	STYLE_REGEX.lastIndex = 0;

	const results = [];
	let matches;

	while ((matches = STYLE_REGEX.exec(style)) !== null) {
		const name = matches[1];

		if (matches[2]) {
			const args = parseArguments(name, matches[2]);
			results.push([name].concat(args));
		} else {
			results.push([name]);
		}
	}

	return results;
}

function buildStyle(chalk, styles) {
	const enabled = {};

	for (const layer of styles) {
		for (const style of layer.styles) {
			enabled[style[0]] = layer.inverse ? null : style.slice(1);
		}
	}

	let current = chalk;
	for (const styleName of Object.keys(enabled)) {
		if (Array.isArray(enabled[styleName])) {
			if (!(styleName in current)) {
				throw new Error(`Unknown Chalk style: ${styleName}`);
			}

			if (enabled[styleName].length > 0) {
				current = current[styleName].apply(current, enabled[styleName]);
			} else {
				current = current[styleName];
			}
		}
	}

	return current;
}

module.exports = (chalk, tmp) => {
	const styles = [];
	const chunks = [];
	let chunk = [];

	// eslint-disable-next-line max-params
	tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {
		if (escapeChar) {
			chunk.push(unescape(escapeChar));
		} else if (style) {
			const str = chunk.join('');
			chunk = [];
			chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));
			styles.push({inverse, styles: parseStyle(style)});
		} else if (close) {
			if (styles.length === 0) {
				throw new Error('Found extraneous } in Chalk template literal');
			}

			chunks.push(buildStyle(chalk, styles)(chunk.join('')));
			chunk = [];
			styles.pop();
		} else {
			chunk.push(chr);
		}
	});

	chunks.push(chunk.join(''));

	if (styles.length > 0) {
		const errMsg = `Chalk template literal is missing ${styles.length} closing bracket${styles.length === 1 ? '' : 's'} (\`}\`)`;
		throw new Error(errMsg);
	}

	return chunks.join('');
};


/***/ }),

/***/ 82617:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(35747),
    path = __nccwpck_require__(85622),
    chalk = __nccwpck_require__(16104),
    minimatch = __nccwpck_require__(83973),
    sharedOptions = __nccwpck_require__(27312);

module.exports = function(options) {
    var matched = [];
    // If the path is the same as the default and the recursive option was not
    // specified, search recursively under the current directory as a
    // convenience.
    if (options.paths.length === 1 &&
        options.paths[0] === sharedOptions.paths.default[0] &&
        !options.hasOwnProperty('recursive')) {
        options.paths = ['.'];
    }

    var lineCount = 0,
        limit = 400; // chars per line

    if (options.r) {
        options.recursive = true;
    }

    if (!options.color) {
        options.color = "cyan";
    }

    var flags = "g"; // global multiline
    if (options.ignoreCase) {
        flags += "i";
    }
    if (options.multiline) {
        flags += "m";
    }

    var regex;
    if (options.regex instanceof RegExp) {
        regex = options.regex;
    }
    else {
        regex = new RegExp(options.regex, flags);
    }
    var canReplace = !options.preview && options.replacement !== undefined;

    var includes;
    if (options.include) {
        includes = options.include.split(",");
    }
    var excludes = [];
    if (options.exclude) {
        excludes = options.exclude.split(",");
    }
    var ignoreFile = options.excludeList || __nccwpck_require__.ab + "defaultignore";
    var ignores = fs.readFileSync(ignoreFile, "utf-8").split("\n");
    excludes = excludes.concat(ignores);

    var replaceFunc;
    if (options.funcFile) {
        eval('replaceFunc = ' + fs.readFileSync(options.funcFile, "utf-8"));
    }

    if(options.z) {
          process.stdin.resume();
          _input = "";
          process.stdin.on("data", function (input) {
            _input += input;
          });
          
          process.stdin.on("end", function () {
              const text = replacizeText(_input);
              process.stdout.write(text);
          });
    } else {
        for (var i = 0; i < options.paths.length; i++) {
            if (options.async) {
                replacizeFile(options.paths[i]);
            }
            else {
                replacizeFileSync(options.paths[i]);
            }
        }
    }

    return matched;

    function canSearch(file, isFile) {
      var inIncludes = includes && includes.some(function(include) {
          return minimatch(file, include, { matchBase: true });
      })
      var inExcludes = excludes.some(function(exclude) {
          return minimatch(file, exclude, { matchBase: true });
      })

      return ((!includes || !isFile || inIncludes) && (!excludes || !inExcludes));
    }

    function replacizeFile(file) {
      fs.lstat(file, function(err, stats) {
          if (err) throw err;

          if (stats.isSymbolicLink()) {
              // don't follow symbolic links for now
              return;
          }
          var isFile = stats.isFile();
          if (!canSearch(file, isFile)) {
              return;
          }
          if (isFile) {
              fs.readFile(file, "utf-8", function(err, text) {
                  if (err) {
                      if (err.code == 'EMFILE') {
                          console.log('Too many files, try running `replace` without --async');
                          process.exit(1);
                      }
                      throw err;
                  }

                  text = replacizeText(text, file);
                  if (canReplace && text !== null) {
                      fs.writeFile(file, text, function(err) {
                          if (err) throw err;
                      });
                  }
              });
          }
          else if (stats.isDirectory() && options.recursive) {
              fs.readdir(file, function(err, files) {
                  if (err) throw err;
                  for (var i = 0; i < files.length; i++) {
                      replacizeFile(path.join(file, files[i]));
                  }
              });
          }
       });
    }

    function replacizeFileSync(file) {
      var stats = fs.lstatSync(file);
      if (stats.isSymbolicLink()) {
          // don't follow symbolic links for now
          return;
      }
      var isFile = stats.isFile();
      if (!canSearch(file, isFile)) {
          return;
      }
      if (isFile) {
          var text = fs.readFileSync(file, "utf-8");

          var replacizedText = replacizeText(text, file);

          if (replacizedText !== null) {
              if (canReplace) {
                  fs.writeFileSync(file, replacizedText);
              } else {
                  matched.push({ text, path: file });
              }
          }
      }
      else if (stats.isDirectory() && options.recursive) {
          var files = fs.readdirSync(file);
          for (var i = 0; i < files.length; i++) {
              replacizeFileSync(path.join(file, files[i]));
          }
      }
    }

    function replacizeText(text, file) {
        var match = text.match(regex);
        if (!match) {
            return null;
        }

        if (!options.silent && file) {
            var printout = options.noColor ? file : options.fileColor ? chalk[options.fileColor](file) : file;
            if (options.count) {
                var count = " (" + match.length + ")";
                count = options.noColor ? count : chalk.grey(count);
                printout += count;
            }
            console.log(printout);
        }
        if (!options.silent && !options.quiet
           && !(lineCount > options.maxLines)
           && options.multiline) {
            var lines = text.split("\n");
            for (var i = 0; i < lines.length; i++) {
                var line = lines[i];
                if (line.match(regex)) {
                    if (++lineCount > options.maxLines) {
                        break;
                    }
                    var replacement = options.replacement || "$&";
                    if (!options.noColor) {
                      replacement = chalk[options.color](replacement);
                    }
                    line = line.replace(regex, replaceFunc || replacement);
                    // only console log if file not stdin
                    file && console.log(" " + (i + 1) + ": " + line.slice(0, limit));
                }
            }
        }
        if (canReplace) {
            return text.replace(regex, replaceFunc || options.replacement);
        }
    }
}


/***/ }),

/***/ 46624:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const tls = __nccwpck_require__(4016);

module.exports = (options = {}, connect = tls.connect) => new Promise((resolve, reject) => {
	let timeout = false;

	let socket;

	const callback = async () => {
		await socketPromise;

		socket.off('timeout', onTimeout);
		socket.off('error', reject);

		if (options.resolveSocket) {
			resolve({alpnProtocol: socket.alpnProtocol, socket, timeout});

			if (timeout) {
				await Promise.resolve();
				socket.emit('timeout');
			}
		} else {
			socket.destroy();
			resolve({alpnProtocol: socket.alpnProtocol, timeout});
		}
	};

	const onTimeout = async () => {
		timeout = true;
		callback();
	};

	const socketPromise = (async () => {
		try {
			socket = await connect(options, callback);

			socket.on('error', reject);
			socket.once('timeout', onTimeout);
		} catch (error) {
			reject(error);
		}
	})();
});


/***/ }),

/***/ 9004:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const Readable = __nccwpck_require__(92413).Readable;
const lowercaseKeys = __nccwpck_require__(9662);

class Response extends Readable {
	constructor(statusCode, headers, body, url) {
		if (typeof statusCode !== 'number') {
			throw new TypeError('Argument `statusCode` should be a number');
		}
		if (typeof headers !== 'object') {
			throw new TypeError('Argument `headers` should be an object');
		}
		if (!(body instanceof Buffer)) {
			throw new TypeError('Argument `body` should be a buffer');
		}
		if (typeof url !== 'string') {
			throw new TypeError('Argument `url` should be a string');
		}

		super();
		this.statusCode = statusCode;
		this.headers = lowercaseKeys(headers);
		this.body = body;
		this.url = url;
	}

	_read() {
		this.push(this.body);
		this.push(null);
	}
}

module.exports = Response;


/***/ }),

/***/ 32113:
/***/ ((module) => {

"use strict";


function reusify (Constructor) {
  var head = new Constructor()
  var tail = head

  function get () {
    var current = head

    if (current.next) {
      head = current.next
    } else {
      head = new Constructor()
      tail = head
    }

    current.next = null

    return current
  }

  function release (obj) {
    tail.next = obj
    tail = obj
  }

  return {
    get: get,
    release: release
  }
}

module.exports = reusify


/***/ }),

/***/ 75288:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */
module.exports = runParallel

const queueMicrotask = __nccwpck_require__(89795)

function runParallel (tasks, cb) {
  let results, pending, keys
  let isSync = true

  if (Array.isArray(tasks)) {
    results = []
    pending = tasks.length
  } else {
    keys = Object.keys(tasks)
    results = {}
    pending = keys.length
  }

  function done (err) {
    function end () {
      if (cb) cb(err, results)
      cb = null
    }
    if (isSync) queueMicrotask(end)
    else end()
  }

  function each (i, err, result) {
    results[i] = result
    if (--pending === 0 || err) {
      done(err)
    }
  }

  if (!pending) {
    // empty
    done(null)
  } else if (keys) {
    // object
    keys.forEach(function (key) {
      tasks[key](function (err, result) { each(key, err, result) })
    })
  } else {
    // array
    tasks.forEach(function (task, i) {
      task(function (err, result) { each(i, err, result) })
    })
  }

  isSync = false
}


/***/ }),

/***/ 91532:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const ANY = Symbol('SemVer ANY')
// hoisted class for cyclic dependency
class Comparator {
  static get ANY () {
    return ANY
  }
  constructor (comp, options) {
    options = parseOptions(options)

    if (comp instanceof Comparator) {
      if (comp.loose === !!options.loose) {
        return comp
      } else {
        comp = comp.value
      }
    }

    debug('comparator', comp, options)
    this.options = options
    this.loose = !!options.loose
    this.parse(comp)

    if (this.semver === ANY) {
      this.value = ''
    } else {
      this.value = this.operator + this.semver.version
    }

    debug('comp', this)
  }

  parse (comp) {
    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
    const m = comp.match(r)

    if (!m) {
      throw new TypeError(`Invalid comparator: ${comp}`)
    }

    this.operator = m[1] !== undefined ? m[1] : ''
    if (this.operator === '=') {
      this.operator = ''
    }

    // if it literally is just '>' or '' then allow anything.
    if (!m[2]) {
      this.semver = ANY
    } else {
      this.semver = new SemVer(m[2], this.options.loose)
    }
  }

  toString () {
    return this.value
  }

  test (version) {
    debug('Comparator.test', version, this.options.loose)

    if (this.semver === ANY || version === ANY) {
      return true
    }

    if (typeof version === 'string') {
      try {
        version = new SemVer(version, this.options)
      } catch (er) {
        return false
      }
    }

    return cmp(version, this.operator, this.semver, this.options)
  }

  intersects (comp, options) {
    if (!(comp instanceof Comparator)) {
      throw new TypeError('a Comparator is required')
    }

    if (!options || typeof options !== 'object') {
      options = {
        loose: !!options,
        includePrerelease: false
      }
    }

    if (this.operator === '') {
      if (this.value === '') {
        return true
      }
      return new Range(comp.value, options).test(this.value)
    } else if (comp.operator === '') {
      if (comp.value === '') {
        return true
      }
      return new Range(this.value, options).test(comp.semver)
    }

    const sameDirectionIncreasing =
      (this.operator === '>=' || this.operator === '>') &&
      (comp.operator === '>=' || comp.operator === '>')
    const sameDirectionDecreasing =
      (this.operator === '<=' || this.operator === '<') &&
      (comp.operator === '<=' || comp.operator === '<')
    const sameSemVer = this.semver.version === comp.semver.version
    const differentDirectionsInclusive =
      (this.operator === '>=' || this.operator === '<=') &&
      (comp.operator === '>=' || comp.operator === '<=')
    const oppositeDirectionsLessThan =
      cmp(this.semver, '<', comp.semver, options) &&
      (this.operator === '>=' || this.operator === '>') &&
        (comp.operator === '<=' || comp.operator === '<')
    const oppositeDirectionsGreaterThan =
      cmp(this.semver, '>', comp.semver, options) &&
      (this.operator === '<=' || this.operator === '<') &&
        (comp.operator === '>=' || comp.operator === '>')

    return (
      sameDirectionIncreasing ||
      sameDirectionDecreasing ||
      (sameSemVer && differentDirectionsInclusive) ||
      oppositeDirectionsLessThan ||
      oppositeDirectionsGreaterThan
    )
  }
}

module.exports = Comparator

const parseOptions = __nccwpck_require__(40785)
const {re, t} = __nccwpck_require__(9523)
const cmp = __nccwpck_require__(75098)
const debug = __nccwpck_require__(50427)
const SemVer = __nccwpck_require__(48088)
const Range = __nccwpck_require__(9828)


/***/ }),

/***/ 9828:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// hoisted class for cyclic dependency
class Range {
  constructor (range, options) {
    options = parseOptions(options)

    if (range instanceof Range) {
      if (
        range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease
      ) {
        return range
      } else {
        return new Range(range.raw, options)
      }
    }

    if (range instanceof Comparator) {
      // just put it in the set and return
      this.raw = range.value
      this.set = [[range]]
      this.format()
      return this
    }

    this.options = options
    this.loose = !!options.loose
    this.includePrerelease = !!options.includePrerelease

    // First, split based on boolean or ||
    this.raw = range
    this.set = range
      .split(/\s*\|\|\s*/)
      // map the range to a 2d array of comparators
      .map(range => this.parseRange(range.trim()))
      // throw out any comparator lists that are empty
      // this generally means that it was not a valid range, which is allowed
      // in loose mode, but will still throw if the WHOLE range is invalid.
      .filter(c => c.length)

    if (!this.set.length) {
      throw new TypeError(`Invalid SemVer Range: ${range}`)
    }

    // if we have any that are not the null set, throw out null sets.
    if (this.set.length > 1) {
      // keep the first one, in case they're all null sets
      const first = this.set[0]
      this.set = this.set.filter(c => !isNullSet(c[0]))
      if (this.set.length === 0)
        this.set = [first]
      else if (this.set.length > 1) {
        // if we have any that are *, then the range is just *
        for (const c of this.set) {
          if (c.length === 1 && isAny(c[0])) {
            this.set = [c]
            break
          }
        }
      }
    }

    this.format()
  }

  format () {
    this.range = this.set
      .map((comps) => {
        return comps.join(' ').trim()
      })
      .join('||')
      .trim()
    return this.range
  }

  toString () {
    return this.range
  }

  parseRange (range) {
    range = range.trim()

    // memoize range parsing for performance.
    // this is a very hot path, and fully deterministic.
    const memoOpts = Object.keys(this.options).join(',')
    const memoKey = `parseRange:${memoOpts}:${range}`
    const cached = cache.get(memoKey)
    if (cached)
      return cached

    const loose = this.options.loose
    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]
    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))
    debug('hyphen replace', range)
    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)
    debug('comparator trim', range, re[t.COMPARATORTRIM])

    // `~ 1.2.3` => `~1.2.3`
    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)

    // `^ 1.2.3` => `^1.2.3`
    range = range.replace(re[t.CARETTRIM], caretTrimReplace)

    // normalize spaces
    range = range.split(/\s+/).join(' ')

    // At this point, the range is completely trimmed and
    // ready to be split into comparators.

    const compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]
    const rangeList = range
      .split(' ')
      .map(comp => parseComparator(comp, this.options))
      .join(' ')
      .split(/\s+/)
      // >=0.0.0 is equivalent to *
      .map(comp => replaceGTE0(comp, this.options))
      // in loose mode, throw out any that are not valid comparators
      .filter(this.options.loose ? comp => !!comp.match(compRe) : () => true)
      .map(comp => new Comparator(comp, this.options))

    // if any comparators are the null set, then replace with JUST null set
    // if more than one comparator, remove any * comparators
    // also, don't include the same comparator more than once
    const l = rangeList.length
    const rangeMap = new Map()
    for (const comp of rangeList) {
      if (isNullSet(comp))
        return [comp]
      rangeMap.set(comp.value, comp)
    }
    if (rangeMap.size > 1 && rangeMap.has(''))
      rangeMap.delete('')

    const result = [...rangeMap.values()]
    cache.set(memoKey, result)
    return result
  }

  intersects (range, options) {
    if (!(range instanceof Range)) {
      throw new TypeError('a Range is required')
    }

    return this.set.some((thisComparators) => {
      return (
        isSatisfiable(thisComparators, options) &&
        range.set.some((rangeComparators) => {
          return (
            isSatisfiable(rangeComparators, options) &&
            thisComparators.every((thisComparator) => {
              return rangeComparators.every((rangeComparator) => {
                return thisComparator.intersects(rangeComparator, options)
              })
            })
          )
        })
      )
    })
  }

  // if ANY of the sets match ALL of its comparators, then pass
  test (version) {
    if (!version) {
      return false
    }

    if (typeof version === 'string') {
      try {
        version = new SemVer(version, this.options)
      } catch (er) {
        return false
      }
    }

    for (let i = 0; i < this.set.length; i++) {
      if (testSet(this.set[i], version, this.options)) {
        return true
      }
    }
    return false
  }
}
module.exports = Range

const LRU = __nccwpck_require__(81196)
const cache = new LRU({ max: 1000 })

const parseOptions = __nccwpck_require__(40785)
const Comparator = __nccwpck_require__(91532)
const debug = __nccwpck_require__(50427)
const SemVer = __nccwpck_require__(48088)
const {
  re,
  t,
  comparatorTrimReplace,
  tildeTrimReplace,
  caretTrimReplace
} = __nccwpck_require__(9523)

const isNullSet = c => c.value === '<0.0.0-0'
const isAny = c => c.value === ''

// take a set of comparators and determine whether there
// exists a version which can satisfy it
const isSatisfiable = (comparators, options) => {
  let result = true
  const remainingComparators = comparators.slice()
  let testComparator = remainingComparators.pop()

  while (result && remainingComparators.length) {
    result = remainingComparators.every((otherComparator) => {
      return testComparator.intersects(otherComparator, options)
    })

    testComparator = remainingComparators.pop()
  }

  return result
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
const parseComparator = (comp, options) => {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

const isX = id => !id || id.toLowerCase() === 'x' || id === '*'

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0
const replaceTildes = (comp, options) =>
  comp.trim().split(/\s+/).map((comp) => {
    return replaceTilde(comp, options)
  }).join(' ')

const replaceTilde = (comp, options) => {
  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]
  return comp.replace(r, (_, M, m, p, pr) => {
    debug('tilde', comp, _, M, m, p, pr)
    let ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0-0
      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = `>=${M}.${m}.${p}-${pr
      } <${M}.${+m + 1}.0-0`
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0-0
      ret = `>=${M}.${m}.${p
      } <${M}.${+m + 1}.0-0`
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0
// ^1.2.3 --> >=1.2.3 <2.0.0-0
// ^1.2.0 --> >=1.2.0 <2.0.0-0
const replaceCarets = (comp, options) =>
  comp.trim().split(/\s+/).map((comp) => {
    return replaceCaret(comp, options)
  }).join(' ')

const replaceCaret = (comp, options) => {
  debug('caret', comp, options)
  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]
  const z = options.includePrerelease ? '-0' : ''
  return comp.replace(r, (_, M, m, p, pr) => {
    debug('caret', comp, _, M, m, p, pr)
    let ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`
    } else if (isX(p)) {
      if (M === '0') {
        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`
      } else {
        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = `>=${M}.${m}.${p}-${pr
          } <${M}.${m}.${+p + 1}-0`
        } else {
          ret = `>=${M}.${m}.${p}-${pr
          } <${M}.${+m + 1}.0-0`
        }
      } else {
        ret = `>=${M}.${m}.${p}-${pr
        } <${+M + 1}.0.0-0`
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = `>=${M}.${m}.${p
          }${z} <${M}.${m}.${+p + 1}-0`
        } else {
          ret = `>=${M}.${m}.${p
          }${z} <${M}.${+m + 1}.0-0`
        }
      } else {
        ret = `>=${M}.${m}.${p
        } <${+M + 1}.0.0-0`
      }
    }

    debug('caret return', ret)
    return ret
  })
}

const replaceXRanges = (comp, options) => {
  debug('replaceXRanges', comp, options)
  return comp.split(/\s+/).map((comp) => {
    return replaceXRange(comp, options)
  }).join(' ')
}

const replaceXRange = (comp, options) => {
  comp = comp.trim()
  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]
  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    const xM = isX(M)
    const xm = xM || isX(m)
    const xp = xm || isX(p)
    const anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    // if we're including prereleases in the match, then we need
    // to fix this to -0, the lowest possible prerelease value
    pr = options.includePrerelease ? '-0' : ''

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0-0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      if (gtlt === '<')
        pr = '-0'

      ret = `${gtlt + M}.${m}.${p}${pr}`
    } else if (xm) {
      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`
    } else if (xp) {
      ret = `>=${M}.${m}.0${pr
      } <${M}.${+m + 1}.0-0`
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
const replaceStars = (comp, options) => {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[t.STAR], '')
}

const replaceGTE0 = (comp, options) => {
  debug('replaceGTE0', comp, options)
  return comp.trim()
    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')
}

// This function is passed to string.replace(re[t.HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0-0
const hyphenReplace = incPr => ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) => {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = `>=${fM}.0.0${incPr ? '-0' : ''}`
  } else if (isX(fp)) {
    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`
  } else if (fpr) {
    from = `>=${from}`
  } else {
    from = `>=${from}${incPr ? '-0' : ''}`
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = `<${+tM + 1}.0.0-0`
  } else if (isX(tp)) {
    to = `<${tM}.${+tm + 1}.0-0`
  } else if (tpr) {
    to = `<=${tM}.${tm}.${tp}-${tpr}`
  } else if (incPr) {
    to = `<${tM}.${tm}.${+tp + 1}-0`
  } else {
    to = `<=${to}`
  }

  return (`${from} ${to}`).trim()
}

const testSet = (set, version, options) => {
  for (let i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (let i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === Comparator.ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        const allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}


/***/ }),

/***/ 48088:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const debug = __nccwpck_require__(50427)
const { MAX_LENGTH, MAX_SAFE_INTEGER } = __nccwpck_require__(42293)
const { re, t } = __nccwpck_require__(9523)

const parseOptions = __nccwpck_require__(40785)
const { compareIdentifiers } = __nccwpck_require__(92463)
class SemVer {
  constructor (version, options) {
    options = parseOptions(options)

    if (version instanceof SemVer) {
      if (version.loose === !!options.loose &&
          version.includePrerelease === !!options.includePrerelease) {
        return version
      } else {
        version = version.version
      }
    } else if (typeof version !== 'string') {
      throw new TypeError(`Invalid Version: ${version}`)
    }

    if (version.length > MAX_LENGTH) {
      throw new TypeError(
        `version is longer than ${MAX_LENGTH} characters`
      )
    }

    debug('SemVer', version, options)
    this.options = options
    this.loose = !!options.loose
    // this isn't actually relevant for versions, but keep it so that we
    // don't run into trouble passing this.options around.
    this.includePrerelease = !!options.includePrerelease

    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])

    if (!m) {
      throw new TypeError(`Invalid Version: ${version}`)
    }

    this.raw = version

    // these are actually numbers
    this.major = +m[1]
    this.minor = +m[2]
    this.patch = +m[3]

    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
      throw new TypeError('Invalid major version')
    }

    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
      throw new TypeError('Invalid minor version')
    }

    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
      throw new TypeError('Invalid patch version')
    }

    // numberify any prerelease numeric ids
    if (!m[4]) {
      this.prerelease = []
    } else {
      this.prerelease = m[4].split('.').map((id) => {
        if (/^[0-9]+$/.test(id)) {
          const num = +id
          if (num >= 0 && num < MAX_SAFE_INTEGER) {
            return num
          }
        }
        return id
      })
    }

    this.build = m[5] ? m[5].split('.') : []
    this.format()
  }

  format () {
    this.version = `${this.major}.${this.minor}.${this.patch}`
    if (this.prerelease.length) {
      this.version += `-${this.prerelease.join('.')}`
    }
    return this.version
  }

  toString () {
    return this.version
  }

  compare (other) {
    debug('SemVer.compare', this.version, this.options, other)
    if (!(other instanceof SemVer)) {
      if (typeof other === 'string' && other === this.version) {
        return 0
      }
      other = new SemVer(other, this.options)
    }

    if (other.version === this.version) {
      return 0
    }

    return this.compareMain(other) || this.comparePre(other)
  }

  compareMain (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    return (
      compareIdentifiers(this.major, other.major) ||
      compareIdentifiers(this.minor, other.minor) ||
      compareIdentifiers(this.patch, other.patch)
    )
  }

  comparePre (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    // NOT having a prerelease is > having one
    if (this.prerelease.length && !other.prerelease.length) {
      return -1
    } else if (!this.prerelease.length && other.prerelease.length) {
      return 1
    } else if (!this.prerelease.length && !other.prerelease.length) {
      return 0
    }

    let i = 0
    do {
      const a = this.prerelease[i]
      const b = other.prerelease[i]
      debug('prerelease compare', i, a, b)
      if (a === undefined && b === undefined) {
        return 0
      } else if (b === undefined) {
        return 1
      } else if (a === undefined) {
        return -1
      } else if (a === b) {
        continue
      } else {
        return compareIdentifiers(a, b)
      }
    } while (++i)
  }

  compareBuild (other) {
    if (!(other instanceof SemVer)) {
      other = new SemVer(other, this.options)
    }

    let i = 0
    do {
      const a = this.build[i]
      const b = other.build[i]
      debug('prerelease compare', i, a, b)
      if (a === undefined && b === undefined) {
        return 0
      } else if (b === undefined) {
        return 1
      } else if (a === undefined) {
        return -1
      } else if (a === b) {
        continue
      } else {
        return compareIdentifiers(a, b)
      }
    } while (++i)
  }

  // preminor will bump the version up to the next minor release, and immediately
  // down to pre-release. premajor and prepatch work the same way.
  inc (release, identifier) {
    switch (release) {
      case 'premajor':
        this.prerelease.length = 0
        this.patch = 0
        this.minor = 0
        this.major++
        this.inc('pre', identifier)
        break
      case 'preminor':
        this.prerelease.length = 0
        this.patch = 0
        this.minor++
        this.inc('pre', identifier)
        break
      case 'prepatch':
        // If this is already a prerelease, it will bump to the next version
        // drop any prereleases that might already exist, since they are not
        // relevant at this point.
        this.prerelease.length = 0
        this.inc('patch', identifier)
        this.inc('pre', identifier)
        break
      // If the input is a non-prerelease version, this acts the same as
      // prepatch.
      case 'prerelease':
        if (this.prerelease.length === 0) {
          this.inc('patch', identifier)
        }
        this.inc('pre', identifier)
        break

      case 'major':
        // If this is a pre-major version, bump up to the same major version.
        // Otherwise increment major.
        // 1.0.0-5 bumps to 1.0.0
        // 1.1.0 bumps to 2.0.0
        if (
          this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0
        ) {
          this.major++
        }
        this.minor = 0
        this.patch = 0
        this.prerelease = []
        break
      case 'minor':
        // If this is a pre-minor version, bump up to the same minor version.
        // Otherwise increment minor.
        // 1.2.0-5 bumps to 1.2.0
        // 1.2.1 bumps to 1.3.0
        if (this.patch !== 0 || this.prerelease.length === 0) {
          this.minor++
        }
        this.patch = 0
        this.prerelease = []
        break
      case 'patch':
        // If this is not a pre-release version, it will increment the patch.
        // If it is a pre-release it will bump up to the same patch version.
        // 1.2.0-5 patches to 1.2.0
        // 1.2.0 patches to 1.2.1
        if (this.prerelease.length === 0) {
          this.patch++
        }
        this.prerelease = []
        break
      // This probably shouldn't be used publicly.
      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.
      case 'pre':
        if (this.prerelease.length === 0) {
          this.prerelease = [0]
        } else {
          let i = this.prerelease.length
          while (--i >= 0) {
            if (typeof this.prerelease[i] === 'number') {
              this.prerelease[i]++
              i = -2
            }
          }
          if (i === -1) {
            // didn't increment anything
            this.prerelease.push(0)
          }
        }
        if (identifier) {
          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
          if (this.prerelease[0] === identifier) {
            if (isNaN(this.prerelease[1])) {
              this.prerelease = [identifier, 0]
            }
          } else {
            this.prerelease = [identifier, 0]
          }
        }
        break

      default:
        throw new Error(`invalid increment argument: ${release}`)
    }
    this.format()
    this.raw = this.version
    return this
  }
}

module.exports = SemVer


/***/ }),

/***/ 48848:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(75925)
const clean = (version, options) => {
  const s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}
module.exports = clean


/***/ }),

/***/ 75098:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const eq = __nccwpck_require__(91898)
const neq = __nccwpck_require__(6017)
const gt = __nccwpck_require__(84123)
const gte = __nccwpck_require__(15522)
const lt = __nccwpck_require__(80194)
const lte = __nccwpck_require__(77520)

const cmp = (a, op, b, loose) => {
  switch (op) {
    case '===':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a === b

    case '!==':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError(`Invalid operator: ${op}`)
  }
}
module.exports = cmp


/***/ }),

/***/ 13466:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const parse = __nccwpck_require__(75925)
const {re, t} = __nccwpck_require__(9523)

const coerce = (version, options) => {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version === 'number') {
    version = String(version)
  }

  if (typeof version !== 'string') {
    return null
  }

  options = options || {}

  let match = null
  if (!options.rtl) {
    match = version.match(re[t.COERCE])
  } else {
    // Find the right-most coercible string that does not share
    // a terminus with a more left-ward coercible string.
    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'
    //
    // Walk through the string checking with a /g regexp
    // Manually set the index so as to pick up overlapping matches.
    // Stop when we get a match that ends at the string end, since no
    // coercible string can be more right-ward without the same terminus.
    let next
    while ((next = re[t.COERCERTL].exec(version)) &&
        (!match || match.index + match[0].length !== version.length)
    ) {
      if (!match ||
            next.index + next[0].length !== match.index + match[0].length) {
        match = next
      }
      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length
    }
    // leave it in a clean state
    re[t.COERCERTL].lastIndex = -1
  }

  if (match === null)
    return null

  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)
}
module.exports = coerce


/***/ }),

/***/ 92156:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const compareBuild = (a, b, loose) => {
  const versionA = new SemVer(a, loose)
  const versionB = new SemVer(b, loose)
  return versionA.compare(versionB) || versionA.compareBuild(versionB)
}
module.exports = compareBuild


/***/ }),

/***/ 62804:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const compareLoose = (a, b) => compare(a, b, true)
module.exports = compareLoose


/***/ }),

/***/ 44309:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const compare = (a, b, loose) =>
  new SemVer(a, loose).compare(new SemVer(b, loose))

module.exports = compare


/***/ }),

/***/ 64297:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(75925)
const eq = __nccwpck_require__(91898)

const diff = (version1, version2) => {
  if (eq(version1, version2)) {
    return null
  } else {
    const v1 = parse(version1)
    const v2 = parse(version2)
    const hasPre = v1.prerelease.length || v2.prerelease.length
    const prefix = hasPre ? 'pre' : ''
    const defaultResult = hasPre ? 'prerelease' : ''
    for (const key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return prefix + key
        }
      }
    }
    return defaultResult // may be undefined
  }
}
module.exports = diff


/***/ }),

/***/ 91898:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const eq = (a, b, loose) => compare(a, b, loose) === 0
module.exports = eq


/***/ }),

/***/ 84123:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const gt = (a, b, loose) => compare(a, b, loose) > 0
module.exports = gt


/***/ }),

/***/ 15522:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const gte = (a, b, loose) => compare(a, b, loose) >= 0
module.exports = gte


/***/ }),

/***/ 30900:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)

const inc = (version, release, options, identifier) => {
  if (typeof (options) === 'string') {
    identifier = options
    options = undefined
  }

  try {
    return new SemVer(version, options).inc(release, identifier).version
  } catch (er) {
    return null
  }
}
module.exports = inc


/***/ }),

/***/ 80194:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const lt = (a, b, loose) => compare(a, b, loose) < 0
module.exports = lt


/***/ }),

/***/ 77520:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const lte = (a, b, loose) => compare(a, b, loose) <= 0
module.exports = lte


/***/ }),

/***/ 76688:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const major = (a, loose) => new SemVer(a, loose).major
module.exports = major


/***/ }),

/***/ 38447:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const minor = (a, loose) => new SemVer(a, loose).minor
module.exports = minor


/***/ }),

/***/ 6017:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const neq = (a, b, loose) => compare(a, b, loose) !== 0
module.exports = neq


/***/ }),

/***/ 75925:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const {MAX_LENGTH} = __nccwpck_require__(42293)
const { re, t } = __nccwpck_require__(9523)
const SemVer = __nccwpck_require__(48088)

const parseOptions = __nccwpck_require__(40785)
const parse = (version, options) => {
  options = parseOptions(options)

  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  if (version.length > MAX_LENGTH) {
    return null
  }

  const r = options.loose ? re[t.LOOSE] : re[t.FULL]
  if (!r.test(version)) {
    return null
  }

  try {
    return new SemVer(version, options)
  } catch (er) {
    return null
  }
}

module.exports = parse


/***/ }),

/***/ 42866:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const patch = (a, loose) => new SemVer(a, loose).patch
module.exports = patch


/***/ }),

/***/ 24016:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(75925)
const prerelease = (version, options) => {
  const parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}
module.exports = prerelease


/***/ }),

/***/ 76417:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compare = __nccwpck_require__(44309)
const rcompare = (a, b, loose) => compare(b, a, loose)
module.exports = rcompare


/***/ }),

/***/ 8701:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compareBuild = __nccwpck_require__(92156)
const rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))
module.exports = rsort


/***/ }),

/***/ 6055:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9828)
const satisfies = (version, range, options) => {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}
module.exports = satisfies


/***/ }),

/***/ 61426:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const compareBuild = __nccwpck_require__(92156)
const sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))
module.exports = sort


/***/ }),

/***/ 19601:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const parse = __nccwpck_require__(75925)
const valid = (version, options) => {
  const v = parse(version, options)
  return v ? v.version : null
}
module.exports = valid


/***/ }),

/***/ 11383:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// just pre-load all the stuff that index.js lazily exports
const internalRe = __nccwpck_require__(9523)
module.exports = {
  re: internalRe.re,
  src: internalRe.src,
  tokens: internalRe.t,
  SEMVER_SPEC_VERSION: __nccwpck_require__(42293).SEMVER_SPEC_VERSION,
  SemVer: __nccwpck_require__(48088),
  compareIdentifiers: __nccwpck_require__(92463).compareIdentifiers,
  rcompareIdentifiers: __nccwpck_require__(92463).rcompareIdentifiers,
  parse: __nccwpck_require__(75925),
  valid: __nccwpck_require__(19601),
  clean: __nccwpck_require__(48848),
  inc: __nccwpck_require__(30900),
  diff: __nccwpck_require__(64297),
  major: __nccwpck_require__(76688),
  minor: __nccwpck_require__(38447),
  patch: __nccwpck_require__(42866),
  prerelease: __nccwpck_require__(24016),
  compare: __nccwpck_require__(44309),
  rcompare: __nccwpck_require__(76417),
  compareLoose: __nccwpck_require__(62804),
  compareBuild: __nccwpck_require__(92156),
  sort: __nccwpck_require__(61426),
  rsort: __nccwpck_require__(8701),
  gt: __nccwpck_require__(84123),
  lt: __nccwpck_require__(80194),
  eq: __nccwpck_require__(91898),
  neq: __nccwpck_require__(6017),
  gte: __nccwpck_require__(15522),
  lte: __nccwpck_require__(77520),
  cmp: __nccwpck_require__(75098),
  coerce: __nccwpck_require__(13466),
  Comparator: __nccwpck_require__(91532),
  Range: __nccwpck_require__(9828),
  satisfies: __nccwpck_require__(6055),
  toComparators: __nccwpck_require__(52706),
  maxSatisfying: __nccwpck_require__(20579),
  minSatisfying: __nccwpck_require__(10832),
  minVersion: __nccwpck_require__(34179),
  validRange: __nccwpck_require__(2098),
  outside: __nccwpck_require__(60420),
  gtr: __nccwpck_require__(9380),
  ltr: __nccwpck_require__(33323),
  intersects: __nccwpck_require__(27008),
  simplifyRange: __nccwpck_require__(75297),
  subset: __nccwpck_require__(7863),
}


/***/ }),

/***/ 42293:
/***/ ((module) => {

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
const SEMVER_SPEC_VERSION = '2.0.0'

const MAX_LENGTH = 256
const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
  /* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
const MAX_SAFE_COMPONENT_LENGTH = 16

module.exports = {
  SEMVER_SPEC_VERSION,
  MAX_LENGTH,
  MAX_SAFE_INTEGER,
  MAX_SAFE_COMPONENT_LENGTH
}


/***/ }),

/***/ 50427:
/***/ ((module) => {

const debug = (
  typeof process === 'object' &&
  process.env &&
  process.env.NODE_DEBUG &&
  /\bsemver\b/i.test(process.env.NODE_DEBUG)
) ? (...args) => console.error('SEMVER', ...args)
  : () => {}

module.exports = debug


/***/ }),

/***/ 92463:
/***/ ((module) => {

const numeric = /^[0-9]+$/
const compareIdentifiers = (a, b) => {
  const anum = numeric.test(a)
  const bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

const rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)

module.exports = {
  compareIdentifiers,
  rcompareIdentifiers
}


/***/ }),

/***/ 40785:
/***/ ((module) => {

// parse out just the options we care about so we always get a consistent
// obj with keys in a consistent order.
const opts = ['includePrerelease', 'loose', 'rtl']
const parseOptions = options =>
  !options ? {}
  : typeof options !== 'object' ? { loose: true }
  : opts.filter(k => options[k]).reduce((options, k) => {
    options[k] = true
    return options
  }, {})
module.exports = parseOptions


/***/ }),

/***/ 9523:
/***/ ((module, exports, __nccwpck_require__) => {

const { MAX_SAFE_COMPONENT_LENGTH } = __nccwpck_require__(42293)
const debug = __nccwpck_require__(50427)
exports = module.exports = {}

// The actual regexps go on exports.re
const re = exports.re = []
const src = exports.src = []
const t = exports.t = {}
let R = 0

const createToken = (name, value, isGlobal) => {
  const index = R++
  debug(index, value)
  t[name] = index
  src[index] = value
  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)
}

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

createToken('NUMERICIDENTIFIER', '0|[1-9]\\d*')
createToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

createToken('NONNUMERICIDENTIFIER', '\\d*[a-zA-Z-][a-zA-Z0-9-]*')

// ## Main Version
// Three dot-separated numeric identifiers.

createToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\.` +
                   `(${src[t.NUMERICIDENTIFIER]})\\.` +
                   `(${src[t.NUMERICIDENTIFIER]})`)

createToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` +
                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\.` +
                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]
}|${src[t.NONNUMERICIDENTIFIER]})`)

createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]
}|${src[t.NONNUMERICIDENTIFIER]})`)

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

createToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]
}(?:\\.${src[t.PRERELEASEIDENTIFIER]})*))`)

createToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]
}(?:\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

createToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

createToken('BUILD', `(?:\\+(${src[t.BUILDIDENTIFIER]
}(?:\\.${src[t.BUILDIDENTIFIER]})*))`)

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

createToken('FULLPLAIN', `v?${src[t.MAINVERSION]
}${src[t.PRERELEASE]}?${
  src[t.BUILD]}?`)

createToken('FULL', `^${src[t.FULLPLAIN]}$`)

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
createToken('LOOSEPLAIN', `[v=\\s]*${src[t.MAINVERSIONLOOSE]
}${src[t.PRERELEASELOOSE]}?${
  src[t.BUILD]}?`)

createToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)

createToken('GTLT', '((?:<|>)?=?)')

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
createToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`)
createToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\*`)

createToken('XRANGEPLAIN', `[v=\\s]*(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:\\.(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:\\.(${src[t.XRANGEIDENTIFIER]})` +
                   `(?:${src[t.PRERELEASE]})?${
                     src[t.BUILD]}?` +
                   `)?)?`)

createToken('XRANGEPLAINLOOSE', `[v=\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +
                        `(?:${src[t.PRERELEASELOOSE]})?${
                          src[t.BUILD]}?` +
                        `)?)?`)

createToken('XRANGE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAIN]}$`)
createToken('XRANGELOOSE', `^${src[t.GTLT]}\\s*${src[t.XRANGEPLAINLOOSE]}$`)

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
createToken('COERCE', `${'(^|[^\\d])' +
              '(\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +
              `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +
              `(?:\\.(\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +
              `(?:$|[^\\d])`)
createToken('COERCERTL', src[t.COERCE], true)

// Tilde ranges.
// Meaning is "reasonably at or greater than"
createToken('LONETILDE', '(?:~>?)')

createToken('TILDETRIM', `(\\s*)${src[t.LONETILDE]}\\s+`, true)
exports.tildeTrimReplace = '$1~'

createToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)
createToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)

// Caret ranges.
// Meaning is "at least and backwards compatible with"
createToken('LONECARET', '(?:\\^)')

createToken('CARETTRIM', `(\\s*)${src[t.LONECARET]}\\s+`, true)
exports.caretTrimReplace = '$1^'

createToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)
createToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)

// A simple gt/lt/eq thing, or just "" to indicate "any version"
createToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\s*(${src[t.LOOSEPLAIN]})$|^$`)
createToken('COMPARATOR', `^${src[t.GTLT]}\\s*(${src[t.FULLPLAIN]})$|^$`)

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
createToken('COMPARATORTRIM', `(\\s*)${src[t.GTLT]
}\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)
exports.comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
createToken('HYPHENRANGE', `^\\s*(${src[t.XRANGEPLAIN]})` +
                   `\\s+-\\s+` +
                   `(${src[t.XRANGEPLAIN]})` +
                   `\\s*$`)

createToken('HYPHENRANGELOOSE', `^\\s*(${src[t.XRANGEPLAINLOOSE]})` +
                        `\\s+-\\s+` +
                        `(${src[t.XRANGEPLAINLOOSE]})` +
                        `\\s*$`)

// Star ranges basically just allow anything at all.
createToken('STAR', '(<|>)?=?\\s*\\*')
// >=0.0.0 is like a star
createToken('GTE0', '^\\s*>=\\s*0\.0\.0\\s*$')
createToken('GTE0PRE', '^\\s*>=\\s*0\.0\.0-0\\s*$')


/***/ }),

/***/ 81196:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


// A linked list to keep track of recently-used-ness
const Yallist = __nccwpck_require__(70220)

const MAX = Symbol('max')
const LENGTH = Symbol('length')
const LENGTH_CALCULATOR = Symbol('lengthCalculator')
const ALLOW_STALE = Symbol('allowStale')
const MAX_AGE = Symbol('maxAge')
const DISPOSE = Symbol('dispose')
const NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')
const LRU_LIST = Symbol('lruList')
const CACHE = Symbol('cache')
const UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')

const naiveLength = () => 1

// lruList is a yallist where the head is the youngest
// item, and the tail is the oldest.  the list contains the Hit
// objects as the entries.
// Each Hit object has a reference to its Yallist.Node.  This
// never changes.
//
// cache is a Map (or PseudoMap) that matches the keys to
// the Yallist.Node object.
class LRUCache {
  constructor (options) {
    if (typeof options === 'number')
      options = { max: options }

    if (!options)
      options = {}

    if (options.max && (typeof options.max !== 'number' || options.max < 0))
      throw new TypeError('max must be a non-negative number')
    // Kind of weird to have a default max of Infinity, but oh well.
    const max = this[MAX] = options.max || Infinity

    const lc = options.length || naiveLength
    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc
    this[ALLOW_STALE] = options.stale || false
    if (options.maxAge && typeof options.maxAge !== 'number')
      throw new TypeError('maxAge must be a number')
    this[MAX_AGE] = options.maxAge || 0
    this[DISPOSE] = options.dispose
    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false
    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false
    this.reset()
  }

  // resize the cache when the max changes.
  set max (mL) {
    if (typeof mL !== 'number' || mL < 0)
      throw new TypeError('max must be a non-negative number')

    this[MAX] = mL || Infinity
    trim(this)
  }
  get max () {
    return this[MAX]
  }

  set allowStale (allowStale) {
    this[ALLOW_STALE] = !!allowStale
  }
  get allowStale () {
    return this[ALLOW_STALE]
  }

  set maxAge (mA) {
    if (typeof mA !== 'number')
      throw new TypeError('maxAge must be a non-negative number')

    this[MAX_AGE] = mA
    trim(this)
  }
  get maxAge () {
    return this[MAX_AGE]
  }

  // resize the cache when the lengthCalculator changes.
  set lengthCalculator (lC) {
    if (typeof lC !== 'function')
      lC = naiveLength

    if (lC !== this[LENGTH_CALCULATOR]) {
      this[LENGTH_CALCULATOR] = lC
      this[LENGTH] = 0
      this[LRU_LIST].forEach(hit => {
        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)
        this[LENGTH] += hit.length
      })
    }
    trim(this)
  }
  get lengthCalculator () { return this[LENGTH_CALCULATOR] }

  get length () { return this[LENGTH] }
  get itemCount () { return this[LRU_LIST].length }

  rforEach (fn, thisp) {
    thisp = thisp || this
    for (let walker = this[LRU_LIST].tail; walker !== null;) {
      const prev = walker.prev
      forEachStep(this, fn, walker, thisp)
      walker = prev
    }
  }

  forEach (fn, thisp) {
    thisp = thisp || this
    for (let walker = this[LRU_LIST].head; walker !== null;) {
      const next = walker.next
      forEachStep(this, fn, walker, thisp)
      walker = next
    }
  }

  keys () {
    return this[LRU_LIST].toArray().map(k => k.key)
  }

  values () {
    return this[LRU_LIST].toArray().map(k => k.value)
  }

  reset () {
    if (this[DISPOSE] &&
        this[LRU_LIST] &&
        this[LRU_LIST].length) {
      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))
    }

    this[CACHE] = new Map() // hash of items by key
    this[LRU_LIST] = new Yallist() // list of items in order of use recency
    this[LENGTH] = 0 // length of items in the list
  }

  dump () {
    return this[LRU_LIST].map(hit =>
      isStale(this, hit) ? false : {
        k: hit.key,
        v: hit.value,
        e: hit.now + (hit.maxAge || 0)
      }).toArray().filter(h => h)
  }

  dumpLru () {
    return this[LRU_LIST]
  }

  set (key, value, maxAge) {
    maxAge = maxAge || this[MAX_AGE]

    if (maxAge && typeof maxAge !== 'number')
      throw new TypeError('maxAge must be a number')

    const now = maxAge ? Date.now() : 0
    const len = this[LENGTH_CALCULATOR](value, key)

    if (this[CACHE].has(key)) {
      if (len > this[MAX]) {
        del(this, this[CACHE].get(key))
        return false
      }

      const node = this[CACHE].get(key)
      const item = node.value

      // dispose of the old one before overwriting
      // split out into 2 ifs for better coverage tracking
      if (this[DISPOSE]) {
        if (!this[NO_DISPOSE_ON_SET])
          this[DISPOSE](key, item.value)
      }

      item.now = now
      item.maxAge = maxAge
      item.value = value
      this[LENGTH] += len - item.length
      item.length = len
      this.get(key)
      trim(this)
      return true
    }

    const hit = new Entry(key, value, len, now, maxAge)

    // oversized objects fall out of cache automatically.
    if (hit.length > this[MAX]) {
      if (this[DISPOSE])
        this[DISPOSE](key, value)

      return false
    }

    this[LENGTH] += hit.length
    this[LRU_LIST].unshift(hit)
    this[CACHE].set(key, this[LRU_LIST].head)
    trim(this)
    return true
  }

  has (key) {
    if (!this[CACHE].has(key)) return false
    const hit = this[CACHE].get(key).value
    return !isStale(this, hit)
  }

  get (key) {
    return get(this, key, true)
  }

  peek (key) {
    return get(this, key, false)
  }

  pop () {
    const node = this[LRU_LIST].tail
    if (!node)
      return null

    del(this, node)
    return node.value
  }

  del (key) {
    del(this, this[CACHE].get(key))
  }

  load (arr) {
    // reset the cache
    this.reset()

    const now = Date.now()
    // A previous serialized cache has the most recent items first
    for (let l = arr.length - 1; l >= 0; l--) {
      const hit = arr[l]
      const expiresAt = hit.e || 0
      if (expiresAt === 0)
        // the item was created without expiration in a non aged cache
        this.set(hit.k, hit.v)
      else {
        const maxAge = expiresAt - now
        // dont add already expired items
        if (maxAge > 0) {
          this.set(hit.k, hit.v, maxAge)
        }
      }
    }
  }

  prune () {
    this[CACHE].forEach((value, key) => get(this, key, false))
  }
}

const get = (self, key, doUse) => {
  const node = self[CACHE].get(key)
  if (node) {
    const hit = node.value
    if (isStale(self, hit)) {
      del(self, node)
      if (!self[ALLOW_STALE])
        return undefined
    } else {
      if (doUse) {
        if (self[UPDATE_AGE_ON_GET])
          node.value.now = Date.now()
        self[LRU_LIST].unshiftNode(node)
      }
    }
    return hit.value
  }
}

const isStale = (self, hit) => {
  if (!hit || (!hit.maxAge && !self[MAX_AGE]))
    return false

  const diff = Date.now() - hit.now
  return hit.maxAge ? diff > hit.maxAge
    : self[MAX_AGE] && (diff > self[MAX_AGE])
}

const trim = self => {
  if (self[LENGTH] > self[MAX]) {
    for (let walker = self[LRU_LIST].tail;
      self[LENGTH] > self[MAX] && walker !== null;) {
      // We know that we're about to delete this one, and also
      // what the next least recently used key will be, so just
      // go ahead and set it now.
      const prev = walker.prev
      del(self, walker)
      walker = prev
    }
  }
}

const del = (self, node) => {
  if (node) {
    const hit = node.value
    if (self[DISPOSE])
      self[DISPOSE](hit.key, hit.value)

    self[LENGTH] -= hit.length
    self[CACHE].delete(hit.key)
    self[LRU_LIST].removeNode(node)
  }
}

class Entry {
  constructor (key, value, length, now, maxAge) {
    this.key = key
    this.value = value
    this.length = length
    this.now = now
    this.maxAge = maxAge || 0
  }
}

const forEachStep = (self, fn, node, thisp) => {
  let hit = node.value
  if (isStale(self, hit)) {
    del(self, node)
    if (!self[ALLOW_STALE])
      hit = undefined
  }
  if (hit)
    fn.call(thisp, hit.value, hit.key, self)
}

module.exports = LRUCache


/***/ }),

/***/ 45327:
/***/ ((module) => {

"use strict";

module.exports = function (Yallist) {
  Yallist.prototype[Symbol.iterator] = function* () {
    for (let walker = this.head; walker; walker = walker.next) {
      yield walker.value
    }
  }
}


/***/ }),

/***/ 70220:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

module.exports = Yallist

Yallist.Node = Node
Yallist.create = Yallist

function Yallist (list) {
  var self = this
  if (!(self instanceof Yallist)) {
    self = new Yallist()
  }

  self.tail = null
  self.head = null
  self.length = 0

  if (list && typeof list.forEach === 'function') {
    list.forEach(function (item) {
      self.push(item)
    })
  } else if (arguments.length > 0) {
    for (var i = 0, l = arguments.length; i < l; i++) {
      self.push(arguments[i])
    }
  }

  return self
}

Yallist.prototype.removeNode = function (node) {
  if (node.list !== this) {
    throw new Error('removing node which does not belong to this list')
  }

  var next = node.next
  var prev = node.prev

  if (next) {
    next.prev = prev
  }

  if (prev) {
    prev.next = next
  }

  if (node === this.head) {
    this.head = next
  }
  if (node === this.tail) {
    this.tail = prev
  }

  node.list.length--
  node.next = null
  node.prev = null
  node.list = null

  return next
}

Yallist.prototype.unshiftNode = function (node) {
  if (node === this.head) {
    return
  }

  if (node.list) {
    node.list.removeNode(node)
  }

  var head = this.head
  node.list = this
  node.next = head
  if (head) {
    head.prev = node
  }

  this.head = node
  if (!this.tail) {
    this.tail = node
  }
  this.length++
}

Yallist.prototype.pushNode = function (node) {
  if (node === this.tail) {
    return
  }

  if (node.list) {
    node.list.removeNode(node)
  }

  var tail = this.tail
  node.list = this
  node.prev = tail
  if (tail) {
    tail.next = node
  }

  this.tail = node
  if (!this.head) {
    this.head = node
  }
  this.length++
}

Yallist.prototype.push = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    push(this, arguments[i])
  }
  return this.length
}

Yallist.prototype.unshift = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    unshift(this, arguments[i])
  }
  return this.length
}

Yallist.prototype.pop = function () {
  if (!this.tail) {
    return undefined
  }

  var res = this.tail.value
  this.tail = this.tail.prev
  if (this.tail) {
    this.tail.next = null
  } else {
    this.head = null
  }
  this.length--
  return res
}

Yallist.prototype.shift = function () {
  if (!this.head) {
    return undefined
  }

  var res = this.head.value
  this.head = this.head.next
  if (this.head) {
    this.head.prev = null
  } else {
    this.tail = null
  }
  this.length--
  return res
}

Yallist.prototype.forEach = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this.head, i = 0; walker !== null; i++) {
    fn.call(thisp, walker.value, i, this)
    walker = walker.next
  }
}

Yallist.prototype.forEachReverse = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {
    fn.call(thisp, walker.value, i, this)
    walker = walker.prev
  }
}

Yallist.prototype.get = function (n) {
  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.next
  }
  if (i === n && walker !== null) {
    return walker.value
  }
}

Yallist.prototype.getReverse = function (n) {
  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.prev
  }
  if (i === n && walker !== null) {
    return walker.value
  }
}

Yallist.prototype.map = function (fn, thisp) {
  thisp = thisp || this
  var res = new Yallist()
  for (var walker = this.head; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this))
    walker = walker.next
  }
  return res
}

Yallist.prototype.mapReverse = function (fn, thisp) {
  thisp = thisp || this
  var res = new Yallist()
  for (var walker = this.tail; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this))
    walker = walker.prev
  }
  return res
}

Yallist.prototype.reduce = function (fn, initial) {
  var acc
  var walker = this.head
  if (arguments.length > 1) {
    acc = initial
  } else if (this.head) {
    walker = this.head.next
    acc = this.head.value
  } else {
    throw new TypeError('Reduce of empty list with no initial value')
  }

  for (var i = 0; walker !== null; i++) {
    acc = fn(acc, walker.value, i)
    walker = walker.next
  }

  return acc
}

Yallist.prototype.reduceReverse = function (fn, initial) {
  var acc
  var walker = this.tail
  if (arguments.length > 1) {
    acc = initial
  } else if (this.tail) {
    walker = this.tail.prev
    acc = this.tail.value
  } else {
    throw new TypeError('Reduce of empty list with no initial value')
  }

  for (var i = this.length - 1; walker !== null; i--) {
    acc = fn(acc, walker.value, i)
    walker = walker.prev
  }

  return acc
}

Yallist.prototype.toArray = function () {
  var arr = new Array(this.length)
  for (var i = 0, walker = this.head; walker !== null; i++) {
    arr[i] = walker.value
    walker = walker.next
  }
  return arr
}

Yallist.prototype.toArrayReverse = function () {
  var arr = new Array(this.length)
  for (var i = 0, walker = this.tail; walker !== null; i++) {
    arr[i] = walker.value
    walker = walker.prev
  }
  return arr
}

Yallist.prototype.slice = function (from, to) {
  to = to || this.length
  if (to < 0) {
    to += this.length
  }
  from = from || 0
  if (from < 0) {
    from += this.length
  }
  var ret = new Yallist()
  if (to < from || to < 0) {
    return ret
  }
  if (from < 0) {
    from = 0
  }
  if (to > this.length) {
    to = this.length
  }
  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {
    walker = walker.next
  }
  for (; walker !== null && i < to; i++, walker = walker.next) {
    ret.push(walker.value)
  }
  return ret
}

Yallist.prototype.sliceReverse = function (from, to) {
  to = to || this.length
  if (to < 0) {
    to += this.length
  }
  from = from || 0
  if (from < 0) {
    from += this.length
  }
  var ret = new Yallist()
  if (to < from || to < 0) {
    return ret
  }
  if (from < 0) {
    from = 0
  }
  if (to > this.length) {
    to = this.length
  }
  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {
    walker = walker.prev
  }
  for (; walker !== null && i > from; i--, walker = walker.prev) {
    ret.push(walker.value)
  }
  return ret
}

Yallist.prototype.splice = function (start, deleteCount, ...nodes) {
  if (start > this.length) {
    start = this.length - 1
  }
  if (start < 0) {
    start = this.length + start;
  }

  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {
    walker = walker.next
  }

  var ret = []
  for (var i = 0; walker && i < deleteCount; i++) {
    ret.push(walker.value)
    walker = this.removeNode(walker)
  }
  if (walker === null) {
    walker = this.tail
  }

  if (walker !== this.head && walker !== this.tail) {
    walker = walker.prev
  }

  for (var i = 0; i < nodes.length; i++) {
    walker = insert(this, walker, nodes[i])
  }
  return ret;
}

Yallist.prototype.reverse = function () {
  var head = this.head
  var tail = this.tail
  for (var walker = head; walker !== null; walker = walker.prev) {
    var p = walker.prev
    walker.prev = walker.next
    walker.next = p
  }
  this.head = tail
  this.tail = head
  return this
}

function insert (self, node, value) {
  var inserted = node === self.head ?
    new Node(value, null, node, self) :
    new Node(value, node, node.next, self)

  if (inserted.next === null) {
    self.tail = inserted
  }
  if (inserted.prev === null) {
    self.head = inserted
  }

  self.length++

  return inserted
}

function push (self, item) {
  self.tail = new Node(item, self.tail, null, self)
  if (!self.head) {
    self.head = self.tail
  }
  self.length++
}

function unshift (self, item) {
  self.head = new Node(item, null, self.head, self)
  if (!self.tail) {
    self.tail = self.head
  }
  self.length++
}

function Node (value, prev, next, list) {
  if (!(this instanceof Node)) {
    return new Node(value, prev, next, list)
  }

  this.list = list
  this.value = value

  if (prev) {
    prev.next = this
    this.prev = prev
  } else {
    this.prev = null
  }

  if (next) {
    next.prev = this
    this.next = next
  } else {
    this.next = null
  }
}

try {
  // add if support for Symbol.iterator is present
  __nccwpck_require__(45327)(Yallist)
} catch (er) {}


/***/ }),

/***/ 9380:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Determine if version is greater than all the versions possible in the range.
const outside = __nccwpck_require__(60420)
const gtr = (version, range, options) => outside(version, range, '>', options)
module.exports = gtr


/***/ }),

/***/ 27008:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9828)
const intersects = (r1, r2, options) => {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2)
}
module.exports = intersects


/***/ }),

/***/ 33323:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const outside = __nccwpck_require__(60420)
// Determine if version is less than all the versions possible in the range
const ltr = (version, range, options) => outside(version, range, '<', options)
module.exports = ltr


/***/ }),

/***/ 20579:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const Range = __nccwpck_require__(9828)

const maxSatisfying = (versions, range, options) => {
  let max = null
  let maxSV = null
  let rangeObj = null
  try {
    rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach((v) => {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}
module.exports = maxSatisfying


/***/ }),

/***/ 10832:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const Range = __nccwpck_require__(9828)
const minSatisfying = (versions, range, options) => {
  let min = null
  let minSV = null
  let rangeObj = null
  try {
    rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach((v) => {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}
module.exports = minSatisfying


/***/ }),

/***/ 34179:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const Range = __nccwpck_require__(9828)
const gt = __nccwpck_require__(84123)

const minVersion = (range, loose) => {
  range = new Range(range, loose)

  let minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (let i = 0; i < range.set.length; ++i) {
    const comparators = range.set[i]

    let setMin = null
    comparators.forEach((comparator) => {
      // Clone to avoid manipulating the comparator's semver object.
      const compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!setMin || gt(compver, setMin)) {
            setMin = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error(`Unexpected operation: ${comparator.operator}`)
      }
    })
    if (setMin && (!minver || gt(minver, setMin)))
      minver = setMin
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}
module.exports = minVersion


/***/ }),

/***/ 60420:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const SemVer = __nccwpck_require__(48088)
const Comparator = __nccwpck_require__(91532)
const {ANY} = Comparator
const Range = __nccwpck_require__(9828)
const satisfies = __nccwpck_require__(6055)
const gt = __nccwpck_require__(84123)
const lt = __nccwpck_require__(80194)
const lte = __nccwpck_require__(77520)
const gte = __nccwpck_require__(15522)

const outside = (version, range, hilo, options) => {
  version = new SemVer(version, options)
  range = new Range(range, options)

  let gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisfies the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (let i = 0; i < range.set.length; ++i) {
    const comparators = range.set[i]

    let high = null
    let low = null

    comparators.forEach((comparator) => {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

module.exports = outside


/***/ }),

/***/ 75297:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// given a set of versions and a range, create a "simplified" range
// that includes the same versions that the original range does
// If the original range is shorter than the simplified one, return that.
const satisfies = __nccwpck_require__(6055)
const compare = __nccwpck_require__(44309)
module.exports = (versions, range, options) => {
  const set = []
  let min = null
  let prev = null
  const v = versions.sort((a, b) => compare(a, b, options))
  for (const version of v) {
    const included = satisfies(version, range, options)
    if (included) {
      prev = version
      if (!min)
        min = version
    } else {
      if (prev) {
        set.push([min, prev])
      }
      prev = null
      min = null
    }
  }
  if (min)
    set.push([min, null])

  const ranges = []
  for (const [min, max] of set) {
    if (min === max)
      ranges.push(min)
    else if (!max && min === v[0])
      ranges.push('*')
    else if (!max)
      ranges.push(`>=${min}`)
    else if (min === v[0])
      ranges.push(`<=${max}`)
    else
      ranges.push(`${min} - ${max}`)
  }
  const simplified = ranges.join(' || ')
  const original = typeof range.raw === 'string' ? range.raw : String(range)
  return simplified.length < original.length ? simplified : range
}


/***/ }),

/***/ 7863:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9828)
const Comparator = __nccwpck_require__(91532)
const { ANY } = Comparator
const satisfies = __nccwpck_require__(6055)
const compare = __nccwpck_require__(44309)

// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:
// - Every simple range `r1, r2, ...` is a null set, OR
// - Every simple range `r1, r2, ...` which is not a null set is a subset of
//   some `R1, R2, ...`
//
// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:
// - If c is only the ANY comparator
//   - If C is only the ANY comparator, return true
//   - Else if in prerelease mode, return false
//   - else replace c with `[>=0.0.0]`
// - If C is only the ANY comparator
//   - if in prerelease mode, return true
//   - else replace C with `[>=0.0.0]`
// - Let EQ be the set of = comparators in c
// - If EQ is more than one, return true (null set)
// - Let GT be the highest > or >= comparator in c
// - Let LT be the lowest < or <= comparator in c
// - If GT and LT, and GT.semver > LT.semver, return true (null set)
// - If any C is a = range, and GT or LT are set, return false
// - If EQ
//   - If GT, and EQ does not satisfy GT, return true (null set)
//   - If LT, and EQ does not satisfy LT, return true (null set)
//   - If EQ satisfies every C, return true
//   - Else return false
// - If GT
//   - If GT.semver is lower than any > or >= comp in C, return false
//   - If GT is >=, and GT.semver does not satisfy every C, return false
//   - If GT.semver has a prerelease, and not in prerelease mode
//     - If no C has a prerelease and the GT.semver tuple, return false
// - If LT
//   - If LT.semver is greater than any < or <= comp in C, return false
//   - If LT is <=, and LT.semver does not satisfy every C, return false
//   - If GT.semver has a prerelease, and not in prerelease mode
//     - If no C has a prerelease and the LT.semver tuple, return false
// - Else return true

const subset = (sub, dom, options = {}) => {
  if (sub === dom)
    return true

  sub = new Range(sub, options)
  dom = new Range(dom, options)
  let sawNonNull = false

  OUTER: for (const simpleSub of sub.set) {
    for (const simpleDom of dom.set) {
      const isSub = simpleSubset(simpleSub, simpleDom, options)
      sawNonNull = sawNonNull || isSub !== null
      if (isSub)
        continue OUTER
    }
    // the null set is a subset of everything, but null simple ranges in
    // a complex range should be ignored.  so if we saw a non-null range,
    // then we know this isn't a subset, but if EVERY simple range was null,
    // then it is a subset.
    if (sawNonNull)
      return false
  }
  return true
}

const simpleSubset = (sub, dom, options) => {
  if (sub === dom)
    return true

  if (sub.length === 1 && sub[0].semver === ANY) {
    if (dom.length === 1 && dom[0].semver === ANY)
      return true
    else if (options.includePrerelease)
      sub = [ new Comparator('>=0.0.0-0') ]
    else
      sub = [ new Comparator('>=0.0.0') ]
  }

  if (dom.length === 1 && dom[0].semver === ANY) {
    if (options.includePrerelease)
      return true
    else
      dom = [ new Comparator('>=0.0.0') ]
  }

  const eqSet = new Set()
  let gt, lt
  for (const c of sub) {
    if (c.operator === '>' || c.operator === '>=')
      gt = higherGT(gt, c, options)
    else if (c.operator === '<' || c.operator === '<=')
      lt = lowerLT(lt, c, options)
    else
      eqSet.add(c.semver)
  }

  if (eqSet.size > 1)
    return null

  let gtltComp
  if (gt && lt) {
    gtltComp = compare(gt.semver, lt.semver, options)
    if (gtltComp > 0)
      return null
    else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<='))
      return null
  }

  // will iterate one or zero times
  for (const eq of eqSet) {
    if (gt && !satisfies(eq, String(gt), options))
      return null

    if (lt && !satisfies(eq, String(lt), options))
      return null

    for (const c of dom) {
      if (!satisfies(eq, String(c), options))
        return false
    }

    return true
  }

  let higher, lower
  let hasDomLT, hasDomGT
  // if the subset has a prerelease, we need a comparator in the superset
  // with the same tuple and a prerelease, or it's not a subset
  let needDomLTPre = lt &&
    !options.includePrerelease &&
    lt.semver.prerelease.length ? lt.semver : false
  let needDomGTPre = gt &&
    !options.includePrerelease &&
    gt.semver.prerelease.length ? gt.semver : false
  // exception: <1.2.3-0 is the same as <1.2.3
  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&
      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {
    needDomLTPre = false
  }

  for (const c of dom) {
    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='
    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='
    if (gt) {
      if (needDomGTPre) {
        if (c.semver.prerelease && c.semver.prerelease.length &&
            c.semver.major === needDomGTPre.major &&
            c.semver.minor === needDomGTPre.minor &&
            c.semver.patch === needDomGTPre.patch) {
          needDomGTPre = false
        }
      }
      if (c.operator === '>' || c.operator === '>=') {
        higher = higherGT(gt, c, options)
        if (higher === c && higher !== gt)
          return false
      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options))
        return false
    }
    if (lt) {
      if (needDomLTPre) {
        if (c.semver.prerelease && c.semver.prerelease.length &&
            c.semver.major === needDomLTPre.major &&
            c.semver.minor === needDomLTPre.minor &&
            c.semver.patch === needDomLTPre.patch) {
          needDomLTPre = false
        }
      }
      if (c.operator === '<' || c.operator === '<=') {
        lower = lowerLT(lt, c, options)
        if (lower === c && lower !== lt)
          return false
      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options))
        return false
    }
    if (!c.operator && (lt || gt) && gtltComp !== 0)
      return false
  }

  // if there was a < or >, and nothing in the dom, then must be false
  // UNLESS it was limited by another range in the other direction.
  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0
  if (gt && hasDomLT && !lt && gtltComp !== 0)
    return false

  if (lt && hasDomGT && !gt && gtltComp !== 0)
    return false

  // we needed a prerelease range in a specific tuple, but didn't get one
  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,
  // because it includes prereleases in the 1.2.3 tuple
  if (needDomGTPre || needDomLTPre)
    return false

  return true
}

// >=1.2.3 is lower than >1.2.3
const higherGT = (a, b, options) => {
  if (!a)
    return b
  const comp = compare(a.semver, b.semver, options)
  return comp > 0 ? a
    : comp < 0 ? b
    : b.operator === '>' && a.operator === '>=' ? b
    : a
}

// <=1.2.3 is higher than <1.2.3
const lowerLT = (a, b, options) => {
  if (!a)
    return b
  const comp = compare(a.semver, b.semver, options)
  return comp < 0 ? a
    : comp > 0 ? b
    : b.operator === '<' && a.operator === '<=' ? b
    : a
}

module.exports = subset


/***/ }),

/***/ 52706:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9828)

// Mostly just for testing and legacy API reasons
const toComparators = (range, options) =>
  new Range(range, options).set
    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))

module.exports = toComparators


/***/ }),

/***/ 2098:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const Range = __nccwpck_require__(9828)
const validRange = (range, options) => {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}
module.exports = validRange


/***/ }),

/***/ 70254:
/***/ ((module, exports, __nccwpck_require__) => {

/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */

exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (() => {
	let warned = false;

	return () => {
		if (!warned) {
			warned = true;
			console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
		}
	};
})();

/**
 * Colors.
 */

exports.colors = [
	'#0000CC',
	'#0000FF',
	'#0033CC',
	'#0033FF',
	'#0066CC',
	'#0066FF',
	'#0099CC',
	'#0099FF',
	'#00CC00',
	'#00CC33',
	'#00CC66',
	'#00CC99',
	'#00CCCC',
	'#00CCFF',
	'#3300CC',
	'#3300FF',
	'#3333CC',
	'#3333FF',
	'#3366CC',
	'#3366FF',
	'#3399CC',
	'#3399FF',
	'#33CC00',
	'#33CC33',
	'#33CC66',
	'#33CC99',
	'#33CCCC',
	'#33CCFF',
	'#6600CC',
	'#6600FF',
	'#6633CC',
	'#6633FF',
	'#66CC00',
	'#66CC33',
	'#9900CC',
	'#9900FF',
	'#9933CC',
	'#9933FF',
	'#99CC00',
	'#99CC33',
	'#CC0000',
	'#CC0033',
	'#CC0066',
	'#CC0099',
	'#CC00CC',
	'#CC00FF',
	'#CC3300',
	'#CC3333',
	'#CC3366',
	'#CC3399',
	'#CC33CC',
	'#CC33FF',
	'#CC6600',
	'#CC6633',
	'#CC9900',
	'#CC9933',
	'#CCCC00',
	'#CCCC33',
	'#FF0000',
	'#FF0033',
	'#FF0066',
	'#FF0099',
	'#FF00CC',
	'#FF00FF',
	'#FF3300',
	'#FF3333',
	'#FF3366',
	'#FF3399',
	'#FF33CC',
	'#FF33FF',
	'#FF6600',
	'#FF6633',
	'#FF9900',
	'#FF9933',
	'#FFCC00',
	'#FFCC33'
];

/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */

// eslint-disable-next-line complexity
function useColors() {
	// NB: In an Electron preload script, document will be defined but not fully
	// initialized. Since we know we're in Chrome, we'll just detect this case
	// explicitly
	if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
		return true;
	}

	// Internet Explorer and Edge do not support colors.
	if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
		return false;
	}

	// Is webkit? http://stackoverflow.com/a/16459606/376773
	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
		// Is firebug? http://stackoverflow.com/a/398120/376773
		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
		// Is firefox >= v31?
		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
		// Double check webkit in userAgent just in case we are in a worker
		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
}

/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	args[0] = (this.useColors ? '%c' : '') +
		this.namespace +
		(this.useColors ? ' %c' : ' ') +
		args[0] +
		(this.useColors ? '%c ' : ' ') +
		'+' + module.exports.humanize(this.diff);

	if (!this.useColors) {
		return;
	}

	const c = 'color: ' + this.color;
	args.splice(1, 0, c, 'color: inherit');

	// The final "%c" is somewhat tricky, because there could be other
	// arguments passed either before or after the %c, so we need to
	// figure out the correct index to insert the CSS into
	let index = 0;
	let lastC = 0;
	args[0].replace(/%[a-zA-Z%]/g, match => {
		if (match === '%%') {
			return;
		}
		index++;
		if (match === '%c') {
			// We only are interested in the *last* %c
			// (the user may have provided their own)
			lastC = index;
		}
	});

	args.splice(lastC, 0, c);
}

/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */
exports.log = console.debug || console.log || (() => {});

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	try {
		if (namespaces) {
			exports.storage.setItem('debug', namespaces);
		} else {
			exports.storage.removeItem('debug');
		}
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */
function load() {
	let r;
	try {
		r = exports.storage.getItem('debug');
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}

	// If debug isn't set in LS, and we're in Electron, try to load $DEBUG
	if (!r && typeof process !== 'undefined' && 'env' in process) {
		r = process.env.DEBUG;
	}

	return r;
}

/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */

function localstorage() {
	try {
		// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
		// The Browser also has localStorage in the global context.
		return localStorage;
	} catch (error) {
		// Swallow
		// XXX (@Qix-) should we be logging these?
	}
}

module.exports = __nccwpck_require__(78867)(exports);

const {formatters} = module.exports;

/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
	try {
		return JSON.stringify(v);
	} catch (error) {
		return '[UnexpectedJSONParseError]: ' + error.message;
	}
};


/***/ }),

/***/ 78867:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
	createDebug.debug = createDebug;
	createDebug.default = createDebug;
	createDebug.coerce = coerce;
	createDebug.disable = disable;
	createDebug.enable = enable;
	createDebug.enabled = enabled;
	createDebug.humanize = __nccwpck_require__(80900);
	createDebug.destroy = destroy;

	Object.keys(env).forEach(key => {
		createDebug[key] = env[key];
	});

	/**
	* The currently active debug mode names, and names to skip.
	*/

	createDebug.names = [];
	createDebug.skips = [];

	/**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/
	createDebug.formatters = {};

	/**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/
	function selectColor(namespace) {
		let hash = 0;

		for (let i = 0; i < namespace.length; i++) {
			hash = ((hash << 5) - hash) + namespace.charCodeAt(i);
			hash |= 0; // Convert to 32bit integer
		}

		return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
	}
	createDebug.selectColor = selectColor;

	/**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/
	function createDebug(namespace) {
		let prevTime;
		let enableOverride = null;
		let namespacesCache;
		let enabledCache;

		function debug(...args) {
			// Disabled?
			if (!debug.enabled) {
				return;
			}

			const self = debug;

			// Set `diff` timestamp
			const curr = Number(new Date());
			const ms = curr - (prevTime || curr);
			self.diff = ms;
			self.prev = prevTime;
			self.curr = curr;
			prevTime = curr;

			args[0] = createDebug.coerce(args[0]);

			if (typeof args[0] !== 'string') {
				// Anything else let's inspect with %O
				args.unshift('%O');
			}

			// Apply any `formatters` transformations
			let index = 0;
			args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {
				// If we encounter an escaped % then don't increase the array index
				if (match === '%%') {
					return '%';
				}
				index++;
				const formatter = createDebug.formatters[format];
				if (typeof formatter === 'function') {
					const val = args[index];
					match = formatter.call(self, val);

					// Now we need to remove `args[index]` since it's inlined in the `format`
					args.splice(index, 1);
					index--;
				}
				return match;
			});

			// Apply env-specific formatting (colors, etc.)
			createDebug.formatArgs.call(self, args);

			const logFn = self.log || createDebug.log;
			logFn.apply(self, args);
		}

		debug.namespace = namespace;
		debug.useColors = createDebug.useColors();
		debug.color = createDebug.selectColor(namespace);
		debug.extend = extend;
		debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.

		Object.defineProperty(debug, 'enabled', {
			enumerable: true,
			configurable: false,
			get: () => {
				if (enableOverride !== null) {
					return enableOverride;
				}
				if (namespacesCache !== createDebug.namespaces) {
					namespacesCache = createDebug.namespaces;
					enabledCache = createDebug.enabled(namespace);
				}

				return enabledCache;
			},
			set: v => {
				enableOverride = v;
			}
		});

		// Env-specific initialization logic for debug instances
		if (typeof createDebug.init === 'function') {
			createDebug.init(debug);
		}

		return debug;
	}

	function extend(namespace, delimiter) {
		const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
		newDebug.log = this.log;
		return newDebug;
	}

	/**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/
	function enable(namespaces) {
		createDebug.save(namespaces);
		createDebug.namespaces = namespaces;

		createDebug.names = [];
		createDebug.skips = [];

		let i;
		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
		const len = split.length;

		for (i = 0; i < len; i++) {
			if (!split[i]) {
				// ignore empty strings
				continue;
			}

			namespaces = split[i].replace(/\*/g, '.*?');

			if (namespaces[0] === '-') {
				createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
			} else {
				createDebug.names.push(new RegExp('^' + namespaces + '$'));
			}
		}
	}

	/**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/
	function disable() {
		const namespaces = [
			...createDebug.names.map(toNamespace),
			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
		].join(',');
		createDebug.enable('');
		return namespaces;
	}

	/**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/
	function enabled(name) {
		if (name[name.length - 1] === '*') {
			return true;
		}

		let i;
		let len;

		for (i = 0, len = createDebug.skips.length; i < len; i++) {
			if (createDebug.skips[i].test(name)) {
				return false;
			}
		}

		for (i = 0, len = createDebug.names.length; i < len; i++) {
			if (createDebug.names[i].test(name)) {
				return true;
			}
		}

		return false;
	}

	/**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/
	function toNamespace(regexp) {
		return regexp.toString()
			.substring(2, regexp.toString().length - 2)
			.replace(/\.\*\?$/, '*');
	}

	/**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/
	function coerce(val) {
		if (val instanceof Error) {
			return val.stack || val.message;
		}
		return val;
	}

	/**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/
	function destroy() {
		console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
	}

	createDebug.enable(createDebug.load());

	return createDebug;
}

module.exports = setup;


/***/ }),

/***/ 42179:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */

if (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {
	module.exports = __nccwpck_require__(70254);
} else {
	module.exports = __nccwpck_require__(80675);
}


/***/ }),

/***/ 80675:
/***/ ((module, exports, __nccwpck_require__) => {

/**
 * Module dependencies.
 */

const tty = __nccwpck_require__(33867);
const util = __nccwpck_require__(31669);

/**
 * This is the Node.js implementation of `debug()`.
 */

exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(
	() => {},
	'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'
);

/**
 * Colors.
 */

exports.colors = [6, 2, 3, 4, 5, 1];

try {
	// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
	// eslint-disable-next-line import/no-extraneous-dependencies
	const supportsColor = __nccwpck_require__(59318);

	if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
		exports.colors = [
			20,
			21,
			26,
			27,
			32,
			33,
			38,
			39,
			40,
			41,
			42,
			43,
			44,
			45,
			56,
			57,
			62,
			63,
			68,
			69,
			74,
			75,
			76,
			77,
			78,
			79,
			80,
			81,
			92,
			93,
			98,
			99,
			112,
			113,
			128,
			129,
			134,
			135,
			148,
			149,
			160,
			161,
			162,
			163,
			164,
			165,
			166,
			167,
			168,
			169,
			170,
			171,
			172,
			173,
			178,
			179,
			184,
			185,
			196,
			197,
			198,
			199,
			200,
			201,
			202,
			203,
			204,
			205,
			206,
			207,
			208,
			209,
			214,
			215,
			220,
			221
		];
	}
} catch (error) {
	// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}

/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */

exports.inspectOpts = Object.keys(process.env).filter(key => {
	return /^debug_/i.test(key);
}).reduce((obj, key) => {
	// Camel-case
	const prop = key
		.substring(6)
		.toLowerCase()
		.replace(/_([a-z])/g, (_, k) => {
			return k.toUpperCase();
		});

	// Coerce string value into JS value
	let val = process.env[key];
	if (/^(yes|on|true|enabled)$/i.test(val)) {
		val = true;
	} else if (/^(no|off|false|disabled)$/i.test(val)) {
		val = false;
	} else if (val === 'null') {
		val = null;
	} else {
		val = Number(val);
	}

	obj[prop] = val;
	return obj;
}, {});

/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */

function useColors() {
	return 'colors' in exports.inspectOpts ?
		Boolean(exports.inspectOpts.colors) :
		tty.isatty(process.stderr.fd);
}

/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */

function formatArgs(args) {
	const {namespace: name, useColors} = this;

	if (useColors) {
		const c = this.color;
		const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
		const prefix = `  ${colorCode};1m${name} \u001B[0m`;

		args[0] = prefix + args[0].split('\n').join('\n' + prefix);
		args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\u001B[0m');
	} else {
		args[0] = getDate() + name + ' ' + args[0];
	}
}

function getDate() {
	if (exports.inspectOpts.hideDate) {
		return '';
	}
	return new Date().toISOString() + ' ';
}

/**
 * Invokes `util.format()` with the specified arguments and writes to stderr.
 */

function log(...args) {
	return process.stderr.write(util.format(...args) + '\n');
}

/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */
function save(namespaces) {
	if (namespaces) {
		process.env.DEBUG = namespaces;
	} else {
		// If you set a process.env field to null or undefined, it gets cast to the
		// string 'null' or 'undefined'. Just delete instead.
		delete process.env.DEBUG;
	}
}

/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */

function load() {
	return process.env.DEBUG;
}

/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */

function init(debug) {
	debug.inspectOpts = {};

	const keys = Object.keys(exports.inspectOpts);
	for (let i = 0; i < keys.length; i++) {
		debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
	}
}

module.exports = __nccwpck_require__(78867)(exports);

const {formatters} = module.exports;

/**
 * Map %o to `util.inspect()`, all on a single line.
 */

formatters.o = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts)
		.split('\n')
		.map(str => str.trim())
		.join(' ');
};

/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */

formatters.O = function (v) {
	this.inspectOpts.colors = this.useColors;
	return util.inspect(v, this.inspectOpts);
};


/***/ }),

/***/ 74966:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const {GitExecutor} = __nccwpck_require__(94701);
const {SimpleGitApi} = __nccwpck_require__(30999);

const {Scheduler} = __nccwpck_require__(3421);
const {GitLogger} = __nccwpck_require__(57178);
const {configurationErrorTask} = __nccwpck_require__(32815);
const {
   asArray,
   filterArray,
   filterPrimitives,
   filterString,
   filterStringOrStringArray,
   filterType,
   getTrailingOptions,
   trailingFunctionArgument,
   trailingOptionsArgument
} = __nccwpck_require__(90847);
const {applyPatchTask} = __nccwpck_require__(34931)
const {branchTask, branchLocalTask, deleteBranchesTask, deleteBranchTask} = __nccwpck_require__(60017);
const {checkIgnoreTask} = __nccwpck_require__(3293);
const {checkIsRepoTask} = __nccwpck_require__(20221);
const {cloneTask, cloneMirrorTask} = __nccwpck_require__(3173);
const {cleanWithOptionsTask, isCleanOptionsArray} = __nccwpck_require__(84386);
const {commitTask} = __nccwpck_require__(15494);
const {diffSummaryTask} = __nccwpck_require__(79241);
const {fetchTask} = __nccwpck_require__(28823);
const {moveTask} = __nccwpck_require__(16520);
const {pullTask} = __nccwpck_require__(64636);
const {pushTagsTask} = __nccwpck_require__(51435);
const {addRemoteTask, getRemotesTask, listRemotesTask, remoteTask, removeRemoteTask} = __nccwpck_require__(89866);
const {getResetMode, resetTask} = __nccwpck_require__(92377);
const {stashListTask} = __nccwpck_require__(30810);
const {addSubModuleTask, initSubModuleTask, subModuleTask, updateSubModuleTask} = __nccwpck_require__(48772);
const {addAnnotatedTagTask, addTagTask, tagListTask} = __nccwpck_require__(98540);
const {straightThroughBufferTask, straightThroughStringTask} = __nccwpck_require__(32815);

function Git (options, plugins) {
   this._executor = new GitExecutor(
      options.binary, options.baseDir,
      new Scheduler(options.maxConcurrentProcesses), plugins,
   );
   this._logger = new GitLogger();
}

(Git.prototype = Object.create(SimpleGitApi.prototype)).constructor = Git;

/**
 * Logging utility for printing out info or error messages to the user
 * @type {GitLogger}
 * @private
 */
Git.prototype._logger = null;

/**
 * Sets the path to a custom git binary, should either be `git` when there is an installation of git available on
 * the system path, or a fully qualified path to the executable.
 *
 * @param {string} command
 * @returns {Git}
 */
Git.prototype.customBinary = function (command) {
   this._executor.binary = command;
   return this;
};

/**
 * Sets an environment variable for the spawned child process, either supply both a name and value as strings or
 * a single object to entirely replace the current environment variables.
 *
 * @param {string|Object} name
 * @param {string} [value]
 * @returns {Git}
 */
Git.prototype.env = function (name, value) {
   if (arguments.length === 1 && typeof name === 'object') {
      this._executor.env = name;
   } else {
      (this._executor.env = this._executor.env || {})[name] = value;
   }

   return this;
};

/**
 * List the stash(s) of the local repo
 */
Git.prototype.stashList = function (options) {
   return this._runTask(
      stashListTask(
         trailingOptionsArgument(arguments) || {},
         filterArray(options) && options || []
      ),
      trailingFunctionArgument(arguments),
   );
};

function createCloneTask (api, task, repoPath, localPath) {
   if (typeof repoPath !== 'string') {
      return configurationErrorTask(`git.${ api }() requires a string 'repoPath'`);
   }

   return task(repoPath, filterType(localPath, filterString), getTrailingOptions(arguments));
}


/**
 * Clone a git repo
 */
Git.prototype.clone = function () {
   return this._runTask(
      createCloneTask('clone', cloneTask, ...arguments),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Mirror a git repo
 */
Git.prototype.mirror = function () {
   return this._runTask(
      createCloneTask('mirror', cloneMirrorTask, ...arguments),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Moves one or more files to a new destination.
 *
 * @see https://git-scm.com/docs/git-mv
 *
 * @param {string|string[]} from
 * @param {string} to
 */
Git.prototype.mv = function (from, to) {
   return this._runTask(moveTask(from, to), trailingFunctionArgument(arguments));
};

/**
 * Internally uses pull and tags to get the list of tags then checks out the latest tag.
 *
 * @param {Function} [then]
 */
Git.prototype.checkoutLatestTag = function (then) {
   var git = this;
   return this.pull(function () {
      git.tags(function (err, tags) {
         git.checkout(tags.latest, then);
      });
   });
};

/**
 * Commits changes in the current working directory - when specific file paths are supplied, only changes on those
 * files will be committed.
 *
 * @param {string|string[]} message
 * @param {string|string[]} [files]
 * @param {Object} [options]
 * @param {Function} [then]
 */
Git.prototype.commit = function (message, files, options, then) {
   const next = trailingFunctionArgument(arguments);
   const messages = [];

   if (filterStringOrStringArray(message)) {
      messages.push(...asArray(message));
   } else {
      console.warn('simple-git deprecation notice: git.commit: requires the commit message to be supplied as a string/string[], this will be an error in version 3');
   }

   return this._runTask(
      commitTask(
         messages,
         asArray(filterType(files, filterStringOrStringArray, [])),
         [...filterType(options, filterArray, []), ...getTrailingOptions(arguments, 0, true)]
      ),
      next
   );
};

/**
 * Pull the updated contents of the current repo
 */
Git.prototype.pull = function (remote, branch, options, then) {
   return this._runTask(
      pullTask(filterType(remote, filterString), filterType(branch, filterString), getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Fetch the updated contents of the current repo.
 *
 * @example
 *   .fetch('upstream', 'master') // fetches from master on remote named upstream
 *   .fetch(function () {}) // runs fetch against default remote and branch and calls function
 *
 * @param {string} [remote]
 * @param {string} [branch]
 */
Git.prototype.fetch = function (remote, branch) {
   return this._runTask(
      fetchTask(filterType(remote, filterString), filterType(branch, filterString), getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Disables/enables the use of the console for printing warnings and errors, by default messages are not shown in
 * a production environment.
 *
 * @param {boolean} silence
 * @returns {Git}
 */
Git.prototype.silent = function (silence) {
   console.warn('simple-git deprecation notice: git.silent: logging should be configured using the `debug` library / `DEBUG` environment variable, this will be an error in version 3');
   this._logger.silent(!!silence);
   return this;
};

/**
 * List all tags. When using git 2.7.0 or above, include an options object with `"--sort": "property-name"` to
 * sort the tags by that property instead of using the default semantic versioning sort.
 *
 * Note, supplying this option when it is not supported by your Git version will cause the operation to fail.
 *
 * @param {Object} [options]
 * @param {Function} [then]
 */
Git.prototype.tags = function (options, then) {
   return this._runTask(
      tagListTask(getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Rebases the current working copy. Options can be supplied either as an array of string parameters
 * to be sent to the `git rebase` command, or a standard options object.
 */
Git.prototype.rebase = function () {
   return this._runTask(
      straightThroughStringTask(['rebase', ...getTrailingOptions(arguments)]),
      trailingFunctionArgument(arguments)
   );
};

/**
 * Reset a repo
 */
Git.prototype.reset = function (mode) {
   return this._runTask(
      resetTask(getResetMode(mode), getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Revert one or more commits in the local working copy
 */
Git.prototype.revert = function (commit) {
   const next = trailingFunctionArgument(arguments);

   if (typeof commit !== 'string') {
      return this._runTask(
         configurationErrorTask('Commit must be a string'),
         next,
      );
   }

   return this._runTask(
      straightThroughStringTask(['revert', ...getTrailingOptions(arguments, 0, true), commit]),
      next
   );
};

/**
 * Add a lightweight tag to the head of the current branch
 */
Git.prototype.addTag = function (name) {
   const task = (typeof name === 'string')
      ? addTagTask(name)
      : configurationErrorTask('Git.addTag requires a tag name');

   return this._runTask(task, trailingFunctionArgument(arguments));
};

/**
 * Add an annotated tag to the head of the current branch
 */
Git.prototype.addAnnotatedTag = function (tagName, tagMessage) {
   return this._runTask(
      addAnnotatedTagTask(tagName, tagMessage),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Check out a tag or revision, any number of additional arguments can be passed to the `git checkout` command
 * by supplying either a string or array of strings as the first argument.
 */
Git.prototype.checkout = function () {
   const commands = ['checkout', ...getTrailingOptions(arguments, true)];
   return this._runTask(
      straightThroughStringTask(commands),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Check out a remote branch
 *
 * @param {string} branchName name of branch
 * @param {string} startPoint (e.g origin/development)
 * @param {Function} [then]
 */
Git.prototype.checkoutBranch = function (branchName, startPoint, then) {
   return this.checkout(['-b', branchName, startPoint], trailingFunctionArgument(arguments));
};

/**
 * Check out a local branch
 */
Git.prototype.checkoutLocalBranch = function (branchName, then) {
   return this.checkout(['-b', branchName], trailingFunctionArgument(arguments));
};

/**
 * Delete a local branch
 */
Git.prototype.deleteLocalBranch = function (branchName, forceDelete, then) {
   return this._runTask(
      deleteBranchTask(branchName, typeof forceDelete === "boolean" ? forceDelete : false),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Delete one or more local branches
 */
Git.prototype.deleteLocalBranches = function (branchNames, forceDelete, then) {
   return this._runTask(
      deleteBranchesTask(branchNames, typeof forceDelete === "boolean" ? forceDelete : false),
      trailingFunctionArgument(arguments),
   );
};

/**
 * List all branches
 *
 * @param {Object | string[]} [options]
 * @param {Function} [then]
 */
Git.prototype.branch = function (options, then) {
   return this._runTask(
      branchTask(getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Return list of local branches
 *
 * @param {Function} [then]
 */
Git.prototype.branchLocal = function (then) {
   return this._runTask(
      branchLocalTask(),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Executes any command against the git binary.
 */
Git.prototype.raw = function (commands) {
   const createRestCommands = !Array.isArray(commands);
   const command = [].slice.call(createRestCommands ? arguments : commands, 0);

   for (let i = 0; i < command.length && createRestCommands; i++) {
      if (!filterPrimitives(command[i])) {
         command.splice(i, command.length - i);
         break;
      }
   }

   command.push(
      ...getTrailingOptions(arguments, 0, true),
   );

   var next = trailingFunctionArgument(arguments);

   if (!command.length) {
      return this._runTask(
         configurationErrorTask('Raw: must supply one or more command to execute'),
         next,
      );
   }

   return this._runTask(straightThroughStringTask(command), next);
};

Git.prototype.submoduleAdd = function (repo, path, then) {
   return this._runTask(
      addSubModuleTask(repo, path),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.submoduleUpdate = function (args, then) {
   return this._runTask(
      updateSubModuleTask(getTrailingOptions(arguments, true)),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.submoduleInit = function (args, then) {
   return this._runTask(
      initSubModuleTask(getTrailingOptions(arguments, true)),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.subModule = function (options, then) {
   return this._runTask(
      subModuleTask(getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.listRemote = function () {
   return this._runTask(
      listRemotesTask(getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Adds a remote to the list of remotes.
 */
Git.prototype.addRemote = function (remoteName, remoteRepo, then) {
   return this._runTask(
      addRemoteTask(remoteName, remoteRepo, getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Removes an entry by name from the list of remotes.
 */
Git.prototype.removeRemote = function (remoteName, then) {
   return this._runTask(
      removeRemoteTask(remoteName),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Gets the currently available remotes, setting the optional verbose argument to true includes additional
 * detail on the remotes themselves.
 */
Git.prototype.getRemotes = function (verbose, then) {
   return this._runTask(
      getRemotesTask(verbose === true),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Call any `git remote` function with arguments passed as an array of strings.
 *
 * @param {string[]} options
 * @param {Function} [then]
 */
Git.prototype.remote = function (options, then) {
   return this._runTask(
      remoteTask(getTrailingOptions(arguments)),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Call any `git tag` function with arguments passed as an array of strings.
 *
 * @param {string[]} options
 * @param {Function} [then]
 */
Git.prototype.tag = function (options, then) {
   const command = getTrailingOptions(arguments);

   if (command[0] !== 'tag') {
      command.unshift('tag');
   }

   return this._runTask(
      straightThroughStringTask(command),
      trailingFunctionArgument(arguments)
   );
};

/**
 * Updates repository server info
 *
 * @param {Function} [then]
 */
Git.prototype.updateServerInfo = function (then) {
   return this._runTask(
      straightThroughStringTask(['update-server-info']),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Pushes the current tag changes to a remote which can be either a URL or named remote. When not specified uses the
 * default configured remote spec.
 *
 * @param {string} [remote]
 * @param {Function} [then]
 */
Git.prototype.pushTags = function (remote, then) {
   const task = pushTagsTask({remote: filterType(remote, filterString)}, getTrailingOptions(arguments));

   return this._runTask(task, trailingFunctionArgument(arguments));
};

/**
 * Removes the named files from source control.
 */
Git.prototype.rm = function (files) {
   return this._runTask(
      straightThroughStringTask(['rm', '-f', ...asArray(files)]),
      trailingFunctionArgument(arguments)
   );
};

/**
 * Removes the named files from source control but keeps them on disk rather than deleting them entirely. To
 * completely remove the files, use `rm`.
 *
 * @param {string|string[]} files
 */
Git.prototype.rmKeepLocal = function (files) {
   return this._runTask(
      straightThroughStringTask(['rm', '--cached', ...asArray(files)]),
      trailingFunctionArgument(arguments)
   );
};

/**
 * Returns a list of objects in a tree based on commit hash. Passing in an object hash returns the object's content,
 * size, and type.
 *
 * Passing "-p" will instruct cat-file to determine the object type, and display its formatted contents.
 *
 * @param {string[]} [options]
 * @param {Function} [then]
 */
Git.prototype.catFile = function (options, then) {
   return this._catFile('utf-8', arguments);
};

Git.prototype.binaryCatFile = function () {
   return this._catFile('buffer', arguments);
};

Git.prototype._catFile = function (format, args) {
   var handler = trailingFunctionArgument(args);
   var command = ['cat-file'];
   var options = args[0];

   if (typeof options === 'string') {
      return this._runTask(
         configurationErrorTask('Git.catFile: options must be supplied as an array of strings'),
         handler,
      );
   }

   if (Array.isArray(options)) {
      command.push.apply(command, options);
   }

   const task = format === 'buffer'
      ? straightThroughBufferTask(command)
      : straightThroughStringTask(command);

   return this._runTask(task, handler);
};

Git.prototype.diff = function (options, then) {
   const command = ['diff', ...getTrailingOptions(arguments)];

   if (typeof options === 'string') {
      command.splice(1, 0, options);
      this._logger.warn('Git#diff: supplying options as a single string is now deprecated, switch to an array of strings');
   }

   return this._runTask(
      straightThroughStringTask(command),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.diffSummary = function () {
   return this._runTask(
      diffSummaryTask(getTrailingOptions(arguments, 1)),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.applyPatch = function (patches) {
   const task = !filterStringOrStringArray(patches)
      ? configurationErrorTask(`git.applyPatch requires one or more string patches as the first argument`)
      : applyPatchTask(asArray(patches), getTrailingOptions([].slice.call(arguments, 1)));

   return this._runTask(
      task,
      trailingFunctionArgument(arguments),
   );
}

Git.prototype.revparse = function () {
   const commands = ['rev-parse', ...getTrailingOptions(arguments, true)];
   return this._runTask(
      straightThroughStringTask(commands, true),
      trailingFunctionArgument(arguments),
   );
};

/**
 * Show various types of objects, for example the file at a certain commit
 *
 * @param {string[]} [options]
 * @param {Function} [then]
 */
Git.prototype.show = function (options, then) {
   return this._runTask(
      straightThroughStringTask(['show', ...getTrailingOptions(arguments, 1)]),
      trailingFunctionArgument(arguments)
   );
};

/**
 */
Git.prototype.clean = function (mode, options, then) {
   const usingCleanOptionsArray = isCleanOptionsArray(mode);
   const cleanMode = usingCleanOptionsArray && mode.join('') || filterType(mode, filterString) || '';
   const customArgs = getTrailingOptions([].slice.call(arguments, usingCleanOptionsArray ? 1 : 0));

   return this._runTask(
      cleanWithOptionsTask(cleanMode, customArgs),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.exec = function (then) {
   const task = {
      commands: [],
      format: 'utf-8',
      parser () {
         if (typeof then === 'function') {
            then();
         }
      }
   };

   return this._runTask(task);
};

/**
 * Clears the queue of pending commands and returns the wrapper instance for chaining.
 *
 * @returns {Git}
 */
Git.prototype.clearQueue = function () {
   // TODO:
   // this._executor.clear();
   return this;
};

/**
 * Check if a pathname or pathnames are excluded by .gitignore
 *
 * @param {string|string[]} pathnames
 * @param {Function} [then]
 */
Git.prototype.checkIgnore = function (pathnames, then) {
   return this._runTask(
      checkIgnoreTask(asArray((filterType(pathnames, filterStringOrStringArray, [])))),
      trailingFunctionArgument(arguments),
   );
};

Git.prototype.checkIsRepo = function (checkType, then) {
   return this._runTask(
      checkIsRepoTask(filterType(checkType, filterString)),
      trailingFunctionArgument(arguments),
   );
};

module.exports = Git;


/***/ }),

/***/ 91477:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


const {gitP} = __nccwpck_require__(80941);
const {esModuleFactory, gitInstanceFactory, gitExportFactory} = __nccwpck_require__(89846);

module.exports = esModuleFactory(
   gitExportFactory(gitInstanceFactory, {gitP})
);


/***/ }),

/***/ 74732:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const git_construct_error_1 = __nccwpck_require__(71876);
const git_error_1 = __nccwpck_require__(15757);
const git_plugin_error_1 = __nccwpck_require__(90019);
const git_response_error_1 = __nccwpck_require__(85131);
const task_configuration_error_1 = __nccwpck_require__(10740);
const check_is_repo_1 = __nccwpck_require__(20221);
const clean_1 = __nccwpck_require__(84386);
const config_1 = __nccwpck_require__(57597);
const grep_1 = __nccwpck_require__(55524);
const reset_1 = __nccwpck_require__(92377);
const api = {
    CheckRepoActions: check_is_repo_1.CheckRepoActions,
    CleanOptions: clean_1.CleanOptions,
    GitConfigScope: config_1.GitConfigScope,
    GitConstructError: git_construct_error_1.GitConstructError,
    GitError: git_error_1.GitError,
    GitPluginError: git_plugin_error_1.GitPluginError,
    GitResponseError: git_response_error_1.GitResponseError,
    ResetMode: reset_1.ResetMode,
    TaskConfigurationError: task_configuration_error_1.TaskConfigurationError,
    grepQueryBuilder: grep_1.grepQueryBuilder,
};
exports.default = api;
//# sourceMappingURL=api.js.map

/***/ }),

/***/ 71876:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitConstructError = void 0;
const git_error_1 = __nccwpck_require__(15757);
/**
 * The `GitConstructError` is thrown when an error occurs in the constructor
 * of the `simple-git` instance itself. Most commonly as a result of using
 * a `baseDir` option that points to a folder that either does not exist,
 * or cannot be read by the user the node script is running as.
 *
 * Check the `.message` property for more detail including the properties
 * passed to the constructor.
 */
class GitConstructError extends git_error_1.GitError {
    constructor(config, message) {
        super(undefined, message);
        this.config = config;
    }
}
exports.GitConstructError = GitConstructError;
//# sourceMappingURL=git-construct-error.js.map

/***/ }),

/***/ 15757:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitError = void 0;
/**
 * The `GitError` is thrown when the underlying `git` process throws a
 * fatal exception (eg an `ENOENT` exception when attempting to use a
 * non-writable directory as the root for your repo), and acts as the
 * base class for more specific errors thrown by the parsing of the
 * git response or errors in the configuration of the task about to
 * be run.
 *
 * When an exception is thrown, pending tasks in the same instance will
 * not be executed. The recommended way to run a series of tasks that
 * can independently fail without needing to prevent future tasks from
 * running is to catch them individually:
 *
 * ```typescript
 import { gitP, SimpleGit, GitError, PullResult } from 'simple-git';

 function catchTask (e: GitError) {
   return e.
 }

 const git = gitP(repoWorkingDir);
 const pulled: PullResult | GitError = await git.pull().catch(catchTask);
 const pushed: string | GitError = await git.pushTags().catch(catchTask);
 ```
 */
class GitError extends Error {
    constructor(task, message) {
        super(message);
        this.task = task;
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
exports.GitError = GitError;
//# sourceMappingURL=git-error.js.map

/***/ }),

/***/ 90019:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitPluginError = void 0;
const git_error_1 = __nccwpck_require__(15757);
class GitPluginError extends git_error_1.GitError {
    constructor(task, plugin, message) {
        super(task, message);
        this.task = task;
        this.plugin = plugin;
        Object.setPrototypeOf(this, new.target.prototype);
    }
}
exports.GitPluginError = GitPluginError;
//# sourceMappingURL=git-plugin-error.js.map

/***/ }),

/***/ 85131:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitResponseError = void 0;
const git_error_1 = __nccwpck_require__(15757);
/**
 * The `GitResponseError` is the wrapper for a parsed response that is treated as
 * a fatal error, for example attempting a `merge` can leave the repo in a corrupted
 * state when there are conflicts so the task will reject rather than resolve.
 *
 * For example, catching the merge conflict exception:
 *
 * ```typescript
 import { gitP, SimpleGit, GitResponseError, MergeSummary } from 'simple-git';

 const git = gitP(repoRoot);
 const mergeOptions: string[] = ['--no-ff', 'other-branch'];
 const mergeSummary: MergeSummary = await git.merge(mergeOptions)
      .catch((e: GitResponseError<MergeSummary>) => e.git);

 if (mergeSummary.failed) {
   // deal with the error
 }
 ```
 */
class GitResponseError extends git_error_1.GitError {
    constructor(
    /**
     * `.git` access the parsed response that is treated as being an error
     */
    git, message) {
        super(undefined, message || String(git));
        this.git = git;
    }
}
exports.GitResponseError = GitResponseError;
//# sourceMappingURL=git-response-error.js.map

/***/ }),

/***/ 10740:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TaskConfigurationError = void 0;
const git_error_1 = __nccwpck_require__(15757);
/**
 * The `TaskConfigurationError` is thrown when a command was incorrectly
 * configured. An error of this kind means that no attempt was made to
 * run your command through the underlying `git` binary.
 *
 * Check the `.message` property for more detail on why your configuration
 * resulted in an error.
 */
class TaskConfigurationError extends git_error_1.GitError {
    constructor(message) {
        super(undefined, message);
    }
}
exports.TaskConfigurationError = TaskConfigurationError;
//# sourceMappingURL=task-configuration-error.js.map

/***/ }),

/***/ 89846:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.gitInstanceFactory = exports.gitExportFactory = exports.esModuleFactory = void 0;
const api_1 = __nccwpck_require__(74732);
const plugins_1 = __nccwpck_require__(78078);
const utils_1 = __nccwpck_require__(90847);
const Git = __nccwpck_require__(74966);
/**
 * Adds the necessary properties to the supplied object to enable it for use as
 * the default export of a module.
 *
 * Eg: `module.exports = esModuleFactory({ something () {} })`
 */
function esModuleFactory(defaultExport) {
    return Object.defineProperties(defaultExport, {
        __esModule: { value: true },
        default: { value: defaultExport },
    });
}
exports.esModuleFactory = esModuleFactory;
function gitExportFactory(factory, extra) {
    return Object.assign(function (...args) {
        return factory.apply(null, args);
    }, api_1.default, extra || {});
}
exports.gitExportFactory = gitExportFactory;
function gitInstanceFactory(baseDir, options) {
    const plugins = new plugins_1.PluginStore();
    const config = utils_1.createInstanceConfig(baseDir && (typeof baseDir === 'string' ? { baseDir } : baseDir) || {}, options);
    if (!utils_1.folderExists(config.baseDir)) {
        throw new api_1.default.GitConstructError(config, `Cannot use simple-git on a directory that does not exist`);
    }
    if (Array.isArray(config.config)) {
        plugins.add(plugins_1.commandConfigPrefixingPlugin(config.config));
    }
    plugins.add(plugins_1.completionDetectionPlugin(config.completion));
    config.progress && plugins.add(plugins_1.progressMonitorPlugin(config.progress));
    config.timeout && plugins.add(plugins_1.timeoutPlugin(config.timeout));
    config.spawnOptions && plugins.add(plugins_1.spawnOptionsPlugin(config.spawnOptions));
    plugins.add(plugins_1.errorDetectionPlugin(plugins_1.errorDetectionHandler(true)));
    config.errors && plugins.add(plugins_1.errorDetectionPlugin(config.errors));
    return new Git(config, plugins);
}
exports.gitInstanceFactory = gitInstanceFactory;
//# sourceMappingURL=git-factory.js.map

/***/ }),

/***/ 57178:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitLogger = exports.createLogger = void 0;
const debug_1 = __nccwpck_require__(42179);
const utils_1 = __nccwpck_require__(90847);
debug_1.default.formatters.L = (value) => String(utils_1.filterHasLength(value) ? value.length : '-');
debug_1.default.formatters.B = (value) => {
    if (Buffer.isBuffer(value)) {
        return value.toString('utf8');
    }
    return utils_1.objectToString(value);
};
function createLog() {
    return debug_1.default('simple-git');
}
function prefixedLogger(to, prefix, forward) {
    if (!prefix || !String(prefix).replace(/\s*/, '')) {
        return !forward ? to : (message, ...args) => {
            to(message, ...args);
            forward(message, ...args);
        };
    }
    return (message, ...args) => {
        to(`%s ${message}`, prefix, ...args);
        if (forward) {
            forward(message, ...args);
        }
    };
}
function childLoggerName(name, childDebugger, { namespace: parentNamespace }) {
    if (typeof name === 'string') {
        return name;
    }
    const childNamespace = childDebugger && childDebugger.namespace || '';
    if (childNamespace.startsWith(parentNamespace)) {
        return childNamespace.substr(parentNamespace.length + 1);
    }
    return childNamespace || parentNamespace;
}
function createLogger(label, verbose, initialStep, infoDebugger = createLog()) {
    const labelPrefix = label && `[${label}]` || '';
    const spawned = [];
    const debugDebugger = (typeof verbose === 'string') ? infoDebugger.extend(verbose) : verbose;
    const key = childLoggerName(utils_1.filterType(verbose, utils_1.filterString), debugDebugger, infoDebugger);
    return step(initialStep);
    function sibling(name, initial) {
        return utils_1.append(spawned, createLogger(label, key.replace(/^[^:]+/, name), initial, infoDebugger));
    }
    function step(phase) {
        const stepPrefix = phase && `[${phase}]` || '';
        const debug = debugDebugger && prefixedLogger(debugDebugger, stepPrefix) || utils_1.NOOP;
        const info = prefixedLogger(infoDebugger, `${labelPrefix} ${stepPrefix}`, debug);
        return Object.assign(debugDebugger ? debug : info, {
            label,
            sibling,
            info,
            step,
        });
    }
}
exports.createLogger = createLogger;
/**
 * The `GitLogger` is used by the main `SimpleGit` runner to handle logging
 * any warnings or errors.
 */
class GitLogger {
    constructor(_out = createLog()) {
        this._out = _out;
        this.error = prefixedLogger(_out, '[ERROR]');
        this.warn = prefixedLogger(_out, '[WARN]');
    }
    silent(silence = false) {
        if (silence !== this._out.enabled) {
            return;
        }
        const { namespace } = this._out;
        const env = (process.env.DEBUG || '').split(',').filter(s => !!s);
        const hasOn = env.includes(namespace);
        const hasOff = env.includes(`-${namespace}`);
        // enabling the log
        if (!silence) {
            if (hasOff) {
                utils_1.remove(env, `-${namespace}`);
            }
            else {
                env.push(namespace);
            }
        }
        else {
            if (hasOn) {
                utils_1.remove(env, namespace);
            }
            else {
                env.push(`-${namespace}`);
            }
        }
        debug_1.default.enable(env.join(','));
    }
}
exports.GitLogger = GitLogger;
//# sourceMappingURL=git-logger.js.map

/***/ }),

/***/ 66086:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hasBranchDeletionError = exports.parseBranchDeletions = void 0;
const BranchDeleteSummary_1 = __nccwpck_require__(73755);
const utils_1 = __nccwpck_require__(90847);
const deleteSuccessRegex = /(\S+)\s+\(\S+\s([^)]+)\)/;
const deleteErrorRegex = /^error[^']+'([^']+)'/m;
const parsers = [
    new utils_1.LineParser(deleteSuccessRegex, (result, [branch, hash]) => {
        const deletion = BranchDeleteSummary_1.branchDeletionSuccess(branch, hash);
        result.all.push(deletion);
        result.branches[branch] = deletion;
    }),
    new utils_1.LineParser(deleteErrorRegex, (result, [branch]) => {
        const deletion = BranchDeleteSummary_1.branchDeletionFailure(branch);
        result.errors.push(deletion);
        result.all.push(deletion);
        result.branches[branch] = deletion;
    }),
];
const parseBranchDeletions = (stdOut, stdErr) => {
    return utils_1.parseStringResponse(new BranchDeleteSummary_1.BranchDeletionBatch(), parsers, stdOut, stdErr);
};
exports.parseBranchDeletions = parseBranchDeletions;
function hasBranchDeletionError(data, processExitCode) {
    return processExitCode === utils_1.ExitCodes.ERROR && deleteErrorRegex.test(data);
}
exports.hasBranchDeletionError = hasBranchDeletionError;
//# sourceMappingURL=parse-branch-delete.js.map

/***/ }),

/***/ 89264:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseBranchSummary = void 0;
const BranchSummary_1 = __nccwpck_require__(34446);
const utils_1 = __nccwpck_require__(90847);
const parsers = [
    new utils_1.LineParser(/^(\*\s)?\((?:HEAD )?detached (?:from|at) (\S+)\)\s+([a-z0-9]+)\s(.*)$/, (result, [current, name, commit, label]) => {
        result.push(!!current, true, name, commit, label);
    }),
    new utils_1.LineParser(/^(\*\s)?(\S+)\s+([a-z0-9]+)\s(.*)$/s, (result, [current, name, commit, label]) => {
        result.push(!!current, false, name, commit, label);
    })
];
function parseBranchSummary(stdOut) {
    return utils_1.parseStringResponse(new BranchSummary_1.BranchSummaryResult(), parsers, stdOut);
}
exports.parseBranchSummary = parseBranchSummary;
//# sourceMappingURL=parse-branch.js.map

/***/ }),

/***/ 83026:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseCommitResult = void 0;
const utils_1 = __nccwpck_require__(90847);
const parsers = [
    new utils_1.LineParser(/^\[([^\s]+)( \([^)]+\))? ([^\]]+)/, (result, [branch, root, commit]) => {
        result.branch = branch;
        result.commit = commit;
        result.root = !!root;
    }),
    new utils_1.LineParser(/\s*Author:\s(.+)/i, (result, [author]) => {
        const parts = author.split('<');
        const email = parts.pop();
        if (!email || !email.includes('@')) {
            return;
        }
        result.author = {
            email: email.substr(0, email.length - 1),
            name: parts.join('<').trim()
        };
    }),
    new utils_1.LineParser(/(\d+)[^,]*(?:,\s*(\d+)[^,]*)(?:,\s*(\d+))/g, (result, [changes, insertions, deletions]) => {
        result.summary.changes = parseInt(changes, 10) || 0;
        result.summary.insertions = parseInt(insertions, 10) || 0;
        result.summary.deletions = parseInt(deletions, 10) || 0;
    }),
    new utils_1.LineParser(/^(\d+)[^,]*(?:,\s*(\d+)[^(]+\(([+-]))?/, (result, [changes, lines, direction]) => {
        result.summary.changes = parseInt(changes, 10) || 0;
        const count = parseInt(lines, 10) || 0;
        if (direction === '-') {
            result.summary.deletions = count;
        }
        else if (direction === '+') {
            result.summary.insertions = count;
        }
    }),
];
function parseCommitResult(stdOut) {
    const result = {
        author: null,
        branch: '',
        commit: '',
        root: false,
        summary: {
            changes: 0,
            insertions: 0,
            deletions: 0,
        },
    };
    return utils_1.parseStringResponse(result, parsers, stdOut);
}
exports.parseCommitResult = parseCommitResult;
//# sourceMappingURL=parse-commit.js.map

/***/ }),

/***/ 2024:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseDiffResult = void 0;
const DiffSummary_1 = __nccwpck_require__(84781);
function parseDiffResult(stdOut) {
    const lines = stdOut.trim().split('\n');
    const status = new DiffSummary_1.DiffSummary();
    readSummaryLine(status, lines.pop());
    for (let i = 0, max = lines.length; i < max; i++) {
        const line = lines[i];
        textFileChange(line, status) || binaryFileChange(line, status);
    }
    return status;
}
exports.parseDiffResult = parseDiffResult;
function readSummaryLine(status, summary) {
    (summary || '')
        .trim()
        .split(', ')
        .forEach(function (text) {
        const summary = /(\d+)\s([a-z]+)/.exec(text);
        if (!summary) {
            return;
        }
        summaryType(status, summary[2], parseInt(summary[1], 10));
    });
}
function summaryType(status, key, value) {
    const match = (/([a-z]+?)s?\b/.exec(key));
    if (!match || !statusUpdate[match[1]]) {
        return;
    }
    statusUpdate[match[1]](status, value);
}
const statusUpdate = {
    file(status, value) {
        status.changed = value;
    },
    deletion(status, value) {
        status.deletions = value;
    },
    insertion(status, value) {
        status.insertions = value;
    }
};
function textFileChange(input, { files }) {
    const line = input.trim().match(/^(.+)\s+\|\s+(\d+)(\s+[+\-]+)?$/);
    if (line) {
        var alterations = (line[3] || '').trim();
        files.push({
            file: line[1].trim(),
            changes: parseInt(line[2], 10),
            insertions: alterations.replace(/-/g, '').length,
            deletions: alterations.replace(/\+/g, '').length,
            binary: false
        });
        return true;
    }
    return false;
}
function binaryFileChange(input, { files }) {
    const line = input.match(/^(.+) \|\s+Bin ([0-9.]+) -> ([0-9.]+) ([a-z]+)$/);
    if (line) {
        files.push({
            file: line[1].trim(),
            before: +line[2],
            after: +line[3],
            binary: true
        });
        return true;
    }
    return false;
}
//# sourceMappingURL=parse-diff-summary.js.map

/***/ }),

/***/ 56254:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseFetchResult = void 0;
const utils_1 = __nccwpck_require__(90847);
const parsers = [
    new utils_1.LineParser(/From (.+)$/, (result, [remote]) => {
        result.remote = remote;
    }),
    new utils_1.LineParser(/\* \[new branch]\s+(\S+)\s*-> (.+)$/, (result, [name, tracking]) => {
        result.branches.push({
            name,
            tracking,
        });
    }),
    new utils_1.LineParser(/\* \[new tag]\s+(\S+)\s*-> (.+)$/, (result, [name, tracking]) => {
        result.tags.push({
            name,
            tracking,
        });
    })
];
function parseFetchResult(stdOut, stdErr) {
    const result = {
        raw: stdOut,
        remote: null,
        branches: [],
        tags: [],
    };
    return utils_1.parseStringResponse(result, parsers, stdOut, stdErr);
}
exports.parseFetchResult = parseFetchResult;
//# sourceMappingURL=parse-fetch.js.map

/***/ }),

/***/ 9729:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createListLogSummaryParser = exports.SPLITTER = exports.COMMIT_BOUNDARY = exports.START_BOUNDARY = void 0;
const utils_1 = __nccwpck_require__(90847);
const parse_diff_summary_1 = __nccwpck_require__(2024);
exports.START_BOUNDARY = 'òòòòòò ';
exports.COMMIT_BOUNDARY = ' òò';
exports.SPLITTER = ' ò ';
const defaultFieldNames = ['hash', 'date', 'message', 'refs', 'author_name', 'author_email'];
function lineBuilder(tokens, fields) {
    return fields.reduce((line, field, index) => {
        line[field] = tokens[index] || '';
        return line;
    }, Object.create({ diff: null }));
}
function createListLogSummaryParser(splitter = exports.SPLITTER, fields = defaultFieldNames) {
    return function (stdOut) {
        const all = utils_1.toLinesWithContent(stdOut, true, exports.START_BOUNDARY)
            .map(function (item) {
            const lineDetail = item.trim().split(exports.COMMIT_BOUNDARY);
            const listLogLine = lineBuilder(lineDetail[0].trim().split(splitter), fields);
            if (lineDetail.length > 1 && !!lineDetail[1].trim()) {
                listLogLine.diff = parse_diff_summary_1.parseDiffResult(lineDetail[1]);
            }
            return listLogLine;
        });
        return {
            all,
            latest: all.length && all[0] || null,
            total: all.length,
        };
    };
}
exports.createListLogSummaryParser = createListLogSummaryParser;
//# sourceMappingURL=parse-list-log-summary.js.map

/***/ }),

/***/ 66412:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseMergeDetail = exports.parseMergeResult = void 0;
const MergeSummary_1 = __nccwpck_require__(11651);
const utils_1 = __nccwpck_require__(90847);
const parse_pull_1 = __nccwpck_require__(65658);
const parsers = [
    new utils_1.LineParser(/^Auto-merging\s+(.+)$/, (summary, [autoMerge]) => {
        summary.merges.push(autoMerge);
    }),
    new utils_1.LineParser(/^CONFLICT\s+\((.+)\): Merge conflict in (.+)$/, (summary, [reason, file]) => {
        summary.conflicts.push(new MergeSummary_1.MergeSummaryConflict(reason, file));
    }),
    new utils_1.LineParser(/^CONFLICT\s+\((.+\/delete)\): (.+) deleted in (.+) and/, (summary, [reason, file, deleteRef]) => {
        summary.conflicts.push(new MergeSummary_1.MergeSummaryConflict(reason, file, { deleteRef }));
    }),
    new utils_1.LineParser(/^CONFLICT\s+\((.+)\):/, (summary, [reason]) => {
        summary.conflicts.push(new MergeSummary_1.MergeSummaryConflict(reason, null));
    }),
    new utils_1.LineParser(/^Automatic merge failed;\s+(.+)$/, (summary, [result]) => {
        summary.result = result;
    }),
];
/**
 * Parse the complete response from `git.merge`
 */
const parseMergeResult = (stdOut, stdErr) => {
    return Object.assign(exports.parseMergeDetail(stdOut, stdErr), parse_pull_1.parsePullResult(stdOut, stdErr));
};
exports.parseMergeResult = parseMergeResult;
/**
 * Parse the merge specific detail (ie: not the content also available in the pull detail) from `git.mnerge`
 * @param stdOut
 */
const parseMergeDetail = (stdOut) => {
    return utils_1.parseStringResponse(new MergeSummary_1.MergeSummaryDetail(), parsers, stdOut);
};
exports.parseMergeDetail = parseMergeDetail;
//# sourceMappingURL=parse-merge.js.map

/***/ }),

/***/ 47444:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseMoveResult = void 0;
const utils_1 = __nccwpck_require__(90847);
const parsers = [
    new utils_1.LineParser(/^Renaming (.+) to (.+)$/, (result, [from, to]) => {
        result.moves.push({ from, to });
    }),
];
function parseMoveResult(stdOut) {
    return utils_1.parseStringResponse({ moves: [] }, parsers, stdOut);
}
exports.parseMoveResult = parseMoveResult;
//# sourceMappingURL=parse-move.js.map

/***/ }),

/***/ 65658:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parsePullResult = exports.parsePullDetail = void 0;
const PullSummary_1 = __nccwpck_require__(93567);
const utils_1 = __nccwpck_require__(90847);
const parse_remote_messages_1 = __nccwpck_require__(72661);
const FILE_UPDATE_REGEX = /^\s*(.+?)\s+\|\s+\d+\s*(\+*)(-*)/;
const SUMMARY_REGEX = /(\d+)\D+((\d+)\D+\(\+\))?(\D+(\d+)\D+\(-\))?/;
const ACTION_REGEX = /^(create|delete) mode \d+ (.+)/;
const parsers = [
    new utils_1.LineParser(FILE_UPDATE_REGEX, (result, [file, insertions, deletions]) => {
        result.files.push(file);
        if (insertions) {
            result.insertions[file] = insertions.length;
        }
        if (deletions) {
            result.deletions[file] = deletions.length;
        }
    }),
    new utils_1.LineParser(SUMMARY_REGEX, (result, [changes, , insertions, , deletions]) => {
        if (insertions !== undefined || deletions !== undefined) {
            result.summary.changes = +changes || 0;
            result.summary.insertions = +insertions || 0;
            result.summary.deletions = +deletions || 0;
            return true;
        }
        return false;
    }),
    new utils_1.LineParser(ACTION_REGEX, (result, [action, file]) => {
        utils_1.append(result.files, file);
        utils_1.append((action === 'create') ? result.created : result.deleted, file);
    }),
];
const parsePullDetail = (stdOut, stdErr) => {
    return utils_1.parseStringResponse(new PullSummary_1.PullSummary(), parsers, stdOut, stdErr);
};
exports.parsePullDetail = parsePullDetail;
const parsePullResult = (stdOut, stdErr) => {
    return Object.assign(new PullSummary_1.PullSummary(), exports.parsePullDetail(stdOut, stdErr), parse_remote_messages_1.parseRemoteMessages(stdOut, stdErr));
};
exports.parsePullResult = parsePullResult;
//# sourceMappingURL=parse-pull.js.map

/***/ }),

/***/ 58530:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parsePushDetail = exports.parsePushResult = void 0;
const utils_1 = __nccwpck_require__(90847);
const parse_remote_messages_1 = __nccwpck_require__(72661);
function pushResultPushedItem(local, remote, status) {
    const deleted = status.includes('deleted');
    const tag = status.includes('tag') || /^refs\/tags/.test(local);
    const alreadyUpdated = !status.includes('new');
    return {
        deleted,
        tag,
        branch: !tag,
        new: !alreadyUpdated,
        alreadyUpdated,
        local,
        remote,
    };
}
const parsers = [
    new utils_1.LineParser(/^Pushing to (.+)$/, (result, [repo]) => {
        result.repo = repo;
    }),
    new utils_1.LineParser(/^updating local tracking ref '(.+)'/, (result, [local]) => {
        result.ref = Object.assign(Object.assign({}, (result.ref || {})), { local });
    }),
    new utils_1.LineParser(/^[*-=]\s+([^:]+):(\S+)\s+\[(.+)]$/, (result, [local, remote, type]) => {
        result.pushed.push(pushResultPushedItem(local, remote, type));
    }),
    new utils_1.LineParser(/^Branch '([^']+)' set up to track remote branch '([^']+)' from '([^']+)'/, (result, [local, remote, remoteName]) => {
        result.branch = Object.assign(Object.assign({}, (result.branch || {})), { local,
            remote,
            remoteName });
    }),
    new utils_1.LineParser(/^([^:]+):(\S+)\s+([a-z0-9]+)\.\.([a-z0-9]+)$/, (result, [local, remote, from, to]) => {
        result.update = {
            head: {
                local,
                remote,
            },
            hash: {
                from,
                to,
            },
        };
    }),
];
const parsePushResult = (stdOut, stdErr) => {
    const pushDetail = exports.parsePushDetail(stdOut, stdErr);
    const responseDetail = parse_remote_messages_1.parseRemoteMessages(stdOut, stdErr);
    return Object.assign(Object.assign({}, pushDetail), responseDetail);
};
exports.parsePushResult = parsePushResult;
const parsePushDetail = (stdOut, stdErr) => {
    return utils_1.parseStringResponse({ pushed: [] }, parsers, stdOut, stdErr);
};
exports.parsePushDetail = parsePushDetail;
//# sourceMappingURL=parse-push.js.map

/***/ }),

/***/ 72661:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoteMessageSummary = exports.parseRemoteMessages = void 0;
const utils_1 = __nccwpck_require__(90847);
const parse_remote_objects_1 = __nccwpck_require__(53565);
const parsers = [
    new utils_1.RemoteLineParser(/^remote:\s*(.+)$/, (result, [text]) => {
        result.remoteMessages.all.push(text.trim());
        return false;
    }),
    ...parse_remote_objects_1.remoteMessagesObjectParsers,
    new utils_1.RemoteLineParser([/create a (?:pull|merge) request/i, /\s(https?:\/\/\S+)$/], (result, [pullRequestUrl]) => {
        result.remoteMessages.pullRequestUrl = pullRequestUrl;
    }),
    new utils_1.RemoteLineParser([/found (\d+) vulnerabilities.+\(([^)]+)\)/i, /\s(https?:\/\/\S+)$/], (result, [count, summary, url]) => {
        result.remoteMessages.vulnerabilities = {
            count: utils_1.asNumber(count),
            summary,
            url,
        };
    }),
];
function parseRemoteMessages(_stdOut, stdErr) {
    return utils_1.parseStringResponse({ remoteMessages: new RemoteMessageSummary() }, parsers, stdErr);
}
exports.parseRemoteMessages = parseRemoteMessages;
class RemoteMessageSummary {
    constructor() {
        this.all = [];
    }
}
exports.RemoteMessageSummary = RemoteMessageSummary;
//# sourceMappingURL=parse-remote-messages.js.map

/***/ }),

/***/ 53565:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.remoteMessagesObjectParsers = void 0;
const utils_1 = __nccwpck_require__(90847);
function objectEnumerationResult(remoteMessages) {
    return (remoteMessages.objects = remoteMessages.objects || {
        compressing: 0,
        counting: 0,
        enumerating: 0,
        packReused: 0,
        reused: { count: 0, delta: 0 },
        total: { count: 0, delta: 0 }
    });
}
function asObjectCount(source) {
    const count = /^\s*(\d+)/.exec(source);
    const delta = /delta (\d+)/i.exec(source);
    return {
        count: utils_1.asNumber(count && count[1] || '0'),
        delta: utils_1.asNumber(delta && delta[1] || '0'),
    };
}
exports.remoteMessagesObjectParsers = [
    new utils_1.RemoteLineParser(/^remote:\s*(enumerating|counting|compressing) objects: (\d+),/i, (result, [action, count]) => {
        const key = action.toLowerCase();
        const enumeration = objectEnumerationResult(result.remoteMessages);
        Object.assign(enumeration, { [key]: utils_1.asNumber(count) });
    }),
    new utils_1.RemoteLineParser(/^remote:\s*(enumerating|counting|compressing) objects: \d+% \(\d+\/(\d+)\),/i, (result, [action, count]) => {
        const key = action.toLowerCase();
        const enumeration = objectEnumerationResult(result.remoteMessages);
        Object.assign(enumeration, { [key]: utils_1.asNumber(count) });
    }),
    new utils_1.RemoteLineParser(/total ([^,]+), reused ([^,]+), pack-reused (\d+)/i, (result, [total, reused, packReused]) => {
        const objects = objectEnumerationResult(result.remoteMessages);
        objects.total = asObjectCount(total);
        objects.reused = asObjectCount(reused);
        objects.packReused = utils_1.asNumber(packReused);
    }),
];
//# sourceMappingURL=parse-remote-objects.js.map

/***/ }),

/***/ 2581:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.commandConfigPrefixingPlugin = void 0;
const utils_1 = __nccwpck_require__(90847);
function commandConfigPrefixingPlugin(configuration) {
    const prefix = utils_1.prefixedArray(configuration, '-c');
    return {
        type: 'spawn.args',
        action(data) {
            return [...prefix, ...data];
        },
    };
}
exports.commandConfigPrefixingPlugin = commandConfigPrefixingPlugin;
//# sourceMappingURL=command-config-prefixing-plugin.js.map

/***/ }),

/***/ 50179:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.completionDetectionPlugin = void 0;
const promise_deferred_1 = __nccwpck_require__(49819);
const utils_1 = __nccwpck_require__(90847);
const never = promise_deferred_1.default().promise;
function completionDetectionPlugin({ onClose = true, onExit = 50 } = {}) {
    function createEvents() {
        let exitCode = -1;
        const events = {
            close: promise_deferred_1.default(),
            closeTimeout: promise_deferred_1.default(),
            exit: promise_deferred_1.default(),
            exitTimeout: promise_deferred_1.default(),
        };
        const result = Promise.race([
            onClose === false ? never : events.closeTimeout.promise,
            onExit === false ? never : events.exitTimeout.promise,
        ]);
        configureTimeout(onClose, events.close, events.closeTimeout);
        configureTimeout(onExit, events.exit, events.exitTimeout);
        return {
            close(code) {
                exitCode = code;
                events.close.done();
            },
            exit(code) {
                exitCode = code;
                events.exit.done();
            },
            get exitCode() {
                return exitCode;
            },
            result,
        };
    }
    function configureTimeout(flag, event, timeout) {
        if (flag === false) {
            return;
        }
        (flag === true ? event.promise : event.promise.then(() => utils_1.delay(flag))).then(timeout.done);
    }
    return {
        type: 'spawn.after',
        action(_data, { spawned, close }) {
            var _a, _b;
            return __awaiter(this, void 0, void 0, function* () {
                const events = createEvents();
                let deferClose = true;
                let quickClose = () => void (deferClose = false);
                (_a = spawned.stdout) === null || _a === void 0 ? void 0 : _a.on('data', quickClose);
                (_b = spawned.stderr) === null || _b === void 0 ? void 0 : _b.on('data', quickClose);
                spawned.on('error', quickClose);
                spawned.on('close', (code) => events.close(code));
                spawned.on('exit', (code) => events.exit(code));
                try {
                    yield events.result;
                    if (deferClose) {
                        yield utils_1.delay(50);
                    }
                    close(events.exitCode);
                }
                catch (err) {
                    close(events.exitCode, err);
                }
            });
        }
    };
}
exports.completionDetectionPlugin = completionDetectionPlugin;
//# sourceMappingURL=completion-detection.plugin.js.map

/***/ }),

/***/ 86713:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.errorDetectionPlugin = exports.errorDetectionHandler = void 0;
const git_error_1 = __nccwpck_require__(15757);
function isTaskError(result) {
    return !!(result.exitCode && result.stdErr.length);
}
function getErrorMessage(result) {
    return Buffer.concat([...result.stdOut, ...result.stdErr]);
}
function errorDetectionHandler(overwrite = false, isError = isTaskError, errorMessage = getErrorMessage) {
    return (error, result) => {
        if ((!overwrite && error) || !isError(result)) {
            return error;
        }
        return errorMessage(result);
    };
}
exports.errorDetectionHandler = errorDetectionHandler;
function errorDetectionPlugin(config) {
    return {
        type: 'task.error',
        action(data, context) {
            const error = config(data.error, {
                stdErr: context.stdErr,
                stdOut: context.stdOut,
                exitCode: context.exitCode
            });
            if (Buffer.isBuffer(error)) {
                return { error: new git_error_1.GitError(undefined, error.toString('utf-8')) };
            }
            return {
                error
            };
        },
    };
}
exports.errorDetectionPlugin = errorDetectionPlugin;
//# sourceMappingURL=error-detection.plugin.js.map

/***/ }),

/***/ 78078:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(2581), exports);
__exportStar(__nccwpck_require__(50179), exports);
__exportStar(__nccwpck_require__(86713), exports);
__exportStar(__nccwpck_require__(95067), exports);
__exportStar(__nccwpck_require__(51738), exports);
__exportStar(__nccwpck_require__(68436), exports);
__exportStar(__nccwpck_require__(39109), exports);
__exportStar(__nccwpck_require__(39504), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 95067:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PluginStore = void 0;
const utils_1 = __nccwpck_require__(90847);
class PluginStore {
    constructor() {
        this.plugins = new Set();
    }
    add(plugin) {
        const plugins = [];
        utils_1.asArray(plugin).forEach(plugin => plugin && this.plugins.add(utils_1.append(plugins, plugin)));
        return () => {
            plugins.forEach(plugin => this.plugins.delete(plugin));
        };
    }
    exec(type, data, context) {
        let output = data;
        const contextual = Object.freeze(Object.create(context));
        for (const plugin of this.plugins) {
            if (plugin.type === type) {
                output = plugin.action(output, contextual);
            }
        }
        return output;
    }
}
exports.PluginStore = PluginStore;
//# sourceMappingURL=plugin-store.js.map

/***/ }),

/***/ 51738:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.progressMonitorPlugin = void 0;
const utils_1 = __nccwpck_require__(90847);
function progressMonitorPlugin(progress) {
    const progressCommand = '--progress';
    const progressMethods = ['checkout', 'clone', 'fetch', 'pull', 'push'];
    const onProgress = {
        type: 'spawn.after',
        action(_data, context) {
            var _a;
            if (!context.commands.includes(progressCommand)) {
                return;
            }
            (_a = context.spawned.stderr) === null || _a === void 0 ? void 0 : _a.on('data', (chunk) => {
                const message = /^([\s\S]+?):\s*(\d+)% \((\d+)\/(\d+)\)/.exec(chunk.toString('utf8'));
                if (!message) {
                    return;
                }
                progress({
                    method: context.method,
                    stage: progressEventStage(message[1]),
                    progress: utils_1.asNumber(message[2]),
                    processed: utils_1.asNumber(message[3]),
                    total: utils_1.asNumber(message[4]),
                });
            });
        }
    };
    const onArgs = {
        type: 'spawn.args',
        action(args, context) {
            if (!progressMethods.includes(context.method)) {
                return args;
            }
            return utils_1.including(args, progressCommand);
        }
    };
    return [onArgs, onProgress];
}
exports.progressMonitorPlugin = progressMonitorPlugin;
function progressEventStage(input) {
    return String(input.toLowerCase().split(' ', 1)) || 'unknown';
}
//# sourceMappingURL=progress-monitor-plugin.js.map

/***/ }),

/***/ 68436:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
//# sourceMappingURL=simple-git-plugin.js.map

/***/ }),

/***/ 39109:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.spawnOptionsPlugin = void 0;
const utils_1 = __nccwpck_require__(90847);
function spawnOptionsPlugin(spawnOptions) {
    const options = utils_1.pick(spawnOptions, ['uid', 'gid']);
    return {
        type: 'spawn.options',
        action(data) {
            return Object.assign(Object.assign({}, options), data);
        },
    };
}
exports.spawnOptionsPlugin = spawnOptionsPlugin;
//# sourceMappingURL=spawn-options-plugin.js.map

/***/ }),

/***/ 39504:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.timeoutPlugin = void 0;
const git_plugin_error_1 = __nccwpck_require__(90019);
function timeoutPlugin({ block }) {
    if (block > 0) {
        return {
            type: 'spawn.after',
            action(_data, context) {
                var _a, _b;
                let timeout;
                function wait() {
                    timeout && clearTimeout(timeout);
                    timeout = setTimeout(kill, block);
                }
                function stop() {
                    var _a, _b;
                    (_a = context.spawned.stdout) === null || _a === void 0 ? void 0 : _a.off('data', wait);
                    (_b = context.spawned.stderr) === null || _b === void 0 ? void 0 : _b.off('data', wait);
                    context.spawned.off('exit', stop);
                    context.spawned.off('close', stop);
                }
                function kill() {
                    stop();
                    context.kill(new git_plugin_error_1.GitPluginError(undefined, 'timeout', `block timeout reached`));
                }
                (_a = context.spawned.stdout) === null || _a === void 0 ? void 0 : _a.on('data', wait);
                (_b = context.spawned.stderr) === null || _b === void 0 ? void 0 : _b.on('data', wait);
                context.spawned.on('exit', stop);
                context.spawned.on('close', stop);
                wait();
            }
        };
    }
}
exports.timeoutPlugin = timeoutPlugin;
//# sourceMappingURL=timout-plugin.js.map

/***/ }),

/***/ 73755:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isSingleBranchDeleteFailure = exports.branchDeletionFailure = exports.branchDeletionSuccess = exports.BranchDeletionBatch = void 0;
class BranchDeletionBatch {
    constructor() {
        this.all = [];
        this.branches = {};
        this.errors = [];
    }
    get success() {
        return !this.errors.length;
    }
}
exports.BranchDeletionBatch = BranchDeletionBatch;
function branchDeletionSuccess(branch, hash) {
    return {
        branch, hash, success: true,
    };
}
exports.branchDeletionSuccess = branchDeletionSuccess;
function branchDeletionFailure(branch) {
    return {
        branch, hash: null, success: false,
    };
}
exports.branchDeletionFailure = branchDeletionFailure;
function isSingleBranchDeleteFailure(test) {
    return test.success;
}
exports.isSingleBranchDeleteFailure = isSingleBranchDeleteFailure;
//# sourceMappingURL=BranchDeleteSummary.js.map

/***/ }),

/***/ 34446:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BranchSummaryResult = void 0;
class BranchSummaryResult {
    constructor() {
        this.all = [];
        this.branches = {};
        this.current = '';
        this.detached = false;
    }
    push(current, detached, name, commit, label) {
        if (current) {
            this.detached = detached;
            this.current = name;
        }
        this.all.push(name);
        this.branches[name] = {
            current: current,
            name: name,
            commit: commit,
            label: label
        };
    }
}
exports.BranchSummaryResult = BranchSummaryResult;
//# sourceMappingURL=BranchSummary.js.map

/***/ }),

/***/ 19926:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseCheckIgnore = void 0;
/**
 * Parser for the `check-ignore` command - returns each file as a string array
 */
const parseCheckIgnore = (text) => {
    return text.split(/\n/g)
        .map(line => line.trim())
        .filter(file => !!file);
};
exports.parseCheckIgnore = parseCheckIgnore;
//# sourceMappingURL=CheckIgnore.js.map

/***/ }),

/***/ 55689:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cleanSummaryParser = exports.CleanResponse = void 0;
const utils_1 = __nccwpck_require__(90847);
class CleanResponse {
    constructor(dryRun) {
        this.dryRun = dryRun;
        this.paths = [];
        this.files = [];
        this.folders = [];
    }
}
exports.CleanResponse = CleanResponse;
const removalRegexp = /^[a-z]+\s*/i;
const dryRunRemovalRegexp = /^[a-z]+\s+[a-z]+\s*/i;
const isFolderRegexp = /\/$/;
function cleanSummaryParser(dryRun, text) {
    const summary = new CleanResponse(dryRun);
    const regexp = dryRun ? dryRunRemovalRegexp : removalRegexp;
    utils_1.toLinesWithContent(text).forEach(line => {
        const removed = line.replace(regexp, '');
        summary.paths.push(removed);
        (isFolderRegexp.test(removed) ? summary.folders : summary.files).push(removed);
    });
    return summary;
}
exports.cleanSummaryParser = cleanSummaryParser;
//# sourceMappingURL=CleanSummary.js.map

/***/ }),

/***/ 97219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.configGetParser = exports.configListParser = exports.ConfigList = void 0;
const utils_1 = __nccwpck_require__(90847);
class ConfigList {
    constructor() {
        this.files = [];
        this.values = Object.create(null);
    }
    get all() {
        if (!this._all) {
            this._all = this.files.reduce((all, file) => {
                return Object.assign(all, this.values[file]);
            }, {});
        }
        return this._all;
    }
    addFile(file) {
        if (!(file in this.values)) {
            const latest = utils_1.last(this.files);
            this.values[file] = latest ? Object.create(this.values[latest]) : {};
            this.files.push(file);
        }
        return this.values[file];
    }
    addValue(file, key, value) {
        const values = this.addFile(file);
        if (!values.hasOwnProperty(key)) {
            values[key] = value;
        }
        else if (Array.isArray(values[key])) {
            values[key].push(value);
        }
        else {
            values[key] = [values[key], value];
        }
        this._all = undefined;
    }
}
exports.ConfigList = ConfigList;
function configListParser(text) {
    const config = new ConfigList();
    for (const item of configParser(text)) {
        config.addValue(item.file, String(item.key), item.value);
    }
    return config;
}
exports.configListParser = configListParser;
function configGetParser(text, key) {
    let value = null;
    const values = [];
    const scopes = new Map();
    for (const item of configParser(text, key)) {
        if (item.key !== key) {
            continue;
        }
        values.push(value = item.value);
        if (!scopes.has(item.file)) {
            scopes.set(item.file, []);
        }
        scopes.get(item.file).push(value);
    }
    return {
        key,
        paths: Array.from(scopes.keys()),
        scopes,
        value,
        values
    };
}
exports.configGetParser = configGetParser;
function configFilePath(filePath) {
    return filePath.replace(/^(file):/, '');
}
function* configParser(text, requestedKey = null) {
    const lines = text.split('\0');
    for (let i = 0, max = lines.length - 1; i < max;) {
        const file = configFilePath(lines[i++]);
        let value = lines[i++];
        let key = requestedKey;
        if (value.includes('\n')) {
            const line = utils_1.splitOn(value, '\n');
            key = line[0];
            value = line[1];
        }
        yield { file, key, value };
    }
}
//# sourceMappingURL=ConfigList.js.map

/***/ }),

/***/ 84781:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DiffSummary = void 0;
/***
 * The DiffSummary is returned as a response to getting `git().status()`
 */
class DiffSummary {
    constructor() {
        this.changed = 0;
        this.deletions = 0;
        this.insertions = 0;
        this.files = [];
    }
}
exports.DiffSummary = DiffSummary;
//# sourceMappingURL=DiffSummary.js.map

/***/ }),

/***/ 40860:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FileStatusSummary = exports.fromPathRegex = void 0;
exports.fromPathRegex = /^(.+) -> (.+)$/;
class FileStatusSummary {
    constructor(path, index, working_dir) {
        this.path = path;
        this.index = index;
        this.working_dir = working_dir;
        if ('R' === (index + working_dir)) {
            const detail = exports.fromPathRegex.exec(path) || [null, path, path];
            this.from = detail[1] || '';
            this.path = detail[2] || '';
        }
    }
}
exports.FileStatusSummary = FileStatusSummary;
//# sourceMappingURL=FileStatusSummary.js.map

/***/ }),

/***/ 93421:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseGetRemotesVerbose = exports.parseGetRemotes = void 0;
const utils_1 = __nccwpck_require__(90847);
function parseGetRemotes(text) {
    const remotes = {};
    forEach(text, ([name]) => remotes[name] = { name });
    return Object.values(remotes);
}
exports.parseGetRemotes = parseGetRemotes;
function parseGetRemotesVerbose(text) {
    const remotes = {};
    forEach(text, ([name, url, purpose]) => {
        if (!remotes.hasOwnProperty(name)) {
            remotes[name] = {
                name: name,
                refs: { fetch: '', push: '' },
            };
        }
        if (purpose && url) {
            remotes[name].refs[purpose.replace(/[^a-z]/g, '')] = url;
        }
    });
    return Object.values(remotes);
}
exports.parseGetRemotesVerbose = parseGetRemotesVerbose;
function forEach(text, handler) {
    utils_1.forEachLineWithContent(text, (line) => handler(line.split(/\s+/)));
}
//# sourceMappingURL=GetRemoteSummary.js.map

/***/ }),

/***/ 8690:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseInit = exports.InitSummary = void 0;
class InitSummary {
    constructor(bare, path, existing, gitDir) {
        this.bare = bare;
        this.path = path;
        this.existing = existing;
        this.gitDir = gitDir;
    }
}
exports.InitSummary = InitSummary;
const initResponseRegex = /^Init.+ repository in (.+)$/;
const reInitResponseRegex = /^Rein.+ in (.+)$/;
function parseInit(bare, path, text) {
    const response = String(text).trim();
    let result;
    if ((result = initResponseRegex.exec(response))) {
        return new InitSummary(bare, path, false, result[1]);
    }
    if ((result = reInitResponseRegex.exec(response))) {
        return new InitSummary(bare, path, true, result[1]);
    }
    let gitDir = '';
    const tokens = response.split(' ');
    while (tokens.length) {
        const token = tokens.shift();
        if (token === 'in') {
            gitDir = tokens.join(' ');
            break;
        }
    }
    return new InitSummary(bare, path, /^re/i.test(response), gitDir);
}
exports.parseInit = parseInit;
//# sourceMappingURL=InitSummary.js.map

/***/ }),

/***/ 11651:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MergeSummaryDetail = exports.MergeSummaryConflict = void 0;
class MergeSummaryConflict {
    constructor(reason, file = null, meta) {
        this.reason = reason;
        this.file = file;
        this.meta = meta;
    }
    toString() {
        return `${this.file}:${this.reason}`;
    }
}
exports.MergeSummaryConflict = MergeSummaryConflict;
class MergeSummaryDetail {
    constructor() {
        this.conflicts = [];
        this.merges = [];
        this.result = 'success';
    }
    get failed() {
        return this.conflicts.length > 0;
    }
    get reason() {
        return this.result;
    }
    toString() {
        if (this.conflicts.length) {
            return `CONFLICTS: ${this.conflicts.join(', ')}`;
        }
        return 'OK';
    }
}
exports.MergeSummaryDetail = MergeSummaryDetail;
//# sourceMappingURL=MergeSummary.js.map

/***/ }),

/***/ 93567:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PullSummary = void 0;
class PullSummary {
    constructor() {
        this.remoteMessages = {
            all: [],
        };
        this.created = [];
        this.deleted = [];
        this.files = [];
        this.deletions = {};
        this.insertions = {};
        this.summary = {
            changes: 0,
            deletions: 0,
            insertions: 0,
        };
    }
}
exports.PullSummary = PullSummary;
//# sourceMappingURL=PullSummary.js.map

/***/ }),

/***/ 16790:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseStatusSummary = exports.StatusSummary = void 0;
const utils_1 = __nccwpck_require__(90847);
const FileStatusSummary_1 = __nccwpck_require__(40860);
/**
 * The StatusSummary is returned as a response to getting `git().status()`
 */
class StatusSummary {
    constructor() {
        this.not_added = [];
        this.conflicted = [];
        this.created = [];
        this.deleted = [];
        this.modified = [];
        this.renamed = [];
        /**
         * All files represented as an array of objects containing the `path` and status in `index` and
         * in the `working_dir`.
         */
        this.files = [];
        this.staged = [];
        /**
         * Number of commits ahead of the tracked branch
         */
        this.ahead = 0;
        /**
         *Number of commits behind the tracked branch
         */
        this.behind = 0;
        /**
         * Name of the current branch
         */
        this.current = null;
        /**
         * Name of the branch being tracked
         */
        this.tracking = null;
    }
    /**
     * Gets whether this StatusSummary represents a clean working branch.
     */
    isClean() {
        return !this.files.length;
    }
}
exports.StatusSummary = StatusSummary;
var PorcelainFileStatus;
(function (PorcelainFileStatus) {
    PorcelainFileStatus["ADDED"] = "A";
    PorcelainFileStatus["DELETED"] = "D";
    PorcelainFileStatus["MODIFIED"] = "M";
    PorcelainFileStatus["RENAMED"] = "R";
    PorcelainFileStatus["COPIED"] = "C";
    PorcelainFileStatus["UNMERGED"] = "U";
    PorcelainFileStatus["UNTRACKED"] = "?";
    PorcelainFileStatus["IGNORED"] = "!";
    PorcelainFileStatus["NONE"] = " ";
})(PorcelainFileStatus || (PorcelainFileStatus = {}));
function renamedFile(line) {
    const detail = /^(.+) -> (.+)$/.exec(line);
    if (!detail) {
        return {
            from: line, to: line
        };
    }
    return {
        from: String(detail[1]),
        to: String(detail[2]),
    };
}
function parser(indexX, indexY, handler) {
    return [`${indexX}${indexY}`, handler];
}
function conflicts(indexX, ...indexY) {
    return indexY.map(y => parser(indexX, y, (result, file) => utils_1.append(result.conflicted, file)));
}
const parsers = new Map([
    parser(PorcelainFileStatus.NONE, PorcelainFileStatus.ADDED, (result, file) => utils_1.append(result.created, file)),
    parser(PorcelainFileStatus.NONE, PorcelainFileStatus.DELETED, (result, file) => utils_1.append(result.deleted, file)),
    parser(PorcelainFileStatus.NONE, PorcelainFileStatus.MODIFIED, (result, file) => utils_1.append(result.modified, file)),
    parser(PorcelainFileStatus.ADDED, PorcelainFileStatus.NONE, (result, file) => utils_1.append(result.created, file) && utils_1.append(result.staged, file)),
    parser(PorcelainFileStatus.ADDED, PorcelainFileStatus.MODIFIED, (result, file) => utils_1.append(result.created, file) && utils_1.append(result.staged, file) && utils_1.append(result.modified, file)),
    parser(PorcelainFileStatus.DELETED, PorcelainFileStatus.NONE, (result, file) => utils_1.append(result.deleted, file) && utils_1.append(result.staged, file)),
    parser(PorcelainFileStatus.MODIFIED, PorcelainFileStatus.NONE, (result, file) => utils_1.append(result.modified, file) && utils_1.append(result.staged, file)),
    parser(PorcelainFileStatus.MODIFIED, PorcelainFileStatus.MODIFIED, (result, file) => utils_1.append(result.modified, file) && utils_1.append(result.staged, file)),
    parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.NONE, (result, file) => {
        utils_1.append(result.renamed, renamedFile(file));
    }),
    parser(PorcelainFileStatus.RENAMED, PorcelainFileStatus.MODIFIED, (result, file) => {
        const renamed = renamedFile(file);
        utils_1.append(result.renamed, renamed);
        utils_1.append(result.modified, renamed.to);
    }),
    parser(PorcelainFileStatus.UNTRACKED, PorcelainFileStatus.UNTRACKED, (result, file) => utils_1.append(result.not_added, file)),
    ...conflicts(PorcelainFileStatus.ADDED, PorcelainFileStatus.ADDED, PorcelainFileStatus.UNMERGED),
    ...conflicts(PorcelainFileStatus.DELETED, PorcelainFileStatus.DELETED, PorcelainFileStatus.UNMERGED),
    ...conflicts(PorcelainFileStatus.UNMERGED, PorcelainFileStatus.ADDED, PorcelainFileStatus.DELETED, PorcelainFileStatus.UNMERGED),
    ['##', (result, line) => {
            const aheadReg = /ahead (\d+)/;
            const behindReg = /behind (\d+)/;
            const currentReg = /^(.+?(?=(?:\.{3}|\s|$)))/;
            const trackingReg = /\.{3}(\S*)/;
            const onEmptyBranchReg = /\son\s([\S]+)$/;
            let regexResult;
            regexResult = aheadReg.exec(line);
            result.ahead = regexResult && +regexResult[1] || 0;
            regexResult = behindReg.exec(line);
            result.behind = regexResult && +regexResult[1] || 0;
            regexResult = currentReg.exec(line);
            result.current = regexResult && regexResult[1];
            regexResult = trackingReg.exec(line);
            result.tracking = regexResult && regexResult[1];
            regexResult = onEmptyBranchReg.exec(line);
            result.current = regexResult && regexResult[1] || result.current;
        }]
]);
const parseStatusSummary = function (text) {
    const lines = text.trim().split('\n');
    const status = new StatusSummary();
    for (let i = 0, l = lines.length; i < l; i++) {
        splitLine(status, lines[i]);
    }
    return status;
};
exports.parseStatusSummary = parseStatusSummary;
function splitLine(result, lineStr) {
    const trimmed = lineStr.trim();
    switch (' ') {
        case trimmed.charAt(2):
            return data(trimmed.charAt(0), trimmed.charAt(1), trimmed.substr(3));
        case trimmed.charAt(1):
            return data(PorcelainFileStatus.NONE, trimmed.charAt(0), trimmed.substr(2));
        default:
            return;
    }
    function data(index, workingDir, path) {
        const raw = `${index}${workingDir}`;
        const handler = parsers.get(raw);
        if (handler) {
            handler(result, path);
        }
        if (raw !== '##') {
            result.files.push(new FileStatusSummary_1.FileStatusSummary(path, index, workingDir));
        }
    }
}
//# sourceMappingURL=StatusSummary.js.map

/***/ }),

/***/ 94539:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseTagList = exports.TagList = void 0;
class TagList {
    constructor(all, latest) {
        this.all = all;
        this.latest = latest;
    }
}
exports.TagList = TagList;
const parseTagList = function (data, customSort = false) {
    const tags = data
        .split('\n')
        .map(trimmed)
        .filter(Boolean);
    if (!customSort) {
        tags.sort(function (tagA, tagB) {
            const partsA = tagA.split('.');
            const partsB = tagB.split('.');
            if (partsA.length === 1 || partsB.length === 1) {
                return singleSorted(toNumber(partsA[0]), toNumber(partsB[0]));
            }
            for (let i = 0, l = Math.max(partsA.length, partsB.length); i < l; i++) {
                const diff = sorted(toNumber(partsA[i]), toNumber(partsB[i]));
                if (diff) {
                    return diff;
                }
            }
            return 0;
        });
    }
    const latest = customSort ? tags[0] : [...tags].reverse().find((tag) => tag.indexOf('.') >= 0);
    return new TagList(tags, latest);
};
exports.parseTagList = parseTagList;
function singleSorted(a, b) {
    const aIsNum = isNaN(a);
    const bIsNum = isNaN(b);
    if (aIsNum !== bIsNum) {
        return aIsNum ? 1 : -1;
    }
    return aIsNum ? sorted(a, b) : 0;
}
function sorted(a, b) {
    return a === b ? 0 : a > b ? 1 : -1;
}
function trimmed(input) {
    return input.trim();
}
function toNumber(input) {
    if (typeof input === 'string') {
        return parseInt(input.replace(/^\D+/g, ''), 10) || 0;
    }
    return 0;
}
//# sourceMappingURL=TagList.js.map

/***/ }),

/***/ 88543:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitExecutorChain = void 0;
const child_process_1 = __nccwpck_require__(63129);
const git_error_1 = __nccwpck_require__(15757);
const task_1 = __nccwpck_require__(32815);
const utils_1 = __nccwpck_require__(90847);
const tasks_pending_queue_1 = __nccwpck_require__(96676);
class GitExecutorChain {
    constructor(_executor, _scheduler, _plugins) {
        this._executor = _executor;
        this._scheduler = _scheduler;
        this._plugins = _plugins;
        this._chain = Promise.resolve();
        this._queue = new tasks_pending_queue_1.TasksPendingQueue();
    }
    get binary() {
        return this._executor.binary;
    }
    get cwd() {
        return this._cwd || this._executor.cwd;
    }
    set cwd(cwd) {
        this._cwd = cwd;
    }
    get env() {
        return this._executor.env;
    }
    get outputHandler() {
        return this._executor.outputHandler;
    }
    chain() {
        return this;
    }
    push(task) {
        this._queue.push(task);
        return this._chain = this._chain.then(() => this.attemptTask(task));
    }
    attemptTask(task) {
        return __awaiter(this, void 0, void 0, function* () {
            const onScheduleComplete = yield this._scheduler.next();
            const onQueueComplete = () => this._queue.complete(task);
            try {
                const { logger } = this._queue.attempt(task);
                return yield (task_1.isEmptyTask(task)
                    ? this.attemptEmptyTask(task, logger)
                    : this.attemptRemoteTask(task, logger));
            }
            catch (e) {
                throw this.onFatalException(task, e);
            }
            finally {
                onQueueComplete();
                onScheduleComplete();
            }
        });
    }
    onFatalException(task, e) {
        const gitError = (e instanceof git_error_1.GitError) ? Object.assign(e, { task }) : new git_error_1.GitError(task, e && String(e));
        this._chain = Promise.resolve();
        this._queue.fatal(gitError);
        return gitError;
    }
    attemptRemoteTask(task, logger) {
        return __awaiter(this, void 0, void 0, function* () {
            const args = this._plugins.exec('spawn.args', [...task.commands], pluginContext(task, task.commands));
            const raw = yield this.gitResponse(task, this.binary, args, this.outputHandler, logger.step('SPAWN'));
            const outputStreams = yield this.handleTaskData(task, args, raw, logger.step('HANDLE'));
            logger(`passing response to task's parser as a %s`, task.format);
            if (task_1.isBufferTask(task)) {
                return utils_1.callTaskParser(task.parser, outputStreams);
            }
            return utils_1.callTaskParser(task.parser, outputStreams.asStrings());
        });
    }
    attemptEmptyTask(task, logger) {
        return __awaiter(this, void 0, void 0, function* () {
            logger(`empty task bypassing child process to call to task's parser`);
            return task.parser(this);
        });
    }
    handleTaskData(task, args, result, logger) {
        const { exitCode, rejection, stdOut, stdErr } = result;
        return new Promise((done, fail) => {
            logger(`Preparing to handle process response exitCode=%d stdOut=`, exitCode);
            const { error } = this._plugins.exec('task.error', { error: rejection }, Object.assign(Object.assign({}, pluginContext(task, args)), result));
            if (error && task.onError) {
                logger.info(`exitCode=%s handling with custom error handler`);
                return task.onError(result, error, (newStdOut) => {
                    logger.info(`custom error handler treated as success`);
                    logger(`custom error returned a %s`, utils_1.objectToString(newStdOut));
                    done(new utils_1.GitOutputStreams(Array.isArray(newStdOut) ? Buffer.concat(newStdOut) : newStdOut, Buffer.concat(stdErr)));
                }, fail);
            }
            if (error) {
                logger.info(`handling as error: exitCode=%s stdErr=%s rejection=%o`, exitCode, stdErr.length, rejection);
                return fail(error);
            }
            logger.info(`retrieving task output complete`);
            done(new utils_1.GitOutputStreams(Buffer.concat(stdOut), Buffer.concat(stdErr)));
        });
    }
    gitResponse(task, command, args, outputHandler, logger) {
        return __awaiter(this, void 0, void 0, function* () {
            const outputLogger = logger.sibling('output');
            const spawnOptions = this._plugins.exec('spawn.options', {
                cwd: this.cwd,
                env: this.env,
                windowsHide: true,
            }, pluginContext(task, task.commands));
            return new Promise((done) => {
                const stdOut = [];
                const stdErr = [];
                let rejection;
                logger.info(`%s %o`, command, args);
                logger('%O', spawnOptions);
                const spawned = child_process_1.spawn(command, args, spawnOptions);
                spawned.stdout.on('data', onDataReceived(stdOut, 'stdOut', logger, outputLogger.step('stdOut')));
                spawned.stderr.on('data', onDataReceived(stdErr, 'stdErr', logger, outputLogger.step('stdErr')));
                spawned.on('error', onErrorReceived(stdErr, logger));
                if (outputHandler) {
                    logger(`Passing child process stdOut/stdErr to custom outputHandler`);
                    outputHandler(command, spawned.stdout, spawned.stderr, [...args]);
                }
                this._plugins.exec('spawn.after', undefined, Object.assign(Object.assign({}, pluginContext(task, args)), { spawned, close(exitCode, reason) {
                        done({
                            stdOut,
                            stdErr,
                            exitCode,
                            rejection: rejection || reason,
                        });
                    },
                    kill(reason) {
                        if (spawned.killed) {
                            return;
                        }
                        rejection = reason;
                        spawned.kill('SIGINT');
                    } }));
            });
        });
    }
}
exports.GitExecutorChain = GitExecutorChain;
function pluginContext(task, commands) {
    return {
        method: utils_1.first(task.commands) || '',
        commands,
    };
}
function onErrorReceived(target, logger) {
    return (err) => {
        logger(`[ERROR] child process exception %o`, err);
        target.push(Buffer.from(String(err.stack), 'ascii'));
    };
}
function onDataReceived(target, name, logger, output) {
    return (buffer) => {
        logger(`%s received %L bytes`, name, buffer);
        output(`%B`, buffer);
        target.push(buffer);
    };
}
//# sourceMappingURL=git-executor-chain.js.map

/***/ }),

/***/ 94701:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitExecutor = void 0;
const git_executor_chain_1 = __nccwpck_require__(88543);
class GitExecutor {
    constructor(binary = 'git', cwd, _scheduler, _plugins) {
        this.binary = binary;
        this.cwd = cwd;
        this._scheduler = _scheduler;
        this._plugins = _plugins;
        this._chain = new git_executor_chain_1.GitExecutorChain(this, this._scheduler, this._plugins);
    }
    chain() {
        return new git_executor_chain_1.GitExecutorChain(this, this._scheduler, this._plugins);
    }
    push(task) {
        return this._chain.push(task);
    }
}
exports.GitExecutor = GitExecutor;
//# sourceMappingURL=git-executor.js.map

/***/ }),

/***/ 80941:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.gitP = void 0;
const git_response_error_1 = __nccwpck_require__(85131);
const git_factory_1 = __nccwpck_require__(89846);
const functionNamesBuilderApi = [
    'customBinary', 'env', 'outputHandler', 'silent',
];
const functionNamesPromiseApi = [
    'add',
    'addAnnotatedTag',
    'addConfig',
    'addRemote',
    'addTag',
    'applyPatch',
    'binaryCatFile',
    'branch',
    'branchLocal',
    'catFile',
    'checkIgnore',
    'checkIsRepo',
    'checkout',
    'checkoutBranch',
    'checkoutLatestTag',
    'checkoutLocalBranch',
    'clean',
    'clone',
    'commit',
    'cwd',
    'deleteLocalBranch',
    'deleteLocalBranches',
    'diff',
    'diffSummary',
    'exec',
    'fetch',
    'getRemotes',
    'init',
    'listConfig',
    'listRemote',
    'log',
    'merge',
    'mergeFromTo',
    'mirror',
    'mv',
    'pull',
    'push',
    'pushTags',
    'raw',
    'rebase',
    'remote',
    'removeRemote',
    'reset',
    'revert',
    'revparse',
    'rm',
    'rmKeepLocal',
    'show',
    'stash',
    'stashList',
    'status',
    'subModule',
    'submoduleAdd',
    'submoduleInit',
    'submoduleUpdate',
    'tag',
    'tags',
    'updateServerInfo'
];
function gitP(...args) {
    let git;
    let chain = Promise.resolve();
    try {
        git = git_factory_1.gitInstanceFactory(...args);
    }
    catch (e) {
        chain = Promise.reject(e);
    }
    function builderReturn() {
        return promiseApi;
    }
    function chainReturn() {
        return chain;
    }
    const promiseApi = [...functionNamesBuilderApi, ...functionNamesPromiseApi].reduce((api, name) => {
        const isAsync = functionNamesPromiseApi.includes(name);
        const valid = isAsync ? asyncWrapper(name, git) : syncWrapper(name, git, api);
        const alternative = isAsync ? chainReturn : builderReturn;
        Object.defineProperty(api, name, {
            enumerable: false,
            configurable: false,
            value: git ? valid : alternative,
        });
        return api;
    }, {});
    return promiseApi;
    function asyncWrapper(fn, git) {
        return function (...args) {
            if (typeof args[args.length] === 'function') {
                throw new TypeError('Promise interface requires that handlers are not supplied inline, ' +
                    'trailing function not allowed in call to ' + fn);
            }
            return chain.then(function () {
                return new Promise(function (resolve, reject) {
                    const callback = (err, result) => {
                        if (err) {
                            return reject(toError(err));
                        }
                        resolve(result);
                    };
                    args.push(callback);
                    git[fn].apply(git, args);
                });
            });
        };
    }
    function syncWrapper(fn, git, api) {
        return (...args) => {
            git[fn](...args);
            return api;
        };
    }
}
exports.gitP = gitP;
function toError(error) {
    if (error instanceof Error) {
        return error;
    }
    if (typeof error === 'string') {
        return new Error(error);
    }
    return new git_response_error_1.GitResponseError(error);
}
//# sourceMappingURL=promise-wrapped.js.map

/***/ }),

/***/ 3421:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Scheduler = void 0;
const utils_1 = __nccwpck_require__(90847);
const promise_deferred_1 = __nccwpck_require__(49819);
const git_logger_1 = __nccwpck_require__(57178);
const createScheduledTask = (() => {
    let id = 0;
    return () => {
        id++;
        const { promise, done } = promise_deferred_1.createDeferred();
        return {
            promise,
            done,
            id,
        };
    };
})();
class Scheduler {
    constructor(concurrency = 2) {
        this.concurrency = concurrency;
        this.logger = git_logger_1.createLogger('', 'scheduler');
        this.pending = [];
        this.running = [];
        this.logger(`Constructed, concurrency=%s`, concurrency);
    }
    schedule() {
        if (!this.pending.length || this.running.length >= this.concurrency) {
            this.logger(`Schedule attempt ignored, pending=%s running=%s concurrency=%s`, this.pending.length, this.running.length, this.concurrency);
            return;
        }
        const task = utils_1.append(this.running, this.pending.shift());
        this.logger(`Attempting id=%s`, task.id);
        task.done(() => {
            this.logger(`Completing id=`, task.id);
            utils_1.remove(this.running, task);
            this.schedule();
        });
    }
    next() {
        const { promise, id } = utils_1.append(this.pending, createScheduledTask());
        this.logger(`Scheduling id=%s`, id);
        this.schedule();
        return promise;
    }
}
exports.Scheduler = Scheduler;
//# sourceMappingURL=scheduler.js.map

/***/ }),

/***/ 96676:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TasksPendingQueue = void 0;
const git_error_1 = __nccwpck_require__(15757);
const git_logger_1 = __nccwpck_require__(57178);
class TasksPendingQueue {
    constructor(logLabel = 'GitExecutor') {
        this.logLabel = logLabel;
        this._queue = new Map();
    }
    withProgress(task) {
        return this._queue.get(task);
    }
    createProgress(task) {
        const name = TasksPendingQueue.getName(task.commands[0]);
        const logger = git_logger_1.createLogger(this.logLabel, name);
        return {
            task,
            logger,
            name,
        };
    }
    push(task) {
        const progress = this.createProgress(task);
        progress.logger('Adding task to the queue, commands = %o', task.commands);
        this._queue.set(task, progress);
        return progress;
    }
    fatal(err) {
        for (const [task, { logger }] of Array.from(this._queue.entries())) {
            if (task === err.task) {
                logger.info(`Failed %o`, err);
                logger(`Fatal exception, any as-yet un-started tasks run through this executor will not be attempted`);
            }
            else {
                logger.info(`A fatal exception occurred in a previous task, the queue has been purged: %o`, err.message);
            }
            this.complete(task);
        }
        if (this._queue.size !== 0) {
            throw new Error(`Queue size should be zero after fatal: ${this._queue.size}`);
        }
    }
    complete(task) {
        const progress = this.withProgress(task);
        if (progress) {
            this._queue.delete(task);
        }
    }
    attempt(task) {
        const progress = this.withProgress(task);
        if (!progress) {
            throw new git_error_1.GitError(undefined, 'TasksPendingQueue: attempt called for an unknown task');
        }
        progress.logger('Starting task');
        return progress;
    }
    static getName(name = 'empty') {
        return `task:${name}:${++TasksPendingQueue.counter}`;
    }
}
exports.TasksPendingQueue = TasksPendingQueue;
TasksPendingQueue.counter = 0;
//# sourceMappingURL=tasks-pending-queue.js.map

/***/ }),

/***/ 30999:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SimpleGitApi = void 0;
const task_callback_1 = __nccwpck_require__(28850);
const change_working_directory_1 = __nccwpck_require__(4415);
const config_1 = __nccwpck_require__(57597);
const grep_1 = __nccwpck_require__(55524);
const hash_object_1 = __nccwpck_require__(18199);
const init_1 = __nccwpck_require__(66016);
const log_1 = __nccwpck_require__(8627);
const merge_1 = __nccwpck_require__(38829);
const push_1 = __nccwpck_require__(51435);
const status_1 = __nccwpck_require__(99197);
const task_1 = __nccwpck_require__(32815);
const utils_1 = __nccwpck_require__(90847);
class SimpleGitApi {
    constructor(_executor) {
        this._executor = _executor;
    }
    _runTask(task, then) {
        const chain = this._executor.chain();
        const promise = chain.push(task);
        if (then) {
            task_callback_1.taskCallback(task, promise, then);
        }
        return Object.create(this, {
            then: { value: promise.then.bind(promise) },
            catch: { value: promise.catch.bind(promise) },
            _executor: { value: chain },
        });
    }
    add(files) {
        return this._runTask(task_1.straightThroughStringTask(['add', ...utils_1.asArray(files)]), utils_1.trailingFunctionArgument(arguments));
    }
    cwd(directory) {
        const next = utils_1.trailingFunctionArgument(arguments);
        if (typeof directory === 'string') {
            return this._runTask(change_working_directory_1.changeWorkingDirectoryTask(directory, this._executor), next);
        }
        if (typeof (directory === null || directory === void 0 ? void 0 : directory.path) === 'string') {
            return this._runTask(change_working_directory_1.changeWorkingDirectoryTask(directory.path, directory.root && this._executor || undefined), next);
        }
        return this._runTask(task_1.configurationErrorTask('Git.cwd: workingDirectory must be supplied as a string'), next);
    }
    hashObject(path, write) {
        return this._runTask(hash_object_1.hashObjectTask(path, write === true), utils_1.trailingFunctionArgument(arguments));
    }
    init(bare) {
        return this._runTask(init_1.initTask(bare === true, this._executor.cwd, utils_1.getTrailingOptions(arguments)), utils_1.trailingFunctionArgument(arguments));
    }
    merge() {
        return this._runTask(merge_1.mergeTask(utils_1.getTrailingOptions(arguments)), utils_1.trailingFunctionArgument(arguments));
    }
    mergeFromTo(remote, branch) {
        if (!(utils_1.filterString(remote) && utils_1.filterString(branch))) {
            return this._runTask(task_1.configurationErrorTask(`Git.mergeFromTo requires that the 'remote' and 'branch' arguments are supplied as strings`));
        }
        return this._runTask(merge_1.mergeTask([remote, branch, ...utils_1.getTrailingOptions(arguments)]), utils_1.trailingFunctionArgument(arguments, false));
    }
    outputHandler(handler) {
        this._executor.outputHandler = handler;
        return this;
    }
    push() {
        const task = push_1.pushTask({
            remote: utils_1.filterType(arguments[0], utils_1.filterString),
            branch: utils_1.filterType(arguments[1], utils_1.filterString),
        }, utils_1.getTrailingOptions(arguments));
        return this._runTask(task, utils_1.trailingFunctionArgument(arguments));
    }
    stash() {
        return this._runTask(task_1.straightThroughStringTask(['stash', ...utils_1.getTrailingOptions(arguments)]), utils_1.trailingFunctionArgument(arguments));
    }
    status() {
        return this._runTask(status_1.statusTask(utils_1.getTrailingOptions(arguments)), utils_1.trailingFunctionArgument(arguments));
    }
}
exports.SimpleGitApi = SimpleGitApi;
Object.assign(SimpleGitApi.prototype, config_1.default(), grep_1.default(), log_1.default());
//# sourceMappingURL=simple-git-api.js.map

/***/ }),

/***/ 28850:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.taskCallback = void 0;
const git_response_error_1 = __nccwpck_require__(85131);
const utils_1 = __nccwpck_require__(90847);
function taskCallback(task, response, callback = utils_1.NOOP) {
    const onSuccess = (data) => {
        callback(null, data);
    };
    const onError = (err) => {
        if ((err === null || err === void 0 ? void 0 : err.task) === task) {
            callback((err instanceof git_response_error_1.GitResponseError) ? addDeprecationNoticeToError(err) : err, undefined);
        }
    };
    response.then(onSuccess, onError);
}
exports.taskCallback = taskCallback;
function addDeprecationNoticeToError(err) {
    let log = (name) => {
        console.warn(`simple-git deprecation notice: accessing GitResponseError.${name} should be GitResponseError.git.${name}, this will no longer be available in version 3`);
        log = utils_1.NOOP;
    };
    return Object.create(err, Object.getOwnPropertyNames(err.git).reduce(descriptorReducer, {}));
    function descriptorReducer(all, name) {
        if (name in err) {
            return all;
        }
        all[name] = {
            enumerable: false,
            configurable: false,
            get() {
                log(name);
                return err.git[name];
            },
        };
        return all;
    }
}
//# sourceMappingURL=task-callback.js.map

/***/ }),

/***/ 34931:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.applyPatchTask = void 0;
const task_1 = __nccwpck_require__(32815);
function applyPatchTask(patches, customArgs) {
    return task_1.straightThroughStringTask(['apply', ...customArgs, ...patches]);
}
exports.applyPatchTask = applyPatchTask;
//# sourceMappingURL=apply-patch.js.map

/***/ }),

/***/ 60017:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteBranchTask = exports.deleteBranchesTask = exports.branchLocalTask = exports.branchTask = exports.containsDeleteBranchCommand = void 0;
const git_response_error_1 = __nccwpck_require__(85131);
const parse_branch_delete_1 = __nccwpck_require__(66086);
const parse_branch_1 = __nccwpck_require__(89264);
const utils_1 = __nccwpck_require__(90847);
function containsDeleteBranchCommand(commands) {
    const deleteCommands = ['-d', '-D', '--delete'];
    return commands.some(command => deleteCommands.includes(command));
}
exports.containsDeleteBranchCommand = containsDeleteBranchCommand;
function branchTask(customArgs) {
    const isDelete = containsDeleteBranchCommand(customArgs);
    const commands = ['branch', ...customArgs];
    if (commands.length === 1) {
        commands.push('-a');
    }
    if (!commands.includes('-v')) {
        commands.splice(1, 0, '-v');
    }
    return {
        format: 'utf-8',
        commands,
        parser(stdOut, stdErr) {
            if (isDelete) {
                return parse_branch_delete_1.parseBranchDeletions(stdOut, stdErr).all[0];
            }
            return parse_branch_1.parseBranchSummary(stdOut);
        },
    };
}
exports.branchTask = branchTask;
function branchLocalTask() {
    const parser = parse_branch_1.parseBranchSummary;
    return {
        format: 'utf-8',
        commands: ['branch', '-v'],
        parser,
    };
}
exports.branchLocalTask = branchLocalTask;
function deleteBranchesTask(branches, forceDelete = false) {
    return {
        format: 'utf-8',
        commands: ['branch', '-v', forceDelete ? '-D' : '-d', ...branches],
        parser(stdOut, stdErr) {
            return parse_branch_delete_1.parseBranchDeletions(stdOut, stdErr);
        },
        onError({ exitCode, stdOut }, error, done, fail) {
            if (!parse_branch_delete_1.hasBranchDeletionError(String(error), exitCode)) {
                return fail(error);
            }
            done(stdOut);
        },
    };
}
exports.deleteBranchesTask = deleteBranchesTask;
function deleteBranchTask(branch, forceDelete = false) {
    const task = {
        format: 'utf-8',
        commands: ['branch', '-v', forceDelete ? '-D' : '-d', branch],
        parser(stdOut, stdErr) {
            return parse_branch_delete_1.parseBranchDeletions(stdOut, stdErr).branches[branch];
        },
        onError({ exitCode, stdErr, stdOut }, error, _, fail) {
            if (!parse_branch_delete_1.hasBranchDeletionError(String(error), exitCode)) {
                return fail(error);
            }
            throw new git_response_error_1.GitResponseError(task.parser(utils_1.bufferToString(stdOut), utils_1.bufferToString(stdErr)), String(error));
        },
    };
    return task;
}
exports.deleteBranchTask = deleteBranchTask;
//# sourceMappingURL=branch.js.map

/***/ }),

/***/ 4415:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.changeWorkingDirectoryTask = void 0;
const utils_1 = __nccwpck_require__(90847);
const task_1 = __nccwpck_require__(32815);
function changeWorkingDirectoryTask(directory, root) {
    return task_1.adhocExecTask((instance) => {
        if (!utils_1.folderExists(directory)) {
            throw new Error(`Git.cwd: cannot change to non-directory "${directory}"`);
        }
        return ((root || instance).cwd = directory);
    });
}
exports.changeWorkingDirectoryTask = changeWorkingDirectoryTask;
//# sourceMappingURL=change-working-directory.js.map

/***/ }),

/***/ 3293:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkIgnoreTask = void 0;
const CheckIgnore_1 = __nccwpck_require__(19926);
function checkIgnoreTask(paths) {
    return {
        commands: ['check-ignore', ...paths],
        format: 'utf-8',
        parser: CheckIgnore_1.parseCheckIgnore,
    };
}
exports.checkIgnoreTask = checkIgnoreTask;
//# sourceMappingURL=check-ignore.js.map

/***/ }),

/***/ 20221:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkIsBareRepoTask = exports.checkIsRepoRootTask = exports.checkIsRepoTask = exports.CheckRepoActions = void 0;
const utils_1 = __nccwpck_require__(90847);
var CheckRepoActions;
(function (CheckRepoActions) {
    CheckRepoActions["BARE"] = "bare";
    CheckRepoActions["IN_TREE"] = "tree";
    CheckRepoActions["IS_REPO_ROOT"] = "root";
})(CheckRepoActions = exports.CheckRepoActions || (exports.CheckRepoActions = {}));
const onError = ({ exitCode }, error, done, fail) => {
    if (exitCode === utils_1.ExitCodes.UNCLEAN && isNotRepoMessage(error)) {
        return done(Buffer.from('false'));
    }
    fail(error);
};
const parser = (text) => {
    return text.trim() === 'true';
};
function checkIsRepoTask(action) {
    switch (action) {
        case CheckRepoActions.BARE:
            return checkIsBareRepoTask();
        case CheckRepoActions.IS_REPO_ROOT:
            return checkIsRepoRootTask();
    }
    const commands = ['rev-parse', '--is-inside-work-tree'];
    return {
        commands,
        format: 'utf-8',
        onError,
        parser,
    };
}
exports.checkIsRepoTask = checkIsRepoTask;
function checkIsRepoRootTask() {
    const commands = ['rev-parse', '--git-dir'];
    return {
        commands,
        format: 'utf-8',
        onError,
        parser(path) {
            return /^\.(git)?$/.test(path.trim());
        },
    };
}
exports.checkIsRepoRootTask = checkIsRepoRootTask;
function checkIsBareRepoTask() {
    const commands = ['rev-parse', '--is-bare-repository'];
    return {
        commands,
        format: 'utf-8',
        onError,
        parser,
    };
}
exports.checkIsBareRepoTask = checkIsBareRepoTask;
function isNotRepoMessage(error) {
    return /(Not a git repository|Kein Git-Repository)/i.test(String(error));
}
//# sourceMappingURL=check-is-repo.js.map

/***/ }),

/***/ 84386:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isCleanOptionsArray = exports.cleanTask = exports.cleanWithOptionsTask = exports.CleanOptions = exports.CONFIG_ERROR_UNKNOWN_OPTION = exports.CONFIG_ERROR_MODE_REQUIRED = exports.CONFIG_ERROR_INTERACTIVE_MODE = void 0;
const CleanSummary_1 = __nccwpck_require__(55689);
const utils_1 = __nccwpck_require__(90847);
const task_1 = __nccwpck_require__(32815);
exports.CONFIG_ERROR_INTERACTIVE_MODE = 'Git clean interactive mode is not supported';
exports.CONFIG_ERROR_MODE_REQUIRED = 'Git clean mode parameter ("n" or "f") is required';
exports.CONFIG_ERROR_UNKNOWN_OPTION = 'Git clean unknown option found in: ';
/**
 * All supported option switches available for use in a `git.clean` operation
 */
var CleanOptions;
(function (CleanOptions) {
    CleanOptions["DRY_RUN"] = "n";
    CleanOptions["FORCE"] = "f";
    CleanOptions["IGNORED_INCLUDED"] = "x";
    CleanOptions["IGNORED_ONLY"] = "X";
    CleanOptions["EXCLUDING"] = "e";
    CleanOptions["QUIET"] = "q";
    CleanOptions["RECURSIVE"] = "d";
})(CleanOptions = exports.CleanOptions || (exports.CleanOptions = {}));
const CleanOptionValues = new Set(['i', ...utils_1.asStringArray(Object.values(CleanOptions))]);
function cleanWithOptionsTask(mode, customArgs) {
    const { cleanMode, options, valid } = getCleanOptions(mode);
    if (!cleanMode) {
        return task_1.configurationErrorTask(exports.CONFIG_ERROR_MODE_REQUIRED);
    }
    if (!valid.options) {
        return task_1.configurationErrorTask(exports.CONFIG_ERROR_UNKNOWN_OPTION + JSON.stringify(mode));
    }
    options.push(...customArgs);
    if (options.some(isInteractiveMode)) {
        return task_1.configurationErrorTask(exports.CONFIG_ERROR_INTERACTIVE_MODE);
    }
    return cleanTask(cleanMode, options);
}
exports.cleanWithOptionsTask = cleanWithOptionsTask;
function cleanTask(mode, customArgs) {
    const commands = ['clean', `-${mode}`, ...customArgs];
    return {
        commands,
        format: 'utf-8',
        parser(text) {
            return CleanSummary_1.cleanSummaryParser(mode === CleanOptions.DRY_RUN, text);
        }
    };
}
exports.cleanTask = cleanTask;
function isCleanOptionsArray(input) {
    return Array.isArray(input) && input.every(test => CleanOptionValues.has(test));
}
exports.isCleanOptionsArray = isCleanOptionsArray;
function getCleanOptions(input) {
    let cleanMode;
    let options = [];
    let valid = { cleanMode: false, options: true };
    input.replace(/[^a-z]i/g, '').split('').forEach(char => {
        if (isCleanMode(char)) {
            cleanMode = char;
            valid.cleanMode = true;
        }
        else {
            valid.options = valid.options && isKnownOption(options[options.length] = (`-${char}`));
        }
    });
    return {
        cleanMode,
        options,
        valid,
    };
}
function isCleanMode(cleanMode) {
    return cleanMode === CleanOptions.FORCE || cleanMode === CleanOptions.DRY_RUN;
}
function isKnownOption(option) {
    return /^-[a-z]$/i.test(option) && CleanOptionValues.has(option.charAt(1));
}
function isInteractiveMode(option) {
    if (/^-[^\-]/.test(option)) {
        return option.indexOf('i') > 0;
    }
    return option === '--interactive';
}
//# sourceMappingURL=clean.js.map

/***/ }),

/***/ 3173:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cloneMirrorTask = exports.cloneTask = void 0;
const task_1 = __nccwpck_require__(32815);
const utils_1 = __nccwpck_require__(90847);
function cloneTask(repo, directory, customArgs) {
    const commands = ['clone', ...customArgs];
    if (typeof repo === 'string') {
        commands.push(repo);
    }
    if (typeof directory === 'string') {
        commands.push(directory);
    }
    return task_1.straightThroughStringTask(commands);
}
exports.cloneTask = cloneTask;
function cloneMirrorTask(repo, directory, customArgs) {
    utils_1.append(customArgs, '--mirror');
    return cloneTask(repo, directory, customArgs);
}
exports.cloneMirrorTask = cloneMirrorTask;
//# sourceMappingURL=clone.js.map

/***/ }),

/***/ 15494:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.commitTask = void 0;
const parse_commit_1 = __nccwpck_require__(83026);
function commitTask(message, files, customArgs) {
    const commands = ['commit'];
    message.forEach((m) => commands.push('-m', m));
    commands.push(...files, ...customArgs);
    return {
        commands,
        format: 'utf-8',
        parser: parse_commit_1.parseCommitResult,
    };
}
exports.commitTask = commitTask;
//# sourceMappingURL=commit.js.map

/***/ }),

/***/ 57597:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitConfigScope = void 0;
const ConfigList_1 = __nccwpck_require__(97219);
const utils_1 = __nccwpck_require__(90847);
var GitConfigScope;
(function (GitConfigScope) {
    GitConfigScope["system"] = "system";
    GitConfigScope["global"] = "global";
    GitConfigScope["local"] = "local";
    GitConfigScope["worktree"] = "worktree";
})(GitConfigScope = exports.GitConfigScope || (exports.GitConfigScope = {}));
function asConfigScope(scope, fallback) {
    if (typeof scope === 'string' && GitConfigScope.hasOwnProperty(scope)) {
        return scope;
    }
    return fallback;
}
function addConfigTask(key, value, append, scope) {
    const commands = ['config', `--${scope}`];
    if (append) {
        commands.push('--add');
    }
    commands.push(key, value);
    return {
        commands,
        format: 'utf-8',
        parser(text) {
            return text;
        }
    };
}
function getConfigTask(key, scope) {
    const commands = ['config', '--null', '--show-origin', '--get-all', key];
    if (scope) {
        commands.splice(1, 0, `--${scope}`);
    }
    return {
        commands,
        format: 'utf-8',
        parser(text) {
            return ConfigList_1.configGetParser(text, key);
        }
    };
}
function listConfigTask(scope) {
    const commands = ['config', '--list', '--show-origin', '--null'];
    if (scope) {
        commands.push(`--${scope}`);
    }
    return {
        commands,
        format: 'utf-8',
        parser(text) {
            return ConfigList_1.configListParser(text);
        },
    };
}
function default_1() {
    return {
        addConfig(key, value, ...rest) {
            return this._runTask(addConfigTask(key, value, rest[0] === true, asConfigScope(rest[1], GitConfigScope.local)), utils_1.trailingFunctionArgument(arguments));
        },
        getConfig(key, scope) {
            return this._runTask(getConfigTask(key, asConfigScope(scope, undefined)), utils_1.trailingFunctionArgument(arguments));
        },
        listConfig(...rest) {
            return this._runTask(listConfigTask(asConfigScope(rest[0], undefined)), utils_1.trailingFunctionArgument(arguments));
        },
    };
}
exports.default = default_1;
//# sourceMappingURL=config.js.map

/***/ }),

/***/ 79241:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.diffSummaryTask = void 0;
const parse_diff_summary_1 = __nccwpck_require__(2024);
function diffSummaryTask(customArgs) {
    return {
        commands: ['diff', '--stat=4096', ...customArgs],
        format: 'utf-8',
        parser(stdOut) {
            return parse_diff_summary_1.parseDiffResult(stdOut);
        }
    };
}
exports.diffSummaryTask = diffSummaryTask;
//# sourceMappingURL=diff.js.map

/***/ }),

/***/ 28823:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fetchTask = void 0;
const parse_fetch_1 = __nccwpck_require__(56254);
function fetchTask(remote, branch, customArgs) {
    const commands = ['fetch', ...customArgs];
    if (remote && branch) {
        commands.push(remote, branch);
    }
    return {
        commands,
        format: 'utf-8',
        parser: parse_fetch_1.parseFetchResult,
    };
}
exports.fetchTask = fetchTask;
//# sourceMappingURL=fetch.js.map

/***/ }),

/***/ 55524:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

var _a;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.grepQueryBuilder = void 0;
const utils_1 = __nccwpck_require__(90847);
const task_1 = __nccwpck_require__(32815);
const disallowedOptions = ['-h'];
const Query = Symbol('grepQuery');
class GrepQuery {
    constructor() {
        this[_a] = [];
    }
    *[(_a = Query, Symbol.iterator)]() {
        for (const query of this[Query]) {
            yield query;
        }
    }
    and(...and) {
        and.length && this[Query].push('--and', '(', ...utils_1.prefixedArray(and, '-e'), ')');
        return this;
    }
    param(...param) {
        this[Query].push(...utils_1.prefixedArray(param, '-e'));
        return this;
    }
}
/**
 * Creates a new builder for a `git.grep` query with optional params
 */
function grepQueryBuilder(...params) {
    return new GrepQuery().param(...params);
}
exports.grepQueryBuilder = grepQueryBuilder;
function parseGrep(grep) {
    const paths = new Set();
    const results = {};
    utils_1.forEachLineWithContent(grep, (input) => {
        const [path, line, preview] = input.split(utils_1.NULL);
        paths.add(path);
        (results[path] = results[path] || []).push({
            line: utils_1.asNumber(line),
            path,
            preview,
        });
    });
    return {
        paths,
        results,
    };
}
function default_1() {
    return {
        grep(searchTerm) {
            const then = utils_1.trailingFunctionArgument(arguments);
            const options = utils_1.getTrailingOptions(arguments);
            for (const option of disallowedOptions) {
                if (options.includes(option)) {
                    return this._runTask(task_1.configurationErrorTask(`git.grep: use of "${option}" is not supported.`), then);
                }
            }
            if (typeof searchTerm === 'string') {
                searchTerm = grepQueryBuilder().param(searchTerm);
            }
            const commands = ['grep', '--null', '-n', '--full-name', ...options, ...searchTerm];
            return this._runTask({
                commands,
                format: 'utf-8',
                parser(stdOut) {
                    return parseGrep(stdOut);
                },
            }, then);
        }
    };
}
exports.default = default_1;
//# sourceMappingURL=grep.js.map

/***/ }),

/***/ 18199:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.hashObjectTask = void 0;
const task_1 = __nccwpck_require__(32815);
/**
 * Task used by `git.hashObject`
 */
function hashObjectTask(filePath, write) {
    const commands = ['hash-object', filePath];
    if (write) {
        commands.push('-w');
    }
    return task_1.straightThroughStringTask(commands, true);
}
exports.hashObjectTask = hashObjectTask;
//# sourceMappingURL=hash-object.js.map

/***/ }),

/***/ 66016:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.initTask = void 0;
const InitSummary_1 = __nccwpck_require__(8690);
const bareCommand = '--bare';
function hasBareCommand(command) {
    return command.includes(bareCommand);
}
function initTask(bare = false, path, customArgs) {
    const commands = ['init', ...customArgs];
    if (bare && !hasBareCommand(commands)) {
        commands.splice(1, 0, bareCommand);
    }
    return {
        commands,
        format: 'utf-8',
        parser(text) {
            return InitSummary_1.parseInit(commands.includes('--bare'), path, text);
        }
    };
}
exports.initTask = initTask;
//# sourceMappingURL=init.js.map

/***/ }),

/***/ 8627:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.logTask = exports.parseLogOptions = void 0;
const parse_list_log_summary_1 = __nccwpck_require__(9729);
const utils_1 = __nccwpck_require__(90847);
const task_1 = __nccwpck_require__(32815);
var excludeOptions;
(function (excludeOptions) {
    excludeOptions[excludeOptions["--pretty"] = 0] = "--pretty";
    excludeOptions[excludeOptions["max-count"] = 1] = "max-count";
    excludeOptions[excludeOptions["maxCount"] = 2] = "maxCount";
    excludeOptions[excludeOptions["n"] = 3] = "n";
    excludeOptions[excludeOptions["file"] = 4] = "file";
    excludeOptions[excludeOptions["format"] = 5] = "format";
    excludeOptions[excludeOptions["from"] = 6] = "from";
    excludeOptions[excludeOptions["to"] = 7] = "to";
    excludeOptions[excludeOptions["splitter"] = 8] = "splitter";
    excludeOptions[excludeOptions["symmetric"] = 9] = "symmetric";
    excludeOptions[excludeOptions["mailMap"] = 10] = "mailMap";
    excludeOptions[excludeOptions["multiLine"] = 11] = "multiLine";
    excludeOptions[excludeOptions["strictDate"] = 12] = "strictDate";
})(excludeOptions || (excludeOptions = {}));
function prettyFormat(format, splitter) {
    const fields = [];
    const formatStr = [];
    Object.keys(format).forEach((field) => {
        fields.push(field);
        formatStr.push(String(format[field]));
    });
    return [
        fields, formatStr.join(splitter)
    ];
}
function userOptions(input) {
    const output = Object.assign({}, input);
    Object.keys(input).forEach(key => {
        if (key in excludeOptions) {
            delete output[key];
        }
    });
    return output;
}
function parseLogOptions(opt = {}, customArgs = []) {
    const splitter = opt.splitter || parse_list_log_summary_1.SPLITTER;
    const format = opt.format || {
        hash: '%H',
        date: opt.strictDate === false ? '%ai' : '%aI',
        message: '%s',
        refs: '%D',
        body: opt.multiLine ? '%B' : '%b',
        author_name: opt.mailMap !== false ? '%aN' : '%an',
        author_email: opt.mailMap !== false ? '%aE' : '%ae'
    };
    const [fields, formatStr] = prettyFormat(format, splitter);
    const suffix = [];
    const command = [
        `--pretty=format:${parse_list_log_summary_1.START_BOUNDARY}${formatStr}${parse_list_log_summary_1.COMMIT_BOUNDARY}`,
        ...customArgs,
    ];
    const maxCount = opt.n || opt['max-count'] || opt.maxCount;
    if (maxCount) {
        command.push(`--max-count=${maxCount}`);
    }
    if (opt.from && opt.to) {
        const rangeOperator = (opt.symmetric !== false) ? '...' : '..';
        suffix.push(`${opt.from}${rangeOperator}${opt.to}`);
    }
    if (opt.file) {
        suffix.push('--follow', opt.file);
    }
    utils_1.appendTaskOptions(userOptions(opt), command);
    return {
        fields,
        splitter,
        commands: [
            ...command,
            ...suffix,
        ],
    };
}
exports.parseLogOptions = parseLogOptions;
function logTask(splitter, fields, customArgs) {
    return {
        commands: ['log', ...customArgs],
        format: 'utf-8',
        parser: parse_list_log_summary_1.createListLogSummaryParser(splitter, fields),
    };
}
exports.logTask = logTask;
function default_1() {
    return {
        log(...rest) {
            const next = utils_1.trailingFunctionArgument(arguments);
            const task = rejectDeprecatedSignatures(...rest) ||
                createLogTask(parseLogOptions(utils_1.trailingOptionsArgument(arguments), utils_1.filterType(arguments[0], utils_1.filterArray)));
            return this._runTask(task, next);
        }
    };
    function createLogTask(options) {
        return logTask(options.splitter, options.fields, options.commands);
    }
    function rejectDeprecatedSignatures(from, to) {
        return (utils_1.filterString(from) &&
            utils_1.filterString(to) &&
            task_1.configurationErrorTask(`git.log(string, string) should be replaced with git.log({ from: string, to: string })`));
    }
}
exports.default = default_1;
//# sourceMappingURL=log.js.map

/***/ }),

/***/ 38829:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mergeTask = void 0;
const git_response_error_1 = __nccwpck_require__(85131);
const parse_merge_1 = __nccwpck_require__(66412);
const task_1 = __nccwpck_require__(32815);
function mergeTask(customArgs) {
    if (!customArgs.length) {
        return task_1.configurationErrorTask('Git.merge requires at least one option');
    }
    return {
        commands: ['merge', ...customArgs],
        format: 'utf-8',
        parser(stdOut, stdErr) {
            const merge = parse_merge_1.parseMergeResult(stdOut, stdErr);
            if (merge.failed) {
                throw new git_response_error_1.GitResponseError(merge);
            }
            return merge;
        }
    };
}
exports.mergeTask = mergeTask;
//# sourceMappingURL=merge.js.map

/***/ }),

/***/ 16520:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveTask = void 0;
const parse_move_1 = __nccwpck_require__(47444);
const utils_1 = __nccwpck_require__(90847);
function moveTask(from, to) {
    return {
        commands: ['mv', '-v', ...utils_1.asArray(from), to],
        format: 'utf-8',
        parser: parse_move_1.parseMoveResult,
    };
}
exports.moveTask = moveTask;
//# sourceMappingURL=move.js.map

/***/ }),

/***/ 64636:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pullTask = void 0;
const parse_pull_1 = __nccwpck_require__(65658);
function pullTask(remote, branch, customArgs) {
    const commands = ['pull', ...customArgs];
    if (remote && branch) {
        commands.splice(1, 0, remote, branch);
    }
    return {
        commands,
        format: 'utf-8',
        parser(stdOut, stdErr) {
            return parse_pull_1.parsePullResult(stdOut, stdErr);
        }
    };
}
exports.pullTask = pullTask;
//# sourceMappingURL=pull.js.map

/***/ }),

/***/ 51435:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pushTask = exports.pushTagsTask = void 0;
const parse_push_1 = __nccwpck_require__(58530);
const utils_1 = __nccwpck_require__(90847);
function pushTagsTask(ref = {}, customArgs) {
    utils_1.append(customArgs, '--tags');
    return pushTask(ref, customArgs);
}
exports.pushTagsTask = pushTagsTask;
function pushTask(ref = {}, customArgs) {
    const commands = ['push', ...customArgs];
    if (ref.branch) {
        commands.splice(1, 0, ref.branch);
    }
    if (ref.remote) {
        commands.splice(1, 0, ref.remote);
    }
    utils_1.remove(commands, '-v');
    utils_1.append(commands, '--verbose');
    utils_1.append(commands, '--porcelain');
    return {
        commands,
        format: 'utf-8',
        parser: parse_push_1.parsePushResult,
    };
}
exports.pushTask = pushTask;
//# sourceMappingURL=push.js.map

/***/ }),

/***/ 89866:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeRemoteTask = exports.remoteTask = exports.listRemotesTask = exports.getRemotesTask = exports.addRemoteTask = void 0;
const GetRemoteSummary_1 = __nccwpck_require__(93421);
const task_1 = __nccwpck_require__(32815);
function addRemoteTask(remoteName, remoteRepo, customArgs = []) {
    return task_1.straightThroughStringTask(['remote', 'add', ...customArgs, remoteName, remoteRepo]);
}
exports.addRemoteTask = addRemoteTask;
function getRemotesTask(verbose) {
    const commands = ['remote'];
    if (verbose) {
        commands.push('-v');
    }
    return {
        commands,
        format: 'utf-8',
        parser: verbose ? GetRemoteSummary_1.parseGetRemotesVerbose : GetRemoteSummary_1.parseGetRemotes,
    };
}
exports.getRemotesTask = getRemotesTask;
function listRemotesTask(customArgs = []) {
    const commands = [...customArgs];
    if (commands[0] !== 'ls-remote') {
        commands.unshift('ls-remote');
    }
    return task_1.straightThroughStringTask(commands);
}
exports.listRemotesTask = listRemotesTask;
function remoteTask(customArgs = []) {
    const commands = [...customArgs];
    if (commands[0] !== 'remote') {
        commands.unshift('remote');
    }
    return task_1.straightThroughStringTask(commands);
}
exports.remoteTask = remoteTask;
function removeRemoteTask(remoteName) {
    return task_1.straightThroughStringTask(['remote', 'remove', remoteName]);
}
exports.removeRemoteTask = removeRemoteTask;
//# sourceMappingURL=remote.js.map

/***/ }),

/***/ 92377:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getResetMode = exports.resetTask = exports.ResetMode = void 0;
const task_1 = __nccwpck_require__(32815);
var ResetMode;
(function (ResetMode) {
    ResetMode["MIXED"] = "mixed";
    ResetMode["SOFT"] = "soft";
    ResetMode["HARD"] = "hard";
    ResetMode["MERGE"] = "merge";
    ResetMode["KEEP"] = "keep";
})(ResetMode = exports.ResetMode || (exports.ResetMode = {}));
const ResetModes = Array.from(Object.values(ResetMode));
function resetTask(mode, customArgs) {
    const commands = ['reset'];
    if (isValidResetMode(mode)) {
        commands.push(`--${mode}`);
    }
    commands.push(...customArgs);
    return task_1.straightThroughStringTask(commands);
}
exports.resetTask = resetTask;
function getResetMode(mode) {
    if (isValidResetMode(mode)) {
        return mode;
    }
    switch (typeof mode) {
        case 'string':
        case 'undefined':
            return ResetMode.SOFT;
    }
    return;
}
exports.getResetMode = getResetMode;
function isValidResetMode(mode) {
    return ResetModes.includes(mode);
}
//# sourceMappingURL=reset.js.map

/***/ }),

/***/ 30810:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.stashListTask = void 0;
const parse_list_log_summary_1 = __nccwpck_require__(9729);
const log_1 = __nccwpck_require__(8627);
function stashListTask(opt = {}, customArgs) {
    const options = log_1.parseLogOptions(opt);
    const parser = parse_list_log_summary_1.createListLogSummaryParser(options.splitter, options.fields);
    return {
        commands: ['stash', 'list', ...options.commands, ...customArgs],
        format: 'utf-8',
        parser,
    };
}
exports.stashListTask = stashListTask;
//# sourceMappingURL=stash-list.js.map

/***/ }),

/***/ 99197:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.statusTask = void 0;
const StatusSummary_1 = __nccwpck_require__(16790);
function statusTask(customArgs) {
    return {
        format: 'utf-8',
        commands: ['status', '--porcelain', '-b', '-u', ...customArgs],
        parser(text) {
            return StatusSummary_1.parseStatusSummary(text);
        }
    };
}
exports.statusTask = statusTask;
//# sourceMappingURL=status.js.map

/***/ }),

/***/ 48772:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateSubModuleTask = exports.subModuleTask = exports.initSubModuleTask = exports.addSubModuleTask = void 0;
const task_1 = __nccwpck_require__(32815);
function addSubModuleTask(repo, path) {
    return subModuleTask(['add', repo, path]);
}
exports.addSubModuleTask = addSubModuleTask;
function initSubModuleTask(customArgs) {
    return subModuleTask(['init', ...customArgs]);
}
exports.initSubModuleTask = initSubModuleTask;
function subModuleTask(customArgs) {
    const commands = [...customArgs];
    if (commands[0] !== 'submodule') {
        commands.unshift('submodule');
    }
    return task_1.straightThroughStringTask(commands);
}
exports.subModuleTask = subModuleTask;
function updateSubModuleTask(customArgs) {
    return subModuleTask(['update', ...customArgs]);
}
exports.updateSubModuleTask = updateSubModuleTask;
//# sourceMappingURL=sub-module.js.map

/***/ }),

/***/ 98540:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addAnnotatedTagTask = exports.addTagTask = exports.tagListTask = void 0;
const TagList_1 = __nccwpck_require__(94539);
/**
 * Task used by `git.tags`
 */
function tagListTask(customArgs = []) {
    const hasCustomSort = customArgs.some((option) => /^--sort=/.test(option));
    return {
        format: 'utf-8',
        commands: ['tag', '-l', ...customArgs],
        parser(text) {
            return TagList_1.parseTagList(text, hasCustomSort);
        },
    };
}
exports.tagListTask = tagListTask;
/**
 * Task used by `git.addTag`
 */
function addTagTask(name) {
    return {
        format: 'utf-8',
        commands: ['tag', name],
        parser() {
            return { name };
        }
    };
}
exports.addTagTask = addTagTask;
/**
 * Task used by `git.addTag`
 */
function addAnnotatedTagTask(name, tagMessage) {
    return {
        format: 'utf-8',
        commands: ['tag', '-a', '-m', tagMessage, name],
        parser() {
            return { name };
        }
    };
}
exports.addAnnotatedTagTask = addAnnotatedTagTask;
//# sourceMappingURL=tag.js.map

/***/ }),

/***/ 32815:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isEmptyTask = exports.isBufferTask = exports.straightThroughBufferTask = exports.straightThroughStringTask = exports.configurationErrorTask = exports.adhocExecTask = exports.EMPTY_COMMANDS = void 0;
const task_configuration_error_1 = __nccwpck_require__(10740);
exports.EMPTY_COMMANDS = [];
function adhocExecTask(parser) {
    return {
        commands: exports.EMPTY_COMMANDS,
        format: 'empty',
        parser,
    };
}
exports.adhocExecTask = adhocExecTask;
function configurationErrorTask(error) {
    return {
        commands: exports.EMPTY_COMMANDS,
        format: 'empty',
        parser() {
            throw typeof error === 'string' ? new task_configuration_error_1.TaskConfigurationError(error) : error;
        }
    };
}
exports.configurationErrorTask = configurationErrorTask;
function straightThroughStringTask(commands, trimmed = false) {
    return {
        commands,
        format: 'utf-8',
        parser(text) {
            return trimmed ? String(text).trim() : text;
        },
    };
}
exports.straightThroughStringTask = straightThroughStringTask;
function straightThroughBufferTask(commands) {
    return {
        commands,
        format: 'buffer',
        parser(buffer) {
            return buffer;
        },
    };
}
exports.straightThroughBufferTask = straightThroughBufferTask;
function isBufferTask(task) {
    return task.format === 'buffer';
}
exports.isBufferTask = isBufferTask;
function isEmptyTask(task) {
    return task.format === 'empty' || !task.commands.length;
}
exports.isEmptyTask = isEmptyTask;
//# sourceMappingURL=task.js.map

/***/ }),

/***/ 77366:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.filterHasLength = exports.filterFunction = exports.filterPlainObject = exports.filterStringOrStringArray = exports.filterStringArray = exports.filterString = exports.filterPrimitives = exports.filterArray = exports.filterType = void 0;
const util_1 = __nccwpck_require__(78237);
function filterType(input, filter, def) {
    if (filter(input)) {
        return input;
    }
    return (arguments.length > 2) ? def : undefined;
}
exports.filterType = filterType;
const filterArray = (input) => {
    return Array.isArray(input);
};
exports.filterArray = filterArray;
function filterPrimitives(input, omit) {
    return /number|string|boolean/.test(typeof input) && (!omit || !omit.includes((typeof input)));
}
exports.filterPrimitives = filterPrimitives;
const filterString = (input) => {
    return typeof input === 'string';
};
exports.filterString = filterString;
const filterStringArray = (input) => {
    return Array.isArray(input) && input.every(exports.filterString);
};
exports.filterStringArray = filterStringArray;
const filterStringOrStringArray = (input) => {
    return exports.filterString(input) || (Array.isArray(input) && input.every(exports.filterString));
};
exports.filterStringOrStringArray = filterStringOrStringArray;
function filterPlainObject(input) {
    return !!input && util_1.objectToString(input) === '[object Object]';
}
exports.filterPlainObject = filterPlainObject;
function filterFunction(input) {
    return typeof input === 'function';
}
exports.filterFunction = filterFunction;
const filterHasLength = (input) => {
    if (input == null || 'number|boolean|function'.includes(typeof input)) {
        return false;
    }
    return Array.isArray(input) || typeof input === 'string' || typeof input.length === 'number';
};
exports.filterHasLength = filterHasLength;
//# sourceMappingURL=argument-filters.js.map

/***/ }),

/***/ 62185:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExitCodes = void 0;
/**
 * Known process exit codes used by the task parsers to determine whether an error
 * was one they can automatically handle
 */
var ExitCodes;
(function (ExitCodes) {
    ExitCodes[ExitCodes["SUCCESS"] = 0] = "SUCCESS";
    ExitCodes[ExitCodes["ERROR"] = 1] = "ERROR";
    ExitCodes[ExitCodes["UNCLEAN"] = 128] = "UNCLEAN";
})(ExitCodes = exports.ExitCodes || (exports.ExitCodes = {}));
//# sourceMappingURL=exit-codes.js.map

/***/ }),

/***/ 86578:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GitOutputStreams = void 0;
class GitOutputStreams {
    constructor(stdOut, stdErr) {
        this.stdOut = stdOut;
        this.stdErr = stdErr;
    }
    asStrings() {
        return new GitOutputStreams(this.stdOut.toString('utf8'), this.stdErr.toString('utf8'));
    }
}
exports.GitOutputStreams = GitOutputStreams;
//# sourceMappingURL=git-output-streams.js.map

/***/ }),

/***/ 90847:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__nccwpck_require__(77366), exports);
__exportStar(__nccwpck_require__(62185), exports);
__exportStar(__nccwpck_require__(86578), exports);
__exportStar(__nccwpck_require__(29536), exports);
__exportStar(__nccwpck_require__(45218), exports);
__exportStar(__nccwpck_require__(23546), exports);
__exportStar(__nccwpck_require__(21351), exports);
__exportStar(__nccwpck_require__(78237), exports);
//# sourceMappingURL=index.js.map

/***/ }),

/***/ 29536:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RemoteLineParser = exports.LineParser = void 0;
class LineParser {
    constructor(regExp, useMatches) {
        this.matches = [];
        this.parse = (line, target) => {
            this.resetMatches();
            if (!this._regExp.every((reg, index) => this.addMatch(reg, index, line(index)))) {
                return false;
            }
            return this.useMatches(target, this.prepareMatches()) !== false;
        };
        this._regExp = Array.isArray(regExp) ? regExp : [regExp];
        if (useMatches) {
            this.useMatches = useMatches;
        }
    }
    // @ts-ignore
    useMatches(target, match) {
        throw new Error(`LineParser:useMatches not implemented`);
    }
    resetMatches() {
        this.matches.length = 0;
    }
    prepareMatches() {
        return this.matches;
    }
    addMatch(reg, index, line) {
        const matched = line && reg.exec(line);
        if (matched) {
            this.pushMatch(index, matched);
        }
        return !!matched;
    }
    pushMatch(_index, matched) {
        this.matches.push(...matched.slice(1));
    }
}
exports.LineParser = LineParser;
class RemoteLineParser extends LineParser {
    addMatch(reg, index, line) {
        return /^remote:\s/.test(String(line)) && super.addMatch(reg, index, line);
    }
    pushMatch(index, matched) {
        if (index > 0 || matched.length > 1) {
            super.pushMatch(index, matched);
        }
    }
}
exports.RemoteLineParser = RemoteLineParser;
//# sourceMappingURL=line-parser.js.map

/***/ }),

/***/ 45218:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.createInstanceConfig = void 0;
const defaultOptions = {
    binary: 'git',
    maxConcurrentProcesses: 5,
    config: [],
};
function createInstanceConfig(...options) {
    const baseDir = process.cwd();
    const config = Object.assign(Object.assign({ baseDir }, defaultOptions), ...(options.filter(o => typeof o === 'object' && o)));
    config.baseDir = config.baseDir || baseDir;
    return config;
}
exports.createInstanceConfig = createInstanceConfig;
//# sourceMappingURL=simple-git-options.js.map

/***/ }),

/***/ 23546:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.trailingFunctionArgument = exports.trailingOptionsArgument = exports.getTrailingOptions = exports.appendTaskOptions = void 0;
const argument_filters_1 = __nccwpck_require__(77366);
const util_1 = __nccwpck_require__(78237);
function appendTaskOptions(options, commands = []) {
    if (!argument_filters_1.filterPlainObject(options)) {
        return commands;
    }
    return Object.keys(options).reduce((commands, key) => {
        const value = options[key];
        if (argument_filters_1.filterPrimitives(value, ['boolean'])) {
            commands.push(key + '=' + value);
        }
        else {
            commands.push(key);
        }
        return commands;
    }, commands);
}
exports.appendTaskOptions = appendTaskOptions;
function getTrailingOptions(args, initialPrimitive = 0, objectOnly = false) {
    const command = [];
    for (let i = 0, max = initialPrimitive < 0 ? args.length : initialPrimitive; i < max; i++) {
        if ('string|number'.includes(typeof args[i])) {
            command.push(String(args[i]));
        }
    }
    appendTaskOptions(trailingOptionsArgument(args), command);
    if (!objectOnly) {
        command.push(...trailingArrayArgument(args));
    }
    return command;
}
exports.getTrailingOptions = getTrailingOptions;
function trailingArrayArgument(args) {
    const hasTrailingCallback = typeof util_1.last(args) === 'function';
    return argument_filters_1.filterType(util_1.last(args, hasTrailingCallback ? 1 : 0), argument_filters_1.filterArray, []);
}
/**
 * Given any number of arguments, returns the trailing options argument, ignoring a trailing function argument
 * if there is one. When not found, the return value is null.
 */
function trailingOptionsArgument(args) {
    const hasTrailingCallback = argument_filters_1.filterFunction(util_1.last(args));
    return argument_filters_1.filterType(util_1.last(args, hasTrailingCallback ? 1 : 0), argument_filters_1.filterPlainObject);
}
exports.trailingOptionsArgument = trailingOptionsArgument;
/**
 * Returns either the source argument when it is a `Function`, or the default
 * `NOOP` function constant
 */
function trailingFunctionArgument(args, includeNoop = true) {
    const callback = util_1.asFunction(util_1.last(args));
    return includeNoop || util_1.isUserFunction(callback) ? callback : undefined;
}
exports.trailingFunctionArgument = trailingFunctionArgument;
//# sourceMappingURL=task-options.js.map

/***/ }),

/***/ 21351:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseStringResponse = exports.callTaskParser = void 0;
const util_1 = __nccwpck_require__(78237);
function callTaskParser(parser, streams) {
    return parser(streams.stdOut, streams.stdErr);
}
exports.callTaskParser = callTaskParser;
function parseStringResponse(result, parsers, ...texts) {
    texts.forEach(text => {
        for (let lines = util_1.toLinesWithContent(text), i = 0, max = lines.length; i < max; i++) {
            const line = (offset = 0) => {
                if ((i + offset) >= max) {
                    return;
                }
                return lines[i + offset];
            };
            parsers.some(({ parse }) => parse(line, result));
        }
    });
    return result;
}
exports.parseStringResponse = parseStringResponse;
//# sourceMappingURL=task-parser.js.map

/***/ }),

/***/ 78237:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.delay = exports.pick = exports.bufferToString = exports.prefixedArray = exports.asNumber = exports.asStringArray = exports.asArray = exports.objectToString = exports.remove = exports.including = exports.append = exports.folderExists = exports.forEachLineWithContent = exports.toLinesWithContent = exports.last = exports.first = exports.splitOn = exports.isUserFunction = exports.asFunction = exports.NOOP = exports.NULL = void 0;
const file_exists_1 = __nccwpck_require__(54751);
exports.NULL = '\0';
const NOOP = () => {
};
exports.NOOP = NOOP;
/**
 * Returns either the source argument when it is a `Function`, or the default
 * `NOOP` function constant
 */
function asFunction(source) {
    return typeof source === 'function' ? source : exports.NOOP;
}
exports.asFunction = asFunction;
/**
 * Determines whether the supplied argument is both a function, and is not
 * the `NOOP` function.
 */
function isUserFunction(source) {
    return (typeof source === 'function' && source !== exports.NOOP);
}
exports.isUserFunction = isUserFunction;
function splitOn(input, char) {
    const index = input.indexOf(char);
    if (index <= 0) {
        return [input, ''];
    }
    return [
        input.substr(0, index),
        input.substr(index + 1),
    ];
}
exports.splitOn = splitOn;
function first(input, offset = 0) {
    return isArrayLike(input) && input.length > offset ? input[offset] : undefined;
}
exports.first = first;
function last(input, offset = 0) {
    if (isArrayLike(input) && input.length > offset) {
        return input[input.length - 1 - offset];
    }
}
exports.last = last;
function isArrayLike(input) {
    return !!(input && typeof input.length === 'number');
}
function toLinesWithContent(input, trimmed = true, separator = '\n') {
    return input.split(separator)
        .reduce((output, line) => {
        const lineContent = trimmed ? line.trim() : line;
        if (lineContent) {
            output.push(lineContent);
        }
        return output;
    }, []);
}
exports.toLinesWithContent = toLinesWithContent;
function forEachLineWithContent(input, callback) {
    return toLinesWithContent(input, true).map(line => callback(line));
}
exports.forEachLineWithContent = forEachLineWithContent;
function folderExists(path) {
    return file_exists_1.exists(path, file_exists_1.FOLDER);
}
exports.folderExists = folderExists;
/**
 * Adds `item` into the `target` `Array` or `Set` when it is not already present and returns the `item`.
 */
function append(target, item) {
    if (Array.isArray(target)) {
        if (!target.includes(item)) {
            target.push(item);
        }
    }
    else {
        target.add(item);
    }
    return item;
}
exports.append = append;
/**
 * Adds `item` into the `target` `Array` when it is not already present and returns the `target`.
 */
function including(target, item) {
    if (Array.isArray(target) && !target.includes(item)) {
        target.push(item);
    }
    return target;
}
exports.including = including;
function remove(target, item) {
    if (Array.isArray(target)) {
        const index = target.indexOf(item);
        if (index >= 0) {
            target.splice(index, 1);
        }
    }
    else {
        target.delete(item);
    }
    return item;
}
exports.remove = remove;
exports.objectToString = Object.prototype.toString.call.bind(Object.prototype.toString);
function asArray(source) {
    return Array.isArray(source) ? source : [source];
}
exports.asArray = asArray;
function asStringArray(source) {
    return asArray(source).map(String);
}
exports.asStringArray = asStringArray;
function asNumber(source, onNaN = 0) {
    if (source == null) {
        return onNaN;
    }
    const num = parseInt(source, 10);
    return isNaN(num) ? onNaN : num;
}
exports.asNumber = asNumber;
function prefixedArray(input, prefix) {
    const output = [];
    for (let i = 0, max = input.length; i < max; i++) {
        output.push(prefix, input[i]);
    }
    return output;
}
exports.prefixedArray = prefixedArray;
function bufferToString(input) {
    return (Array.isArray(input) ? Buffer.concat(input) : input).toString('utf-8');
}
exports.bufferToString = bufferToString;
/**
 * Get a new object from a source object with only the listed properties.
 */
function pick(source, properties) {
    return Object.assign({}, ...properties.map((property) => property in source ? { [property]: source[property] } : {}));
}
exports.pick = pick;
function delay(duration = 0) {
    return new Promise(done => setTimeout(done, duration));
}
exports.delay = delay;
//# sourceMappingURL=util.js.map

/***/ }),

/***/ 449:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

var escapeStringRegexp = __nccwpck_require__(98691);

module.exports = function (str, sub) {
	if (typeof str !== 'string' || typeof sub !== 'string') {
		throw new TypeError();
	}

	sub = escapeStringRegexp(sub);
	return str.replace(new RegExp('^' + sub + '|' + sub + '$', 'g'), '');
};


/***/ }),

/***/ 59318:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const os = __nccwpck_require__(12087);
const hasFlag = __nccwpck_require__(31621);

const env = process.env;

let forceColor;
if (hasFlag('no-color') ||
	hasFlag('no-colors') ||
	hasFlag('color=false')) {
	forceColor = false;
} else if (hasFlag('color') ||
	hasFlag('colors') ||
	hasFlag('color=true') ||
	hasFlag('color=always')) {
	forceColor = true;
}
if ('FORCE_COLOR' in env) {
	forceColor = env.FORCE_COLOR.length === 0 || parseInt(env.FORCE_COLOR, 10) !== 0;
}

function translateLevel(level) {
	if (level === 0) {
		return false;
	}

	return {
		level,
		hasBasic: true,
		has256: level >= 2,
		has16m: level >= 3
	};
}

function supportsColor(stream) {
	if (forceColor === false) {
		return 0;
	}

	if (hasFlag('color=16m') ||
		hasFlag('color=full') ||
		hasFlag('color=truecolor')) {
		return 3;
	}

	if (hasFlag('color=256')) {
		return 2;
	}

	if (stream && !stream.isTTY && forceColor !== true) {
		return 0;
	}

	const min = forceColor ? 1 : 0;

	if (process.platform === 'win32') {
		// Node.js 7.5.0 is the first version of Node.js to include a patch to
		// libuv that enables 256 color output on Windows. Anything earlier and it
		// won't work. However, here we target Node.js 8 at minimum as it is an LTS
		// release, and Node.js 7 is not. Windows 10 build 10586 is the first Windows
		// release that supports 256 colors. Windows 10 build 14931 is the first release
		// that supports 16m/TrueColor.
		const osRelease = os.release().split('.');
		if (
			Number(process.versions.node.split('.')[0]) >= 8 &&
			Number(osRelease[0]) >= 10 &&
			Number(osRelease[2]) >= 10586
		) {
			return Number(osRelease[2]) >= 14931 ? 3 : 2;
		}

		return 1;
	}

	if ('CI' in env) {
		if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(sign => sign in env) || env.CI_NAME === 'codeship') {
			return 1;
		}

		return min;
	}

	if ('TEAMCITY_VERSION' in env) {
		return /^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;
	}

	if (env.COLORTERM === 'truecolor') {
		return 3;
	}

	if ('TERM_PROGRAM' in env) {
		const version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);

		switch (env.TERM_PROGRAM) {
			case 'iTerm.app':
				return version >= 3 ? 3 : 2;
			case 'Apple_Terminal':
				return 2;
			// No default
		}
	}

	if (/-256(color)?$/i.test(env.TERM)) {
		return 2;
	}

	if (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {
		return 1;
	}

	if ('COLORTERM' in env) {
		return 1;
	}

	if (env.TERM === 'dumb') {
		return min;
	}

	return min;
}

function getSupportLevel(stream) {
	const level = supportsColor(stream);
	return translateLevel(level);
}

module.exports = {
	supportsColor: getSupportLevel,
	stdout: getSupportLevel(process.stdout),
	stderr: getSupportLevel(process.stderr)
};


/***/ }),

/***/ 1861:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";
/*!
 * to-regex-range <https://github.com/micromatch/to-regex-range>
 *
 * Copyright (c) 2015-present, Jon Schlinkert.
 * Released under the MIT License.
 */



const isNumber = __nccwpck_require__(75680);

const toRegexRange = (min, max, options) => {
  if (isNumber(min) === false) {
    throw new TypeError('toRegexRange: expected the first argument to be a number');
  }

  if (max === void 0 || min === max) {
    return String(min);
  }

  if (isNumber(max) === false) {
    throw new TypeError('toRegexRange: expected the second argument to be a number.');
  }

  let opts = { relaxZeros: true, ...options };
  if (typeof opts.strictZeros === 'boolean') {
    opts.relaxZeros = opts.strictZeros === false;
  }

  let relax = String(opts.relaxZeros);
  let shorthand = String(opts.shorthand);
  let capture = String(opts.capture);
  let wrap = String(opts.wrap);
  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;

  if (toRegexRange.cache.hasOwnProperty(cacheKey)) {
    return toRegexRange.cache[cacheKey].result;
  }

  let a = Math.min(min, max);
  let b = Math.max(min, max);

  if (Math.abs(a - b) === 1) {
    let result = min + '|' + max;
    if (opts.capture) {
      return `(${result})`;
    }
    if (opts.wrap === false) {
      return result;
    }
    return `(?:${result})`;
  }

  let isPadded = hasPadding(min) || hasPadding(max);
  let state = { min, max, a, b };
  let positives = [];
  let negatives = [];

  if (isPadded) {
    state.isPadded = isPadded;
    state.maxLen = String(state.max).length;
  }

  if (a < 0) {
    let newMin = b < 0 ? Math.abs(b) : 1;
    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);
    a = state.a = 0;
  }

  if (b >= 0) {
    positives = splitToPatterns(a, b, state, opts);
  }

  state.negatives = negatives;
  state.positives = positives;
  state.result = collatePatterns(negatives, positives, opts);

  if (opts.capture === true) {
    state.result = `(${state.result})`;
  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {
    state.result = `(?:${state.result})`;
  }

  toRegexRange.cache[cacheKey] = state;
  return state.result;
};

function collatePatterns(neg, pos, options) {
  let onlyNegative = filterPatterns(neg, pos, '-', false, options) || [];
  let onlyPositive = filterPatterns(pos, neg, '', false, options) || [];
  let intersected = filterPatterns(neg, pos, '-?', true, options) || [];
  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);
  return subpatterns.join('|');
}

function splitToRanges(min, max) {
  let nines = 1;
  let zeros = 1;

  let stop = countNines(min, nines);
  let stops = new Set([max]);

  while (min <= stop && stop <= max) {
    stops.add(stop);
    nines += 1;
    stop = countNines(min, nines);
  }

  stop = countZeros(max + 1, zeros) - 1;

  while (min < stop && stop <= max) {
    stops.add(stop);
    zeros += 1;
    stop = countZeros(max + 1, zeros) - 1;
  }

  stops = [...stops];
  stops.sort(compare);
  return stops;
}

/**
 * Convert a range to a regex pattern
 * @param {Number} `start`
 * @param {Number} `stop`
 * @return {String}
 */

function rangeToPattern(start, stop, options) {
  if (start === stop) {
    return { pattern: start, count: [], digits: 0 };
  }

  let zipped = zip(start, stop);
  let digits = zipped.length;
  let pattern = '';
  let count = 0;

  for (let i = 0; i < digits; i++) {
    let [startDigit, stopDigit] = zipped[i];

    if (startDigit === stopDigit) {
      pattern += startDigit;

    } else if (startDigit !== '0' || stopDigit !== '9') {
      pattern += toCharacterClass(startDigit, stopDigit, options);

    } else {
      count++;
    }
  }

  if (count) {
    pattern += options.shorthand === true ? '\\d' : '[0-9]';
  }

  return { pattern, count: [count], digits };
}

function splitToPatterns(min, max, tok, options) {
  let ranges = splitToRanges(min, max);
  let tokens = [];
  let start = min;
  let prev;

  for (let i = 0; i < ranges.length; i++) {
    let max = ranges[i];
    let obj = rangeToPattern(String(start), String(max), options);
    let zeros = '';

    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {
      if (prev.count.length > 1) {
        prev.count.pop();
      }

      prev.count.push(obj.count[0]);
      prev.string = prev.pattern + toQuantifier(prev.count);
      start = max + 1;
      continue;
    }

    if (tok.isPadded) {
      zeros = padZeros(max, tok, options);
    }

    obj.string = zeros + obj.pattern + toQuantifier(obj.count);
    tokens.push(obj);
    start = max + 1;
    prev = obj;
  }

  return tokens;
}

function filterPatterns(arr, comparison, prefix, intersection, options) {
  let result = [];

  for (let ele of arr) {
    let { string } = ele;

    // only push if _both_ are negative...
    if (!intersection && !contains(comparison, 'string', string)) {
      result.push(prefix + string);
    }

    // or _both_ are positive
    if (intersection && contains(comparison, 'string', string)) {
      result.push(prefix + string);
    }
  }
  return result;
}

/**
 * Zip strings
 */

function zip(a, b) {
  let arr = [];
  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);
  return arr;
}

function compare(a, b) {
  return a > b ? 1 : b > a ? -1 : 0;
}

function contains(arr, key, val) {
  return arr.some(ele => ele[key] === val);
}

function countNines(min, len) {
  return Number(String(min).slice(0, -len) + '9'.repeat(len));
}

function countZeros(integer, zeros) {
  return integer - (integer % Math.pow(10, zeros));
}

function toQuantifier(digits) {
  let [start = 0, stop = ''] = digits;
  if (stop || start > 1) {
    return `{${start + (stop ? ',' + stop : '')}}`;
  }
  return '';
}

function toCharacterClass(a, b, options) {
  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;
}

function hasPadding(str) {
  return /^-?(0+)\d/.test(str);
}

function padZeros(value, tok, options) {
  if (!tok.isPadded) {
    return value;
  }

  let diff = Math.abs(tok.maxLen - String(value).length);
  let relax = options.relaxZeros !== false;

  switch (diff) {
    case 0:
      return '';
    case 1:
      return relax ? '0?' : '0';
    case 2:
      return relax ? '0{0,2}' : '00';
    default: {
      return relax ? `0{0,${diff}}` : `0{${diff}}`;
    }
  }
}

/**
 * Cache
 */

toRegexRange.cache = {};
toRegexRange.clearCache = () => (toRegexRange.cache = {});

/**
 * Expose `toRegexRange`
 */

module.exports = toRegexRange;


/***/ }),

/***/ 9097:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

var escapeStringRegexp = __nccwpck_require__(98691);

module.exports = function (str, target) {
	if (typeof str !== 'string' || typeof target !== 'string') {
		throw new TypeError('Expected a string');
	}

	return str.replace(new RegExp('(?:' + escapeStringRegexp(target) + '){2,}', 'g'), target);
};


/***/ }),

/***/ 74294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(54219);


/***/ }),

/***/ 54219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(11631);
var tls = __nccwpck_require__(4016);
var http = __nccwpck_require__(98605);
var https = __nccwpck_require__(57211);
var events = __nccwpck_require__(28614);
var assert = __nccwpck_require__(42357);
var util = __nccwpck_require__(31669);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 9046:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


exports.E = function (fn) {
  return Object.defineProperty(function () {
    if (typeof arguments[arguments.length - 1] === 'function') fn.apply(this, arguments)
    else {
      return new Promise((resolve, reject) => {
        arguments[arguments.length] = (err, res) => {
          if (err) return reject(err)
          resolve(res)
        }
        arguments.length++
        fn.apply(this, arguments)
      })
    }
  }, 'name', { value: fn.name })
}

exports.p = function (fn) {
  return Object.defineProperty(function () {
    const cb = arguments[arguments.length - 1]
    if (typeof cb !== 'function') return fn.apply(this, arguments)
    else fn.apply(this, arguments).then(r => cb(null, r), cb)
  }, 'name', { value: fn.name })
}


/***/ }),

/***/ 62940:
/***/ ((module) => {

// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}


/***/ }),

/***/ 40665:
/***/ ((module) => {

module.exports = Yallist

Yallist.Node = Node
Yallist.create = Yallist

function Yallist (list) {
  var self = this
  if (!(self instanceof Yallist)) {
    self = new Yallist()
  }

  self.tail = null
  self.head = null
  self.length = 0

  if (list && typeof list.forEach === 'function') {
    list.forEach(function (item) {
      self.push(item)
    })
  } else if (arguments.length > 0) {
    for (var i = 0, l = arguments.length; i < l; i++) {
      self.push(arguments[i])
    }
  }

  return self
}

Yallist.prototype.removeNode = function (node) {
  if (node.list !== this) {
    throw new Error('removing node which does not belong to this list')
  }

  var next = node.next
  var prev = node.prev

  if (next) {
    next.prev = prev
  }

  if (prev) {
    prev.next = next
  }

  if (node === this.head) {
    this.head = next
  }
  if (node === this.tail) {
    this.tail = prev
  }

  node.list.length--
  node.next = null
  node.prev = null
  node.list = null
}

Yallist.prototype.unshiftNode = function (node) {
  if (node === this.head) {
    return
  }

  if (node.list) {
    node.list.removeNode(node)
  }

  var head = this.head
  node.list = this
  node.next = head
  if (head) {
    head.prev = node
  }

  this.head = node
  if (!this.tail) {
    this.tail = node
  }
  this.length++
}

Yallist.prototype.pushNode = function (node) {
  if (node === this.tail) {
    return
  }

  if (node.list) {
    node.list.removeNode(node)
  }

  var tail = this.tail
  node.list = this
  node.prev = tail
  if (tail) {
    tail.next = node
  }

  this.tail = node
  if (!this.head) {
    this.head = node
  }
  this.length++
}

Yallist.prototype.push = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    push(this, arguments[i])
  }
  return this.length
}

Yallist.prototype.unshift = function () {
  for (var i = 0, l = arguments.length; i < l; i++) {
    unshift(this, arguments[i])
  }
  return this.length
}

Yallist.prototype.pop = function () {
  if (!this.tail) {
    return undefined
  }

  var res = this.tail.value
  this.tail = this.tail.prev
  if (this.tail) {
    this.tail.next = null
  } else {
    this.head = null
  }
  this.length--
  return res
}

Yallist.prototype.shift = function () {
  if (!this.head) {
    return undefined
  }

  var res = this.head.value
  this.head = this.head.next
  if (this.head) {
    this.head.prev = null
  } else {
    this.tail = null
  }
  this.length--
  return res
}

Yallist.prototype.forEach = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this.head, i = 0; walker !== null; i++) {
    fn.call(thisp, walker.value, i, this)
    walker = walker.next
  }
}

Yallist.prototype.forEachReverse = function (fn, thisp) {
  thisp = thisp || this
  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {
    fn.call(thisp, walker.value, i, this)
    walker = walker.prev
  }
}

Yallist.prototype.get = function (n) {
  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.next
  }
  if (i === n && walker !== null) {
    return walker.value
  }
}

Yallist.prototype.getReverse = function (n) {
  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {
    // abort out of the list early if we hit a cycle
    walker = walker.prev
  }
  if (i === n && walker !== null) {
    return walker.value
  }
}

Yallist.prototype.map = function (fn, thisp) {
  thisp = thisp || this
  var res = new Yallist()
  for (var walker = this.head; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this))
    walker = walker.next
  }
  return res
}

Yallist.prototype.mapReverse = function (fn, thisp) {
  thisp = thisp || this
  var res = new Yallist()
  for (var walker = this.tail; walker !== null;) {
    res.push(fn.call(thisp, walker.value, this))
    walker = walker.prev
  }
  return res
}

Yallist.prototype.reduce = function (fn, initial) {
  var acc
  var walker = this.head
  if (arguments.length > 1) {
    acc = initial
  } else if (this.head) {
    walker = this.head.next
    acc = this.head.value
  } else {
    throw new TypeError('Reduce of empty list with no initial value')
  }

  for (var i = 0; walker !== null; i++) {
    acc = fn(acc, walker.value, i)
    walker = walker.next
  }

  return acc
}

Yallist.prototype.reduceReverse = function (fn, initial) {
  var acc
  var walker = this.tail
  if (arguments.length > 1) {
    acc = initial
  } else if (this.tail) {
    walker = this.tail.prev
    acc = this.tail.value
  } else {
    throw new TypeError('Reduce of empty list with no initial value')
  }

  for (var i = this.length - 1; walker !== null; i--) {
    acc = fn(acc, walker.value, i)
    walker = walker.prev
  }

  return acc
}

Yallist.prototype.toArray = function () {
  var arr = new Array(this.length)
  for (var i = 0, walker = this.head; walker !== null; i++) {
    arr[i] = walker.value
    walker = walker.next
  }
  return arr
}

Yallist.prototype.toArrayReverse = function () {
  var arr = new Array(this.length)
  for (var i = 0, walker = this.tail; walker !== null; i++) {
    arr[i] = walker.value
    walker = walker.prev
  }
  return arr
}

Yallist.prototype.slice = function (from, to) {
  to = to || this.length
  if (to < 0) {
    to += this.length
  }
  from = from || 0
  if (from < 0) {
    from += this.length
  }
  var ret = new Yallist()
  if (to < from || to < 0) {
    return ret
  }
  if (from < 0) {
    from = 0
  }
  if (to > this.length) {
    to = this.length
  }
  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {
    walker = walker.next
  }
  for (; walker !== null && i < to; i++, walker = walker.next) {
    ret.push(walker.value)
  }
  return ret
}

Yallist.prototype.sliceReverse = function (from, to) {
  to = to || this.length
  if (to < 0) {
    to += this.length
  }
  from = from || 0
  if (from < 0) {
    from += this.length
  }
  var ret = new Yallist()
  if (to < from || to < 0) {
    return ret
  }
  if (from < 0) {
    from = 0
  }
  if (to > this.length) {
    to = this.length
  }
  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {
    walker = walker.prev
  }
  for (; walker !== null && i > from; i--, walker = walker.prev) {
    ret.push(walker.value)
  }
  return ret
}

Yallist.prototype.reverse = function () {
  var head = this.head
  var tail = this.tail
  for (var walker = head; walker !== null; walker = walker.prev) {
    var p = walker.prev
    walker.prev = walker.next
    walker.next = p
  }
  this.head = tail
  this.tail = head
  return this
}

function push (self, item) {
  self.tail = new Node(item, self.tail, null, self)
  if (!self.head) {
    self.head = self.tail
  }
  self.length++
}

function unshift (self, item) {
  self.head = new Node(item, null, self.head, self)
  if (!self.tail) {
    self.tail = self.head
  }
  self.length++
}

function Node (value, prev, next, list) {
  if (!(this instanceof Node)) {
    return new Node(value, prev, next, list)
  }

  this.list = list
  this.value = value

  if (prev) {
    prev.next = this
    this.prev = prev
  } else {
    this.prev = null
  }

  if (next) {
    next.prev = this
    this.next = next
  } else {
    this.next = null
  }
}


/***/ }),

/***/ 5500:
/***/ ((module) => {

module.exports = eval("require")("spawn-sync");


/***/ }),

/***/ 30741:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@vercel/ncc@^0.31.1","_id":"@vercel/ncc@0.31.1","_inBundle":false,"_integrity":"sha512-g0FAxwdViI6UzsiVz5HssIHqjcPa1EHL6h+2dcJD893SoCJaGdqqgUF09xnMW6goWnnhbLvgiKlgJWrJa+7qYA==","_location":"/@vercel/ncc","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@vercel/ncc@^0.31.1","name":"@vercel/ncc","escapedName":"@vercel%2fncc","scope":"@vercel","rawSpec":"^0.31.1","saveSpec":null,"fetchSpec":"^0.31.1"},"_requiredBy":["#DEV:/"],"_resolved":"https://registry.npmjs.org/@vercel/ncc/-/ncc-0.31.1.tgz","_shasum":"9346c7e59326f5eeac75c0286e47df94c2d6d8f7","_spec":"@vercel/ncc@^0.31.1","_where":"/Users/brian.kimball/Github/bump-and-release","bin":{"ncc":"dist/ncc/cli.js"},"bugs":{"url":"https://github.com/vercel/ncc/issues"},"bundleDependencies":false,"deprecated":false,"description":"Simple CLI for compiling a Node.js module into a single file, together with all its dependencies, gcc-style.","devDependencies":{"@azure/cosmos":"^3.12.3","@bugsnag/js":"^7.11.0","@ffmpeg-installer/ffmpeg":"^1.0.17","@google-cloud/bigquery":"^5.7.0","@google-cloud/firestore":"^4.14.0","@sentry/node":"^6.10.0","@slack/web-api":"^6.3.0","@tensorflow/tfjs-node":"^3.8.0","@vercel/webpack-asset-relocator-loader":"1.6.0","analytics-node":"^5.0.0","apollo-server-express":"^2.2.2","arg":"^5.0.0","auth0":"^2.14.0","aws-sdk":"^2.356.0","axios":"^0.21.1","azure-storage":"^2.10.2","browserify-middleware":"^8.1.1","bytes":"^3.0.0","canvas":"^2.2.0","chromeless":"^1.5.2","codecov":"^3.8.3","consolidate":"^0.16.0","copy":"^0.3.2","core-js":"^2.5.7","cowsay":"^1.3.1","esm":"^3.2.22","express":"^4.16.4","fetch-h2":"^3.0.0","firebase":"^6.1.1","firebase-admin":"^9.11.0","fluent-ffmpeg":"^2.1.2","fontkit":"^1.7.7","get-folder-size":"^2.0.0","glob":"^7.1.3","got":"^11.8.2","graceful-fs":"^4.1.15","graphql":"^15.5.1","highlights":"^3.1.1","hot-shots":"^8.5.0","ioredis":"^4.2.0","isomorphic-unfetch":"^3.0.0","jest":"^27.0.6","jimp":"^0.16.1","jugglingdb":"2.0.1","koa":"^2.6.2","leveldown":"^6.0.0","license-webpack-plugin":"2.3.20","lighthouse":"^8.1.0","loopback":"^3.24.0","mailgun":"^0.5.0","mariadb":"^2.0.1-beta","memcached":"^2.2.2","mkdirp":"^1.0.4","mongoose":"^5.3.12","mysql":"^2.16.0","node-gyp":"^8.1.0","npm":"^6.13.4","oracledb":"^4.2.0","passport":"^0.4.0","passport-google-oauth":"^2.0.0","path-platform":"^0.11.15","pdf2json":"^1.1.8","pdfkit":"^0.12.1","pg":"^8.7.1","pug":"^3.0.1","react":"^17.0.2","react-dom":"^17.0.2","redis":"^3.1.1","request":"^2.88.0","rxjs":"^7.3.0","saslprep":"^1.0.2","sequelize":"^6.6.5","sharp":"^0.28.3","shebang-loader":"^0.0.1","socket.io":"^4.1.3","source-map-support":"^0.5.9","stripe":"^8.167.0","swig":"^1.4.2","terser":"^5.6.1","the-answer":"^1.0.0","tiny-json-http":"^7.0.2","ts-loader":"^8.3.0","tsconfig-paths":"^3.7.0","tsconfig-paths-webpack-plugin":"^3.2.0","twilio":"^3.23.2","typescript":"^4.4.2","vm2":"^3.6.6","vue":"^2.5.17","vue-server-renderer":"^2.5.17","web-vitals":"^0.2.4","webpack":"5.44.0","when":"^3.7.8"},"files":["dist"],"homepage":"https://github.com/vercel/ncc#readme","license":"MIT","main":"./dist/ncc/index.js","name":"@vercel/ncc","repository":{"type":"git","url":"git+https://github.com/vercel/ncc.git"},"resolutions":{"grpc":"1.24.6"},"scripts":{"build":"node scripts/build.js","build-test-binary":"cd test/binary && node-gyp rebuild && cp build/Release/hello.node ../integration/hello.node","codecov":"codecov","prepublishOnly":"node scripts/build.js --no-cache","test":"node --expose-gc --max_old_space_size=3072 node_modules/.bin/jest","test-coverage":"node --expose-gc --max_old_space_size=3072 node_modules/.bin/jest --coverage --globals \\"{\\\\\\"coverage\\\\\\":true}\\" && codecov"},"version":"0.31.1"}');

/***/ }),

/***/ 61452:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"acorn-jsx@^5.3.1","_id":"acorn-jsx@5.3.2","_inBundle":false,"_integrity":"sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==","_location":"/acorn-jsx","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"acorn-jsx@^5.3.1","name":"acorn-jsx","escapedName":"acorn-jsx","rawSpec":"^5.3.1","saveSpec":null,"fetchSpec":"^5.3.1"},"_requiredBy":["/espree"],"_resolved":"https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz","_shasum":"7ed5bb55908b3b2f1bc55c6af1653bada7f07937","_spec":"acorn-jsx@^5.3.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/espree","bugs":{"url":"https://github.com/acornjs/acorn-jsx/issues"},"bundleDependencies":false,"deprecated":false,"description":"Modern, fast React.js JSX parser","devDependencies":{"acorn":"^8.0.1"},"homepage":"https://github.com/acornjs/acorn-jsx","license":"MIT","maintainers":[{"name":"Ingvar Stepanyan","email":"me@rreverser.com","url":"http://rreverser.com/"}],"name":"acorn-jsx","peerDependencies":{"acorn":"^6.0.0 || ^7.0.0 || ^8.0.0"},"repository":{"type":"git","url":"git+https://github.com/acornjs/acorn-jsx.git"},"scripts":{"test":"node test/run.js"},"version":"5.3.2"}');

/***/ }),

/***/ 62201:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["acorn@7.4.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"acorn@7.4.1","_id":"acorn@7.4.1","_inBundle":false,"_integrity":"sha512-nQyp0o1/mNdbTO1PO6kHkwSrmgZ0MT/jCCpNiwbUjGoRN4dlBhqJtoQuCnEOKzgTVwg0ZWiCoQy6SxMebQVh8A==","_location":"/acorn","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"acorn@7.4.1","name":"acorn","escapedName":"acorn","rawSpec":"7.4.1","saveSpec":null,"fetchSpec":"7.4.1"},"_requiredBy":["/espree"],"_resolved":"https://registry.npmjs.org/acorn/-/acorn-7.4.1.tgz","_spec":"7.4.1","_where":"/Users/brian.kimball/Github/bump-and-release","bin":{"acorn":"bin/acorn"},"bugs":{"url":"https://github.com/acornjs/acorn/issues"},"description":"ECMAScript parser","engines":{"node":">=0.4.0"},"homepage":"https://github.com/acornjs/acorn","license":"MIT","main":"dist/acorn.js","maintainers":[{"name":"Marijn Haverbeke","email":"marijnh@gmail.com","url":"https://marijnhaverbeke.nl"},{"name":"Ingvar Stepanyan","email":"me@rreverser.com","url":"https://rreverser.com/"},{"name":"Adrian Heine","url":"http://adrianheine.de"}],"module":"dist/acorn.mjs","name":"acorn","repository":{"type":"git","url":"git+https://github.com/acornjs/acorn.git"},"scripts":{"prepare":"cd ..; npm run build:main && npm run build:bin"},"types":"dist/acorn.d.ts","version":"7.4.1"}');

/***/ }),

/***/ 99765:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"aggregate-error@^3.0.0","_id":"aggregate-error@3.1.0","_inBundle":false,"_integrity":"sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==","_location":"/aggregate-error","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"aggregate-error@^3.0.0","name":"aggregate-error","escapedName":"aggregate-error","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/p-map"],"_resolved":"https://registry.npmjs.org/aggregate-error/-/aggregate-error-3.1.0.tgz","_shasum":"92670ff50f5359bdb7a3e0d40d0ec30c5737687a","_spec":"aggregate-error@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/p-map","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/aggregate-error/issues"},"bundleDependencies":false,"dependencies":{"clean-stack":"^2.0.0","indent-string":"^4.0.0"},"deprecated":false,"description":"Create an error from multiple errors","devDependencies":{"ava":"^2.4.0","tsd":"^0.7.1","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/aggregate-error#readme","keywords":["aggregate","error","combine","multiple","many","collection","iterable","iterator"],"license":"MIT","name":"aggregate-error","repository":{"type":"git","url":"git+https://github.com/sindresorhus/aggregate-error.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.1.0"}');

/***/ }),

/***/ 15802:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ajv@6.12.6","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ajv@6.12.6","_id":"ajv@6.12.6","_inBundle":false,"_integrity":"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==","_location":"/ajv","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ajv@6.12.6","name":"ajv","escapedName":"ajv","rawSpec":"6.12.6","saveSpec":null,"fetchSpec":"6.12.6"},"_requiredBy":["/@eslint/eslintrc","/eslint"],"_resolved":"https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz","_spec":"6.12.6","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Evgeny Poberezkin"},"bugs":{"url":"https://github.com/ajv-validator/ajv/issues"},"collective":{"type":"opencollective","url":"https://opencollective.com/ajv"},"dependencies":{"fast-deep-equal":"^3.1.1","fast-json-stable-stringify":"^2.0.0","json-schema-traverse":"^0.4.1","uri-js":"^4.2.2"},"description":"Another JSON Schema Validator","devDependencies":{"ajv-async":"^1.0.0","bluebird":"^3.5.3","brfs":"^2.0.0","browserify":"^16.2.0","chai":"^4.0.1","coveralls":"^3.0.1","del-cli":"^3.0.0","dot":"^1.0.3","eslint":"^7.3.1","gh-pages-generator":"^0.2.3","glob":"^7.0.0","if-node-version":"^1.0.0","js-beautify":"^1.7.3","jshint":"^2.10.2","json-schema-test":"^2.0.0","karma":"^5.0.0","karma-chrome-launcher":"^3.0.0","karma-mocha":"^2.0.0","karma-sauce-launcher":"^4.1.3","mocha":"^8.0.1","nyc":"^15.0.0","pre-commit":"^1.1.1","require-globify":"^1.3.0","typescript":"^3.9.5","uglify-js":"^3.6.9","watch":"^1.0.0"},"files":["lib/","dist/","scripts/","LICENSE",".tonic_example.js"],"funding":{"type":"github","url":"https://github.com/sponsors/epoberezkin"},"homepage":"https://github.com/ajv-validator/ajv","keywords":["JSON","schema","validator","validation","jsonschema","json-schema","json-schema-validator","json-schema-validation"],"license":"MIT","main":"lib/ajv.js","name":"ajv","nyc":{"exclude":["**/spec/**","node_modules"],"reporter":["lcov","text-summary"]},"repository":{"type":"git","url":"git+https://github.com/ajv-validator/ajv.git"},"scripts":{"build":"del-cli lib/dotjs/*.js \\"!lib/dotjs/index.js\\" && node scripts/compile-dots.js","bundle":"del-cli dist && node ./scripts/bundle.js . Ajv pure_getters","bundle-beautify":"node ./scripts/bundle.js js-beautify","eslint":"eslint lib/{compile/,}*.js spec/{**/,}*.js scripts --ignore-pattern spec/JSON-Schema-Test-Suite","jshint":"jshint lib/{compile/,}*.js","lint":"npm run jshint && npm run eslint","prepublish":"npm run build && npm run bundle","test":"npm run lint && npm run build && npm run test-all","test-all":"npm run test-cov && if-node-version 10 npm run test-browser","test-browser":"del-cli .browser && npm run bundle && scripts/prepare-tests && npm run test-karma","test-cov":"nyc npm run test-spec","test-debug":"npm run test-spec -- --inspect-brk","test-fast":"AJV_FAST_TEST=true npm run test-spec","test-karma":"karma start","test-spec":"mocha spec/{**/,}*.spec.js -R spec","test-ts":"tsc --target ES5 --noImplicitAny --noEmit spec/typescript/index.ts","watch":"watch \\"npm run build\\" ./lib/dot"},"tonicExampleFilename":".tonic_example.js","typings":"lib/ajv.d.ts","version":"6.12.6"}');

/***/ }),

/***/ 7266:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ansi-colors@4.1.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ansi-colors@4.1.1","_id":"ansi-colors@4.1.1","_inBundle":false,"_integrity":"sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==","_location":"/ansi-colors","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ansi-colors@4.1.1","name":"ansi-colors","escapedName":"ansi-colors","rawSpec":"4.1.1","saveSpec":null,"fetchSpec":"4.1.1"},"_requiredBy":["/enquirer"],"_resolved":"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz","_spec":"4.1.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Brian Woodward","url":"https://github.com/doowb"},"bugs":{"url":"https://github.com/doowb/ansi-colors/issues"},"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jason Schilling","url":"https://sourecode.de"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Jordan","url":"https://github.com/Silic0nS0ldier"}],"description":"Easily add ANSI colors to your text and symbols in the terminal. A faster drop-in replacement for chalk, kleur and turbocolor (without the dependencies and rendering bugs).","devDependencies":{"decache":"^4.5.1","gulp-format-md":"^2.0.0","justified":"^1.0.1","mocha":"^6.1.4","text-table":"^0.2.0"},"engines":{"node":">=6"},"files":["index.js","symbols.js","types/index.d.ts"],"homepage":"https://github.com/doowb/ansi-colors","keywords":["ansi","bgblack","bgBlack","bgblue","bgBlue","bgcyan","bgCyan","bggreen","bgGreen","bgmagenta","bgMagenta","bgred","bgRed","bgwhite","bgWhite","bgyellow","bgYellow","black","blue","bold","clorox","colors","cyan","dim","gray","green","grey","hidden","inverse","italic","kleur","magenta","red","reset","strikethrough","underline","white","yellow"],"license":"MIT","main":"index.js","name":"ansi-colors","repository":{"type":"git","url":"git+https://github.com/doowb/ansi-colors.git"},"scripts":{"test":"mocha"},"types":"./types/index.d.ts","verb":{"toc":false,"layout":"default","tasks":["readme"],"data":{"author":{"linkedin":"woodwardbrian","twitter":"doowb"}},"plugins":["gulp-format-md"],"lint":{"reflinks":true},"related":{"list":["ansi-wrap","strip-color"]},"reflinks":["chalk","colorette","colors","kleur"]},"version":"4.1.1"}');

/***/ }),

/***/ 75090:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ansi-regex@5.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ansi-regex@5.0.0","_id":"ansi-regex@5.0.0","_inBundle":false,"_integrity":"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f/lg==","_location":"/ansi-regex","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ansi-regex@5.0.0","name":"ansi-regex","escapedName":"ansi-regex","rawSpec":"5.0.0","saveSpec":null,"fetchSpec":"5.0.0"},"_requiredBy":["/strip-ansi"],"_resolved":"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.0.tgz","_spec":"5.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/ansi-regex/issues"},"description":"Regular expression for matching ANSI escape codes","devDependencies":{"ava":"^2.4.0","tsd":"^0.9.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/chalk/ansi-regex#readme","keywords":["ansi","styles","color","colour","colors","terminal","console","cli","string","tty","escape","formatting","rgb","256","shell","xterm","command-line","text","regex","regexp","re","match","test","find","pattern"],"license":"MIT","name":"ansi-regex","repository":{"type":"git","url":"git+https://github.com/chalk/ansi-regex.git"},"scripts":{"test":"xo && ava && tsd","view-supported":"node fixtures/view-codes.js"},"version":"5.0.0"}');

/***/ }),

/***/ 43604:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ansi-styles@3.2.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ansi-styles@3.2.1","_id":"ansi-styles@3.2.1","_inBundle":false,"_integrity":"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==","_location":"/ansi-styles","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ansi-styles@3.2.1","name":"ansi-styles","escapedName":"ansi-styles","rawSpec":"3.2.1","saveSpec":null,"fetchSpec":"3.2.1"},"_requiredBy":["/@babel/highlight/chalk","/replace/chalk"],"_resolved":"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz","_spec":"3.2.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"ava":{"require":"babel-polyfill"},"bugs":{"url":"https://github.com/chalk/ansi-styles/issues"},"dependencies":{"color-convert":"^1.9.0"},"description":"ANSI escape codes for styling strings in the terminal","devDependencies":{"ava":"*","babel-polyfill":"^6.23.0","svg-term-cli":"^2.1.1","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/chalk/ansi-styles#readme","keywords":["ansi","styles","color","colour","colors","terminal","console","cli","string","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"ansi-styles","repository":{"type":"git","url":"git+https://github.com/chalk/ansi-styles.git"},"scripts":{"screenshot":"svg-term --command=\'node screenshot\' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor","test":"xo && ava"},"version":"3.2.1"}');

/***/ }),

/***/ 61427:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["argparse@1.0.10","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"argparse@1.0.10","_id":"argparse@1.0.10","_inBundle":false,"_integrity":"sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==","_location":"/argparse","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"argparse@1.0.10","name":"argparse","escapedName":"argparse","rawSpec":"1.0.10","saveSpec":null,"fetchSpec":"1.0.10"},"_requiredBy":["/js-yaml"],"_resolved":"https://registry.npmjs.org/argparse/-/argparse-1.0.10.tgz","_spec":"1.0.10","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/nodeca/argparse/issues"},"contributors":[{"name":"Eugene Shkuropat"},{"name":"Paul Jacobson"}],"dependencies":{"sprintf-js":"~1.0.2"},"description":"Very powerful CLI arguments parser. Native port of argparse - python\'s options parsing library","devDependencies":{"eslint":"^2.13.1","istanbul":"^0.4.5","mocha":"^3.1.0","ndoc":"^5.0.1"},"files":["index.js","lib/"],"homepage":"https://github.com/nodeca/argparse#readme","keywords":["cli","parser","argparse","option","args"],"license":"MIT","name":"argparse","repository":{"type":"git","url":"git+https://github.com/nodeca/argparse.git"},"scripts":{"test":"make test"},"version":"1.0.10"}');

/***/ }),

/***/ 6739:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"arr-diff@^4.0.0","_id":"arr-diff@4.0.0","_inBundle":false,"_integrity":"sha1-1kYQdP6/7HHn4VI1dhoyml3HxSA=","_location":"/arr-diff","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"arr-diff@^4.0.0","name":"arr-diff","escapedName":"arr-diff","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/cpy/micromatch","/nanomatch"],"_resolved":"https://registry.npmjs.org/arr-diff/-/arr-diff-4.0.0.tgz","_shasum":"d6461074febfec71e7e15235761a329a5dc7c520","_spec":"arr-diff@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/arr-diff/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"},{"name":"Paul Miller","email":"paul+gh@paulmillr.com","url":"paulmillr.com"}],"dependencies":{},"deprecated":false,"description":"Returns an array with only the unique values from the first array, by excluding all values from additional arrays using strict equality for comparisons.","devDependencies":{"ansi-bold":"^0.1.1","arr-flatten":"^1.0.1","array-differ":"^1.0.0","benchmarked":"^0.2.4","gulp-format-md":"^0.1.9","minimist":"^1.2.0","mocha":"^2.4.5"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/arr-diff","keywords":["arr","array","array differ","array-differ","diff","differ","difference"],"license":"MIT","main":"index.js","name":"arr-diff","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/arr-diff.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["arr-flatten","array-filter","array-intersection"]},"reflinks":["array-differ","verb"],"lint":{"reflinks":true}},"version":"4.0.0"}');

/***/ }),

/***/ 96585:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"arr-flatten@^1.1.0","_id":"arr-flatten@1.1.0","_inBundle":false,"_integrity":"sha512-L3hKV5R/p5o81R7O02IGnwpDmkp6E982XhtbuwSe3O4qOtMMMtodicASA1Cny2U+aCXcNpml+m4dPsvsJ3jatg==","_location":"/arr-flatten","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"arr-flatten@^1.1.0","name":"arr-flatten","escapedName":"arr-flatten","rawSpec":"^1.1.0","saveSpec":null,"fetchSpec":"^1.1.0"},"_requiredBy":["/cpy/braces"],"_resolved":"https://registry.npmjs.org/arr-flatten/-/arr-flatten-1.1.0.tgz","_shasum":"36048bbff4e7b47e136644316c99669ea5ae91f1","_spec":"arr-flatten@^1.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/arr-flatten/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Luke Edwards","url":"https://lukeed.com"}],"deprecated":false,"description":"Recursively flatten an array or arrays.","devDependencies":{"ansi-bold":"^0.1.1","array-flatten":"^2.1.1","array-slice":"^1.0.0","benchmarked":"^1.0.0","compute-flatten":"^1.0.0","flatit":"^1.1.1","flatten":"^1.0.2","flatten-array":"^1.0.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","just-flatten-it":"^1.1.23","lodash.flattendeep":"^4.4.0","m_flattened":"^1.0.1","mocha":"^3.2.0","utils-flatten":"^1.0.0","write":"^0.3.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/arr-flatten","keywords":["arr","array","elements","flat","flatten","nested","recurse","recursive","recursively"],"license":"MIT","main":"index.js","name":"arr-flatten","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/arr-flatten.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["arr-filter","arr-union","array-each","array-unique"]},"lint":{"reflinks":true}},"version":"1.1.0"}');

/***/ }),

/***/ 3754:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"arr-union@^3.1.0","_id":"arr-union@3.1.0","_inBundle":false,"_integrity":"sha1-45sJrqne+Gao8gbiiK9jkZuuOcQ=","_location":"/arr-union","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"arr-union@^3.1.0","name":"arr-union","escapedName":"arr-union","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/class-utils","/union-value"],"_resolved":"https://registry.npmjs.org/arr-union/-/arr-union-3.1.0.tgz","_shasum":"e39b09aea9def866a8f206e288af63919bae39c4","_spec":"arr-union@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/union-value","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/arr-union/issues"},"bundleDependencies":false,"deprecated":false,"description":"Combines a list of arrays, returning a single array with unique values, using strict equality for comparisons.","devDependencies":{"ansi-bold":"^0.1.1","array-union":"^1.0.1","array-unique":"^0.2.1","benchmarked":"^0.1.4","gulp-format-md":"^0.1.7","minimist":"^1.1.1","mocha":"*","should":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/arr-union","keywords":["add","append","array","arrays","combine","concat","extend","union","uniq","unique","util","utility","utils"],"license":"MIT","main":"index.js","name":"arr-union","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/arr-union.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["arr-diff","arr-flatten","arr-filter","arr-map","arr-pluck","arr-reduce","array-unique"]},"reflinks":["verb","array-union"],"lint":{"reflinks":true}},"version":"3.1.0"}');

/***/ }),

/***/ 67980:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"array-union@^1.0.1","_id":"array-union@1.0.2","_inBundle":false,"_integrity":"sha1-mjRBDk9OPaI96jdb5b5w8kd47Dk=","_location":"/array-union","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"array-union@^1.0.1","name":"array-union","escapedName":"array-union","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/globby"],"_resolved":"https://registry.npmjs.org/array-union/-/array-union-1.0.2.tgz","_shasum":"9a34410e4f4e3da23dea375be5be70f24778ec39","_spec":"array-union@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/globby","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/array-union/issues"},"bundleDependencies":false,"dependencies":{"array-uniq":"^1.0.1"},"deprecated":false,"description":"Create an array of unique values, in order, from the input arrays","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/array-union#readme","keywords":["array","arr","set","uniq","unique","duplicate","remove","union","combine","merge"],"license":"MIT","name":"array-union","repository":{"type":"git","url":"git+https://github.com/sindresorhus/array-union.git"},"scripts":{"test":"xo && ava"},"version":"1.0.2"}');

/***/ }),

/***/ 40090:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"array-uniq@^1.0.1","_id":"array-uniq@1.0.3","_inBundle":false,"_integrity":"sha1-r2rId6Jcx/dOBYiUdThY39sk/bY=","_location":"/array-uniq","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"array-uniq@^1.0.1","name":"array-uniq","escapedName":"array-uniq","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/array-union"],"_resolved":"https://registry.npmjs.org/array-uniq/-/array-uniq-1.0.3.tgz","_shasum":"af6ac877a25cc7f74e058894753858dfdb24fdb6","_spec":"array-uniq@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/array-union","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/array-uniq/issues"},"bundleDependencies":false,"deprecated":false,"description":"Create an array without duplicates","devDependencies":{"ava":"*","es6-set":"^0.1.0","require-uncached":"^1.0.2","xo":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/array-uniq#readme","keywords":["array","arr","set","uniq","unique","es6","duplicate","remove"],"license":"MIT","name":"array-uniq","repository":{"type":"git","url":"git+https://github.com/sindresorhus/array-uniq.git"},"scripts":{"test":"xo && ava"},"version":"1.0.3"}');

/***/ }),

/***/ 66048:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"array-unique@^0.3.2","_id":"array-unique@0.3.2","_inBundle":false,"_integrity":"sha1-qJS3XUvE9s1nnvMkSp/Y9Gri1Cg=","_location":"/array-unique","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"array-unique@^0.3.2","name":"array-unique","escapedName":"array-unique","rawSpec":"^0.3.2","saveSpec":null,"fetchSpec":"^0.3.2"},"_requiredBy":["/cpy/braces","/cpy/micromatch","/extglob","/nanomatch"],"_resolved":"https://registry.npmjs.org/array-unique/-/array-unique-0.3.2.tgz","_shasum":"a894b75d4bc4f6cd679ef3244a9fd8f46ae2d428","_spec":"array-unique@^0.3.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/array-unique/issues"},"bundleDependencies":false,"deprecated":false,"description":"Remove duplicate values from an array. Fastest ES5 implementation.","devDependencies":{"array-uniq":"^1.0.2","benchmarked":"^0.1.3","gulp-format-md":"^0.1.9","mocha":"^2.5.3","should":"^10.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js","LICENSE","README.md"],"homepage":"https://github.com/jonschlinkert/array-unique","keywords":["array","unique"],"license":"MIT","main":"index.js","name":"array-unique","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/array-unique.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["arr-diff","arr-union","arr-flatten","arr-reduce","arr-map","arr-pluck"]},"reflinks":["verb","verb-generate-readme"],"lint":{"reflinks":true}},"version":"0.3.2"}');

/***/ }),

/***/ 20552:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"arrify@^2.0.1","_id":"arrify@2.0.1","_inBundle":false,"_integrity":"sha512-3duEwti880xqi4eAMN8AyR4a0ByT90zoYdLlevfrvU43vb0YZwZVfxOgxWrLXXXpyugL0hNZc9G6BiB5B3nUug==","_location":"/arrify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"arrify@^2.0.1","name":"arrify","escapedName":"arrify","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/arrify/-/arrify-2.0.1.tgz","_shasum":"c9655e9331e0abcd588d2a7cad7e9956f66701fa","_spec":"arrify@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/arrify/issues"},"bundleDependencies":false,"deprecated":false,"description":"Convert a value to an array","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/arrify#readme","keywords":["array","arrify","arrayify","convert","value","ensure"],"license":"MIT","name":"arrify","repository":{"type":"git","url":"git+https://github.com/sindresorhus/arrify.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.0.1"}');

/***/ }),

/***/ 93176:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"assign-symbols@^1.0.0","_id":"assign-symbols@1.0.0","_inBundle":false,"_integrity":"sha1-WWZ/QfrdTyDMvCu5a41Pf3jsA2c=","_location":"/assign-symbols","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"assign-symbols@^1.0.0","name":"assign-symbols","escapedName":"assign-symbols","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/extend-shallow"],"_resolved":"https://registry.npmjs.org/assign-symbols/-/assign-symbols-1.0.0.tgz","_shasum":"59667f41fadd4f20ccbc2bb96b8d4f7f78ec0367","_spec":"assign-symbols@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extend-shallow","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/assign-symbols/issues"},"bundleDependencies":false,"deprecated":false,"description":"Assign the enumerable es6 Symbol properties from an object (or objects) to the first object passed on the arguments. Can be used as a supplement to other extend, assign or merge methods as a polyfill for the Symbols part of the es6 Object.assign method.","devDependencies":{"mocha":"^3.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/assign-symbols","keywords":["assign","symbols"],"license":"MIT","main":"index.js","name":"assign-symbols","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/assign-symbols.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["assign-deep","mixin-deep","merge-deep","extend-shallow","clone-deep"]}},"version":"1.0.0"}');

/***/ }),

/***/ 67573:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["astral-regex@2.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"astral-regex@2.0.0","_id":"astral-regex@2.0.0","_inBundle":false,"_integrity":"sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==","_location":"/astral-regex","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"astral-regex@2.0.0","name":"astral-regex","escapedName":"astral-regex","rawSpec":"2.0.0","saveSpec":null,"fetchSpec":"2.0.0"},"_requiredBy":["/slice-ansi"],"_resolved":"https://registry.npmjs.org/astral-regex/-/astral-regex-2.0.0.tgz","_spec":"2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Kevin Mårtensson","email":"kevinmartensson@gmail.com","url":"github.com/kevva"},"bugs":{"url":"https://github.com/kevva/astral-regex/issues"},"description":"Regular expression for matching astral symbols","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/kevva/astral-regex#readme","keywords":["astral","emoji","regex","surrogate"],"license":"MIT","name":"astral-regex","repository":{"type":"git","url":"git+https://github.com/kevva/astral-regex.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.0.0"}');

/***/ }),

/***/ 71744:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"async@^2.6.1","_id":"async@2.6.3","_inBundle":false,"_integrity":"sha512-zflvls11DCy+dQWzTW2dzuilv8Z5X/pjfmZOWba6TNIVDm+2UDaJmXSOXlasHKfNBs8oo3M0aT50fDEWfKZjXg==","_location":"/async","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"async@^2.6.1","name":"async","escapedName":"async","rawSpec":"^2.6.1","saveSpec":null,"fetchSpec":"^2.6.1"},"_requiredBy":["/gh-pages"],"_resolved":"https://registry.npmjs.org/async/-/async-2.6.3.tgz","_shasum":"d72625e2344a3656e3a3ad4fa749fa83299d82ff","_spec":"async@^2.6.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/gh-pages","author":{"name":"Caolan McMahon"},"bugs":{"url":"https://github.com/caolan/async/issues"},"bundleDependencies":false,"dependencies":{"lodash":"^4.17.14"},"deprecated":false,"description":"Higher-order functions and common patterns for asynchronous code","devDependencies":{"babel-cli":"^6.24.0","babel-core":"^6.26.3","babel-plugin-add-module-exports":"^0.2.1","babel-plugin-istanbul":"^2.0.1","babel-plugin-transform-es2015-modules-commonjs":"^6.26.2","babel-preset-es2015":"^6.3.13","babel-preset-es2017":"^6.22.0","babelify":"^8.0.0","benchmark":"^2.1.1","bluebird":"^3.4.6","browserify":"^16.2.2","chai":"^4.1.2","cheerio":"^0.22.0","coveralls":"^3.0.1","es6-promise":"^2.3.0","eslint":"^2.13.1","fs-extra":"^0.26.7","gh-pages-deploy":"^0.5.0","jsdoc":"^3.4.0","karma":"^2.0.2","karma-browserify":"^5.2.0","karma-firefox-launcher":"^1.1.0","karma-mocha":"^1.2.0","karma-mocha-reporter":"^2.2.0","mocha":"^5.2.0","native-promise-only":"^0.8.0-a","nyc":"^11.8.0","rimraf":"^2.5.0","rollup":"^0.36.3","rollup-plugin-node-resolve":"^2.0.0","rollup-plugin-npm":"^2.0.0","rsvp":"^3.0.18","semver":"^5.5.0","uglify-js":"~2.7.3","yargs":"^11.0.0"},"gh-pages-deploy":{"staticpath":"docs"},"homepage":"https://caolan.github.io/async/","keywords":["async","callback","module","utility"],"license":"MIT","main":"dist/async.js","name":"async","nyc":{"exclude":["mocha_test"]},"repository":{"type":"git","url":"git+https://github.com/caolan/async.git"},"scripts":{"coverage":"nyc npm run mocha-node-test -- --grep @nycinvalid --invert","coveralls":"npm run coverage && nyc report --reporter=text-lcov | coveralls","jsdoc":"jsdoc -c ./support/jsdoc/jsdoc.json && node support/jsdoc/jsdoc-fix-html.js","lint":"eslint lib/ mocha_test/ perf/memory.js perf/suites.js perf/benchmark.js support/build/ support/*.js karma.conf.js","mocha-browser-test":"karma start","mocha-node-test":"mocha mocha_test/ --compilers js:babel-core/register","mocha-test":"npm run mocha-node-test && npm run mocha-browser-test","test":"npm run lint && npm run mocha-node-test"},"version":"2.6.3"}');

/***/ }),

/***/ 84346:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"atob@^2.1.2","_id":"atob@2.1.2","_inBundle":false,"_integrity":"sha512-Wm6ukoaOGJi/73p/cl2GvLjTI5JM1k/O14isD73YML8StrH/7/lRFgmg8nICZgD3bZZvjwCGxtMOD3wWNAu8cg==","_location":"/atob","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"atob@^2.1.2","name":"atob","escapedName":"atob","rawSpec":"^2.1.2","saveSpec":null,"fetchSpec":"^2.1.2"},"_requiredBy":["/source-map-resolve"],"_resolved":"https://registry.npmjs.org/atob/-/atob-2.1.2.tgz","_shasum":"6d9517eb9e030d2436666651e86bd9f6f13533c9","_spec":"atob@^2.1.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/source-map-resolve","author":{"name":"AJ ONeal","email":"coolaj86@gmail.com","url":"https://coolaj86.com"},"bin":{"atob":"bin/atob.js"},"browser":"browser-atob.js","bundleDependencies":false,"deprecated":false,"description":"atob for Node.JS and Linux / Mac / Windows CLI (it\'s a one-liner)","engines":{"node":">= 4.5.0"},"homepage":"https://git.coolaj86.com/coolaj86/atob.js.git","keywords":["atob","browser"],"license":"(MIT OR Apache-2.0)","main":"node-atob.js","name":"atob","repository":{"type":"git","url":"git://git.coolaj86.com/coolaj86/atob.js.git"},"version":"2.1.2"}');

/***/ }),

/***/ 55519:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["balanced-match@1.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"balanced-match@1.0.0","_id":"balanced-match@1.0.0","_inBundle":false,"_integrity":"sha1-ibTRmasr7kneFk6gK4nORi1xt2c=","_location":"/balanced-match","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"balanced-match@1.0.0","name":"balanced-match","escapedName":"balanced-match","rawSpec":"1.0.0","saveSpec":null,"fetchSpec":"1.0.0"},"_requiredBy":["/brace-expansion"],"_resolved":"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.0.tgz","_spec":"1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Julian Gruber","email":"mail@juliangruber.com","url":"http://juliangruber.com"},"bugs":{"url":"https://github.com/juliangruber/balanced-match/issues"},"dependencies":{},"description":"Match balanced character pairs, like \\"{\\" and \\"}\\"","devDependencies":{"matcha":"^0.7.0","tape":"^4.6.0"},"homepage":"https://github.com/juliangruber/balanced-match","keywords":["match","regexp","test","balanced","parse"],"license":"MIT","main":"index.js","name":"balanced-match","repository":{"type":"git","url":"git://github.com/juliangruber/balanced-match.git"},"scripts":{"bench":"make bench","test":"make test"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/20..latest","firefox/nightly","chrome/25..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"version":"1.0.0"}');

/***/ }),

/***/ 7566:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^1.0.0","_id":"define-property@1.0.0","_inBundle":false,"_integrity":"sha1-dp66rz9KY6rTr56NMEybvnm/sOY=","_location":"/base/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^1.0.0","name":"define-property","escapedName":"define-property","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/base"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz","_shasum":"769ebaaf3f4a63aad3af9e8d304c9bbe79bfb0e6","_spec":"define-property@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^1.0.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["extend-shallow","merge-deep","assign-deep","mixin-deep"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 32039:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-accessor-descriptor@^1.0.0","_id":"is-accessor-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==","_location":"/base/is-accessor-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-accessor-descriptor@^1.0.0","name":"is-accessor-descriptor","escapedName":"is-accessor-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/base/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz","_shasum":"169c2f6d3df1f992618072365c9b0ea1f6878656","_spec":"is-accessor-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-accessor-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-accessor-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-accessor-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-accessor-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","is-plain-object","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 91480:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-data-descriptor@^1.0.0","_id":"is-data-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==","_location":"/base/is-data-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-data-descriptor@^1.0.0","name":"is-data-descriptor","escapedName":"is-data-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/base/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz","_shasum":"d84876321d0e7add03990406abbbbd36ba9268c7","_spec":"is-data-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-data-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript data descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-data-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-data-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-data-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 18857:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-descriptor@^1.0.0","_id":"is-descriptor@1.0.2","_inBundle":false,"_integrity":"sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==","_location":"/base/is-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-descriptor@^1.0.0","name":"is-descriptor","escapedName":"is-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/base/define-property"],"_resolved":"https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz","_shasum":"3b159746a66604b04f8c81524ba365c5f14d86ec","_spec":"is-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base/node_modules/define-property","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"is-accessor-descriptor":"^1.0.0","is-data-descriptor":"^1.0.0","kind-of":"^6.0.2"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"plugins":["gulp-format-md"],"toc":false,"layout":"default","tasks":["readme"],"lint":{"reflinks":true}},"version":"1.0.2"}');

/***/ }),

/***/ 72481:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"base@^0.11.1","_id":"base@0.11.2","_inBundle":false,"_integrity":"sha512-5T6P4xPgpp0YDFvSWwEZ4NoE3aM4QBQXDzmVbraCkFj8zHM+mba8SyqB5DbZWyR7mYHo6Y7BdQo3MoA4m0TeQg==","_location":"/base","_phantomChildren":{"kind-of":"6.0.3"},"_requested":{"type":"range","registry":true,"raw":"base@^0.11.1","name":"base","escapedName":"base","rawSpec":"^0.11.1","saveSpec":null,"fetchSpec":"^0.11.1"},"_requiredBy":["/snapdragon"],"_resolved":"https://registry.npmjs.org/base/-/base-0.11.2.tgz","_shasum":"7bde5ced145b6d551a90db87f83c558b4eb48a8f","_spec":"base@^0.11.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/node-base/base/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"John O\'Donnell","url":"https://github.com/criticalmash"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"tunnckoCore","url":"https://i.am.charlike.online"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"cache-base":"^1.0.1","class-utils":"^0.3.5","component-emitter":"^1.2.1","define-property":"^1.0.0","isobject":"^3.0.1","mixin-deep":"^1.2.0","pascalcase":"^0.1.1"},"deprecated":false,"description":"base is the foundation for creating modular, unit testable and highly pluggable node.js applications, starting with a handful of common methods, like `set`, `get`, `del` and `use`.","devDependencies":{"gulp":"^3.9.1","gulp-eslint":"^4.0.0","gulp-format-md":"^1.0.0","gulp-istanbul":"^1.1.2","gulp-mocha":"^3.0.1","helper-coverage":"^0.1.3","mocha":"^3.5.0","should":"^13.0.1","through2":"^2.0.3","verb-generate-readme":"^0.6.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/node-base/base","keywords":["base","boilerplate","cache","del","get","inherit","methods","set","starter","unset","visit"],"license":"MIT","main":"index.js","maintainers":[{"name":"Brian Woodward","url":"https://github.com/doowb"},{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"}],"name":"base","repository":{"type":"git","url":"git+https://github.com/node-base/base.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"helpers":["helper-coverage"],"related":{"description":"There are a number of different plugins available for extending base. Let us know if you create your own!","hightlight":"generate","list":["base-cwd","base-data","base-fs","base-generators","base-option","base-pipeline","base-pkg","base-plugins","base-questions","base-store","base-task"]},"reflinks":["assemble","boilerplate","cache-base","class-utils","generate","scaffold","static-extend","verb"],"lint":{"reflinks":true}},"version":"0.11.2"}');

/***/ }),

/***/ 72289:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["brace-expansion@1.1.11","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"brace-expansion@1.1.11","_id":"brace-expansion@1.1.11","_inBundle":false,"_integrity":"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==","_location":"/brace-expansion","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"brace-expansion@1.1.11","name":"brace-expansion","escapedName":"brace-expansion","rawSpec":"1.1.11","saveSpec":null,"fetchSpec":"1.1.11"},"_requiredBy":["/minimatch"],"_resolved":"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz","_spec":"1.1.11","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Julian Gruber","email":"mail@juliangruber.com","url":"http://juliangruber.com"},"bugs":{"url":"https://github.com/juliangruber/brace-expansion/issues"},"dependencies":{"balanced-match":"^1.0.0","concat-map":"0.0.1"},"description":"Brace expansion as known from sh/bash","devDependencies":{"matcha":"^0.7.0","tape":"^4.6.0"},"homepage":"https://github.com/juliangruber/brace-expansion","keywords":[],"license":"MIT","main":"index.js","name":"brace-expansion","repository":{"type":"git","url":"git://github.com/juliangruber/brace-expansion.git"},"scripts":{"bench":"matcha test/perf/bench.js","gentest":"bash test/generate.sh","test":"tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/20..latest","firefox/nightly","chrome/25..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"version":"1.1.11"}');

/***/ }),

/***/ 48385:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"braces@^3.0.1","_id":"braces@3.0.2","_inBundle":false,"_integrity":"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==","_location":"/braces","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"braces@^3.0.1","name":"braces","escapedName":"braces","rawSpec":"^3.0.1","saveSpec":null,"fetchSpec":"^3.0.1"},"_requiredBy":["/micromatch"],"_resolved":"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz","_shasum":"3454e1a462ee8d599e236df336cd9ea4f8afe107","_spec":"braces@^3.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/braces/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Elan Shanker","url":"https://github.com/es128"},{"name":"Eugene Sharygin","url":"https://github.com/eush77"},{"name":"hemanth.hm","url":"http://h3manth.com"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"fill-range":"^7.0.1"},"deprecated":false,"description":"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.","devDependencies":{"ansi-colors":"^3.2.4","bash-path":"^2.0.1","gulp-format-md":"^2.0.0","mocha":"^6.1.1"},"engines":{"node":">=8"},"files":["index.js","lib"],"homepage":"https://github.com/micromatch/braces","keywords":["alpha","alphabetical","bash","brace","braces","expand","expansion","filepath","fill","fs","glob","globbing","letter","match","matches","matching","number","numerical","path","range","ranges","sh"],"license":"MIT","main":"index.js","name":"braces","repository":{"type":"git","url":"git+https://github.com/micromatch/braces.git"},"scripts":{"benchmark":"node benchmark","test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"lint":{"reflinks":true},"plugins":["gulp-format-md"]},"version":"3.0.2"}');

/***/ }),

/***/ 12919:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cache-base@^1.0.1","_id":"cache-base@1.0.1","_inBundle":false,"_integrity":"sha512-AKcdTnFSWATd5/GCPRxr2ChwIJ85CeyrEyjRHlKxQ56d4XJMGym0uAiKn0xbLOGOl3+yRpOTi484dVCEc5AUzQ==","_location":"/cache-base","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"cache-base@^1.0.1","name":"cache-base","escapedName":"cache-base","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/base"],"_resolved":"https://registry.npmjs.org/cache-base/-/cache-base-1.0.1.tgz","_shasum":"0a7f46416831c8b662ee36fe4e7c59d76f666ab2","_spec":"cache-base@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/cache-base/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"collection-visit":"^1.0.0","component-emitter":"^1.2.1","get-value":"^2.0.6","has-value":"^1.0.0","isobject":"^3.0.1","set-value":"^2.0.0","to-object-path":"^0.3.0","union-value":"^1.0.0","unset-value":"^1.0.0"},"deprecated":false,"description":"Basic object cache with `get`, `set`, `del`, and `has` methods for node.js/javascript projects.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.4.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/cache-base","keywords":["base","cache","config","data","get","has","hash","hasown","object","set","store"],"license":"MIT","main":"index.js","name":"cache-base","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/cache-base.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"highligh":"base","list":["base-methods","get-value","has-value","option-cache","set-value","unset-value"]},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"1.0.1"}');

/***/ }),

/***/ 95138:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cacheable-lookup@^5.0.3","_id":"cacheable-lookup@5.0.4","_inBundle":false,"_integrity":"sha512-2/kNscPhpcxrOigMZzbiWF7dz8ilhb/nIHU3EyZiXWXpeq/au8qJ8VhdftMkty3n7Gj6HIGalQG8oiBNB3AJgA==","_location":"/cacheable-lookup","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"cacheable-lookup@^5.0.3","name":"cacheable-lookup","escapedName":"cacheable-lookup","rawSpec":"^5.0.3","saveSpec":null,"fetchSpec":"^5.0.3"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/cacheable-lookup/-/cacheable-lookup-5.0.4.tgz","_shasum":"5a6b865b2c44357be3d5ebc2a467b032719a7005","_spec":"cacheable-lookup@^5.0.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Szymon Marczak"},"bugs":{"url":"https://github.com/szmarczak/cacheable-lookup/issues"},"bundleDependencies":false,"deprecated":false,"description":"A cacheable dns.lookup(…) that respects the TTL","devDependencies":{"@types/keyv":"^3.1.1","ava":"^3.8.2","benchmark":"^2.1.4","coveralls":"^3.0.9","keyv":"^4.0.0","nyc":"^15.0.0","proxyquire":"^2.1.3","quick-lru":"^5.1.0","tsd":"^0.11.0","xo":"^0.25.3"},"engines":{"node":">=10.6.0"},"files":["source","index.d.ts"],"homepage":"https://github.com/szmarczak/cacheable-lookup#readme","keywords":["dns","lookup","cacheable","ttl"],"license":"MIT","main":"source/index.js","name":"cacheable-lookup","repository":{"type":"git","url":"git+https://github.com/szmarczak/cacheable-lookup.git"},"scripts":{"test":"xo && nyc --reporter=lcovonly --reporter=text ava && tsd"},"types":"index.d.ts","version":"5.0.4"}');

/***/ }),

/***/ 83604:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cacheable-request@^7.0.1","_id":"cacheable-request@7.0.2","_inBundle":false,"_integrity":"sha512-pouW8/FmiPQbuGpkXQ9BAPv/Mo5xDGANgSNXzTzJ8DrKGuXOssM4wIQRjfanNRh3Yu5cfYPvcorqbhg2KIJtew==","_location":"/cacheable-request","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"cacheable-request@^7.0.1","name":"cacheable-request","escapedName":"cacheable-request","rawSpec":"^7.0.1","saveSpec":null,"fetchSpec":"^7.0.1"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/cacheable-request/-/cacheable-request-7.0.2.tgz","_shasum":"ea0d0b889364a25854757301ca12b2da77f91d27","_spec":"cacheable-request@^7.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Luke Childs","email":"lukechilds123@gmail.com","url":"http://lukechilds.co.uk"},"bugs":{"url":"https://github.com/lukechilds/cacheable-request/issues"},"bundleDependencies":false,"dependencies":{"clone-response":"^1.0.2","get-stream":"^5.1.0","http-cache-semantics":"^4.0.0","keyv":"^4.0.0","lowercase-keys":"^2.0.0","normalize-url":"^6.0.1","responselike":"^2.0.0"},"deprecated":false,"description":"Wrap native HTTP requests with RFC compliant cache support","devDependencies":{"@keyv/sqlite":"^2.0.0","ava":"^1.1.0","coveralls":"^3.0.0","create-test-server":"3.0.0","delay":"^4.0.0","eslint-config-xo-lukechilds":"^1.0.0","nyc":"^14.1.1","pify":"^4.0.0","sqlite3":"^4.0.2","this":"^1.0.2","xo":"^0.23.0"},"engines":{"node":">=8"},"files":["src"],"homepage":"https://github.com/lukechilds/cacheable-request#readme","keywords":["HTTP","HTTPS","cache","caching","layer","cacheable","RFC 7234","RFC","7234","compliant"],"license":"MIT","main":"src/index.js","name":"cacheable-request","repository":{"type":"git","url":"git+https://github.com/lukechilds/cacheable-request.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","test":"xo && nyc ava"},"version":"7.0.2","xo":{"extends":"xo-lukechilds"}}');

/***/ }),

/***/ 15621:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"call-me-maybe@^1.0.1","_id":"call-me-maybe@1.0.1","_inBundle":false,"_integrity":"sha1-JtII6onje1y95gJQoV8DHBak1ms=","_location":"/call-me-maybe","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"call-me-maybe@^1.0.1","name":"call-me-maybe","escapedName":"call-me-maybe","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/@mrmlnc/readdir-enhanced"],"_resolved":"https://registry.npmjs.org/call-me-maybe/-/call-me-maybe-1.0.1.tgz","_shasum":"26d208ea89e37b5cbde60250a15f031c16a4d66b","_spec":"call-me-maybe@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@mrmlnc/readdir-enhanced","author":{"name":"Eric McCarthy","email":"eric@limulus.net","url":"http://www.limulus.net/"},"bugs":{"url":"https://github.com/limulus/call-me-maybe/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Let your JS API users either give you a callback or receive a promise","devDependencies":{"mocha":"^2.3.2","promise":"^7.0.4","zuul":"^3.4.0"},"homepage":"https://github.com/limulus/call-me-maybe#readme","keywords":["promise","callback","denodeify","promisify","carlyraejepsen"],"license":"MIT","main":"index.js","name":"call-me-maybe","repository":{"type":"git","url":"git+https://github.com/limulus/call-me-maybe.git"},"scripts":{"test":"mocha"},"version":"1.0.1"}');

/***/ }),

/***/ 28871:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["callsites@3.1.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"callsites@3.1.0","_id":"callsites@3.1.0","_inBundle":false,"_integrity":"sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==","_location":"/callsites","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"callsites@3.1.0","name":"callsites","escapedName":"callsites","rawSpec":"3.1.0","saveSpec":null,"fetchSpec":"3.1.0"},"_requiredBy":["/parent-module"],"_resolved":"https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz","_spec":"3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/callsites/issues"},"description":"Get callsites from the V8 stack trace API","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/callsites#readme","keywords":["stacktrace","v8","callsite","callsites","stack","trace","function","file","line","debug"],"license":"MIT","name":"callsites","repository":{"type":"git","url":"git+https://github.com/sindresorhus/callsites.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.1.0"}');

/***/ }),

/***/ 66069:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"quick-lru@^4.0.1","_id":"quick-lru@4.0.1","_inBundle":false,"_integrity":"sha512-ARhCpm70fzdcvNQfPoy49IaanKkTlRWF2JMzqhcJbhSFRZv7nPTvZJdcY7301IPmvW+/p0RgIWnQDLJxifsQ7g==","_location":"/camelcase-keys/quick-lru","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"quick-lru@^4.0.1","name":"quick-lru","escapedName":"quick-lru","rawSpec":"^4.0.1","saveSpec":null,"fetchSpec":"^4.0.1"},"_requiredBy":["/camelcase-keys"],"_resolved":"https://registry.npmjs.org/quick-lru/-/quick-lru-4.0.1.tgz","_shasum":"5b8878f113a58217848c6482026c73e1ba57727f","_spec":"quick-lru@^4.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/camelcase-keys","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/quick-lru/issues"},"bundleDependencies":false,"deprecated":false,"description":"Simple \\"Least Recently Used\\" (LRU) cache","devDependencies":{"ava":"^1.4.1","coveralls":"^3.0.3","nyc":"^14.1.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/quick-lru#readme","keywords":["lru","quick","cache","caching","least","recently","used","fast","map","hash","buffer"],"license":"MIT","name":"quick-lru","repository":{"type":"git","url":"git+https://github.com/sindresorhus/quick-lru.git"},"scripts":{"test":"xo && nyc ava && tsd"},"version":"4.0.1"}');

/***/ }),

/***/ 3718:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"camelcase-keys@^6.2.2","_id":"camelcase-keys@6.2.2","_inBundle":false,"_integrity":"sha512-YrwaA0vEKazPBkn0ipTiMpSajYDSe+KjQfrjhcBMxJt/znbvlHd8Pw/Vamaz5EB4Wfhs3SUR3Z9mwRu/P3s3Yg==","_location":"/camelcase-keys","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"camelcase-keys@^6.2.2","name":"camelcase-keys","escapedName":"camelcase-keys","rawSpec":"^6.2.2","saveSpec":null,"fetchSpec":"^6.2.2"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/camelcase-keys/-/camelcase-keys-6.2.2.tgz","_shasum":"5e755d6ba51aa223ec7d3d52f25778210f9dc3c0","_spec":"camelcase-keys@^6.2.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/camelcase-keys/issues"},"bundleDependencies":false,"dependencies":{"camelcase":"^5.3.1","map-obj":"^4.0.0","quick-lru":"^4.0.1"},"deprecated":false,"description":"Convert object keys to camel case","devDependencies":{"ava":"^2.1.0","matcha":"^0.7.0","tsd":"^0.11.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/camelcase-keys#readme","keywords":["map","obj","object","key","keys","value","values","val","iterate","camelcase","camel-case","camel","case","dash","hyphen","dot","underscore","separator","string","text","convert","pascalcase","pascal-case","deep","recurse","recursive"],"license":"MIT","name":"camelcase-keys","repository":{"type":"git","url":"git+https://github.com/sindresorhus/camelcase-keys.git"},"scripts":{"bench":"matcha bench/bench.js","test":"xo && ava && tsd"},"version":"6.2.2","xo":{"overrides":[{"files":"bench/bench.js","rules":{"import/no-unresolved":"off"}}]}}');

/***/ }),

/***/ 63466:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"camelcase@^5.0.0","_id":"camelcase@5.3.1","_inBundle":false,"_integrity":"sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==","_location":"/camelcase","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"camelcase@^5.0.0","name":"camelcase","escapedName":"camelcase","rawSpec":"^5.0.0","saveSpec":null,"fetchSpec":"^5.0.0"},"_requiredBy":["/yargs-parser"],"_resolved":"https://registry.npmjs.org/camelcase/-/camelcase-5.3.1.tgz","_shasum":"e3c9b31569e106811df242f715725a1f4c494320","_spec":"camelcase@^5.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs-parser","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/camelcase/issues"},"bundleDependencies":false,"deprecated":false,"description":"Convert a dash/dot/underscore/space separated string to camelCase or PascalCase: `foo-bar` → `fooBar`","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/camelcase#readme","keywords":["camelcase","camel-case","camel","case","dash","hyphen","dot","underscore","separator","string","text","convert","pascalcase","pascal-case"],"license":"MIT","name":"camelcase","repository":{"type":"git","url":"git+https://github.com/sindresorhus/camelcase.git"},"scripts":{"test":"xo && ava && tsd"},"version":"5.3.1"}');

/***/ }),

/***/ 28458:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ansi-styles@4.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ansi-styles@4.3.0","_id":"ansi-styles@4.3.0","_inBundle":false,"_integrity":"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==","_location":"/chalk/ansi-styles","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ansi-styles@4.3.0","name":"ansi-styles","escapedName":"ansi-styles","rawSpec":"4.3.0","saveSpec":null,"fetchSpec":"4.3.0"},"_requiredBy":["/chalk"],"_resolved":"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz","_spec":"4.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/ansi-styles/issues"},"dependencies":{"color-convert":"^2.0.1"},"description":"ANSI escape codes for styling strings in the terminal","devDependencies":{"@types/color-convert":"^1.9.0","ava":"^2.3.0","svg-term-cli":"^2.1.1","tsd":"^0.11.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/chalk/ansi-styles?sponsor=1","homepage":"https://github.com/chalk/ansi-styles#readme","keywords":["ansi","styles","color","colour","colors","terminal","console","cli","string","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"ansi-styles","repository":{"type":"git","url":"git+https://github.com/chalk/ansi-styles.git"},"scripts":{"screenshot":"svg-term --command=\'node screenshot\' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor","test":"xo && ava && tsd"},"version":"4.3.0"}');

/***/ }),

/***/ 62532:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["color-convert@2.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"color-convert@2.0.1","_id":"color-convert@2.0.1","_inBundle":false,"_integrity":"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==","_location":"/chalk/color-convert","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"color-convert@2.0.1","name":"color-convert","escapedName":"color-convert","rawSpec":"2.0.1","saveSpec":null,"fetchSpec":"2.0.1"},"_requiredBy":["/chalk/ansi-styles"],"_resolved":"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz","_spec":"2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"bugs":{"url":"https://github.com/Qix-/color-convert/issues"},"dependencies":{"color-name":"~1.1.4"},"description":"Plain color conversion functions","devDependencies":{"chalk":"^2.4.2","xo":"^0.24.0"},"engines":{"node":">=7.0.0"},"files":["index.js","conversions.js","route.js"],"homepage":"https://github.com/Qix-/color-convert#readme","keywords":["color","colour","convert","converter","conversion","rgb","hsl","hsv","hwb","cmyk","ansi","ansi16"],"license":"MIT","name":"color-convert","repository":{"type":"git","url":"git+https://github.com/Qix-/color-convert.git"},"scripts":{"pretest":"xo","test":"node test/basic.js"},"version":"2.0.1","xo":{"rules":{"default-case":0,"no-inline-comments":0,"operator-linebreak":0}}}');

/***/ }),

/***/ 61170:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["color-name@1.1.4","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"color-name@1.1.4","_id":"color-name@1.1.4","_inBundle":false,"_integrity":"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==","_location":"/chalk/color-name","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"color-name@1.1.4","name":"color-name","escapedName":"color-name","rawSpec":"1.1.4","saveSpec":null,"fetchSpec":"1.1.4"},"_requiredBy":["/chalk/color-convert"],"_resolved":"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz","_spec":"1.1.4","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"DY","email":"dfcreative@gmail.com"},"bugs":{"url":"https://github.com/colorjs/color-name/issues"},"description":"A list of color names and its values","files":["index.js"],"homepage":"https://github.com/colorjs/color-name","keywords":["color-name","color","color-keyword","keyword"],"license":"MIT","main":"index.js","name":"color-name","repository":{"type":"git","url":"git+ssh://git@github.com/colorjs/color-name.git"},"scripts":{"test":"node test.js"},"version":"1.1.4"}');

/***/ }),

/***/ 97283:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["has-flag@4.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"has-flag@4.0.0","_id":"has-flag@4.0.0","_inBundle":false,"_integrity":"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==","_location":"/chalk/has-flag","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"has-flag@4.0.0","name":"has-flag","escapedName":"has-flag","rawSpec":"4.0.0","saveSpec":null,"fetchSpec":"4.0.0"},"_requiredBy":["/chalk/supports-color"],"_resolved":"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz","_spec":"4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/has-flag/issues"},"description":"Check if argv has a specific flag","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/has-flag#readme","keywords":["has","check","detect","contains","find","flag","cli","command-line","argv","process","arg","args","argument","arguments","getopt","minimist","optimist"],"license":"MIT","name":"has-flag","repository":{"type":"git","url":"git+https://github.com/sindresorhus/has-flag.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.0.0"}');

/***/ }),

/***/ 22542:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["supports-color@7.2.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"supports-color@7.2.0","_id":"supports-color@7.2.0","_inBundle":false,"_integrity":"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==","_location":"/chalk/supports-color","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"supports-color@7.2.0","name":"supports-color","escapedName":"supports-color","rawSpec":"7.2.0","saveSpec":null,"fetchSpec":"7.2.0"},"_requiredBy":["/chalk"],"_resolved":"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz","_spec":"7.2.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"browser":"browser.js","bugs":{"url":"https://github.com/chalk/supports-color/issues"},"dependencies":{"has-flag":"^4.0.0"},"description":"Detect whether a terminal supports color","devDependencies":{"ava":"^1.4.1","import-fresh":"^3.0.0","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","browser.js"],"homepage":"https://github.com/chalk/supports-color#readme","keywords":["color","colour","colors","terminal","console","cli","ansi","styles","tty","rgb","256","shell","xterm","command-line","support","supports","capability","detect","truecolor","16m"],"license":"MIT","name":"supports-color","repository":{"type":"git","url":"git+https://github.com/chalk/supports-color.git"},"scripts":{"test":"xo && ava"},"version":"7.2.0"}');

/***/ }),

/***/ 9680:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"chalk@^4.0.0","_id":"chalk@4.1.2","_inBundle":false,"_integrity":"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==","_location":"/chalk","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"chalk@^4.0.0","name":"chalk","escapedName":"chalk","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz","_shasum":"aac4e2b7734a740867aeb16bf02aad556a1e7a01","_spec":"chalk@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","bugs":{"url":"https://github.com/chalk/chalk/issues"},"bundleDependencies":false,"dependencies":{"ansi-styles":"^4.1.0","supports-color":"^7.1.0"},"deprecated":false,"description":"Terminal string styling done right","devDependencies":{"ava":"^2.4.0","coveralls":"^3.0.7","execa":"^4.0.0","import-fresh":"^3.1.0","matcha":"^0.7.0","nyc":"^15.0.0","resolve-from":"^5.0.0","tsd":"^0.7.4","xo":"^0.28.2"},"engines":{"node":">=10"},"files":["source","index.d.ts"],"funding":"https://github.com/chalk/chalk?sponsor=1","homepage":"https://github.com/chalk/chalk#readme","keywords":["color","colour","colors","terminal","console","cli","string","str","ansi","style","styles","tty","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","main":"source","name":"chalk","repository":{"type":"git","url":"git+https://github.com/chalk/chalk.git"},"scripts":{"bench":"matcha benchmark.js","test":"xo && nyc ava && tsd"},"version":"4.1.2","xo":{"rules":{"unicorn/prefer-string-slice":"off","unicorn/prefer-includes":"off","@typescript-eslint/member-ordering":"off","no-redeclare":"off","unicorn/string-content":"off","unicorn/better-regex":"off"}}}');

/***/ }),

/***/ 85158:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cross-spawn@^4.0.2","_id":"cross-spawn@4.0.2","_inBundle":false,"_integrity":"sha1-e5JHYhwjrf3ThWAEqCPL45dCTUE=","_location":"/child-process-promise/cross-spawn","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"cross-spawn@^4.0.2","name":"cross-spawn","escapedName":"cross-spawn","rawSpec":"^4.0.2","saveSpec":null,"fetchSpec":"^4.0.2"},"_requiredBy":["/child-process-promise"],"_resolved":"https://registry.npmjs.org/cross-spawn/-/cross-spawn-4.0.2.tgz","_shasum":"7b9247621c23adfdd3856004a823cbe397424d41","_spec":"cross-spawn@^4.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/child-process-promise","author":{"name":"IndigoUnited","email":"hello@indigounited.com","url":"http://indigounited.com"},"bugs":{"url":"https://github.com/IndigoUnited/node-cross-spawn/issues/"},"bundleDependencies":false,"dependencies":{"lru-cache":"^4.0.1","which":"^1.2.9"},"deprecated":false,"description":"Cross platform child_process#spawn and child_process#spawnSync","devDependencies":{"@satazor/eslint-config":"^3.0.0","eslint":"^3.0.0","expect.js":"^0.3.0","glob":"^7.0.0","mkdirp":"^0.5.1","mocha":"^3.0.2","rimraf":"^2.5.0"},"files":["index.js","lib"],"homepage":"https://github.com/IndigoUnited/node-cross-spawn#readme","keywords":["spawn","spawnSync","windows","cross","platform","path","ext","path-ext","path_ext","shebang","hashbang","cmd","execute"],"license":"MIT","main":"index.js","name":"cross-spawn","repository":{"type":"git","url":"git://github.com/IndigoUnited/node-cross-spawn.git"},"scripts":{"lint":"eslint \'{*.js,lib/**/*.js,test/**/*.js}\'","test":"node test/prepare && mocha --bail test/test"},"version":"4.0.2"}');

/***/ }),

/***/ 3319:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"which@^1.2.9","_id":"which@1.3.1","_inBundle":false,"_integrity":"sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==","_location":"/child-process-promise/which","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"which@^1.2.9","name":"which","escapedName":"which","rawSpec":"^1.2.9","saveSpec":null,"fetchSpec":"^1.2.9"},"_requiredBy":["/child-process-promise/cross-spawn"],"_resolved":"https://registry.npmjs.org/which/-/which-1.3.1.tgz","_shasum":"a45043d54f5805316da8d62f9f50918d3da70b0a","_spec":"which@^1.2.9","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/child-process-promise/node_modules/cross-spawn","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me"},"bin":{"which":"bin/which"},"bugs":{"url":"https://github.com/isaacs/node-which/issues"},"bundleDependencies":false,"dependencies":{"isexe":"^2.0.0"},"deprecated":false,"description":"Like which(1) unix command. Find the first instance of an executable in the PATH.","devDependencies":{"mkdirp":"^0.5.0","rimraf":"^2.6.2","tap":"^12.0.1"},"files":["which.js","bin/which"],"homepage":"https://github.com/isaacs/node-which#readme","license":"ISC","main":"which.js","name":"which","repository":{"type":"git","url":"git://github.com/isaacs/node-which.git"},"scripts":{"changelog":"bash gen-changelog.sh","postversion":"npm run changelog && git add CHANGELOG.md && git commit -m \'update changelog - \'${npm_package_version}","test":"tap test/*.js --cov"},"version":"1.3.1"}');

/***/ }),

/***/ 24907:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"child-process-promise","_id":"child-process-promise@2.2.1","_inBundle":false,"_integrity":"sha1-RzChHvYQ+tRQuPIjx50x172tgHQ=","_location":"/child-process-promise","_phantomChildren":{"isexe":"2.0.0","lru-cache":"4.1.5"},"_requested":{"type":"tag","registry":true,"raw":"child-process-promise","name":"child-process-promise","escapedName":"child-process-promise","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/child-process-promise/-/child-process-promise-2.2.1.tgz","_shasum":"4730a11ef610fad450b8f223c79d31d7bdad8074","_spec":"child-process-promise","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Patrick Steele-Idem","email":"pnidem@gmail.com"},"babel":{"presets":["es2015"],"plugins":["check-es2015-constants","transform-es2015-block-scoping"]},"bugs":{"url":"https://github.com/patrick-steele-idem/child-process-promise/issues"},"bundleDependencies":false,"dependencies":{"cross-spawn":"^4.0.2","node-version":"^1.0.0","promise-polyfill":"^6.0.1"},"deprecated":false,"description":"Simple wrapper around the \\"child_process\\" module that makes use of promises","devDependencies":{"babel-cli":"^6.11.4","babel-plugin-check-es2015-constants":"^6.8.0","babel-plugin-transform-es2015-block-scoping":"^6.10.1","babel-preset-es2015":"^6.13.2","chai":"^3.5.0","eslint":"^0.10.2","jshint":"^2.9.1","mocha":"^2.4.5"},"files":["lib","lib-es5","Readme.md"],"homepage":"https://github.com/patrick-steele-idem/child-process-promise#readme","keywords":["child","process","promises"],"license":"MIT","main":"./index.js","name":"child-process-promise","publishConfig":{"registry":"http://registry.npmjs.org/"},"repository":{"type":"git","url":"git+https://github.com/patrick-steele-idem/child-process-promise.git"},"scripts":{"lint":"eslint lib/*js test/*js","mocha":"mocha --ui bdd --reporter spec ./test/","prepublish":"babel lib --out-dir lib-es5","test":"npm run mocha"},"version":"2.2.1"}');

/***/ }),

/***/ 28373:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^0.2.5","_id":"define-property@0.2.5","_inBundle":false,"_integrity":"sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=","_location":"/class-utils/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^0.2.5","name":"define-property","escapedName":"define-property","rawSpec":"^0.2.5","saveSpec":null,"fetchSpec":"^0.2.5"},"_requiredBy":["/class-utils"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz","_shasum":"c35b1ef918ec3c990f9a5bc57be04aacec5c8116","_spec":"define-property@^0.2.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/class-utils","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^0.1.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"mocha":"*","should":"^7.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["mixin-deep","mixin-object","delegate-object","forward-object"]}},"version":"0.2.5"}');

/***/ }),

/***/ 14689:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"class-utils@^0.3.5","_id":"class-utils@0.3.6","_inBundle":false,"_integrity":"sha512-qOhPa/Fj7s6TY8H8esGu5QNpMMQxz79h+urzrNYN6mn+9BnxlDGf5QZ+XeCDsxSjPqsSR56XOZOJmpeurnLMeg==","_location":"/class-utils","_phantomChildren":{"is-descriptor":"0.1.6"},"_requested":{"type":"range","registry":true,"raw":"class-utils@^0.3.5","name":"class-utils","escapedName":"class-utils","rawSpec":"^0.3.5","saveSpec":null,"fetchSpec":"^0.3.5"},"_requiredBy":["/base"],"_resolved":"https://registry.npmjs.org/class-utils/-/class-utils-0.3.6.tgz","_shasum":"f93369ae8b9a7ce02fd41faad0ca83033190c463","_spec":"class-utils@^0.3.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/class-utils/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"arr-union":"^3.1.0","define-property":"^0.2.5","isobject":"^3.0.0","static-extend":"^0.1.1"},"deprecated":false,"description":"Utils for working with JavaScript classes and prototype methods.","devDependencies":{"gulp":"^3.9.1","gulp-eslint":"^2.0.0","gulp-format-md":"^0.1.7","gulp-istanbul":"^0.10.3","gulp-mocha":"^2.2.0","mocha":"^2.4.5","should":"^8.2.2","through2":"^2.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/class-utils","keywords":["array","assign","class","copy","ctor","define","delegate","descriptor","extend","extends","inherit","inheritance","merge","method","object","prop","properties","property","prototype","util","utils"],"license":"MIT","main":"index.js","name":"class-utils","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/class-utils.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["define-property","delegate-properties","is-descriptor"]},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"0.3.6"}');

/***/ }),

/***/ 41984:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"clean-stack@^2.0.0","_id":"clean-stack@2.2.0","_inBundle":false,"_integrity":"sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==","_location":"/clean-stack","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"clean-stack@^2.0.0","name":"clean-stack","escapedName":"clean-stack","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/aggregate-error"],"_resolved":"https://registry.npmjs.org/clean-stack/-/clean-stack-2.2.0.tgz","_shasum":"ee8472dbb129e727b31e8a10a427dee9dfe4008b","_spec":"clean-stack@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/aggregate-error","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"browser":{"os":false},"bugs":{"url":"https://github.com/sindresorhus/clean-stack/issues"},"bundleDependencies":false,"deprecated":false,"description":"Clean up error stack traces","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/clean-stack#readme","keywords":["clean","stack","trace","traces","error","err","electron"],"license":"MIT","name":"clean-stack","repository":{"type":"git","url":"git+https://github.com/sindresorhus/clean-stack.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.2.0"}');

/***/ }),

/***/ 51363:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cliui@^6.0.0","_id":"cliui@6.0.0","_inBundle":false,"_integrity":"sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==","_location":"/cliui","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"cliui@^6.0.0","name":"cliui","escapedName":"cliui","rawSpec":"^6.0.0","saveSpec":null,"fetchSpec":"^6.0.0"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/cliui/-/cliui-6.0.0.tgz","_shasum":"511d702c0c4e41ca156d7d0e96021f23e13225b1","_spec":"cliui@^6.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Ben Coe","email":"ben@npmjs.com"},"bugs":{"url":"https://github.com/yargs/cliui/issues"},"bundleDependencies":false,"config":{"blanket":{"pattern":["index.js"],"data-cover-never":["node_modules","test"],"output-reporter":"spec"}},"dependencies":{"string-width":"^4.2.0","strip-ansi":"^6.0.0","wrap-ansi":"^6.2.0"},"deprecated":false,"description":"easily create complex multi-column command-line-interfaces","devDependencies":{"chai":"^4.2.0","chalk":"^3.0.0","coveralls":"^3.0.3","mocha":"^6.2.2","nyc":"^14.1.1","standard":"^12.0.1"},"engine":{"node":">=8"},"files":["index.js"],"homepage":"https://github.com/yargs/cliui#readme","keywords":["cli","command-line","layout","design","console","wrap","table"],"license":"ISC","main":"index.js","name":"cliui","repository":{"type":"git","url":"git+ssh://git@github.com/yargs/cliui.git"},"scripts":{"coverage":"nyc --reporter=text-lcov mocha | coveralls","pretest":"standard","test":"nyc mocha"},"standard":{"ignore":["**/example/**"],"globals":["it"]},"version":"6.0.0"}');

/***/ }),

/***/ 98719:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"clone-response@^1.0.2","_id":"clone-response@1.0.2","_inBundle":false,"_integrity":"sha1-0dyXOSAxTfZ/vrlCI7TuNQI56Ws=","_location":"/clone-response","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"clone-response@^1.0.2","name":"clone-response","escapedName":"clone-response","rawSpec":"^1.0.2","saveSpec":null,"fetchSpec":"^1.0.2"},"_requiredBy":["/cacheable-request"],"_resolved":"https://registry.npmjs.org/clone-response/-/clone-response-1.0.2.tgz","_shasum":"d1dc973920314df67fbeb94223b4ee350239e96b","_spec":"clone-response@^1.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cacheable-request","author":{"name":"Luke Childs","email":"lukechilds123@gmail.com","url":"http://lukechilds.co.uk"},"bugs":{"url":"https://github.com/lukechilds/clone-response/issues"},"bundleDependencies":false,"dependencies":{"mimic-response":"^1.0.0"},"deprecated":false,"description":"Clone a Node.js HTTP response stream","devDependencies":{"ava":"^0.22.0","coveralls":"^2.13.1","create-test-server":"^2.0.1","eslint-config-xo-lukechilds":"^1.0.0","get-stream":"^3.0.0","nyc":"^11.0.2","pify":"^3.0.0","xo":"^0.19.0"},"homepage":"https://github.com/lukechilds/clone-response","keywords":["clone","duplicate","copy","response","HTTP","stream"],"license":"MIT","main":"src/index.js","name":"clone-response","repository":{"type":"git","url":"git+https://github.com/lukechilds/clone-response.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","test":"xo && nyc ava"},"version":"1.0.2","xo":{"extends":"xo-lukechilds"}}');

/***/ }),

/***/ 65732:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"collection-visit@^1.0.0","_id":"collection-visit@1.0.0","_inBundle":false,"_integrity":"sha1-S8A3PBZLwykbTTaMgpzxqApZ3KA=","_location":"/collection-visit","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"collection-visit@^1.0.0","name":"collection-visit","escapedName":"collection-visit","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/cache-base"],"_resolved":"https://registry.npmjs.org/collection-visit/-/collection-visit-1.0.0.tgz","_shasum":"4bc0373c164bc3291b4d368c829cf1a80a59dca0","_spec":"collection-visit@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cache-base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/collection-visit/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","email":"brian.woodward@gmail.com","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"map-visit":"^1.0.0","object-visit":"^1.0.0"},"deprecated":false,"description":"Visit a method over the items in an object, or map visit over the objects in an array.","devDependencies":{"clone-deep":"^0.2.4","gulp":"^3.9.1","gulp-eslint":"^3.0.1","gulp-format-md":"^0.1.12","gulp-istanbul":"^1.1.1","gulp-mocha":"^3.0.0","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/collection-visit","keywords":["array","arrays","collection","context","function","helper","invoke","key","map","method","object","objects","value","visit","visitor"],"license":"MIT","main":"index.js","name":"collection-visit","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/collection-visit.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["base-methods","map-visit","object-visit"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 65116:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["color-convert@1.9.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"color-convert@1.9.3","_id":"color-convert@1.9.3","_inBundle":false,"_integrity":"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==","_location":"/color-convert","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"color-convert@1.9.3","name":"color-convert","escapedName":"color-convert","rawSpec":"1.9.3","saveSpec":null,"fetchSpec":"1.9.3"},"_requiredBy":["/ansi-styles"],"_resolved":"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz","_spec":"1.9.3","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"bugs":{"url":"https://github.com/Qix-/color-convert/issues"},"dependencies":{"color-name":"1.1.3"},"description":"Plain color conversion functions","devDependencies":{"chalk":"1.1.1","xo":"0.11.2"},"files":["index.js","conversions.js","css-keywords.js","route.js"],"homepage":"https://github.com/Qix-/color-convert#readme","keywords":["color","colour","convert","converter","conversion","rgb","hsl","hsv","hwb","cmyk","ansi","ansi16"],"license":"MIT","name":"color-convert","repository":{"type":"git","url":"git+https://github.com/Qix-/color-convert.git"},"scripts":{"pretest":"xo","test":"node test/basic.js"},"version":"1.9.3","xo":{"rules":{"default-case":0,"no-inline-comments":0,"operator-linebreak":0}}}');

/***/ }),

/***/ 19780:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["color-name@1.1.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"color-name@1.1.3","_id":"color-name@1.1.3","_inBundle":false,"_integrity":"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=","_location":"/color-name","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"color-name@1.1.3","name":"color-name","escapedName":"color-name","rawSpec":"1.1.3","saveSpec":null,"fetchSpec":"1.1.3"},"_requiredBy":["/color-convert"],"_resolved":"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz","_spec":"1.1.3","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"DY","email":"dfcreative@gmail.com"},"bugs":{"url":"https://github.com/dfcreative/color-name/issues"},"description":"A list of color names and its values","homepage":"https://github.com/dfcreative/color-name","keywords":["color-name","color","color-keyword","keyword"],"license":"MIT","main":"index.js","name":"color-name","repository":{"type":"git","url":"git+ssh://git@github.com/dfcreative/color-name.git"},"scripts":{"test":"node test.js"},"version":"1.1.3"}');

/***/ }),

/***/ 48786:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"commander@^2.18.0","_id":"commander@2.20.3","_inBundle":false,"_integrity":"sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==","_location":"/commander","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"commander@^2.18.0","name":"commander","escapedName":"commander","rawSpec":"^2.18.0","saveSpec":null,"fetchSpec":"^2.18.0"},"_requiredBy":["/gh-pages"],"_resolved":"https://registry.npmjs.org/commander/-/commander-2.20.3.tgz","_shasum":"fd485e84c03eb4881c20722ba48035e8531aeb33","_spec":"commander@^2.18.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/gh-pages","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"bugs":{"url":"https://github.com/tj/commander.js/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"the complete solution for node.js command-line programs","devDependencies":{"@types/node":"^12.7.8","eslint":"^6.4.0","should":"^13.2.3","sinon":"^7.5.0","standard":"^14.3.1","ts-node":"^8.4.1","typescript":"^3.6.3"},"files":["index.js","typings/index.d.ts"],"homepage":"https://github.com/tj/commander.js#readme","keywords":["commander","command","option","parser"],"license":"MIT","main":"index","name":"commander","repository":{"type":"git","url":"git+https://github.com/tj/commander.js.git"},"scripts":{"lint":"eslint index.js","test":"node test/run.js && npm run test-typings","test-typings":"tsc -p tsconfig.json"},"typings":"typings/index.d.ts","version":"2.20.3"}');

/***/ }),

/***/ 80980:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"commondir@^1.0.1","_id":"commondir@1.0.1","_inBundle":false,"_integrity":"sha1-3dgA2gxmEnOTzKWVDqloo6rxJTs=","_location":"/commondir","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"commondir@^1.0.1","name":"commondir","escapedName":"commondir","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/find-cache-dir"],"_resolved":"https://registry.npmjs.org/commondir/-/commondir-1.0.1.tgz","_shasum":"ddd800da0c66127393cca5950ea968a3aaf1253b","_spec":"commondir@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/find-cache-dir","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/node-commondir/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"compute the closest common parent for file paths","devDependencies":{"tape":"^3.5.0"},"engine":{"node":">=0.4"},"homepage":"https://github.com/substack/node-commondir#readme","keywords":["common","path","directory","file","parent","root"],"license":"MIT","main":"index.js","name":"commondir","repository":{"type":"git","url":"git+ssh://git@github.com/substack/node-commondir.git"},"scripts":{"test":"tape test/*.js"},"version":"1.0.1"}');

/***/ }),

/***/ 74688:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"component-emitter@^1.2.1","_id":"component-emitter@1.3.0","_inBundle":false,"_integrity":"sha512-Rd3se6QB+sO1TwqZjscQrurpEPIfO0/yYnSin6Q/rD3mOutHvUrCAhJub3r90uNb+SESBuE0QYoB90YdfatsRg==","_location":"/component-emitter","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"component-emitter@^1.2.1","name":"component-emitter","escapedName":"component-emitter","rawSpec":"^1.2.1","saveSpec":null,"fetchSpec":"^1.2.1"},"_requiredBy":["/base","/cache-base"],"_resolved":"https://registry.npmjs.org/component-emitter/-/component-emitter-1.3.0.tgz","_shasum":"16e4070fba8ae29b679f2215853ee181ab2eabc0","_spec":"component-emitter@^1.2.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base","bugs":{"url":"https://github.com/component/emitter/issues"},"bundleDependencies":false,"component":{"scripts":{"emitter/index.js":"index.js"}},"deprecated":false,"description":"Event emitter","devDependencies":{"mocha":"*","should":"*"},"files":["index.js","LICENSE"],"homepage":"https://github.com/component/emitter#readme","license":"MIT","main":"index.js","name":"component-emitter","repository":{"type":"git","url":"git+https://github.com/component/emitter.git"},"scripts":{"test":"make test"},"version":"1.3.0"}');

/***/ }),

/***/ 67656:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["concat-map@0.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"concat-map@0.0.1","_id":"concat-map@0.0.1","_inBundle":false,"_integrity":"sha1-2Klr13/Wjfd5OnMDajug1UBdR3s=","_location":"/concat-map","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"concat-map@0.0.1","name":"concat-map","escapedName":"concat-map","rawSpec":"0.0.1","saveSpec":null,"fetchSpec":"0.0.1"},"_requiredBy":["/brace-expansion"],"_resolved":"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz","_spec":"0.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/node-concat-map/issues"},"description":"concatenative mapdashery","devDependencies":{"tape":"~2.4.0"},"directories":{"example":"example","test":"test"},"homepage":"https://github.com/substack/node-concat-map#readme","keywords":["concat","concatMap","map","functional","higher-order"],"license":"MIT","main":"index.js","name":"concat-map","repository":{"type":"git","url":"git://github.com/substack/node-concat-map.git"},"scripts":{"test":"tape test/*.js"},"testling":{"files":"test/*.js","browsers":{"ie":[6,7,8,9],"ff":[3.5,10,15],"chrome":[10,22],"safari":[5.1],"opera":[12]}},"version":"0.0.1"}');

/***/ }),

/***/ 49012:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"copy-descriptor@^0.1.0","_id":"copy-descriptor@0.1.1","_inBundle":false,"_integrity":"sha1-Z29us8OZl8LuGsOpJP1hJHSPV40=","_location":"/copy-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"copy-descriptor@^0.1.0","name":"copy-descriptor","escapedName":"copy-descriptor","rawSpec":"^0.1.0","saveSpec":null,"fetchSpec":"^0.1.0"},"_requiredBy":["/object-copy"],"_resolved":"https://registry.npmjs.org/copy-descriptor/-/copy-descriptor-0.1.1.tgz","_shasum":"676f6eb3c39997c2ee1ac3a924fd6124748f578d","_spec":"copy-descriptor@^0.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/object-copy","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/copy-descriptor/issues"},"bundleDependencies":false,"deprecated":false,"description":"Copy a descriptor from object A to object B","devDependencies":{"gulp-format-md":"^0.1.9","mocha":"^2.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/copy-descriptor","keywords":["copy","descriptor"],"license":"MIT","main":"index.js","name":"copy-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/copy-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","is-plain-object","isobject"]},"lint":{"reflinks":true},"reflinks":["verb-readme-generator","verb"]},"version":"0.1.1"}');

/***/ }),

/***/ 28964:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cp-file@^7.0.0","_id":"cp-file@7.0.0","_inBundle":false,"_integrity":"sha512-0Cbj7gyvFVApzpK/uhCtQ/9kE9UnYpxMzaq5nQQC/Dh4iaj5fxp7iEFIullrYwzj8nf0qnsI1Qsx34hAeAebvw==","_location":"/cp-file","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"cp-file@^7.0.0","name":"cp-file","escapedName":"cp-file","rawSpec":"^7.0.0","saveSpec":null,"fetchSpec":"^7.0.0"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/cp-file/-/cp-file-7.0.0.tgz","_shasum":"b9454cfd07fe3b974ab9ea0e5f29655791a9b8cd","_spec":"cp-file@^7.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/cp-file/issues"},"bundleDependencies":false,"dependencies":{"graceful-fs":"^4.1.2","make-dir":"^3.0.0","nested-error-stacks":"^2.0.0","p-event":"^4.1.0"},"deprecated":false,"description":"Copy a file","devDependencies":{"ava":"^1.4.1","clear-module":"^3.1.0","coveralls":"^3.0.3","del":"^4.1.0","import-fresh":"^3.0.0","nyc":"^13.3.0","sinon":"^7.3.1","tsd":"^0.7.2","uuid":"^3.3.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["cp-file-error.js","fs.js","index.js","index.d.ts","progress-emitter.js"],"homepage":"https://github.com/sindresorhus/cp-file#readme","keywords":["copy","cp","file","clone","fs","stream","file-system","ncp","fast","quick","data","content","contents"],"license":"MIT","maintainers":[{"name":"Michael Mayer","email":"michael@schnittstabil.de","url":"schnittstabil.de"}],"name":"cp-file","repository":{"type":"git","url":"git+https://github.com/sindresorhus/cp-file.git"},"scripts":{"test":"xo && nyc ava && tsd"},"version":"7.0.0"}');

/***/ }),

/***/ 23106:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cpy-cli@3.1.1","_id":"cpy-cli@3.1.1","_inBundle":false,"_integrity":"sha512-HCpNdBkQy3rw+uARLuIf0YurqsMXYzBa9ihhSAuxYJcNIrqrSq3BstPfr0cQN38AdMrQiO9Dp4hYy7GtGJsLPg==","_location":"/cpy-cli","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"cpy-cli@3.1.1","name":"cpy-cli","escapedName":"cpy-cli","rawSpec":"3.1.1","saveSpec":null,"fetchSpec":"3.1.1"},"_requiredBy":["#DEV:/"],"_resolved":"https://registry.npmjs.org/cpy-cli/-/cpy-cli-3.1.1.tgz","_shasum":"2adb06544102c948ce098e522d5b8ddcf4f7c0b4","_spec":"cpy-cli@3.1.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bin":{"cpy":"cli.js"},"bugs":{"url":"https://github.com/sindresorhus/cpy-cli/issues"},"bundleDependencies":false,"dependencies":{"cpy":"^8.0.0","meow":"^6.1.1"},"deprecated":false,"description":"Copy files","devDependencies":{"ava":"^2.4.0","execa":"^1.0.0","path-exists":"^4.0.0","tempfile":"^3.0.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["cli.js"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/cpy-cli#readme","keywords":["cli-app","cli","copy","cp","cpy","file","files","clone","fs","stream","glob","file-system","ncp","fast","quick","data","content","contents"],"license":"MIT","maintainers":[{"name":"Michael Mayer","email":"michael@schnittstabil.de","url":"schnittstabil.de"}],"name":"cpy-cli","repository":{"type":"git","url":"git+https://github.com/sindresorhus/cpy-cli.git"},"scripts":{"test":"xo && ava"},"version":"3.1.1"}');

/***/ }),

/***/ 34195:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"@nodelib/fs.stat@^1.1.2","_id":"@nodelib/fs.stat@1.1.3","_inBundle":false,"_integrity":"sha512-shAmDyaQC4H92APFoIaVDHCx5bStIocgvbwQyxPRrbUY20V1EYTbSDchWbuwlMG3V17cprZhA6+78JfB+3DTPw==","_location":"/cpy/@nodelib/fs.stat","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"@nodelib/fs.stat@^1.1.2","name":"@nodelib/fs.stat","escapedName":"@nodelib%2ffs.stat","scope":"@nodelib","rawSpec":"^1.1.2","saveSpec":null,"fetchSpec":"^1.1.2"},"_requiredBy":["/cpy/fast-glob"],"_resolved":"https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-1.1.3.tgz","_shasum":"2b5a3ab3f918cca48a8c754c08168e3f03eba61b","_spec":"@nodelib/fs.stat@^1.1.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fast-glob","bundleDependencies":false,"deprecated":false,"description":"Get the status of a file with some features","engines":{"node":">= 6"},"keywords":["NodeLib","fs","FileSystem","file system","stat"],"license":"MIT","main":"out/index.js","name":"@nodelib/fs.stat","repository":{"type":"git","url":"https://github.com/nodelib/nodelib/tree/master/packages/fs/fs.stat"},"scripts":{"build":"npm run clean && npm run lint && npm run compile && npm test","clean":"rimraf out","compile":"tsc -b .","compile:watch":"tsc -p . --watch --sourceMap","lint":"tslint \\"src/**/*.ts\\" -p . -t stylish","test":"mocha \\"out/**/*.spec.js\\" -s 0","watch":"npm run clean && npm run compile:watch"},"typings":"out/index.d.ts","version":"1.1.3"}');

/***/ }),

/***/ 42996:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extend-shallow@^2.0.1","_id":"extend-shallow@2.0.1","_inBundle":false,"_integrity":"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=","_location":"/cpy/braces/extend-shallow","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"extend-shallow@^2.0.1","name":"extend-shallow","escapedName":"extend-shallow","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/cpy/braces"],"_resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz","_shasum":"51af7d614ad9a9f610ea1bafbb989d6b1c56890f","_spec":"extend-shallow@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/extend-shallow/issues"},"bundleDependencies":false,"dependencies":{"is-extendable":"^0.1.0"},"deprecated":false,"description":"Extend an object with the properties of additional objects. node.js/javascript util.","devDependencies":{"array-slice":"^0.2.3","benchmarked":"^0.1.4","chalk":"^1.0.0","for-own":"^0.1.3","glob":"^5.0.12","is-plain-object":"^2.0.1","kind-of":"^2.0.0","minimist":"^1.1.1","mocha":"^2.2.5","should":"^7.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/extend-shallow","keywords":["assign","extend","javascript","js","keys","merge","obj","object","prop","properties","property","props","shallow","util","utility","utils","value"],"license":"MIT","main":"index.js","name":"extend-shallow","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/extend-shallow.git"},"scripts":{"test":"mocha"},"version":"2.0.1"}');

/***/ }),

/***/ 31633:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"braces@^2.3.1","_id":"braces@2.3.2","_inBundle":false,"_integrity":"sha512-aNdbnj9P8PjdXU4ybaWLK2IF3jc/EoDYbC7AazW6to3TRsfXxscC9UXOB5iDiEQrkyIbWp2SLQda4+QAa7nc3w==","_location":"/cpy/braces","_phantomChildren":{"is-extendable":"0.1.1"},"_requested":{"type":"range","registry":true,"raw":"braces@^2.3.1","name":"braces","escapedName":"braces","rawSpec":"^2.3.1","saveSpec":null,"fetchSpec":"^2.3.1"},"_requiredBy":["/cpy/micromatch"],"_resolved":"https://registry.npmjs.org/braces/-/braces-2.3.2.tgz","_shasum":"5979fd3f14cd531565e5fa2df1abfff1dfaee729","_spec":"braces@^2.3.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/braces/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Elan Shanker","url":"https://github.com/es128"},{"name":"Eugene Sharygin","url":"https://github.com/eush77"},{"name":"hemanth.hm","url":"http://h3manth.com"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"arr-flatten":"^1.1.0","array-unique":"^0.3.2","extend-shallow":"^2.0.1","fill-range":"^4.0.0","isobject":"^3.0.1","repeat-element":"^1.1.2","snapdragon":"^0.8.1","snapdragon-node":"^2.0.1","split-string":"^3.0.2","to-regex":"^3.0.1"},"deprecated":false,"description":"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.","devDependencies":{"ansi-cyan":"^0.1.1","benchmarked":"^2.0.0","brace-expansion":"^1.1.8","cross-spawn":"^5.1.0","gulp":"^3.9.1","gulp-eslint":"^4.0.0","gulp-format-md":"^1.0.0","gulp-istanbul":"^1.1.2","gulp-mocha":"^3.0.1","gulp-unused":"^0.2.1","is-windows":"^1.0.1","minimatch":"^3.0.4","mocha":"^3.2.0","noncharacters":"^1.1.0","text-table":"^0.2.0","time-diff":"^0.3.1","yargs-parser":"^8.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js","lib"],"homepage":"https://github.com/micromatch/braces","keywords":["alpha","alphabetical","bash","brace","braces","expand","expansion","filepath","fill","fs","glob","globbing","letter","match","matches","matching","number","numerical","path","range","ranges","sh"],"license":"MIT","main":"index.js","name":"braces","repository":{"type":"git","url":"git+https://github.com/micromatch/braces.git"},"scripts":{"benchmark":"node benchmark","test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"lint":{"reflinks":true},"plugins":["gulp-format-md"],"related":{"list":["expand-brackets","extglob","fill-range","micromatch","nanomatch"]}},"version":"2.3.2"}');

/***/ }),

/***/ 80666:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"fast-glob@^2.2.6","_id":"fast-glob@2.2.7","_inBundle":false,"_integrity":"sha512-g1KuQwHOZAmOZMuBtHdxDtju+T2RT8jgCC9aANsbpdiDDTSnjgfuVsIBNKbUeJI3oKMRExcfNDtJl4OhbffMsw==","_location":"/cpy/fast-glob","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"fast-glob@^2.2.6","name":"fast-glob","escapedName":"fast-glob","rawSpec":"^2.2.6","saveSpec":null,"fetchSpec":"^2.2.6"},"_requiredBy":["/cpy/globby"],"_resolved":"https://registry.npmjs.org/fast-glob/-/fast-glob-2.2.7.tgz","_shasum":"6953857c3afa475fff92ee6015d52da70a4cd39d","_spec":"fast-glob@^2.2.6","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/globby","author":{"name":"Denis Malinochkin","url":"canonium.com"},"bugs":{"url":"https://github.com/mrmlnc/fast-glob/issues"},"bundleDependencies":false,"dependencies":{"@mrmlnc/readdir-enhanced":"^2.2.1","@nodelib/fs.stat":"^1.1.2","glob-parent":"^3.1.0","is-glob":"^4.0.0","merge2":"^1.2.3","micromatch":"^3.1.10"},"deprecated":false,"description":"Is a faster `node-glob` alternative","devDependencies":{"@types/bash-glob":"^2.0.0","@types/compute-stdev":"^1.0.0","@types/easy-table":"^0.0.32","@types/execa":"^0.9.0","@types/glob":"^7.1.1","@types/glob-parent":"^3.1.0","@types/glob-stream":"^6.1.0","@types/globby":"^8.0.0","@types/is-glob":"^4.0.0","@types/merge2":"^1.1.4","@types/micromatch":"^3.1.0","@types/minimist":"^1.2.0","@types/mocha":"^5.2.5","@types/node":"^11.13.5","@types/rimraf":"^2.0.2","bash-glob":"^2.0.0","compute-stdev":"^1.0.0","easy-table":"^1.1.1","execa":"^0.9.0","fast-glob":"^2.2.0","glob":"^7.1.2","glob-stream":"^6.1.0","globby":"^8.0.1","minimist":"^1.2.0","mocha":"^5.2.0","rimraf":"^2.6.2","tiny-glob":"^0.2.3","tslint":"^5.12.0","tslint-config-mrmlnc":"^2.0.1","typescript":"^3.1.3"},"engines":{"node":">=4.0.0"},"homepage":"https://github.com/mrmlnc/fast-glob#readme","keywords":["glob","patterns","fast","implementation"],"license":"MIT","main":"index.js","name":"fast-glob","repository":{"type":"git","url":"git+https://github.com/mrmlnc/fast-glob.git"},"scripts":{"bench":"npm run build && npm run bench-async && npm run bench-sync","bench-async":"npm run bench-async-1 && npm run bench-async-5 && npm run bench-async-10 && npm run bench-async-50 && npm run bench-async-100","bench-async-1":"node ./out/benchmark --depth 1","bench-async-10":"node ./out/benchmark --depth 10","bench-async-100":"node ./out/benchmark --depth 100","bench-async-5":"node ./out/benchmark --depth 5","bench-async-50":"node ./out/benchmark --depth 50","bench-sync":"npm run bench-sync-1 && npm run bench-sync-5 && npm run bench-sync-10 && npm run bench-sync-50 && npm run bench-sync-100","bench-sync-1":"node ./out/benchmark --depth 1 --type sync","bench-sync-10":"node ./out/benchmark --depth 10 --type sync","bench-sync-100":"node ./out/benchmark --depth 100 --type sync","bench-sync-5":"node ./out/benchmark --depth 5 --type sync","bench-sync-50":"node ./out/benchmark --depth 50 --type sync","build":"npm run clean && npm run compile && npm run lint && npm test","clean":"rimraf out","compile":"tsc","lint":"tslint \\"src/**/*.ts\\" -p . -t stylish","smoke":"mocha \\"out/**/*.smoke.js\\" -s 0","test":"mocha \\"out/**/*.spec.js\\" -s 0","watch":"npm run clean && npm run compile -- --sourceMap --watch"},"typings":"index.d.ts","version":"2.2.7"}');

/***/ }),

/***/ 81133:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extend-shallow@^2.0.1","_id":"extend-shallow@2.0.1","_inBundle":false,"_integrity":"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=","_location":"/cpy/fill-range/extend-shallow","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"extend-shallow@^2.0.1","name":"extend-shallow","escapedName":"extend-shallow","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/cpy/fill-range"],"_resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz","_shasum":"51af7d614ad9a9f610ea1bafbb989d6b1c56890f","_spec":"extend-shallow@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fill-range","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/extend-shallow/issues"},"bundleDependencies":false,"dependencies":{"is-extendable":"^0.1.0"},"deprecated":false,"description":"Extend an object with the properties of additional objects. node.js/javascript util.","devDependencies":{"array-slice":"^0.2.3","benchmarked":"^0.1.4","chalk":"^1.0.0","for-own":"^0.1.3","glob":"^5.0.12","is-plain-object":"^2.0.1","kind-of":"^2.0.0","minimist":"^1.1.1","mocha":"^2.2.5","should":"^7.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/extend-shallow","keywords":["assign","extend","javascript","js","keys","merge","obj","object","prop","properties","property","props","shallow","util","utility","utils","value"],"license":"MIT","main":"index.js","name":"extend-shallow","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/extend-shallow.git"},"scripts":{"test":"mocha"},"version":"2.0.1"}');

/***/ }),

/***/ 29875:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"fill-range@^4.0.0","_id":"fill-range@4.0.0","_inBundle":false,"_integrity":"sha1-1USBHUKPmOsGpj3EAtJAPDKMOPc=","_location":"/cpy/fill-range","_phantomChildren":{"is-extendable":"0.1.1"},"_requested":{"type":"range","registry":true,"raw":"fill-range@^4.0.0","name":"fill-range","escapedName":"fill-range","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/cpy/braces"],"_resolved":"https://registry.npmjs.org/fill-range/-/fill-range-4.0.0.tgz","_shasum":"d544811d428f98eb06a63dc402d2403c328c38f7","_spec":"fill-range@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/fill-range/issues"},"bundleDependencies":false,"contributors":[{"email":"wtgtybhertgeghgtwtg@gmail.com","url":"https://github.com/wtgtybhertgeghgtwtg"},{"name":"Edo Rivai","email":"edo.rivai@gmail.com","url":"edo.rivai.nl"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"},{"name":"Paul Miller","email":"paul+gh@paulmillr.com","url":"paulmillr.com"}],"dependencies":{"extend-shallow":"^2.0.1","is-number":"^3.0.0","repeat-string":"^1.6.1","to-regex-range":"^2.1.0"},"deprecated":false,"description":"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`","devDependencies":{"ansi-cyan":"^0.1.1","benchmarked":"^1.0.0","gulp-format-md":"^0.1.12","minimist":"^1.2.0","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/fill-range","keywords":["alpha","alphabetical","array","bash","brace","expand","expansion","fill","glob","match","matches","matching","number","numerical","range","ranges","regex","sh"],"license":"MIT","main":"index.js","name":"fill-range","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/fill-range.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["braces","expand-range","micromatch","to-regex-range"]},"toc":true,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"4.0.0"}');

/***/ }),

/***/ 3496:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-glob@^3.1.0","_id":"is-glob@3.1.0","_inBundle":false,"_integrity":"sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=","_location":"/cpy/glob-parent/is-glob","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-glob@^3.1.0","name":"is-glob","escapedName":"is-glob","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/cpy/glob-parent"],"_resolved":"https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz","_shasum":"7ba5ae24217804ac70707b96922567486cc3e84a","_spec":"is-glob@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/glob-parent","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-glob/issues"},"bundleDependencies":false,"contributors":[{"name":"Daniel Perez","email":"daniel@claudetech.com","url":"http://tuvistavie.com"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"is-extglob":"^2.1.0"},"deprecated":false,"description":"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.","devDependencies":{"gulp-format-md":"^0.1.10","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-glob","keywords":["bash","braces","check","exec","expression","extglob","glob","globbing","globstar","is","match","matches","pattern","regex","regular","string","test"],"license":"MIT","main":"index.js","name":"is-glob","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-glob.git"},"scripts":{"test":"mocha"},"verb":{"layout":"default","plugins":["gulp-format-md"],"related":{"list":["assemble","base","update","verb"]},"reflinks":["assemble","bach","base","composer","gulp","has-glob","is-valid-glob","micromatch","npm","scaffold","verb","vinyl"]},"version":"3.1.0"}');

/***/ }),

/***/ 62904:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"glob-parent@^3.1.0","_id":"glob-parent@3.1.0","_inBundle":false,"_integrity":"sha1-nmr2KZ2NO9K9QEMIMr0RPfkGxa4=","_location":"/cpy/glob-parent","_phantomChildren":{"is-extglob":"2.1.1"},"_requested":{"type":"range","registry":true,"raw":"glob-parent@^3.1.0","name":"glob-parent","escapedName":"glob-parent","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/cpy/fast-glob"],"_resolved":"https://registry.npmjs.org/glob-parent/-/glob-parent-3.1.0.tgz","_shasum":"9e6af6299d8d3bd2bd40430832bd113df906c5ae","_spec":"glob-parent@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fast-glob","author":{"name":"Elan Shanker","url":"https://github.com/es128"},"bugs":{"url":"https://github.com/es128/glob-parent/issues"},"bundleDependencies":false,"dependencies":{"is-glob":"^3.1.0","path-dirname":"^1.0.0"},"deprecated":false,"description":"Strips glob magic from a string to provide the parent directory path","devDependencies":{"coveralls":"^2.11.2","istanbul":"^0.3.5","mocha":"^2.1.0"},"files":["index.js"],"homepage":"https://github.com/es128/glob-parent","keywords":["glob","parent","strip","path","dirname","directory","base","wildcard"],"license":"ISC","main":"index.js","name":"glob-parent","repository":{"type":"git","url":"git+https://github.com/es128/glob-parent.git"},"scripts":{"ci-test":"istanbul cover _mocha && cat ./coverage/lcov.info | coveralls","test":"istanbul test node_modules/mocha/bin/_mocha"},"version":"3.1.0"}');

/***/ }),

/***/ 57638:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"globby@^9.2.0","_id":"globby@9.2.0","_inBundle":false,"_integrity":"sha512-ollPHROa5mcxDEkwg6bPt3QbEf4pDQSNtd6JPL1YvOvAo/7/0VAm9TccUeoTmarjPw4pfUthSCqcyfNB1I3ZSg==","_location":"/cpy/globby","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"globby@^9.2.0","name":"globby","escapedName":"globby","rawSpec":"^9.2.0","saveSpec":null,"fetchSpec":"^9.2.0"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/globby/-/globby-9.2.0.tgz","_shasum":"fd029a706c703d29bdd170f4b6db3a3f7a7cb63d","_spec":"globby@^9.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/globby/issues"},"bundleDependencies":false,"dependencies":{"@types/glob":"^7.1.1","array-union":"^1.0.2","dir-glob":"^2.2.2","fast-glob":"^2.2.6","glob":"^7.1.3","ignore":"^4.0.3","pify":"^4.0.1","slash":"^2.0.0"},"deprecated":false,"description":"Extends `glob` with support for multiple patterns and exposes a Promise API","devDependencies":{"ava":"^1.4.1","glob-stream":"^6.1.0","globby":"github:sindresorhus/globby#master","matcha":"^0.7.0","rimraf":"^2.6.3","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","gitignore.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/globby#readme","keywords":["all","array","directories","dirs","expand","files","filesystem","filter","find","fnmatch","folders","fs","glob","globbing","globs","gulpfriendly","match","matcher","minimatch","multi","multiple","paths","pattern","patterns","traverse","util","utility","wildcard","wildcards","promise","gitignore","git"],"license":"MIT","name":"globby","repository":{"type":"git","url":"git+https://github.com/sindresorhus/globby.git"},"scripts":{"bench":"npm update glob-stream fast-glob && matcha bench.js","test":"xo && ava && tsd"},"version":"9.2.0","xo":{"ignores":["fixtures"]}}');

/***/ }),

/***/ 84944:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^3.0.2","_id":"kind-of@3.2.2","_inBundle":false,"_integrity":"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=","_location":"/cpy/is-number/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^3.0.2","name":"kind-of","escapedName":"kind-of","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/cpy/is-number"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz","_shasum":"31ea21a734bab9bbb0f32466d893aea51e4a3c64","_spec":"kind-of@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/is-number","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.0.0","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.3.0","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.2.2"}');

/***/ }),

/***/ 82401:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-number@^3.0.0","_id":"is-number@3.0.0","_inBundle":false,"_integrity":"sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=","_location":"/cpy/is-number","_phantomChildren":{"is-buffer":"1.1.6"},"_requested":{"type":"range","registry":true,"raw":"is-number@^3.0.0","name":"is-number","escapedName":"is-number","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/cpy/fill-range","/cpy/to-regex-range"],"_resolved":"https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz","_shasum":"24fd6201a4782cf50561c810276afc7d12d71195","_spec":"is-number@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fill-range","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-number/issues"},"bundleDependencies":false,"contributors":[{"name":"Charlike Mike Reagent","url":"http://www.tunnckocore.tk"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"kind-of":"^3.0.2"},"deprecated":false,"description":"Returns true if the value is a number. comprehensive tests.","devDependencies":{"benchmarked":"^0.2.5","chalk":"^1.1.3","gulp-format-md":"^0.1.10","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-number","keywords":["check","coerce","coercion","integer","is","is-nan","is-num","is-number","istype","kind","math","nan","num","number","numeric","test","type","typeof","value"],"license":"MIT","main":"index.js","name":"is-number","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-number.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["even","is-even","is-odd","is-primitive","kind-of","odd"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb","verb-generate-readme"]},"version":"3.0.0"}');

/***/ }),

/***/ 77185:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"micromatch@^3.1.10","_id":"micromatch@3.1.10","_inBundle":false,"_integrity":"sha512-MWikgl9n9M3w+bpsY3He8L+w9eF9338xRl8IAO5viDizwSzziFEyUzo2xrrloB64ADbTf8uA8vRqqttDTOmccg==","_location":"/cpy/micromatch","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"micromatch@^3.1.10","name":"micromatch","escapedName":"micromatch","rawSpec":"^3.1.10","saveSpec":null,"fetchSpec":"^3.1.10"},"_requiredBy":["/cpy/fast-glob"],"_resolved":"https://registry.npmjs.org/micromatch/-/micromatch-3.1.10.tgz","_shasum":"70859bc95c9840952f359a068a3fc49f9ecfac23","_spec":"micromatch@^3.1.10","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fast-glob","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/micromatch/issues"},"bundleDependencies":false,"contributors":[{"name":"Amila Welihinda","url":"amilajack.com"},{"name":"Bogdan Chadkin","url":"https://github.com/TrySound"},{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Devon Govett","url":"http://badassjs.com"},{"name":"Elan Shanker","url":"https://github.com/es128"},{"name":"Fabrício Matté","url":"https://ultcombo.js.org"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Martin Kolárik","url":"https://kolarik.sk"},{"name":"Olsten Larck","url":"https://i.am.charlike.online"},{"name":"Paul Miller","url":"paulmillr.com"},{"name":"Tom Byrer","url":"https://github.com/tomByrer"},{"name":"Tyler Akins","url":"http://rumkin.com"},{"url":"https://github.com/DianeLooney"}],"dependencies":{"arr-diff":"^4.0.0","array-unique":"^0.3.2","braces":"^2.3.1","define-property":"^2.0.2","extend-shallow":"^3.0.2","extglob":"^2.0.4","fragment-cache":"^0.2.1","kind-of":"^6.0.2","nanomatch":"^1.2.9","object.pick":"^1.3.0","regex-not":"^1.0.0","snapdragon":"^0.8.1","to-regex":"^3.0.2"},"deprecated":false,"description":"Glob matching for javascript/node.js. A drop-in replacement and faster alternative to minimatch and multimatch.","devDependencies":{"bash-match":"^1.0.2","for-own":"^1.0.0","gulp":"^3.9.1","gulp-format-md":"^1.0.0","gulp-istanbul":"^1.1.3","gulp-mocha":"^5.0.0","gulp-unused":"^0.2.1","is-windows":"^1.0.2","minimatch":"^3.0.4","minimist":"^1.2.0","mocha":"^3.5.3","multimatch":"^2.1.0"},"engines":{"node":">=0.10.0"},"files":["index.js","lib"],"homepage":"https://github.com/micromatch/micromatch","keywords":["bash","expand","expansion","expression","file","files","filter","find","glob","globbing","globs","globstar","match","matcher","matches","matching","micromatch","minimatch","multimatch","path","pattern","patterns","regex","regexp","regular","shell","wildcard"],"license":"MIT","lintDeps":{"dependencies":{"options":{"lock":{"snapdragon":"^0.8.1"}}},"devDependencies":{"files":{"options":{"ignore":["benchmark/**"]}}}},"main":"index.js","name":"micromatch","repository":{"type":"git","url":"git+https://github.com/micromatch/micromatch.git"},"scripts":{"test":"mocha"},"verb":{"toc":"collapsible","layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"helpers":["./benchmark/helper.js"],"related":{"list":["braces","expand-brackets","extglob","fill-range","nanomatch"]},"lint":{"reflinks":true},"reflinks":["expand-brackets","extglob","glob-object","minimatch","multimatch","snapdragon"]},"version":"3.1.10"}');

/***/ }),

/***/ 19550:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pify@^4.0.1","_id":"pify@4.0.1","_inBundle":false,"_integrity":"sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==","_location":"/cpy/pify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pify@^4.0.1","name":"pify","escapedName":"pify","rawSpec":"^4.0.1","saveSpec":null,"fetchSpec":"^4.0.1"},"_requiredBy":["/cpy/globby"],"_resolved":"https://registry.npmjs.org/pify/-/pify-4.0.1.tgz","_shasum":"4b2cd25c50d598735c50292224fd8c6df41e3231","_spec":"pify@^4.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/globby","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/pify/issues"},"bundleDependencies":false,"deprecated":false,"description":"Promisify a callback-style function","devDependencies":{"ava":"^0.25.0","pinkie-promise":"^2.0.0","v8-natives":"^1.1.0","xo":"^0.23.0"},"engines":{"node":">=6"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/pify#readme","keywords":["promise","promises","promisify","all","denodify","denodeify","callback","cb","node","then","thenify","convert","transform","wrap","wrapper","bind","to","async","await","es2015","bluebird"],"license":"MIT","name":"pify","repository":{"type":"git","url":"git+https://github.com/sindresorhus/pify.git"},"scripts":{"optimization-test":"node --allow-natives-syntax optimization-test.js","test":"xo && ava"},"version":"4.0.1"}');

/***/ }),

/***/ 72322:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"to-regex-range@^2.1.0","_id":"to-regex-range@2.1.1","_inBundle":false,"_integrity":"sha1-fIDBe53+vlmeJzZ+DU3VWQFB2zg=","_location":"/cpy/to-regex-range","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"to-regex-range@^2.1.0","name":"to-regex-range","escapedName":"to-regex-range","rawSpec":"^2.1.0","saveSpec":null,"fetchSpec":"^2.1.0"},"_requiredBy":["/cpy/fill-range"],"_resolved":"https://registry.npmjs.org/to-regex-range/-/to-regex-range-2.1.1.tgz","_shasum":"7c80c17b9dfebe599e27367e0d4dd5590141db38","_spec":"to-regex-range@^2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fill-range","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/to-regex-range/issues"},"bundleDependencies":false,"dependencies":{"is-number":"^3.0.0","repeat-string":"^1.6.1"},"deprecated":false,"description":"Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.","devDependencies":{"fill-range":"^3.1.1","gulp-format-md":"^0.1.12","mocha":"^3.2.0","text-table":"^0.2.0","time-diff":"^0.3.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/micromatch/to-regex-range","keywords":["alpha","alphabetical","bash","brace","date","expand","expansion","glob","match","matches","matching","number","numerical","range","ranges","regex","sequence","sh","to","year"],"license":"MIT","main":"index.js","name":"to-regex-range","repository":{"type":"git","url":"git+https://github.com/micromatch/to-regex-range.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["expand-range","fill-range","micromatch","repeat-element","repeat-string"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"helpers":["./examples.js"],"reflinks":["0-5","0-9","1-5","1-9"]},"version":"2.1.1"}');

/***/ }),

/***/ 153:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"cpy@^8.0.0","_id":"cpy@8.1.2","_inBundle":false,"_integrity":"sha512-dmC4mUesv0OYH2kNFEidtf/skUwv4zePmGeepjyyJ0qTo5+8KhA1o99oIAwVVLzQMAeDJml74d6wPPKb6EZUTg==","_location":"/cpy","_phantomChildren":{"@mrmlnc/readdir-enhanced":"2.2.1","@types/glob":"7.2.0","arr-diff":"4.0.0","arr-flatten":"1.1.0","array-union":"1.0.2","array-unique":"0.3.2","define-property":"2.0.2","dir-glob":"2.2.2","extend-shallow":"3.0.2","extglob":"2.0.4","fragment-cache":"0.2.1","glob":"7.1.6","ignore":"4.0.6","is-buffer":"1.1.6","is-extendable":"0.1.1","is-extglob":"2.1.1","is-glob":"4.0.1","isobject":"3.0.1","kind-of":"6.0.3","merge2":"1.4.1","nanomatch":"1.2.13","object.pick":"1.3.0","path-dirname":"1.0.2","regex-not":"1.0.2","repeat-element":"1.1.4","repeat-string":"1.6.1","slash":"2.0.0","snapdragon":"0.8.2","snapdragon-node":"2.1.1","split-string":"3.1.0","to-regex":"3.0.2"},"_requested":{"type":"range","registry":true,"raw":"cpy@^8.0.0","name":"cpy","escapedName":"cpy","rawSpec":"^8.0.0","saveSpec":null,"fetchSpec":"^8.0.0"},"_requiredBy":["/cpy-cli"],"_resolved":"https://registry.npmjs.org/cpy/-/cpy-8.1.2.tgz","_shasum":"e339ea54797ad23f8e3919a5cffd37bfc3f25935","_spec":"cpy@^8.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy-cli","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/cpy/issues"},"bundleDependencies":false,"dependencies":{"arrify":"^2.0.1","cp-file":"^7.0.0","globby":"^9.2.0","has-glob":"^1.0.0","junk":"^3.1.0","nested-error-stacks":"^2.1.0","p-all":"^2.1.0","p-filter":"^2.1.0","p-map":"^3.0.0"},"deprecated":false,"description":"Copy files","devDependencies":{"ava":"^3.12.1","proxyquire":"^2.1.3","rimraf":"^3.0.0","tempy":"^0.6.0","tsd":"^0.11.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["cpy-error.js","index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/cpy#readme","keywords":["copy","cp","cpy","file","files","clone","fs","stream","glob","file-system","ncp","fast","quick","data","content","contents","cpx","directory","directories"],"license":"MIT","name":"cpy","repository":{"type":"git","url":"git+https://github.com/sindresorhus/cpy.git"},"scripts":{"test":"xo && ava && tsd"},"version":"8.1.2"}');

/***/ }),

/***/ 30698:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["cross-spawn@7.0.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"cross-spawn@7.0.3","_id":"cross-spawn@7.0.3","_inBundle":false,"_integrity":"sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==","_location":"/cross-spawn","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"cross-spawn@7.0.3","name":"cross-spawn","escapedName":"cross-spawn","rawSpec":"7.0.3","saveSpec":null,"fetchSpec":"7.0.3"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz","_spec":"7.0.3","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"André Cruz","email":"andre@moxy.studio"},"bugs":{"url":"https://github.com/moxystudio/node-cross-spawn/issues"},"commitlint":{"extends":["@commitlint/config-conventional"]},"dependencies":{"path-key":"^3.1.0","shebang-command":"^2.0.0","which":"^2.0.1"},"description":"Cross platform child_process#spawn and child_process#spawnSync","devDependencies":{"@commitlint/cli":"^8.1.0","@commitlint/config-conventional":"^8.1.0","babel-core":"^6.26.3","babel-jest":"^24.9.0","babel-preset-moxy":"^3.1.0","eslint":"^5.16.0","eslint-config-moxy":"^7.1.0","husky":"^3.0.5","jest":"^24.9.0","lint-staged":"^9.2.5","mkdirp":"^0.5.1","rimraf":"^3.0.0","standard-version":"^7.0.0"},"engines":{"node":">= 8"},"files":["lib"],"homepage":"https://github.com/moxystudio/node-cross-spawn","husky":{"hooks":{"commit-msg":"commitlint -E HUSKY_GIT_PARAMS","pre-commit":"lint-staged"}},"keywords":["spawn","spawnSync","windows","cross-platform","path-ext","shebang","cmd","execute"],"license":"MIT","lint-staged":{"*.js":["eslint --fix","git add"]},"main":"index.js","name":"cross-spawn","repository":{"type":"git","url":"git+ssh://git@github.com/moxystudio/node-cross-spawn.git"},"scripts":{"lint":"eslint .","postrelease":"git push --follow-tags origin HEAD && npm publish","prerelease":"npm t && npm run lint","release":"standard-version","test":"jest --env node --coverage"},"version":"7.0.3"}');

/***/ }),

/***/ 60442:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["debug@4.3.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"debug@4.3.1","_id":"debug@4.3.1","_inBundle":false,"_integrity":"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==","_location":"/debug","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"debug@4.3.1","name":"debug","escapedName":"debug","rawSpec":"4.3.1","saveSpec":null,"fetchSpec":"4.3.1"},"_requiredBy":["/@eslint/eslintrc","/@kwsites/file-exists","/eslint"],"_resolved":"https://registry.npmjs.org/debug/-/debug-4.3.1.tgz","_spec":"4.3.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"browser":"./src/browser.js","bugs":{"url":"https://github.com/visionmedia/debug/issues"},"contributors":[{"name":"Nathan Rajlich","email":"nathan@tootallnate.net","url":"http://n8.io"},{"name":"Andrew Rhyne","email":"rhyneandrew@gmail.com"},{"name":"Josh Junon","email":"josh@junon.me"}],"dependencies":{"ms":"2.1.2"},"description":"small debugging utility","devDependencies":{"brfs":"^2.0.1","browserify":"^16.2.3","coveralls":"^3.0.2","istanbul":"^0.4.5","karma":"^3.1.4","karma-browserify":"^6.0.0","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","mocha":"^5.2.0","mocha-lcov-reporter":"^1.2.0","xo":"^0.23.0"},"engines":{"node":">=6.0"},"files":["src","LICENSE","README.md"],"homepage":"https://github.com/visionmedia/debug#readme","keywords":["debug","log","debugger"],"license":"MIT","main":"./src/index.js","name":"debug","peerDependenciesMeta":{"supports-color":{"optional":true}},"repository":{"type":"git","url":"git://github.com/visionmedia/debug.git"},"scripts":{"lint":"xo","test":"npm run test:node && npm run test:browser && npm run lint","test:browser":"karma start --single-run","test:coverage":"cat ./coverage/lcov.info | coveralls","test:node":"istanbul cover _mocha -- test.js"},"version":"4.3.1"}');

/***/ }),

/***/ 44730:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"map-obj@^1.0.0","_id":"map-obj@1.0.1","_inBundle":false,"_integrity":"sha1-2TPOuSBdgr3PSIb2dCvcK03qFG0=","_location":"/decamelize-keys/map-obj","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"map-obj@^1.0.0","name":"map-obj","escapedName":"map-obj","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/decamelize-keys"],"_resolved":"https://registry.npmjs.org/map-obj/-/map-obj-1.0.1.tgz","_shasum":"d933ceb9205d82bdcf4886f6742bdc2b4dea146d","_spec":"map-obj@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/decamelize-keys","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/map-obj/issues"},"bundleDependencies":false,"deprecated":false,"description":"Map object keys and values into a new object","devDependencies":{"ava":"0.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/map-obj#readme","keywords":["map","obj","object","key","keys","value","values","val","iterate","iterator"],"license":"MIT","name":"map-obj","repository":{"type":"git","url":"git+https://github.com/sindresorhus/map-obj.git"},"scripts":{"test":"node test.js"},"version":"1.0.1"}');

/***/ }),

/***/ 95017:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"decamelize-keys@^1.1.0","_id":"decamelize-keys@1.1.0","_inBundle":false,"_integrity":"sha1-0XGoeTMlKAfrPLYdwcFEXQeN8tk=","_location":"/decamelize-keys","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"decamelize-keys@^1.1.0","name":"decamelize-keys","escapedName":"decamelize-keys","rawSpec":"^1.1.0","saveSpec":null,"fetchSpec":"^1.1.0"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/decamelize-keys/-/decamelize-keys-1.1.0.tgz","_shasum":"d171a87933252807eb3cb61dc1c1445d078df2d9","_spec":"decamelize-keys@^1.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"http://sindresorhus.com"},"bugs":{"url":"https://github.com/dsblv/decamelize-keys/issues"},"bundleDependencies":false,"contributors":[{"name":"Dmirty Sobolev","email":"disobolev@icloud.com","url":"https://github.com/dsblv"}],"dependencies":{"decamelize":"^1.1.0","map-obj":"^1.0.0"},"deprecated":false,"description":"Convert object keys from camelCase to lowercase with a custom separator","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/dsblv/decamelize-keys#readme","keywords":["map","obj","object","key","keys","value","values","val","iterate","decamelize","decamelcase","lowercase","camelcase","camel-case","camel","case","dash","hyphen","dot","underscore","separator","string","text","convert"],"license":"MIT","name":"decamelize-keys","repository":{"type":"git","url":"git+https://github.com/dsblv/decamelize-keys.git"},"scripts":{"test":"xo && ava"},"version":"1.1.0"}');

/***/ }),

/***/ 35031:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"decamelize@^1.2.0","_id":"decamelize@1.2.0","_inBundle":false,"_integrity":"sha1-9lNNFRSCabIDUue+4m9QH5oZEpA=","_location":"/decamelize","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"decamelize@^1.2.0","name":"decamelize","escapedName":"decamelize","rawSpec":"^1.2.0","saveSpec":null,"fetchSpec":"^1.2.0"},"_requiredBy":["/yargs","/yargs-parser"],"_resolved":"https://registry.npmjs.org/decamelize/-/decamelize-1.2.0.tgz","_shasum":"f6534d15148269b20352e7bee26f501f9a191290","_spec":"decamelize@^1.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/decamelize/issues"},"bundleDependencies":false,"deprecated":false,"description":"Convert a camelized string into a lowercased one with a custom separator: unicornRainbow → unicorn_rainbow","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/decamelize#readme","keywords":["decamelize","decamelcase","camelcase","lowercase","case","dash","hyphen","string","str","text","convert"],"license":"MIT","name":"decamelize","repository":{"type":"git","url":"git+https://github.com/sindresorhus/decamelize.git"},"scripts":{"test":"xo && ava"},"version":"1.2.0"}');

/***/ }),

/***/ 73772:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"decode-uri-component@^0.2.0","_id":"decode-uri-component@0.2.0","_inBundle":false,"_integrity":"sha1-6zkTMzRYd1y4TNGh+uBiEGu4dUU=","_location":"/decode-uri-component","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"decode-uri-component@^0.2.0","name":"decode-uri-component","escapedName":"decode-uri-component","rawSpec":"^0.2.0","saveSpec":null,"fetchSpec":"^0.2.0"},"_requiredBy":["/source-map-resolve"],"_resolved":"https://registry.npmjs.org/decode-uri-component/-/decode-uri-component-0.2.0.tgz","_shasum":"eb3913333458775cb84cd1a1fae062106bb87545","_spec":"decode-uri-component@^0.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/source-map-resolve","author":{"name":"Sam Verschueren","email":"sam.verschueren@gmail.com","url":"github.com/SamVerschueren"},"bugs":{"url":"https://github.com/SamVerschueren/decode-uri-component/issues"},"bundleDependencies":false,"deprecated":false,"description":"A better decodeURIComponent","devDependencies":{"ava":"^0.17.0","coveralls":"^2.13.1","nyc":"^10.3.2","xo":"^0.16.0"},"engines":{"node":">=0.10"},"files":["index.js"],"homepage":"https://github.com/SamVerschueren/decode-uri-component#readme","keywords":["decode","uri","component","decodeuricomponent","components","decoder","url"],"license":"MIT","name":"decode-uri-component","repository":{"type":"git","url":"git+https://github.com/SamVerschueren/decode-uri-component.git"},"scripts":{"coveralls":"nyc report --reporter=text-lcov | coveralls","test":"xo && nyc ava"},"version":"0.2.0"}');

/***/ }),

/***/ 92748:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"mimic-response@^3.1.0","_id":"mimic-response@3.1.0","_inBundle":false,"_integrity":"sha512-z0yWI+4FDrrweS8Zmt4Ej5HdJmky15+L2e6Wgn3+iK5fWzb6T3fhNFq2+MeTRb064c6Wr4N/wv0DzQTjNzHNGQ==","_location":"/decompress-response/mimic-response","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"mimic-response@^3.1.0","name":"mimic-response","escapedName":"mimic-response","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/decompress-response"],"_resolved":"https://registry.npmjs.org/mimic-response/-/mimic-response-3.1.0.tgz","_shasum":"2d1d59af9c1b129815accc2c46a022a5ce1fa3c9","_spec":"mimic-response@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/decompress-response","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/mimic-response/issues"},"bundleDependencies":false,"deprecated":false,"description":"Mimic a Node.js HTTP response stream","devDependencies":{"@types/node":"^14.0.1","ava":"^2.4.0","create-test-server":"^2.4.0","p-event":"^4.1.0","pify":"^5.0.0","tsd":"^0.11.0","xo":"^0.30.0"},"engines":{"node":">=10"},"files":["index.d.ts","index.js"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/mimic-response#readme","keywords":["mimic","response","stream","http","https","request","get","core"],"license":"MIT","name":"mimic-response","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mimic-response.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.1.0"}');

/***/ }),

/***/ 25527:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"decompress-response@^6.0.0","_id":"decompress-response@6.0.0","_inBundle":false,"_integrity":"sha512-aW35yZM6Bb/4oJlZncMH2LCoZtJXTRxES17vE3hoRiowU2kWHaJKFkSBDnDR+cm9J+9QhXmREyIfv0pji9ejCQ==","_location":"/decompress-response","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"decompress-response@^6.0.0","name":"decompress-response","escapedName":"decompress-response","rawSpec":"^6.0.0","saveSpec":null,"fetchSpec":"^6.0.0"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/decompress-response/-/decompress-response-6.0.0.tgz","_shasum":"ca387612ddb7e104bd16d85aab00d5ecf09c66fc","_spec":"decompress-response@^6.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/decompress-response/issues"},"bundleDependencies":false,"dependencies":{"mimic-response":"^3.1.0"},"deprecated":false,"description":"Decompress a HTTP response if needed","devDependencies":{"@types/node":"^14.0.1","ava":"^2.2.0","get-stream":"^5.0.0","pify":"^5.0.0","tsd":"^0.11.0","xo":"^0.30.0"},"engines":{"node":">=10"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/decompress-response#readme","keywords":["decompress","response","http","https","zlib","gzip","zip","deflate","unzip","ungzip","incoming","message","stream","compressed","brotli"],"license":"MIT","name":"decompress-response","repository":{"type":"git","url":"git+https://github.com/sindresorhus/decompress-response.git"},"scripts":{"test":"xo && ava && tsd"},"version":"6.0.0","xo":{"rules":{"@typescript-eslint/prefer-readonly-parameter-types":"off"}}}');

/***/ }),

/***/ 40859:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"deep-is@^0.1.3","_id":"deep-is@0.1.4","_inBundle":false,"_integrity":"sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==","_location":"/deep-is","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"deep-is@^0.1.3","name":"deep-is","escapedName":"deep-is","rawSpec":"^0.1.3","saveSpec":null,"fetchSpec":"^0.1.3"},"_requiredBy":["/optionator"],"_resolved":"https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz","_shasum":"a6f2dce612fadd2ef1f519b73551f17e85199831","_spec":"deep-is@^0.1.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/optionator","author":{"name":"Thorsten Lorenz","email":"thlorenz@gmx.de","url":"http://thlorenz.com"},"bugs":{"url":"https://github.com/thlorenz/deep-is/issues"},"bundleDependencies":false,"deprecated":false,"description":"node\'s assert.deepEqual algorithm except for NaN being equal to NaN","devDependencies":{"tape":"~1.0.2"},"directories":{"lib":".","example":"example","test":"test"},"homepage":"https://github.com/thlorenz/deep-is#readme","keywords":["equality","equal","compare"],"license":"MIT","main":"index.js","name":"deep-is","repository":{"type":"git","url":"git+ssh://git@github.com/thlorenz/deep-is.git"},"scripts":{"test":"tape test/*.js"},"testling":{"files":"test/*.js","browsers":{"ie":[6,7,8,9],"ff":[3.5,10,15],"chrome":[10,22],"safari":[5.1],"opera":[12]}},"version":"0.1.4"}');

/***/ }),

/***/ 44055:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"defer-to-connect@^2.0.0","_id":"defer-to-connect@2.0.1","_inBundle":false,"_integrity":"sha512-4tvttepXG1VaYGrRibk5EwJd1t4udunSOVMdLSAL6mId1ix438oPwPZMALY41FCijukO1L0twNcGsdzS7dHgDg==","_location":"/defer-to-connect","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"defer-to-connect@^2.0.0","name":"defer-to-connect","escapedName":"defer-to-connect","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/@szmarczak/http-timer"],"_resolved":"https://registry.npmjs.org/defer-to-connect/-/defer-to-connect-2.0.1.tgz","_shasum":"8016bdb4143e4632b77a3449c6236277de520587","_spec":"defer-to-connect@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@szmarczak/http-timer","author":{"name":"Szymon Marczak"},"ava":{"typescript":{"rewritePaths":{"tests/":"dist/tests/"}}},"bugs":{"url":"https://github.com/szmarczak/defer-to-connect/issues"},"bundleDependencies":false,"deprecated":false,"description":"The safe way to handle the `connect` socket event","devDependencies":{"@ava/typescript":"^1.1.0","@sindresorhus/tsconfig":"^0.7.0","@types/node":"^13.5.0","@typescript-eslint/eslint-plugin":"^2.18.0","@typescript-eslint/parser":"^2.18.0","ava":"^3.2.0","coveralls":"^3.0.9","create-cert":"^1.0.6","del-cli":"^3.0.0","eslint-config-xo-typescript":"^0.24.1","nyc":"^15.0.0","p-event":"^4.1.0","typescript":"^3.7.5","xo":"^0.25.3"},"engines":{"node":">=10"},"files":["dist/source"],"homepage":"https://github.com/szmarczak/defer-to-connect#readme","keywords":["socket","connect","event"],"license":"MIT","main":"dist/source","name":"defer-to-connect","nyc":{"include":["dist/source"],"extension":[".ts"]},"repository":{"type":"git","url":"git+https://github.com/szmarczak/defer-to-connect.git"},"scripts":{"build":"del-cli dist && tsc","coveralls":"nyc report --reporter=text-lcov | coveralls","prepare":"npm run build","test":"xo && tsc --noEmit && nyc ava"},"types":"dist/source/index.d.ts","version":"2.0.1","xo":{"extends":"xo-typescript","extensions":["ts"]}}');

/***/ }),

/***/ 45558:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-accessor-descriptor@^1.0.0","_id":"is-accessor-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==","_location":"/define-property/is-accessor-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-accessor-descriptor@^1.0.0","name":"is-accessor-descriptor","escapedName":"is-accessor-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/define-property/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz","_shasum":"169c2f6d3df1f992618072365c9b0ea1f6878656","_spec":"is-accessor-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/define-property/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-accessor-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-accessor-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-accessor-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-accessor-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","is-plain-object","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 95206:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-data-descriptor@^1.0.0","_id":"is-data-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==","_location":"/define-property/is-data-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-data-descriptor@^1.0.0","name":"is-data-descriptor","escapedName":"is-data-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/define-property/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz","_shasum":"d84876321d0e7add03990406abbbbd36ba9268c7","_spec":"is-data-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/define-property/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-data-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript data descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-data-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-data-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-data-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 34737:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-descriptor@^1.0.2","_id":"is-descriptor@1.0.2","_inBundle":false,"_integrity":"sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==","_location":"/define-property/is-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-descriptor@^1.0.2","name":"is-descriptor","escapedName":"is-descriptor","rawSpec":"^1.0.2","saveSpec":null,"fetchSpec":"^1.0.2"},"_requiredBy":["/define-property"],"_resolved":"https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz","_shasum":"3b159746a66604b04f8c81524ba365c5f14d86ec","_spec":"is-descriptor@^1.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/define-property","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"is-accessor-descriptor":"^1.0.0","is-data-descriptor":"^1.0.0","kind-of":"^6.0.2"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"plugins":["gulp-format-md"],"toc":false,"layout":"default","tasks":["readme"],"lint":{"reflinks":true}},"version":"1.0.2"}');

/***/ }),

/***/ 74203:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^2.0.2","_id":"define-property@2.0.2","_inBundle":false,"_integrity":"sha512-jwK2UV4cnPpbcG7+VRARKTZPUWowwXA8bzH5NP6ud0oeAxyYPuGZUAC7hMugpCdz4BeSZl2Dl9k66CHJ/46ZYQ==","_location":"/define-property","_phantomChildren":{"kind-of":"6.0.3"},"_requested":{"type":"range","registry":true,"raw":"define-property@^2.0.2","name":"define-property","escapedName":"define-property","rawSpec":"^2.0.2","saveSpec":null,"fetchSpec":"^2.0.2"},"_requiredBy":["/cpy/micromatch","/nanomatch","/to-regex"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-2.0.2.tgz","_shasum":"d459689e8d654ba77e02a817f8710d702cb16e9d","_spec":"define-property@^2.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"is-descriptor":"^1.0.2","isobject":"^3.0.1"},"deprecated":false,"description":"Define a non-enumerable property on an object. Uses Reflect.defineProperty when available, otherwise Object.defineProperty.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["assign-deep","extend-shallow","merge-deep","mixin-deep"]},"lint":{"reflinks":true}},"version":"2.0.2"}');

/***/ }),

/***/ 54923:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"dir-glob@^2.2.2","_id":"dir-glob@2.2.2","_inBundle":false,"_integrity":"sha512-f9LBi5QWzIW3I6e//uxZoLBlUt9kcp66qo0sSCxL6YZKc75R1c4MFCoe/LaZiBGmgujvQdxc5Bn3QhfyvK5Hsw==","_location":"/dir-glob","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"dir-glob@^2.2.2","name":"dir-glob","escapedName":"dir-glob","rawSpec":"^2.2.2","saveSpec":null,"fetchSpec":"^2.2.2"},"_requiredBy":["/cpy/globby"],"_resolved":"https://registry.npmjs.org/dir-glob/-/dir-glob-2.2.2.tgz","_shasum":"fa09f0694153c8918b18ba0deafae94769fc50c4","_spec":"dir-glob@^2.2.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/globby","author":{"name":"Kevin Mårtensson","email":"kevinmartensson@gmail.com","url":"github.com/kevva"},"bugs":{"url":"https://github.com/kevva/dir-glob/issues"},"bundleDependencies":false,"dependencies":{"path-type":"^3.0.0"},"deprecated":false,"description":"Convert directories to glob compatible strings","devDependencies":{"ava":"^0.25.0","del":"^3.0.0","make-dir":"^1.0.0","rimraf":"^2.5.0","xo":"^0.20.3"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/kevva/dir-glob#readme","keywords":["convert","directory","extensions","files","glob"],"license":"MIT","name":"dir-glob","repository":{"type":"git","url":"git+https://github.com/kevva/dir-glob.git"},"scripts":{"test":"xo && ava"},"version":"2.2.2"}');

/***/ }),

/***/ 9516:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["doctrine@3.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"doctrine@3.0.0","_id":"doctrine@3.0.0","_inBundle":false,"_integrity":"sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==","_location":"/doctrine","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"doctrine@3.0.0","name":"doctrine","escapedName":"doctrine","rawSpec":"3.0.0","saveSpec":null,"fetchSpec":"3.0.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz","_spec":"3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/eslint/doctrine/issues"},"dependencies":{"esutils":"^2.0.2"},"description":"JSDoc parser","devDependencies":{"coveralls":"^3.0.1","dateformat":"^1.0.11","eslint":"^1.10.3","eslint-release":"^1.0.0","linefix":"^0.1.1","mocha":"^3.4.2","npm-license":"^0.3.1","nyc":"^10.3.2","semver":"^5.0.3","shelljs":"^0.5.3","shelljs-nodecli":"^0.1.1","should":"^5.0.1"},"directories":{"lib":"./lib"},"engines":{"node":">=6.0.0"},"files":["lib"],"homepage":"https://github.com/eslint/doctrine","license":"Apache-2.0","main":"lib/doctrine.js","maintainers":[{"name":"Nicholas C. Zakas","email":"nicholas+npm@nczconsulting.com","url":"https://www.nczonline.net"},{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"https://github.com/Constellation"}],"name":"doctrine","repository":{"type":"git","url":"git+https://github.com/eslint/doctrine.git"},"scripts":{"coveralls":"nyc report --reporter=text-lcov | coveralls","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","generate-release":"eslint-generate-release","lint":"eslint lib/","pretest":"npm run lint","publish-release":"eslint-publish-release","test":"nyc mocha"},"version":"3.0.0"}');

/***/ }),

/***/ 54937:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"email-addresses@^3.0.1","_id":"email-addresses@3.1.0","_inBundle":false,"_integrity":"sha512-k0/r7GrWVL32kZlGwfPNgB2Y/mMXVTq/decgLczm/j34whdaspNrZO8CnXPf1laaHxI6ptUlsnAxN+UAPw+fzg==","_location":"/email-addresses","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"email-addresses@^3.0.1","name":"email-addresses","escapedName":"email-addresses","rawSpec":"^3.0.1","saveSpec":null,"fetchSpec":"^3.0.1"},"_requiredBy":["/gh-pages"],"_resolved":"https://registry.npmjs.org/email-addresses/-/email-addresses-3.1.0.tgz","_shasum":"cabf7e085cbdb63008a70319a74e6136188812fb","_spec":"email-addresses@^3.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/gh-pages","author":{"name":"Jack Bearheart","email":"johnrbowman@fastmail.fm"},"bugs":{"url":"https://github.com/jackbearheart/email-addresses/issues"},"bundleDependencies":false,"deprecated":false,"description":"An email address parser based on rfc5322","devDependencies":{"libxmljs":"~0.19.7","tap":"^14.8.2"},"directories":{"lib":"./lib"},"homepage":"https://github.com/jackbearheart/email-addresses","keywords":["email address","parser","rfc5322","5322"],"license":"MIT","main":"./lib/email-addresses.js","name":"email-addresses","repository":{"type":"git","url":"git+https://github.com/jackbearheart/email-addresses.git"},"scripts":{"test":"tap ./test"},"typings":"./lib/email-addresses.d.ts","version":"3.1.0"}');

/***/ }),

/***/ 59874:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["emoji-regex@8.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"emoji-regex@8.0.0","_id":"emoji-regex@8.0.0","_inBundle":false,"_integrity":"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==","_location":"/emoji-regex","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"emoji-regex@8.0.0","name":"emoji-regex","escapedName":"emoji-regex","rawSpec":"8.0.0","saveSpec":null,"fetchSpec":"8.0.0"},"_requiredBy":["/string-width"],"_resolved":"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz","_spec":"8.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"bugs":{"url":"https://github.com/mathiasbynens/emoji-regex/issues"},"description":"A regular expression to match all Emoji-only symbols as per the Unicode Standard.","devDependencies":{"@babel/cli":"^7.2.3","@babel/core":"^7.3.4","@babel/plugin-proposal-unicode-property-regex":"^7.2.0","@babel/preset-env":"^7.3.4","mocha":"^6.0.2","regexgen":"^1.3.0","unicode-12.0.0":"^0.7.9"},"files":["LICENSE-MIT.txt","index.js","index.d.ts","text.js","es2015/index.js","es2015/text.js"],"homepage":"https://mths.be/emoji-regex","keywords":["unicode","regex","regexp","regular expressions","code points","symbols","characters","emoji"],"license":"MIT","main":"index.js","name":"emoji-regex","repository":{"type":"git","url":"git+https://github.com/mathiasbynens/emoji-regex.git"},"scripts":{"build":"rm -rf -- es2015; babel src -d .; NODE_ENV=es2015 babel src -d ./es2015; node script/inject-sequences.js","test":"mocha","test:watch":"npm run test -- --watch"},"types":"index.d.ts","version":"8.0.0"}');

/***/ }),

/***/ 39423:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"end-of-stream@^1.1.0","_id":"end-of-stream@1.4.4","_inBundle":false,"_integrity":"sha512-+uw1inIHVPQoaVuHzRyXd21icM+cnt4CzD5rW+NC1wjOUSTOs+Te7FOv7AhN7vS9x/oIyhLP5PR1H+phQAHu5Q==","_location":"/end-of-stream","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"end-of-stream@^1.1.0","name":"end-of-stream","escapedName":"end-of-stream","rawSpec":"^1.1.0","saveSpec":null,"fetchSpec":"^1.1.0"},"_requiredBy":["/pump"],"_resolved":"https://registry.npmjs.org/end-of-stream/-/end-of-stream-1.4.4.tgz","_shasum":"5ae64a5f45057baf3626ec14da0ca5e4b2431eb0","_spec":"end-of-stream@^1.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/pump","author":{"name":"Mathias Buus","email":"mathiasbuus@gmail.com"},"bugs":{"url":"https://github.com/mafintosh/end-of-stream/issues"},"bundleDependencies":false,"dependencies":{"once":"^1.4.0"},"deprecated":false,"description":"Call a callback when a readable/writable/duplex stream has completed or failed.","devDependencies":{"tape":"^4.11.0"},"files":["index.js"],"homepage":"https://github.com/mafintosh/end-of-stream","keywords":["stream","streams","callback","finish","close","end","wait"],"license":"MIT","main":"index.js","name":"end-of-stream","repository":{"type":"git","url":"git://github.com/mafintosh/end-of-stream.git"},"scripts":{"test":"node test.js"},"version":"1.4.4"}');

/***/ }),

/***/ 27225:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["enquirer@2.3.6","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"enquirer@2.3.6","_id":"enquirer@2.3.6","_inBundle":false,"_integrity":"sha512-yjNnPr315/FjS4zIsUxYguYUPP2e1NK4d7E7ZOLiyYCcbFBiTMyID+2wvm2w6+pZ/odMA7cRkjhsPbltwBOrLg==","_location":"/enquirer","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"enquirer@2.3.6","name":"enquirer","escapedName":"enquirer","rawSpec":"2.3.6","saveSpec":null,"fetchSpec":"2.3.6"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/enquirer/-/enquirer-2.3.6.tgz","_spec":"2.3.6","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/enquirer/enquirer/issues"},"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"ansi-colors":"^4.1.1"},"description":"Stylish, intuitive and user-friendly prompt system. Fast and lightweight enough for small projects, powerful and extensible enough for the most advanced use cases.","devDependencies":{"@types/node":"^8","gulp-format-md":"^2.0.0","inquirer":"^6.2.0","mocha":"^5.2.0","nyc":"^13.1.0","prompts":"^1.2.1","time-require":"github:jonschlinkert/time-require","typescript":"^3.1.6"},"engines":{"node":">=8.6"},"files":["index.js","index.d.ts","lib"],"homepage":"https://github.com/enquirer/enquirer","keywords":["answer","answers","ask","base","cli","command","command-line","confirm","enquirer","generator","generate","hyper","input","inquire","inquirer","interface","iterm","javascript","node","nodejs","prompt","prompts","promptly","question","readline","scaffold","scaffolding","scaffolder","stdin","stdout","terminal","tty","ui","yeoman","yo","zsh"],"license":"MIT","lintDeps":{"devDependencies":{"files":{"patterns":["examples/**/*.js","perf/*.js","recipes/*.js"]}}},"main":"index.js","name":"enquirer","repository":{"type":"git","url":"git+https://github.com/enquirer/enquirer.git"},"scripts":{"cover":"nyc --reporter=text --reporter=html mocha","test":"mocha && tsc -p ./test/types"},"verb":{"toc":false,"layout":false,"tasks":["readme"],"plugins":["gulp-format-md"],"helpers":["./docs/helpers.js"],"lint":{"reflinks":true},"reflinks":["inquirer","prompt-skeleton"]},"version":"2.3.6"}');

/***/ }),

/***/ 20802:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"error-ex@^1.3.1","_id":"error-ex@1.3.2","_inBundle":false,"_integrity":"sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==","_location":"/error-ex","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"error-ex@^1.3.1","name":"error-ex","escapedName":"error-ex","rawSpec":"^1.3.1","saveSpec":null,"fetchSpec":"^1.3.1"},"_requiredBy":["/parse-json"],"_resolved":"https://registry.npmjs.org/error-ex/-/error-ex-1.3.2.tgz","_shasum":"b4ac40648107fdcdcfae242f428bea8a14d4f1bf","_spec":"error-ex@^1.3.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/parse-json","bugs":{"url":"https://github.com/qix-/node-error-ex/issues"},"bundleDependencies":false,"dependencies":{"is-arrayish":"^0.2.1"},"deprecated":false,"description":"Easy error subclassing and stack customization","devDependencies":{"coffee-script":"^1.9.3","coveralls":"^2.11.2","istanbul":"^0.3.17","mocha":"^2.2.5","should":"^7.0.1","xo":"^0.7.1"},"files":["index.js"],"homepage":"https://github.com/qix-/node-error-ex#readme","keywords":["error","errors","extend","extending","extension","subclass","stack","custom"],"license":"MIT","maintainers":[{"name":"Josh Junon","email":"i.am.qix@gmail.com","url":"github.com/qix-"},{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"}],"name":"error-ex","repository":{"type":"git","url":"git+https://github.com/qix-/node-error-ex.git"},"scripts":{"pretest":"xo","test":"mocha --compilers coffee:coffee-script/register"},"version":"1.3.2","xo":{"rules":{"operator-linebreak":[0]}}}');

/***/ }),

/***/ 86838:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["escape-string-regexp@1.0.5","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"escape-string-regexp@1.0.5","_id":"escape-string-regexp@1.0.5","_inBundle":false,"_integrity":"sha1-G2HAViGQqN/2rjuyzwIAyhMLhtQ=","_location":"/escape-string-regexp","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"escape-string-regexp@1.0.5","name":"escape-string-regexp","escapedName":"escape-string-regexp","rawSpec":"1.0.5","saveSpec":null,"fetchSpec":"1.0.5"},"_requiredBy":["/@babel/highlight/chalk","/replace/chalk"],"_resolved":"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz","_spec":"1.0.5","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/escape-string-regexp/issues"},"description":"Escape RegExp special characters","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=0.8.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/escape-string-regexp#readme","keywords":["escape","regex","regexp","re","regular","expression","string","str","special","characters"],"license":"MIT","maintainers":[{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},{"name":"Joshua Boy Nicolai Appelman","email":"joshua@jbna.nl","url":"jbna.nl"}],"name":"escape-string-regexp","repository":{"type":"git","url":"git+https://github.com/sindresorhus/escape-string-regexp.git"},"scripts":{"test":"xo && ava"},"version":"1.0.5"}');

/***/ }),

/***/ 42245:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["eslint-scope@5.1.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"eslint-scope@5.1.1","_id":"eslint-scope@5.1.1","_inBundle":false,"_integrity":"sha512-2NxwbF/hZ0KpepYN0cNbo+FN6XoK7GaHlQhgx/hIZl6Va0bF45RQOOwhLIy8lQDbuCiadSLCBnH2CFYquit5bw==","_location":"/eslint-scope","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"eslint-scope@5.1.1","name":"eslint-scope","escapedName":"eslint-scope","rawSpec":"5.1.1","saveSpec":null,"fetchSpec":"5.1.1"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/eslint-scope/-/eslint-scope-5.1.1.tgz","_spec":"5.1.1","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/eslint/eslint-scope/issues"},"dependencies":{"esrecurse":"^4.3.0","estraverse":"^4.1.1"},"description":"ECMAScript scope analyzer for ESLint","devDependencies":{"@typescript-eslint/parser":"^1.11.0","chai":"^4.2.0","eslint":"^6.0.1","eslint-config-eslint":"^5.0.1","eslint-plugin-node":"^9.1.0","eslint-release":"^1.0.0","eslint-visitor-keys":"^1.2.0","espree":"^7.1.0","istanbul":"^0.4.5","mocha":"^6.1.4","npm-license":"^0.3.3","shelljs":"^0.8.3","typescript":"^3.5.2"},"engines":{"node":">=8.0.0"},"files":["LICENSE","README.md","lib"],"homepage":"http://github.com/eslint/eslint-scope","license":"BSD-2-Clause","main":"lib/index.js","name":"eslint-scope","repository":{"type":"git","url":"git+https://github.com/eslint/eslint-scope.git"},"scripts":{"generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","generate-release":"eslint-generate-release","lint":"node Makefile.js lint","publish-release":"eslint-publish-release","test":"node Makefile.js test"},"version":"5.1.1"}');

/***/ }),

/***/ 22583:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["eslint-visitor-keys@1.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"eslint-visitor-keys@1.3.0","_id":"eslint-visitor-keys@1.3.0","_inBundle":false,"_integrity":"sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==","_location":"/eslint-utils/eslint-visitor-keys","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"eslint-visitor-keys@1.3.0","name":"eslint-visitor-keys","escapedName":"eslint-visitor-keys","rawSpec":"1.3.0","saveSpec":null,"fetchSpec":"1.3.0"},"_requiredBy":["/eslint-utils"],"_resolved":"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz","_spec":"1.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"bugs":{"url":"https://github.com/eslint/eslint-visitor-keys/issues"},"dependencies":{},"description":"Constants and utilities about visitor keys to traverse AST.","devDependencies":{"eslint":"^4.7.2","eslint-config-eslint":"^4.0.0","eslint-release":"^1.0.0","mocha":"^3.5.3","nyc":"^11.2.1","opener":"^1.4.3"},"engines":{"node":">=4"},"files":["lib"],"homepage":"https://github.com/eslint/eslint-visitor-keys#readme","keywords":[],"license":"Apache-2.0","main":"lib/index.js","name":"eslint-visitor-keys","repository":{"type":"git","url":"git+https://github.com/eslint/eslint-visitor-keys.git"},"scripts":{"coverage":"nyc report --reporter lcov && opener coverage/lcov-report/index.html","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","generate-release":"eslint-generate-release","lint":"eslint lib tests/lib","pretest":"npm run -s lint","publish-release":"eslint-publish-release","test":"nyc mocha tests/lib"},"version":"1.3.0"}');

/***/ }),

/***/ 45002:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["eslint-utils@2.1.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"eslint-utils@2.1.0","_id":"eslint-utils@2.1.0","_inBundle":false,"_integrity":"sha512-w94dQYoauyvlDc43XnGB8lU3Zt713vNChgt4EWwhXAP2XkBvndfxF0AgIqKOOasjPIPzj9JqgwkwbCYD0/V3Zg==","_location":"/eslint-utils","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"eslint-utils@2.1.0","name":"eslint-utils","escapedName":"eslint-utils","rawSpec":"2.1.0","saveSpec":null,"fetchSpec":"2.1.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/eslint-utils/-/eslint-utils-2.1.0.tgz","_spec":"2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Toru Nagashima"},"bugs":{"url":"https://github.com/mysticatea/eslint-utils/issues"},"dependencies":{"eslint-visitor-keys":"^1.1.0"},"description":"Utilities for ESLint plugins.","devDependencies":{"@mysticatea/eslint-plugin":"^12.0.0","codecov":"^3.6.1","dot-prop":"^4.2.0","eslint":"^6.5.1","esm":"^3.2.25","espree":"^6.1.1","mocha":"^6.2.2","npm-run-all":"^4.1.5","nyc":"^14.1.1","opener":"^1.5.1","rimraf":"^3.0.0","rollup":"^1.25.0","rollup-plugin-sourcemaps":"^0.4.2","semver":"^7.3.2","vuepress":"^1.2.0","warun":"^1.0.0"},"engines":{"node":">=6"},"files":["index.*"],"funding":"https://github.com/sponsors/mysticatea","homepage":"https://github.com/mysticatea/eslint-utils#readme","keywords":["eslint"],"license":"MIT","main":"index","module":"index.mjs","name":"eslint-utils","repository":{"type":"git","url":"git+https://github.com/mysticatea/eslint-utils.git"},"scripts":{"build":"rollup -c","clean":"rimraf .nyc_output coverage index.*","codecov":"nyc report -r lcovonly && codecov","coverage":"opener ./coverage/lcov-report/index.html","docs:build":"vuepress build docs","docs:watch":"vuepress dev docs","lint":"eslint src test","postversion":"git push && git push --tags","prebuild":"npm run -s clean","preversion":"npm test && npm run -s build","prewatch":"npm run -s clean","test":"run-s lint build test:mocha","test:mocha":"nyc mocha --reporter dot \\"test/*.js\\"","watch":"warun \\"{src,test}/**/*.js\\" -- npm run -s test:mocha"},"sideEffects":false,"version":"2.1.0"}');

/***/ }),

/***/ 97491:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"eslint-visitor-keys@^2.0.0","_id":"eslint-visitor-keys@2.1.0","_inBundle":false,"_integrity":"sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==","_location":"/eslint-visitor-keys","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"eslint-visitor-keys@^2.0.0","name":"eslint-visitor-keys","escapedName":"eslint-visitor-keys","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-2.1.0.tgz","_shasum":"f65328259305927392c938ed44eb0a5c9b2bd303","_spec":"eslint-visitor-keys@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"bugs":{"url":"https://github.com/eslint/eslint-visitor-keys/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Constants and utilities about visitor keys to traverse AST.","devDependencies":{"eslint":"^4.7.2","eslint-config-eslint":"^4.0.0","eslint-release":"^1.0.0","mocha":"^3.5.3","nyc":"^11.2.1","opener":"^1.4.3"},"engines":{"node":">=10"},"files":["lib"],"homepage":"https://github.com/eslint/eslint-visitor-keys#readme","keywords":[],"license":"Apache-2.0","main":"lib/index.js","name":"eslint-visitor-keys","repository":{"type":"git","url":"git+https://github.com/eslint/eslint-visitor-keys.git"},"scripts":{"coverage":"nyc report --reporter lcov && opener coverage/lcov-report/index.html","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","generate-release":"eslint-generate-release","lint":"eslint lib tests/lib","publish-release":"eslint-publish-release","test":"nyc mocha tests/lib"},"version":"2.1.0"}');

/***/ }),

/***/ 34693:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"escape-string-regexp@^4.0.0","_id":"escape-string-regexp@4.0.0","_inBundle":false,"_integrity":"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==","_location":"/eslint/escape-string-regexp","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"escape-string-regexp@^4.0.0","name":"escape-string-regexp","escapedName":"escape-string-regexp","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz","_shasum":"14ba83a5d373e3d311e5afca29cf5bfad965bf34","_spec":"escape-string-regexp@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/escape-string-regexp/issues"},"bundleDependencies":false,"deprecated":false,"description":"Escape RegExp special characters","devDependencies":{"ava":"^1.4.1","tsd":"^0.11.0","xo":"^0.28.3"},"engines":{"node":">=10"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/escape-string-regexp#readme","keywords":["escape","regex","regexp","regular","expression","string","special","characters"],"license":"MIT","name":"escape-string-regexp","repository":{"type":"git","url":"git+https://github.com/sindresorhus/escape-string-regexp.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.0.0"}');

/***/ }),

/***/ 53269:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"eslint@7.32.0","_id":"eslint@7.32.0","_inBundle":false,"_integrity":"sha512-VHZ8gX+EDfz+97jGcgyGCyRia/dPOd6Xh9yPv8Bl1+SoaIwD+a/vlrOmGRUyOYu7MwUhc7CxqeaDZU13S4+EpA==","_location":"/eslint","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"eslint@7.32.0","name":"eslint","escapedName":"eslint","rawSpec":"7.32.0","saveSpec":null,"fetchSpec":"7.32.0"},"_requiredBy":["#DEV:/","#USER"],"_resolved":"https://registry.npmjs.org/eslint/-/eslint-7.32.0.tgz","_shasum":"c6d328a14be3fb08c8d1d21e12c02fdb7a2a812d","_spec":"eslint@7.32.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Nicholas C. Zakas","email":"nicholas+npm@nczconsulting.com"},"bin":{"eslint":"bin/eslint.js"},"bugs":{"url":"https://github.com/eslint/eslint/issues/"},"bundleDependencies":false,"dependencies":{"@babel/code-frame":"7.12.11","@eslint/eslintrc":"^0.4.3","@humanwhocodes/config-array":"^0.5.0","ajv":"^6.10.0","chalk":"^4.0.0","cross-spawn":"^7.0.2","debug":"^4.0.1","doctrine":"^3.0.0","enquirer":"^2.3.5","escape-string-regexp":"^4.0.0","eslint-scope":"^5.1.1","eslint-utils":"^2.1.0","eslint-visitor-keys":"^2.0.0","espree":"^7.3.1","esquery":"^1.4.0","esutils":"^2.0.2","fast-deep-equal":"^3.1.3","file-entry-cache":"^6.0.1","functional-red-black-tree":"^1.0.1","glob-parent":"^5.1.2","globals":"^13.6.0","ignore":"^4.0.6","import-fresh":"^3.0.0","imurmurhash":"^0.1.4","is-glob":"^4.0.0","js-yaml":"^3.13.1","json-stable-stringify-without-jsonify":"^1.0.1","levn":"^0.4.1","lodash.merge":"^4.6.2","minimatch":"^3.0.4","natural-compare":"^1.4.0","optionator":"^0.9.1","progress":"^2.0.0","regexpp":"^3.1.0","semver":"^7.2.1","strip-ansi":"^6.0.0","strip-json-comments":"^3.1.0","table":"^6.0.9","text-table":"^0.2.0","v8-compile-cache":"^2.0.3"},"deprecated":false,"description":"An AST-based pattern checker for JavaScript.","devDependencies":{"@babel/core":"^7.4.3","@babel/preset-env":"^7.4.3","babel-loader":"^8.0.5","chai":"^4.0.1","cheerio":"^0.22.0","common-tags":"^1.8.0","core-js":"^3.1.3","dateformat":"^3.0.3","ejs":"^3.0.2","eslint":"file:.","eslint-config-eslint":"file:packages/eslint-config-eslint","eslint-plugin-eslint-plugin":"^3.5.3","eslint-plugin-internal-rules":"file:tools/internal-rules","eslint-plugin-jsdoc":"^25.4.3","eslint-plugin-node":"^11.1.0","eslint-release":"^2.0.0","eslump":"^3.0.0","esprima":"^4.0.1","fs-teardown":"0.1.1","glob":"^7.1.6","jsdoc":"^3.5.5","karma":"^6.1.1","karma-chrome-launcher":"^3.1.0","karma-mocha":"^2.0.1","karma-mocha-reporter":"^2.2.5","karma-webpack":"^5.0.0","lint-staged":"^10.1.2","load-perf":"^0.2.0","markdownlint":"^0.19.0","markdownlint-cli":"^0.22.0","memfs":"^3.0.1","mocha":"^8.3.2","mocha-junit-reporter":"^2.0.0","node-polyfill-webpack-plugin":"^1.0.3","npm-license":"^0.3.3","nyc":"^15.0.1","proxyquire":"^2.0.1","puppeteer":"^7.1.0","recast":"^0.19.0","regenerator-runtime":"^0.13.2","shelljs":"^0.8.2","sinon":"^9.0.1","temp":"^0.9.0","webpack":"^5.23.0","webpack-cli":"^4.5.0","yorkie":"^2.0.0"},"engines":{"node":"^10.12.0 || >=12.0.0"},"files":["LICENSE","README.md","bin","conf","lib","messages"],"funding":"https://opencollective.com/eslint","gitHooks":{"pre-commit":"lint-staged"},"homepage":"https://eslint.org","keywords":["ast","lint","javascript","ecmascript","espree"],"license":"MIT","lint-staged":{"*.js":"eslint --fix","*.md":"markdownlint"},"main":"./lib/api.js","name":"eslint","repository":{"type":"git","url":"git+https://github.com/eslint/eslint.git"},"scripts":{"docs":"node Makefile.js docs","fix":"node Makefile.js lint -- fix","fuzz":"node Makefile.js fuzz","generate-alpharelease":"node Makefile.js generatePrerelease -- alpha","generate-betarelease":"node Makefile.js generatePrerelease -- beta","generate-rcrelease":"node Makefile.js generatePrerelease -- rc","generate-release":"node Makefile.js generateRelease","gensite":"node Makefile.js gensite","lint":"node Makefile.js lint","perf":"node Makefile.js perf","publish-release":"node Makefile.js publishRelease","test":"node Makefile.js test","test:cli":"mocha","webpack":"node Makefile.js webpack"},"version":"7.32.0"}');

/***/ }),

/***/ 85633:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["eslint-visitor-keys@1.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"eslint-visitor-keys@1.3.0","_id":"eslint-visitor-keys@1.3.0","_inBundle":false,"_integrity":"sha512-6J72N8UNa462wa/KFODt/PJ3IU60SDpC3QXC1Hjc1BXXpfL2C9R5+AU7jhe0F6GREqVMh4Juu+NY7xn+6dipUQ==","_location":"/espree/eslint-visitor-keys","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"eslint-visitor-keys@1.3.0","name":"eslint-visitor-keys","escapedName":"eslint-visitor-keys","rawSpec":"1.3.0","saveSpec":null,"fetchSpec":"1.3.0"},"_requiredBy":["/espree"],"_resolved":"https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-1.3.0.tgz","_spec":"1.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"bugs":{"url":"https://github.com/eslint/eslint-visitor-keys/issues"},"dependencies":{},"description":"Constants and utilities about visitor keys to traverse AST.","devDependencies":{"eslint":"^4.7.2","eslint-config-eslint":"^4.0.0","eslint-release":"^1.0.0","mocha":"^3.5.3","nyc":"^11.2.1","opener":"^1.4.3"},"engines":{"node":">=4"},"files":["lib"],"homepage":"https://github.com/eslint/eslint-visitor-keys#readme","keywords":[],"license":"Apache-2.0","main":"lib/index.js","name":"eslint-visitor-keys","repository":{"type":"git","url":"git+https://github.com/eslint/eslint-visitor-keys.git"},"scripts":{"coverage":"nyc report --reporter lcov && opener coverage/lcov-report/index.html","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","generate-release":"eslint-generate-release","lint":"eslint lib tests/lib","pretest":"npm run -s lint","publish-release":"eslint-publish-release","test":"nyc mocha tests/lib"},"version":"1.3.0"}');

/***/ }),

/***/ 72598:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["espree@7.3.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"espree@7.3.1","_id":"espree@7.3.1","_inBundle":false,"_integrity":"sha512-v3JCNCE64umkFpmkFGqzVKsOT0tN1Zr+ueqLZfpV1Ob8e+CEgPWa+OxCoGH3tnhimMKIaBm4m/vaRpJ/krRz2g==","_location":"/espree","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"espree@7.3.1","name":"espree","escapedName":"espree","rawSpec":"7.3.1","saveSpec":null,"fetchSpec":"7.3.1"},"_requiredBy":["/@eslint/eslintrc","/eslint"],"_resolved":"https://registry.npmjs.org/espree/-/espree-7.3.1.tgz","_spec":"7.3.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Nicholas C. Zakas","email":"nicholas+npm@nczconsulting.com"},"bugs":{"url":"http://github.com/eslint/espree.git"},"dependencies":{"acorn":"^7.4.0","acorn-jsx":"^5.3.1","eslint-visitor-keys":"^1.3.0"},"description":"An Esprima-compatible JavaScript parser built on Acorn","devDependencies":{"browserify":"^16.5.0","chai":"^4.2.0","eslint":"^6.0.1","eslint-config-eslint":"^5.0.1","eslint-plugin-node":"^9.1.0","eslint-release":"^1.0.0","esprima":"latest","esprima-fb":"^8001.2001.0-dev-harmony-fb","json-diff":"^0.5.4","leche":"^2.3.0","mocha":"^6.2.0","nyc":"^14.1.1","regenerate":"^1.4.0","shelljs":"^0.3.0","shelljs-nodecli":"^0.1.1","unicode-6.3.0":"^0.7.5"},"engines":{"node":"^10.12.0 || >=12.0.0"},"files":["lib","espree.js"],"homepage":"https://github.com/eslint/espree","keywords":["ast","ecmascript","javascript","parser","syntax","acorn"],"license":"BSD-2-Clause","main":"espree.js","name":"espree","repository":{"type":"git","url":"git+https://github.com/eslint/espree.git"},"scripts":{"browserify":"node Makefile.js browserify","fixlint":"node Makefile.js lint --fix","generate-alpharelease":"eslint-generate-prerelease alpha","generate-betarelease":"eslint-generate-prerelease beta","generate-rcrelease":"eslint-generate-prerelease rc","generate-regex":"node tools/generate-identifier-regex.js","generate-release":"eslint-generate-release","lint":"node Makefile.js lint","publish-release":"eslint-publish-release","sync-docs":"node Makefile.js docs","test":"npm run-script lint && node Makefile.js test"},"version":"7.3.1"}');

/***/ }),

/***/ 70126:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["esprima@4.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"esprima@4.0.1","_id":"esprima@4.0.1","_inBundle":false,"_integrity":"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==","_location":"/esprima","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"esprima@4.0.1","name":"esprima","escapedName":"esprima","rawSpec":"4.0.1","saveSpec":null,"fetchSpec":"4.0.1"},"_requiredBy":["/js-yaml"],"_resolved":"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz","_spec":"4.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Ariya Hidayat","email":"ariya.hidayat@gmail.com"},"bin":{"esparse":"bin/esparse.js","esvalidate":"bin/esvalidate.js"},"bugs":{"url":"https://github.com/jquery/esprima/issues"},"description":"ECMAScript parsing infrastructure for multipurpose analysis","devDependencies":{"codecov.io":"~0.1.6","escomplex-js":"1.2.0","everything.js":"~1.0.3","glob":"~7.1.0","istanbul":"~0.4.0","json-diff":"~0.3.1","karma":"~1.3.0","karma-chrome-launcher":"~2.0.0","karma-detect-browsers":"~2.2.3","karma-edge-launcher":"~0.2.0","karma-firefox-launcher":"~1.0.0","karma-ie-launcher":"~1.0.0","karma-mocha":"~1.3.0","karma-safari-launcher":"~1.0.0","karma-safaritechpreview-launcher":"~0.0.4","karma-sauce-launcher":"~1.1.0","lodash":"~3.10.1","mocha":"~3.2.0","node-tick-processor":"~0.0.2","regenerate":"~1.3.2","temp":"~0.8.3","tslint":"~5.1.0","typescript":"~2.3.2","typescript-formatter":"~5.1.3","unicode-8.0.0":"~0.7.0","webpack":"~1.14.0"},"engines":{"node":">=4"},"files":["bin","dist/esprima.js"],"homepage":"http://esprima.org","keywords":["ast","ecmascript","esprima","javascript","parser","syntax"],"license":"BSD-2-Clause","main":"dist/esprima.js","maintainers":[{"name":"Ariya Hidayat","email":"ariya.hidayat@gmail.com","url":"http://ariya.ofilabs.com"}],"name":"esprima","repository":{"type":"git","url":"git+https://github.com/jquery/esprima.git"},"scripts":{"all-tests":"npm run verify-line-ending && npm run generate-fixtures && npm run unit-tests && npm run api-tests && npm run grammar-tests && npm run regression-tests && npm run hostile-env-tests","analyze-coverage":"istanbul cover test/unit-tests.js","api-tests":"mocha -R dot test/api-tests.js","appveyor":"npm run compile && npm run all-tests && npm run browser-tests","benchmark":"npm run benchmark-parser && npm run benchmark-tokenizer","benchmark-parser":"node -expose_gc test/benchmark-parser.js","benchmark-tokenizer":"node --expose_gc test/benchmark-tokenizer.js","browser-tests":"npm run compile && npm run generate-fixtures && cd test && karma start --single-run","check-coverage":"istanbul check-coverage --statement 100 --branch 100 --function 100","check-version":"node test/check-version.js","circleci":"npm test && npm run codecov && npm run downstream","code-style":"tsfmt --verify src/*.ts && tsfmt --verify test/*.js","codecov":"istanbul report cobertura && codecov < ./coverage/cobertura-coverage.xml","compile":"tsc -p src/ && webpack && node tools/fixupbundle.js","complexity":"node test/check-complexity.js","downstream":"node test/downstream.js","droneio":"npm run compile && npm run all-tests && npm run saucelabs","dynamic-analysis":"npm run analyze-coverage && npm run check-coverage","format-code":"tsfmt -r src/*.ts && tsfmt -r test/*.js","generate-fixtures":"node tools/generate-fixtures.js","generate-regex":"node tools/generate-identifier-regex.js","generate-xhtml-entities":"node tools/generate-xhtml-entities.js","grammar-tests":"node test/grammar-tests.js","hostile-env-tests":"node test/hostile-environment-tests.js","prepublish":"npm run compile","profile":"node --prof test/profile.js && mv isolate*.log v8.log && node-tick-processor","regression-tests":"node test/regression-tests.js","saucelabs":"npm run saucelabs-evergreen && npm run saucelabs-ie && npm run saucelabs-safari","saucelabs-evergreen":"cd test && karma start saucelabs-evergreen.conf.js","saucelabs-ie":"cd test && karma start saucelabs-ie.conf.js","saucelabs-safari":"cd test && karma start saucelabs-safari.conf.js","static-analysis":"npm run check-version && npm run tslint && npm run code-style && npm run complexity","test":"npm run compile && npm run all-tests && npm run static-analysis && npm run dynamic-analysis","travis":"npm test","tslint":"tslint src/*.ts","unit-tests":"node test/unit-tests.js","verify-line-ending":"node test/verify-line-ending.js"},"version":"4.0.1"}');

/***/ }),

/***/ 96734:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"estraverse@^5.1.0","_id":"estraverse@5.3.0","_inBundle":false,"_integrity":"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==","_location":"/esquery/estraverse","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"estraverse@^5.1.0","name":"estraverse","escapedName":"estraverse","rawSpec":"^5.1.0","saveSpec":null,"fetchSpec":"^5.1.0"},"_requiredBy":["/esquery"],"_resolved":"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz","_shasum":"2eea5290702f26ab8fe5370370ff86c965d21123","_spec":"estraverse@^5.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/esquery","bugs":{"url":"https://github.com/estools/estraverse/issues"},"bundleDependencies":false,"deprecated":false,"description":"ECMAScript JS AST traversal functions","devDependencies":{"babel-preset-env":"^1.6.1","babel-register":"^6.3.13","chai":"^2.1.1","espree":"^1.11.0","gulp":"^3.8.10","gulp-bump":"^0.2.2","gulp-filter":"^2.0.0","gulp-git":"^1.0.1","gulp-tag-version":"^1.3.0","jshint":"^2.5.6","mocha":"^2.1.0"},"engines":{"node":">=4.0"},"homepage":"https://github.com/estools/estraverse","license":"BSD-2-Clause","main":"estraverse.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"estraverse","repository":{"type":"git","url":"git+ssh://git@github.com/estools/estraverse.git"},"scripts":{"lint":"jshint estraverse.js","test":"npm run-script lint && npm run-script unit-test","unit-test":"mocha --compilers js:babel-register"},"version":"5.3.0"}');

/***/ }),

/***/ 1396:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["esquery@1.4.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"esquery@1.4.0","_id":"esquery@1.4.0","_inBundle":false,"_integrity":"sha512-cCDispWt5vHHtwMY2YrAQ4ibFkAL8RbH5YGBnZBc90MolvvfkkQcJro/aZiAQUlQ3qgrYS6D6v8Gc5G5CQsc9w==","_location":"/esquery","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"esquery@1.4.0","name":"esquery","escapedName":"esquery","rawSpec":"1.4.0","saveSpec":null,"fetchSpec":"1.4.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/esquery/-/esquery-1.4.0.tgz","_spec":"1.4.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Joel Feenstra","email":"jrfeenst+esquery@gmail.com"},"bugs":{"url":"https://github.com/estools/esquery/issues"},"contributors":[],"dependencies":{"estraverse":"^5.1.0"},"description":"A query library for ECMAScript AST using a CSS selector like query language.","devDependencies":{"@babel/core":"^7.9.0","@babel/preset-env":"^7.9.5","@babel/register":"^7.9.0","@rollup/plugin-commonjs":"^11.1.0","@rollup/plugin-json":"^4.0.2","@rollup/plugin-node-resolve":"^7.1.3","babel-plugin-transform-es2017-object-entries":"0.0.5","chai":"^4.2.0","eslint":"^6.8.0","esprima":"~4.0.1","mocha":"^7.1.1","nyc":"^15.0.1","pegjs":"~0.10.0","rollup":"^1.32.1","rollup-plugin-babel":"^4.4.0","rollup-plugin-terser":"^5.3.0"},"engines":{"node":">=0.10"},"files":["dist/*.js","dist/*.map","parser.js","license.txt","README.md"],"homepage":"https://github.com/estools/esquery/","keywords":["ast","ecmascript","javascript","query"],"license":"BSD-3-Clause","main":"dist/esquery.min.js","module":"dist/esquery.esm.min.js","name":"esquery","nyc":{"branches":100,"lines":100,"functions":100,"statements":100,"reporter":["html","text"],"exclude":["parser.js","dist","tests"]},"repository":{"type":"git","url":"git+https://github.com/estools/esquery.git"},"scripts":{"build":"npm run build:parser && npm run build:browser","build:browser":"rollup -c","build:parser":"rm parser.js && pegjs --cache --format umd -o \\"parser.js\\" \\"grammar.pegjs\\"","lint":"eslint .","mocha":"mocha --require chai/register-assert --require @babel/register tests","prepublishOnly":"npm run build && npm test","test":"nyc npm run mocha && npm run lint","test:ci":"npm run mocha"},"version":"1.4.0"}');

/***/ }),

/***/ 48376:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"estraverse@^5.2.0","_id":"estraverse@5.3.0","_inBundle":false,"_integrity":"sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==","_location":"/esrecurse/estraverse","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"estraverse@^5.2.0","name":"estraverse","escapedName":"estraverse","rawSpec":"^5.2.0","saveSpec":null,"fetchSpec":"^5.2.0"},"_requiredBy":["/esrecurse"],"_resolved":"https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz","_shasum":"2eea5290702f26ab8fe5370370ff86c965d21123","_spec":"estraverse@^5.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/esrecurse","bugs":{"url":"https://github.com/estools/estraverse/issues"},"bundleDependencies":false,"deprecated":false,"description":"ECMAScript JS AST traversal functions","devDependencies":{"babel-preset-env":"^1.6.1","babel-register":"^6.3.13","chai":"^2.1.1","espree":"^1.11.0","gulp":"^3.8.10","gulp-bump":"^0.2.2","gulp-filter":"^2.0.0","gulp-git":"^1.0.1","gulp-tag-version":"^1.3.0","jshint":"^2.5.6","mocha":"^2.1.0"},"engines":{"node":">=4.0"},"homepage":"https://github.com/estools/estraverse","license":"BSD-2-Clause","main":"estraverse.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"estraverse","repository":{"type":"git","url":"git+ssh://git@github.com/estools/estraverse.git"},"scripts":{"lint":"jshint estraverse.js","test":"npm run-script lint && npm run-script unit-test","unit-test":"mocha --compilers js:babel-register"},"version":"5.3.0"}');

/***/ }),

/***/ 18492:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["esrecurse@4.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"esrecurse@4.3.0","_id":"esrecurse@4.3.0","_inBundle":false,"_integrity":"sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==","_location":"/esrecurse","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"esrecurse@4.3.0","name":"esrecurse","escapedName":"esrecurse","rawSpec":"4.3.0","saveSpec":null,"fetchSpec":"4.3.0"},"_requiredBy":["/eslint-scope"],"_resolved":"https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz","_spec":"4.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","babel":{"presets":["es2015"]},"bugs":{"url":"https://github.com/estools/esrecurse/issues"},"dependencies":{"estraverse":"^5.2.0"},"description":"ECMAScript AST recursive visitor","devDependencies":{"babel-cli":"^6.24.1","babel-eslint":"^7.2.3","babel-preset-es2015":"^6.24.1","babel-register":"^6.24.1","chai":"^4.0.2","esprima":"^4.0.0","gulp":"^3.9.0","gulp-bump":"^2.7.0","gulp-eslint":"^4.0.0","gulp-filter":"^5.0.0","gulp-git":"^2.4.1","gulp-mocha":"^4.3.1","gulp-tag-version":"^1.2.1","jsdoc":"^3.3.0-alpha10","minimist":"^1.1.0"},"engines":{"node":">=4.0"},"homepage":"https://github.com/estools/esrecurse","license":"BSD-2-Clause","main":"esrecurse.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"https://github.com/Constellation"}],"name":"esrecurse","repository":{"type":"git","url":"git+https://github.com/estools/esrecurse.git"},"scripts":{"lint":"gulp lint","test":"gulp travis","unit-test":"gulp test"},"version":"4.3.0"}');

/***/ }),

/***/ 82788:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["estraverse@4.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"estraverse@4.3.0","_id":"estraverse@4.3.0","_inBundle":false,"_integrity":"sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==","_location":"/estraverse","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"estraverse@4.3.0","name":"estraverse","escapedName":"estraverse","rawSpec":"4.3.0","saveSpec":null,"fetchSpec":"4.3.0"},"_requiredBy":["/eslint-scope"],"_resolved":"https://registry.npmjs.org/estraverse/-/estraverse-4.3.0.tgz","_spec":"4.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/estools/estraverse/issues"},"description":"ECMAScript JS AST traversal functions","devDependencies":{"babel-preset-env":"^1.6.1","babel-register":"^6.3.13","chai":"^2.1.1","espree":"^1.11.0","gulp":"^3.8.10","gulp-bump":"^0.2.2","gulp-filter":"^2.0.0","gulp-git":"^1.0.1","gulp-tag-version":"^1.3.0","jshint":"^2.5.6","mocha":"^2.1.0"},"engines":{"node":">=4.0"},"homepage":"https://github.com/estools/estraverse","license":"BSD-2-Clause","main":"estraverse.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"estraverse","repository":{"type":"git","url":"git+ssh://git@github.com/estools/estraverse.git"},"scripts":{"lint":"jshint estraverse.js","test":"npm run-script lint && npm run-script unit-test","unit-test":"mocha --compilers js:babel-register"},"version":"4.3.0"}');

/***/ }),

/***/ 43744:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["esutils@2.0.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"esutils@2.0.3","_id":"esutils@2.0.3","_inBundle":false,"_integrity":"sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==","_location":"/esutils","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"esutils@2.0.3","name":"esutils","escapedName":"esutils","rawSpec":"2.0.3","saveSpec":null,"fetchSpec":"2.0.3"},"_requiredBy":["/doctrine","/eslint"],"_resolved":"https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz","_spec":"2.0.3","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/estools/esutils/issues"},"description":"utility box for ECMAScript language tools","devDependencies":{"chai":"~1.7.2","coffee-script":"~1.6.3","jshint":"2.6.3","mocha":"~2.2.1","regenerate":"~1.3.1","unicode-9.0.0":"~0.7.0"},"directories":{"lib":"./lib"},"engines":{"node":">=0.10.0"},"files":["LICENSE.BSD","README.md","lib"],"homepage":"https://github.com/estools/esutils","license":"BSD-2-Clause","main":"lib/utils.js","maintainers":[{"name":"Yusuke Suzuki","email":"utatane.tea@gmail.com","url":"http://github.com/Constellation"}],"name":"esutils","repository":{"type":"git","url":"git+ssh://git@github.com/estools/esutils.git"},"scripts":{"generate-regex":"node tools/generate-identifier-regex.js","lint":"jshint lib/*.js","test":"npm run-script lint && npm run-script unit-test","unit-test":"mocha --compilers coffee:coffee-script -R spec"},"version":"2.0.3"}');

/***/ }),

/***/ 17330:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"debug@^2.3.3","_id":"debug@2.6.9","_inBundle":false,"_integrity":"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==","_location":"/expand-brackets/debug","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"debug@^2.3.3","name":"debug","escapedName":"debug","rawSpec":"^2.3.3","saveSpec":null,"fetchSpec":"^2.3.3"},"_requiredBy":["/expand-brackets"],"_resolved":"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz","_shasum":"5d128515df134ff327e90a4c93f4e077a536341f","_spec":"debug@^2.3.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/expand-brackets","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"browser":"./src/browser.js","bugs":{"url":"https://github.com/visionmedia/debug/issues"},"bundleDependencies":false,"component":{"scripts":{"debug/index.js":"browser.js","debug/debug.js":"debug.js"}},"contributors":[{"name":"Nathan Rajlich","email":"nathan@tootallnate.net","url":"http://n8.io"},{"name":"Andrew Rhyne","email":"rhyneandrew@gmail.com"}],"dependencies":{"ms":"2.0.0"},"deprecated":false,"description":"small debugging utility","devDependencies":{"browserify":"9.0.3","chai":"^3.5.0","concurrently":"^3.1.0","coveralls":"^2.11.15","eslint":"^3.12.1","istanbul":"^0.4.5","karma":"^1.3.0","karma-chai":"^0.1.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sinon":"^1.0.5","mocha":"^3.2.0","mocha-lcov-reporter":"^1.2.0","rimraf":"^2.5.4","sinon":"^1.17.6","sinon-chai":"^2.8.0"},"homepage":"https://github.com/visionmedia/debug#readme","keywords":["debug","log","debugger"],"license":"MIT","main":"./src/index.js","name":"debug","repository":{"type":"git","url":"git://github.com/visionmedia/debug.git"},"version":"2.6.9"}');

/***/ }),

/***/ 33606:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^0.2.5","_id":"define-property@0.2.5","_inBundle":false,"_integrity":"sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=","_location":"/expand-brackets/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^0.2.5","name":"define-property","escapedName":"define-property","rawSpec":"^0.2.5","saveSpec":null,"fetchSpec":"^0.2.5"},"_requiredBy":["/expand-brackets"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz","_shasum":"c35b1ef918ec3c990f9a5bc57be04aacec5c8116","_spec":"define-property@^0.2.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/expand-brackets","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^0.1.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"mocha":"*","should":"^7.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["mixin-deep","mixin-object","delegate-object","forward-object"]}},"version":"0.2.5"}');

/***/ }),

/***/ 43868:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extend-shallow@^2.0.1","_id":"extend-shallow@2.0.1","_inBundle":false,"_integrity":"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=","_location":"/expand-brackets/extend-shallow","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"extend-shallow@^2.0.1","name":"extend-shallow","escapedName":"extend-shallow","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/expand-brackets"],"_resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz","_shasum":"51af7d614ad9a9f610ea1bafbb989d6b1c56890f","_spec":"extend-shallow@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/expand-brackets","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/extend-shallow/issues"},"bundleDependencies":false,"dependencies":{"is-extendable":"^0.1.0"},"deprecated":false,"description":"Extend an object with the properties of additional objects. node.js/javascript util.","devDependencies":{"array-slice":"^0.2.3","benchmarked":"^0.1.4","chalk":"^1.0.0","for-own":"^0.1.3","glob":"^5.0.12","is-plain-object":"^2.0.1","kind-of":"^2.0.0","minimist":"^1.1.1","mocha":"^2.2.5","should":"^7.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/extend-shallow","keywords":["assign","extend","javascript","js","keys","merge","obj","object","prop","properties","property","props","shallow","util","utility","utils","value"],"license":"MIT","main":"index.js","name":"extend-shallow","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/extend-shallow.git"},"scripts":{"test":"mocha"},"version":"2.0.1"}');

/***/ }),

/***/ 99078:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"ms@2.0.0","_id":"ms@2.0.0","_inBundle":false,"_integrity":"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=","_location":"/expand-brackets/ms","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ms@2.0.0","name":"ms","escapedName":"ms","rawSpec":"2.0.0","saveSpec":null,"fetchSpec":"2.0.0"},"_requiredBy":["/expand-brackets/debug"],"_resolved":"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz","_shasum":"5608aeadfc00be6c2901df5f9861788de0d597c8","_spec":"ms@2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/expand-brackets/node_modules/debug","bugs":{"url":"https://github.com/zeit/ms/issues"},"bundleDependencies":false,"deprecated":false,"description":"Tiny milisecond conversion utility","devDependencies":{"eslint":"3.19.0","expect.js":"0.3.1","husky":"0.13.3","lint-staged":"3.4.1","mocha":"3.4.1"},"eslintConfig":{"extends":"eslint:recommended","env":{"node":true,"es6":true}},"files":["index.js"],"homepage":"https://github.com/zeit/ms#readme","license":"MIT","lint-staged":{"*.js":["npm run lint","prettier --single-quote --write","git add"]},"main":"./index","name":"ms","repository":{"type":"git","url":"git+https://github.com/zeit/ms.git"},"scripts":{"lint":"eslint lib/* bin/*","precommit":"lint-staged","test":"mocha tests.js"},"version":"2.0.0"}');

/***/ }),

/***/ 33046:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"expand-brackets@^2.1.4","_id":"expand-brackets@2.1.4","_inBundle":false,"_integrity":"sha1-t3c14xXOMPa27/D4OwQVGiJEliI=","_location":"/expand-brackets","_phantomChildren":{"is-descriptor":"0.1.6","is-extendable":"0.1.1"},"_requested":{"type":"range","registry":true,"raw":"expand-brackets@^2.1.4","name":"expand-brackets","escapedName":"expand-brackets","rawSpec":"^2.1.4","saveSpec":null,"fetchSpec":"^2.1.4"},"_requiredBy":["/extglob"],"_resolved":"https://registry.npmjs.org/expand-brackets/-/expand-brackets-2.1.4.tgz","_shasum":"b77735e315ce30f6b6eff0f83b04151a22449622","_spec":"expand-brackets@^2.1.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extglob","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/expand-brackets/issues"},"bundleDependencies":false,"contributors":[{"name":"Elan Shanker","url":"https://github.com/es128"},{"name":"Eugene Sharygin","url":"https://github.com/eush77"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"},{"name":"Martin Kolárik","email":"martin@kolarik.sk","url":"http://kolarik.sk"}],"dependencies":{"debug":"^2.3.3","define-property":"^0.2.5","extend-shallow":"^2.0.1","posix-character-classes":"^0.1.0","regex-not":"^1.0.0","snapdragon":"^0.8.1","to-regex":"^3.0.1"},"deprecated":false,"description":"Expand POSIX bracket expressions (character classes) in glob patterns.","devDependencies":{"bash-match":"^0.1.1","gulp-format-md":"^0.1.10","helper-changelog":"^0.3.0","minimatch":"^3.0.3","mocha":"^3.0.2","multimatch":"^2.1.0","yargs-parser":"^4.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js","lib"],"homepage":"https://github.com/jonschlinkert/expand-brackets","keywords":["bracket","brackets","character class","expand","expression","posix"],"license":"MIT","main":"index.js","name":"expand-brackets","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/expand-brackets.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"helpers":["helper-changelog"],"related":{"list":["braces","extglob","micromatch","nanomatch"]},"reflinks":["micromatch","verb","verb-generate-readme"],"lint":{"reflinks":true}},"version":"2.1.4"}');

/***/ }),

/***/ 85527:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-extendable@^1.0.1","_id":"is-extendable@1.0.1","_inBundle":false,"_integrity":"sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==","_location":"/extend-shallow/is-extendable","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-extendable@^1.0.1","name":"is-extendable","escapedName":"is-extendable","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/extend-shallow"],"_resolved":"https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz","_shasum":"a7470f9e426733d81bd81e1155264e3a3507cab4","_spec":"is-extendable@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extend-shallow","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-extendable/issues"},"bundleDependencies":false,"dependencies":{"is-plain-object":"^2.0.4"},"deprecated":false,"description":"Returns true if a value is a plain object, array or function.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.4.2"},"engines":{"node":">=0.10.0"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/jonschlinkert/is-extendable","keywords":["array","assign","check","date","extend","extendable","extensible","function","is","object","regex","test"],"license":"MIT","main":"index.js","name":"is-extendable","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-extendable.git"},"scripts":{"test":"mocha"},"types":"index.d.ts","verb":{"related":{"list":["assign-deep","is-equal-shallow","is-plain-object","isobject","kind-of"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.1"}');

/***/ }),

/***/ 32790:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extend-shallow@^3.0.2","_id":"extend-shallow@3.0.2","_inBundle":false,"_integrity":"sha1-Jqcarwc7OfshJxcnRhMcJwQCjbg=","_location":"/extend-shallow","_phantomChildren":{"is-plain-object":"2.0.4"},"_requested":{"type":"range","registry":true,"raw":"extend-shallow@^3.0.2","name":"extend-shallow","escapedName":"extend-shallow","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/cpy/micromatch","/nanomatch","/regex-not","/split-string","/to-regex"],"_resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-3.0.2.tgz","_shasum":"26a71aaf073b39fb2127172746131c2704028db8","_spec":"extend-shallow@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/extend-shallow/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"assign-symbols":"^1.0.0","is-extendable":"^1.0.1"},"deprecated":false,"description":"Extend an object with the properties of additional objects. node.js/javascript util.","devDependencies":{"array-slice":"^1.0.0","benchmarked":"^2.0.0","for-own":"^1.0.0","gulp-format-md":"^1.0.0","is-plain-object":"^2.0.4","kind-of":"^6.0.1","minimist":"^1.2.0","mocha":"^3.5.3","object-assign":"^4.1.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/extend-shallow","keywords":["assign","clone","extend","merge","obj","object","object-assign","object.assign","prop","properties","property","props","shallow","util","utility","utils","value"],"license":"MIT","main":"index.js","name":"extend-shallow","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/extend-shallow.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"related":{"list":["extend-shallow","for-in","for-own","is-plain-object","isobject","kind-of"]},"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"3.0.2"}');

/***/ }),

/***/ 86430:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^1.0.0","_id":"define-property@1.0.0","_inBundle":false,"_integrity":"sha1-dp66rz9KY6rTr56NMEybvnm/sOY=","_location":"/extglob/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^1.0.0","name":"define-property","escapedName":"define-property","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/extglob"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz","_shasum":"769ebaaf3f4a63aad3af9e8d304c9bbe79bfb0e6","_spec":"define-property@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extglob","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^1.0.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["extend-shallow","merge-deep","assign-deep","mixin-deep"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 71107:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extend-shallow@^2.0.1","_id":"extend-shallow@2.0.1","_inBundle":false,"_integrity":"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=","_location":"/extglob/extend-shallow","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"extend-shallow@^2.0.1","name":"extend-shallow","escapedName":"extend-shallow","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/extglob"],"_resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz","_shasum":"51af7d614ad9a9f610ea1bafbb989d6b1c56890f","_spec":"extend-shallow@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extglob","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/extend-shallow/issues"},"bundleDependencies":false,"dependencies":{"is-extendable":"^0.1.0"},"deprecated":false,"description":"Extend an object with the properties of additional objects. node.js/javascript util.","devDependencies":{"array-slice":"^0.2.3","benchmarked":"^0.1.4","chalk":"^1.0.0","for-own":"^0.1.3","glob":"^5.0.12","is-plain-object":"^2.0.1","kind-of":"^2.0.0","minimist":"^1.1.1","mocha":"^2.2.5","should":"^7.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/extend-shallow","keywords":["assign","extend","javascript","js","keys","merge","obj","object","prop","properties","property","props","shallow","util","utility","utils","value"],"license":"MIT","main":"index.js","name":"extend-shallow","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/extend-shallow.git"},"scripts":{"test":"mocha"},"version":"2.0.1"}');

/***/ }),

/***/ 64090:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-accessor-descriptor@^1.0.0","_id":"is-accessor-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==","_location":"/extglob/is-accessor-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-accessor-descriptor@^1.0.0","name":"is-accessor-descriptor","escapedName":"is-accessor-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/extglob/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz","_shasum":"169c2f6d3df1f992618072365c9b0ea1f6878656","_spec":"is-accessor-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extglob/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-accessor-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-accessor-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-accessor-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-accessor-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","is-plain-object","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 60142:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-data-descriptor@^1.0.0","_id":"is-data-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==","_location":"/extglob/is-data-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-data-descriptor@^1.0.0","name":"is-data-descriptor","escapedName":"is-data-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/extglob/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz","_shasum":"d84876321d0e7add03990406abbbbd36ba9268c7","_spec":"is-data-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extglob/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-data-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript data descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-data-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-data-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-data-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 99220:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-descriptor@^1.0.0","_id":"is-descriptor@1.0.2","_inBundle":false,"_integrity":"sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==","_location":"/extglob/is-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-descriptor@^1.0.0","name":"is-descriptor","escapedName":"is-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/extglob/define-property"],"_resolved":"https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz","_shasum":"3b159746a66604b04f8c81524ba365c5f14d86ec","_spec":"is-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/extglob/node_modules/define-property","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"is-accessor-descriptor":"^1.0.0","is-data-descriptor":"^1.0.0","kind-of":"^6.0.2"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"plugins":["gulp-format-md"],"toc":false,"layout":"default","tasks":["readme"],"lint":{"reflinks":true}},"version":"1.0.2"}');

/***/ }),

/***/ 19959:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extglob@^2.0.4","_id":"extglob@2.0.4","_inBundle":false,"_integrity":"sha512-Nmb6QXkELsuBr24CJSkilo6UHHgbekK5UiZgfE6UHD3Eb27YC6oD+bhcT+tJ6cl8dmsgdQxnWlcry8ksBIBLpw==","_location":"/extglob","_phantomChildren":{"is-extendable":"0.1.1","kind-of":"6.0.3"},"_requested":{"type":"range","registry":true,"raw":"extglob@^2.0.4","name":"extglob","escapedName":"extglob","rawSpec":"^2.0.4","saveSpec":null,"fetchSpec":"^2.0.4"},"_requiredBy":["/cpy/micromatch"],"_resolved":"https://registry.npmjs.org/extglob/-/extglob-2.0.4.tgz","_shasum":"ad00fe4dc612a9232e8718711dc5cb5ab0285543","_spec":"extglob@^2.0.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/extglob/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Devon Govett","url":"http://badassjs.com"},{"name":"Isiah Meadows","url":"https://www.isiahmeadows.com"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Matt Bierner","url":"http://mattbierner.com"},{"name":"Shinnosuke Watanabe","url":"https://shinnn.github.io"}],"dependencies":{"array-unique":"^0.3.2","define-property":"^1.0.0","expand-brackets":"^2.1.4","extend-shallow":"^2.0.1","fragment-cache":"^0.2.1","regex-not":"^1.0.0","snapdragon":"^0.8.1","to-regex":"^3.0.1"},"deprecated":false,"description":"Extended glob support for JavaScript. Adds (almost) the expressive power of regular expressions to glob patterns.","devDependencies":{"bash-match":"^1.0.2","for-own":"^1.0.0","gulp":"^3.9.1","gulp-eslint":"^4.0.0","gulp-format-md":"^1.0.0","gulp-istanbul":"^1.1.2","gulp-mocha":"^3.0.1","gulp-unused":"^0.2.1","helper-changelog":"^0.3.0","is-windows":"^1.0.1","micromatch":"^3.0.4","minimatch":"^3.0.4","minimist":"^1.2.0","mocha":"^3.5.0","multimatch":"^2.1.0"},"engines":{"node":">=0.10.0"},"files":["index.js","lib"],"homepage":"https://github.com/micromatch/extglob","keywords":["bash","extended","extglob","glob","globbing","ksh","match","pattern","patterns","regex","test","wildcard"],"license":"MIT","lintDeps":{"devDependencies":{"files":{"options":{"ignore":["benchmark/**/*.js"]}}}},"main":"index.js","name":"extglob","repository":{"type":"git","url":"git+https://github.com/micromatch/extglob.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"related":{"list":["braces","expand-brackets","expand-range","fill-range","micromatch"]},"helpers":["helper-changelog"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"2.0.4"}');

/***/ }),

/***/ 61470:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["fast-deep-equal@3.1.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"fast-deep-equal@3.1.3","_id":"fast-deep-equal@3.1.3","_inBundle":false,"_integrity":"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==","_location":"/fast-deep-equal","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"fast-deep-equal@3.1.3","name":"fast-deep-equal","escapedName":"fast-deep-equal","rawSpec":"3.1.3","saveSpec":null,"fetchSpec":"3.1.3"},"_requiredBy":["/ajv","/table/ajv"],"_resolved":"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz","_spec":"3.1.3","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Evgeny Poberezkin"},"bugs":{"url":"https://github.com/epoberezkin/fast-deep-equal/issues"},"description":"Fast deep equal","devDependencies":{"coveralls":"^3.1.0","dot":"^1.1.2","eslint":"^7.2.0","mocha":"^7.2.0","nyc":"^15.1.0","pre-commit":"^1.2.2","react":"^16.12.0","react-test-renderer":"^16.12.0","sinon":"^9.0.2","typescript":"^3.9.5"},"files":["index.js","index.d.ts","react.js","react.d.ts","es6/"],"homepage":"https://github.com/epoberezkin/fast-deep-equal#readme","keywords":["fast","equal","deep-equal"],"license":"MIT","main":"index.js","name":"fast-deep-equal","nyc":{"exclude":["**/spec/**","node_modules"],"reporter":["lcov","text-summary"]},"repository":{"type":"git","url":"git+https://github.com/epoberezkin/fast-deep-equal.git"},"scripts":{"benchmark":"npm i && npm run build && cd ./benchmark && npm i && node ./","build":"node build","eslint":"eslint *.js benchmark/*.js spec/*.js","prepublish":"npm run build","test":"npm run build && npm run eslint && npm run test-ts && npm run test-cov","test-cov":"nyc npm run test-spec","test-spec":"mocha spec/*.spec.js -R spec","test-ts":"tsc --target ES5 --noImplicitAny index.d.ts"},"types":"index.d.ts","version":"3.1.3"}');

/***/ }),

/***/ 36071:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"fast-glob","_id":"fast-glob@3.2.7","_inBundle":false,"_integrity":"sha512-rYGMRwip6lUMvYD3BTScMwT1HtAs2d71SMv66Vrxs0IekGZEjhM0pcMfjQPnknBt2zeCwQMEupiN02ZP4DiT1Q==","_location":"/fast-glob","_phantomChildren":{},"_requested":{"type":"tag","registry":true,"raw":"fast-glob","name":"fast-glob","escapedName":"fast-glob","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/fast-glob/-/fast-glob-3.2.7.tgz","_shasum":"fd6cb7a2d7e9aa7a7846111e85a196d6b2f766a1","_spec":"fast-glob","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Denis Malinochkin","url":"https://mrmlnc.com"},"bugs":{"url":"https://github.com/mrmlnc/fast-glob/issues"},"bundleDependencies":false,"dependencies":{"@nodelib/fs.stat":"^2.0.2","@nodelib/fs.walk":"^1.2.3","glob-parent":"^5.1.2","merge2":"^1.3.0","micromatch":"^4.0.4"},"deprecated":false,"description":"It\'s a very fast and efficient glob library for Node.js","devDependencies":{"@nodelib/fs.macchiato":"^1.0.1","@types/compute-stdev":"^1.0.0","@types/easy-table":"^0.0.32","@types/glob":"^7.1.1","@types/glob-parent":"^5.1.0","@types/is-ci":"^2.0.0","@types/merge2":"^1.1.4","@types/micromatch":"^4.0.0","@types/minimist":"^1.2.0","@types/mocha":"^5.2.7","@types/node":"^12.7.8","@types/rimraf":"^2.0.2","@types/sinon":"^7.5.0","compute-stdev":"^1.0.0","easy-table":"^1.1.1","eslint":"^6.5.1","eslint-config-mrmlnc":"^1.1.0","execa":"^2.0.4","fast-glob":"^3.0.4","fdir":"^5.1.0","glob":"^7.1.4","is-ci":"^2.0.0","log-update":"^4.0.0","minimist":"^1.2.0","mocha":"^6.2.1","rimraf":"^3.0.0","sinon":"^7.5.0","tiny-glob":"^0.2.6","typescript":"^3.6.3"},"engines":{"node":">=8"},"files":["out","!out/{benchmark,tests}","!out/**/*.map","!out/**/*.spec.*"],"homepage":"https://github.com/mrmlnc/fast-glob#readme","keywords":["glob","patterns","fast","implementation"],"license":"MIT","main":"out/index.js","name":"fast-glob","repository":{"type":"git","url":"git+https://github.com/mrmlnc/fast-glob.git"},"scripts":{"bench":"npm run bench-async && npm run bench-stream && npm run bench-sync","bench-async":"npm run bench-async-flatten && npm run bench-async-deep && npm run bench-async-partial-flatten && npm run bench-async-partial-deep","bench-async-deep":"node ./out/benchmark --mode async --pattern \\"**\\"","bench-async-flatten":"node ./out/benchmark --mode async --pattern \\"*\\"","bench-async-partial-deep":"node ./out/benchmark --mode async --pattern \\"{fixtures,out}/**\\"","bench-async-partial-flatten":"node ./out/benchmark --mode async --pattern \\"{fixtures,out}/{first,second}/*\\"","bench-stream":"npm run bench-stream-flatten && npm run bench-stream-deep && npm run bench-stream-partial-flatten && npm run bench-stream-partial-deep","bench-stream-deep":"node ./out/benchmark --mode stream --pattern \\"**\\"","bench-stream-flatten":"node ./out/benchmark --mode stream --pattern \\"*\\"","bench-stream-partial-deep":"node ./out/benchmark --mode stream --pattern \\"{fixtures,out}/**\\"","bench-stream-partial-flatten":"node ./out/benchmark --mode stream --pattern \\"{fixtures,out}/{first,second}/*\\"","bench-sync":"npm run bench-sync-flatten && npm run bench-sync-deep && npm run bench-sync-partial-flatten && npm run bench-sync-partial-deep","bench-sync-deep":"node ./out/benchmark --mode sync --pattern \\"**\\"","bench-sync-flatten":"node ./out/benchmark --mode sync --pattern \\"*\\"","bench-sync-partial-deep":"node ./out/benchmark --mode sync --pattern \\"{fixtures,out}/**\\"","bench-sync-partial-flatten":"node ./out/benchmark --mode sync --pattern \\"{fixtures,out}/{first,second}/*\\"","build":"npm run clean && npm run compile && npm run lint && npm test","clean":"rimraf out","compile":"tsc","lint":"eslint \\"src/**/*.ts\\" --cache","smoke":"mocha \\"out/**/*.smoke.js\\" -s 0","smoke:async":"mocha \\"out/**/*.smoke.js\\" -s 0 --grep \\"\\\\(async\\\\)\\"","smoke:stream":"mocha \\"out/**/*.smoke.js\\" -s 0 --grep \\"\\\\(stream\\\\)\\"","smoke:sync":"mocha \\"out/**/*.smoke.js\\" -s 0 --grep \\"\\\\(sync\\\\)\\"","test":"mocha \\"out/**/*.spec.js\\" -s 0","watch":"npm run clean && npm run compile -- --sourceMap --watch"},"typings":"out/index.d.ts","version":"3.2.7"}');

/***/ }),

/***/ 57373:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["fast-json-stable-stringify@2.1.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"fast-json-stable-stringify@2.1.0","_id":"fast-json-stable-stringify@2.1.0","_inBundle":false,"_integrity":"sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==","_location":"/fast-json-stable-stringify","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"fast-json-stable-stringify@2.1.0","name":"fast-json-stable-stringify","escapedName":"fast-json-stable-stringify","rawSpec":"2.1.0","saveSpec":null,"fetchSpec":"2.1.0"},"_requiredBy":["/ajv"],"_resolved":"https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz","_spec":"2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/epoberezkin/fast-json-stable-stringify/issues"},"dependencies":{},"description":"deterministic `JSON.stringify()` - a faster version of substack\'s json-stable-strigify without jsonify","devDependencies":{"benchmark":"^2.1.4","coveralls":"^3.0.0","eslint":"^6.7.0","fast-stable-stringify":"latest","faster-stable-stringify":"latest","json-stable-stringify":"latest","nyc":"^14.1.0","pre-commit":"^1.2.2","tape":"^4.11.0"},"homepage":"https://github.com/epoberezkin/fast-json-stable-stringify","keywords":["json","stringify","deterministic","hash","stable"],"license":"MIT","main":"index.js","name":"fast-json-stable-stringify","nyc":{"exclude":["test","node_modules"],"reporter":["lcov","text-summary"]},"repository":{"type":"git","url":"git://github.com/epoberezkin/fast-json-stable-stringify.git"},"scripts":{"eslint":"eslint index.js test","test":"npm run eslint && nyc npm run test-spec","test-spec":"tape test/*.js"},"types":"index.d.ts","version":"2.1.0"}');

/***/ }),

/***/ 87749:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["fast-levenshtein@2.0.6","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"fast-levenshtein@2.0.6","_id":"fast-levenshtein@2.0.6","_inBundle":false,"_integrity":"sha1-PYpcZog6FqMMqGQ+hR8Zuqd5eRc=","_location":"/fast-levenshtein","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"fast-levenshtein@2.0.6","name":"fast-levenshtein","escapedName":"fast-levenshtein","rawSpec":"2.0.6","saveSpec":null,"fetchSpec":"2.0.6"},"_requiredBy":["/optionator"],"_resolved":"https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz","_spec":"2.0.6","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Ramesh Nair","email":"ram@hiddentao.com","url":"http://www.hiddentao.com/"},"bugs":{"url":"https://github.com/hiddentao/fast-levenshtein/issues"},"description":"Efficient implementation of Levenshtein algorithm  with locale-specific collator support.","devDependencies":{"chai":"~1.5.0","grunt":"~0.4.1","grunt-benchmark":"~0.2.0","grunt-cli":"^1.2.0","grunt-contrib-jshint":"~0.4.3","grunt-contrib-uglify":"~0.2.0","grunt-mocha-test":"~0.2.2","grunt-npm-install":"~0.1.0","load-grunt-tasks":"~0.6.0","lodash":"^4.0.1","mocha":"~1.9.0"},"files":["levenshtein.js"],"homepage":"https://github.com/hiddentao/fast-levenshtein#readme","keywords":["levenshtein","distance","string"],"license":"MIT","main":"levenshtein.js","name":"fast-levenshtein","repository":{"type":"git","url":"git+https://github.com/hiddentao/fast-levenshtein.git"},"scripts":{"benchmark":"grunt benchmark","build":"grunt build","prepublish":"npm run build","test":"mocha"},"version":"2.0.6"}');

/***/ }),

/***/ 14528:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"fastq@^1.6.0","_id":"fastq@1.13.0","_inBundle":false,"_integrity":"sha512-YpkpUnK8od0o1hmeSc7UUs/eB/vIPWJYjKck2QKIzAf71Vm1AAQ3EbuZB3g2JIy+pg+ERD0vqI79KyZiB2e2Nw==","_location":"/fastq","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"fastq@^1.6.0","name":"fastq","escapedName":"fastq","rawSpec":"^1.6.0","saveSpec":null,"fetchSpec":"^1.6.0"},"_requiredBy":["/@nodelib/fs.walk"],"_resolved":"https://registry.npmjs.org/fastq/-/fastq-1.13.0.tgz","_shasum":"616760f88a7526bdfc596b7cab8c18938c36b98c","_spec":"fastq@^1.6.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@nodelib/fs.walk","author":{"name":"Matteo Collina","email":"hello@matteocollina.com"},"bugs":{"url":"https://github.com/mcollina/fastq/issues"},"bundleDependencies":false,"dependencies":{"reusify":"^1.0.4"},"deprecated":false,"description":"Fast, in memory work queue","devDependencies":{"async":"^3.1.0","neo-async":"^2.6.1","nyc":"^15.0.0","pre-commit":"^1.2.2","snazzy":"^9.0.0","standard":"^16.0.0","tape":"^5.0.0","typescript":"^4.0.2"},"homepage":"https://github.com/mcollina/fastq#readme","keywords":["fast","queue","async","worker"],"license":"ISC","main":"queue.js","name":"fastq","pre-commit":["test"],"repository":{"type":"git","url":"git+https://github.com/mcollina/fastq.git"},"scripts":{"coverage":"nyc --reporter=html --reporter=cobertura --reporter=text tape test/test.js test/promise.js","legacy":"tape test/test.js","lint":"standard --verbose | snazzy","test":"npm run lint && npm run unit && npm run typescript","test:report":"npm run lint && npm run unit:report","typescript":"tsc --project ./test/tsconfig.json","unit":"nyc --lines 100 --branches 100 --functions 100 --check-coverage --reporter=text tape test/test.js test/promise.js"},"standard":{"ignore":["example.mjs"]},"version":"1.13.0"}');

/***/ }),

/***/ 46438:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["file-entry-cache@6.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"file-entry-cache@6.0.1","_id":"file-entry-cache@6.0.1","_inBundle":false,"_integrity":"sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==","_location":"/file-entry-cache","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"file-entry-cache@6.0.1","name":"file-entry-cache","escapedName":"file-entry-cache","rawSpec":"6.0.1","saveSpec":null,"fetchSpec":"6.0.1"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz","_spec":"6.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Roy Riojas","url":"http://royriojas.com"},"bugs":{"url":"https://github.com/royriojas/file-entry-cache/issues"},"changelogx":{"ignoreRegExp":["BLD: Release","DOC: Generate Changelog","Generated Changelog"],"issueIDRegExp":"#(\\\\d+)","commitURL":"https://github.com/royriojas/file-entry-cache/commit/{0}","authorURL":"https://github.com/{0}","issueIDURL":"https://github.com/royriojas/file-entry-cache/issues/{0}","projectName":"file-entry-cache"},"dependencies":{"flat-cache":"^3.0.4"},"description":"Super simple cache for file metadata, useful for process that work o a given series of files and that only need to repeat the job on the changed ones since the previous run of the process","devDependencies":{"chai":"^4.2.0","changelogx":"^5.0.6","del":"^6.0.0","eslint":"^7.13.0","eslint-config-prettier":"^6.15.0","eslint-plugin-mocha":"^8.0.0","eslint-plugin-prettier":"^3.1.4","glob-expand":"^0.2.1","istanbul":"^0.4.5","mocha":"^8.2.1","precommit":"^1.2.2","prepush":"^3.1.11","prettier":"^2.1.2","watch-run":"^1.2.5","write":"^2.0.0"},"engines":{"node":"^10.12.0 || >=12.0.0"},"files":["cache.js"],"homepage":"https://github.com/royriojas/file-entry-cache#readme","keywords":["file cache","task cache files","file cache","key par","key value","cache"],"license":"MIT","main":"cache.js","name":"file-entry-cache","precommit":["npm run eslint --silent"],"prepush":["npm run eslint --silent"],"repository":{"type":"git","url":"git+https://github.com/royriojas/file-entry-cache.git"},"scripts":{"autofix":"npm run eslint -- --fix","bump-major":"npm run pre-v && npm version major -m \'BLD: Release v%s\' && npm run post-v","bump-minor":"npm run pre-v && npm version minor -m \'BLD: Release v%s\' && npm run post-v","bump-patch":"npm run pre-v && npm version patch -m \'BLD: Release v%s\' && npm run post-v","changelog":"changelogx -f markdown -o ./changelog.md","cover":"istanbul cover test/runner.js html text-summary","do-changelog":"npm run changelog && git add ./changelog.md && git commit -m \'DOC: Generate changelog\' --no-verify","eslint":"eslint --cache --cache-location=node_modules/.cache/ \'cache.js\' \'test/**/*.js\' \'perf.js\'","install-hooks":"prepush install && changelogx install-hook && precommit install","perf":"node perf.js","post-v":"npm run do-changelog && git push --no-verify && git push --tags --no-verify","pre-v":"npm run test","test":"npm run eslint --silent && mocha -R spec test/specs","watch":"watch-run -i -p \'test/specs/**/*.js\' istanbul cover test/runner.js html text-summary"},"version":"6.0.1"}');

/***/ }),

/***/ 15671:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"filename-reserved-regex@^2.0.0","_id":"filename-reserved-regex@2.0.0","_inBundle":false,"_integrity":"sha1-q/c9+rc10EVECr/qLZHzieu/oik=","_location":"/filename-reserved-regex","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"filename-reserved-regex@^2.0.0","name":"filename-reserved-regex","escapedName":"filename-reserved-regex","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/filenamify"],"_resolved":"https://registry.npmjs.org/filename-reserved-regex/-/filename-reserved-regex-2.0.0.tgz","_shasum":"abf73dfab735d045440abfea2d91f389ebbfa229","_spec":"filename-reserved-regex@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/filenamify","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/filename-reserved-regex/issues"},"bundleDependencies":false,"deprecated":false,"description":"Regular expression for matching reserved filename characters","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/filename-reserved-regex#readme","keywords":["re","regex","regexp","filename","reserved","illegal"],"license":"MIT","name":"filename-reserved-regex","repository":{"type":"git","url":"git+https://github.com/sindresorhus/filename-reserved-regex.git"},"scripts":{"test":"xo && ava"},"version":"2.0.0","xo":{"esnext":true}}');

/***/ }),

/***/ 43375:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"filenamify@^4.3.0","_id":"filenamify@4.3.0","_inBundle":false,"_integrity":"sha512-hcFKyUG57yWGAzu1CMt/dPzYZuv+jAJUT85bL8mrXvNe6hWj6yEHEc4EdcgiA6Z3oi1/9wXJdZPXF2dZNgwgOg==","_location":"/filenamify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"filenamify@^4.3.0","name":"filenamify","escapedName":"filenamify","rawSpec":"^4.3.0","saveSpec":null,"fetchSpec":"^4.3.0"},"_requiredBy":["/gh-pages"],"_resolved":"https://registry.npmjs.org/filenamify/-/filenamify-4.3.0.tgz","_shasum":"62391cb58f02b09971c9d4f9d63b3cf9aba03106","_spec":"filenamify@^4.3.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/gh-pages","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/filenamify/issues"},"bundleDependencies":false,"dependencies":{"filename-reserved-regex":"^2.0.0","strip-outer":"^1.0.1","trim-repeated":"^1.0.0"},"deprecated":false,"description":"Convert a string to a valid safe filename","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=8"},"exports":{".":"./index.js","./browser":"./filenamify.js"},"files":["filenamify-path.d.ts","filenamify-path.js","filenamify.d.ts","filenamify.js","index.d.ts","index.js"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/filenamify#readme","keywords":["filename","safe","sanitize","file","name","string","path","filepath","convert","valid","dirname"],"license":"MIT","name":"filenamify","repository":{"type":"git","url":"git+https://github.com/sindresorhus/filenamify.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.3.0"}');

/***/ }),

/***/ 50226:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"fill-range@^7.0.1","_id":"fill-range@7.0.1","_inBundle":false,"_integrity":"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==","_location":"/fill-range","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"fill-range@^7.0.1","name":"fill-range","escapedName":"fill-range","rawSpec":"^7.0.1","saveSpec":null,"fetchSpec":"^7.0.1"},"_requiredBy":["/braces"],"_resolved":"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz","_shasum":"1919a6a7c75fe38b2c7c77e5198535da9acdda40","_spec":"fill-range@^7.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/fill-range/issues"},"bundleDependencies":false,"contributors":[{"name":"Edo Rivai","url":"edo.rivai.nl"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Paul Miller","url":"paulmillr.com"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"to-regex-range":"^5.0.1"},"deprecated":false,"description":"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`","devDependencies":{"gulp-format-md":"^2.0.0","mocha":"^6.1.1"},"engines":{"node":">=8"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/fill-range","keywords":["alpha","alphabetical","array","bash","brace","expand","expansion","fill","glob","match","matches","matching","number","numerical","range","ranges","regex","sh"],"license":"MIT","main":"index.js","name":"fill-range","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/fill-range.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"7.0.1"}');

/***/ }),

/***/ 98611:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"find-cache-dir@^3.3.1","_id":"find-cache-dir@3.3.2","_inBundle":false,"_integrity":"sha512-wXZV5emFEjrridIgED11OoUKLxiYjAcqot/NJdAkOhlJ+vGzwhOAfcG5OX1jP+S0PcjEn8bdMJv+g2jwQ3Onig==","_location":"/find-cache-dir","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"find-cache-dir@^3.3.1","name":"find-cache-dir","escapedName":"find-cache-dir","rawSpec":"^3.3.1","saveSpec":null,"fetchSpec":"^3.3.1"},"_requiredBy":["/gh-pages"],"_resolved":"https://registry.npmjs.org/find-cache-dir/-/find-cache-dir-3.3.2.tgz","_shasum":"b30c5b6eff0730731aea9bbd9dbecbd80256d64b","_spec":"find-cache-dir@^3.3.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/gh-pages","bugs":{"url":"https://github.com/avajs/find-cache-dir/issues"},"bundleDependencies":false,"dependencies":{"commondir":"^1.0.1","make-dir":"^3.0.2","pkg-dir":"^4.1.0"},"deprecated":false,"description":"Finds the common standard cache directory","devDependencies":{"ava":"^2.4.0","coveralls":"^3.0.9","del":"^4.0.0","nyc":"^15.0.0","tempy":"^0.4.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js"],"funding":"https://github.com/avajs/find-cache-dir?sponsor=1","homepage":"https://github.com/avajs/find-cache-dir#readme","keywords":["cache","directory","dir","caching","find","search"],"license":"MIT","name":"find-cache-dir","nyc":{"reporter":["lcov","text"]},"repository":{"type":"git","url":"git+https://github.com/avajs/find-cache-dir.git"},"scripts":{"test":"xo && nyc ava"},"version":"3.3.2"}');

/***/ }),

/***/ 43682:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"find-up@^4.1.0","_id":"find-up@4.1.0","_inBundle":false,"_integrity":"sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==","_location":"/find-up","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"find-up@^4.1.0","name":"find-up","escapedName":"find-up","rawSpec":"^4.1.0","saveSpec":null,"fetchSpec":"^4.1.0"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/find-up/-/find-up-4.1.0.tgz","_shasum":"97afe7d6cdc0bc5928584b7c8d7b16e8a9aa5d19","_spec":"find-up@^4.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/find-up/issues"},"bundleDependencies":false,"dependencies":{"locate-path":"^5.0.0","path-exists":"^4.0.0"},"deprecated":false,"description":"Find a file or directory by walking up parent directories","devDependencies":{"ava":"^2.1.0","is-path-inside":"^2.1.0","tempy":"^0.3.0","tsd":"^0.7.3","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/find-up#readme","keywords":["find","up","find-up","findup","look-up","look","file","search","match","package","resolve","parent","parents","folder","directory","walk","walking","path"],"license":"MIT","name":"find-up","repository":{"type":"git","url":"git+https://github.com/sindresorhus/find-up.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.1.0"}');

/***/ }),

/***/ 50824:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["flat-cache@3.0.4","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"flat-cache@3.0.4","_id":"flat-cache@3.0.4","_inBundle":false,"_integrity":"sha512-dm9s5Pw7Jc0GvMYbshN6zchCA9RgQlzzEZX3vylR9IqFfS8XciblUXOKfW6SiuJ0e13eDYZoZV5wdrev7P3Nwg==","_location":"/flat-cache","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"flat-cache@3.0.4","name":"flat-cache","escapedName":"flat-cache","rawSpec":"3.0.4","saveSpec":null,"fetchSpec":"3.0.4"},"_requiredBy":["/file-entry-cache"],"_resolved":"https://registry.npmjs.org/flat-cache/-/flat-cache-3.0.4.tgz","_spec":"3.0.4","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Roy Riojas","url":"http://royriojas.com"},"bugs":{"url":"https://github.com/royriojas/flat-cache/issues"},"changelogx":{"ignoreRegExp":["BLD: Release","DOC: Generate Changelog","Generated Changelog"],"issueIDRegExp":"#(\\\\d+)","commitURL":"https://github.com/royriojas/flat-cache/commit/{0}","authorURL":"https://github.com/{0}","issueIDURL":"https://github.com/royriojas/flat-cache/issues/{0}","projectName":"flat-cache"},"dependencies":{"flatted":"^3.1.0","rimraf":"^3.0.2"},"description":"A stupidly simple key/value storage using files to persist some data","devDependencies":{"chai":"^4.2.0","changelogx":"^5.0.6","eslint":"^7.13.0","eslint-config-prettier":"^6.15.0","eslint-plugin-mocha":"^8.0.0","eslint-plugin-prettier":"^3.1.4","glob-expand":"^0.2.1","istanbul":"^0.4.5","mocha":"^8.2.1","precommit":"^1.2.2","prepush":"^3.1.11","prettier":"^2.1.2","watch-run":"^1.2.5"},"engines":{"node":"^10.12.0 || >=12.0.0"},"files":["src/cache.js","src/del.js","src/utils.js"],"homepage":"https://github.com/royriojas/flat-cache#readme","keywords":["json cache","simple cache","file cache","key par","key value","cache"],"license":"MIT","main":"src/cache.js","name":"flat-cache","precommit":["npm run verify --silent"],"prepush":["npm run verify --silent"],"repository":{"type":"git","url":"git+https://github.com/royriojas/flat-cache.git"},"scripts":{"autofix":"npm run eslint-fix","bump-major":"npm run pre-v && npm version major -m \'BLD: Release v%s\' && npm run post-v","bump-minor":"npm run pre-v && npm version minor -m \'BLD: Release v%s\' && npm run post-v","bump-patch":"npm run pre-v && npm version patch -m \'BLD: Release v%s\' && npm run post-v","changelog":"changelogx -f markdown -o ./changelog.md","check":"npm run eslint","cover":"istanbul cover test/runner.js html text-summary","do-changelog":"npm run changelog && git add ./changelog.md && git commit -m \'DOC: Generate changelog\' --no-verify","eslint":"eslint --cache --cache-location=node_modules/.cache/ ./src/**/*.js ./test/**/*.js","eslint-fix":"npm run eslint -- --fix","install-hooks":"prepush install && changelogx install-hook && precommit install","post-v":"npm run do-changelog && git push --no-verify && git push --tags --no-verify","pre-v":"npm run verify","test":"npm run verify --silent","test:cache":"mocha -R spec test/specs","verify":"npm run eslint && npm run test:cache","watch":"watch-run -i -p \'test/specs/**/*.js\' istanbul cover test/runner.js html text-summary"},"version":"3.0.4"}');

/***/ }),

/***/ 21508:
/***/ ((module) => {

"use strict";
module.exports = {"type":"commonjs"};

/***/ }),

/***/ 12737:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"flatted@^3.1.0","_id":"flatted@3.2.4","_inBundle":false,"_integrity":"sha512-8/sOawo8tJ4QOBX8YlQBMxL8+RLZfxMQOif9o0KUKTNTjMYElWPE0r/m5VNFxTRd0NSw8qSy8dajrwX4RYI1Hw==","_location":"/flatted","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"flatted@^3.1.0","name":"flatted","escapedName":"flatted","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/flat-cache"],"_resolved":"https://registry.npmjs.org/flatted/-/flatted-3.2.4.tgz","_shasum":"28d9969ea90661b5134259f312ab6aa7929ac5e2","_spec":"flatted@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/flat-cache","author":{"name":"Andrea Giammarchi"},"bugs":{"url":"https://github.com/WebReflection/flatted/issues"},"bundleDependencies":false,"deprecated":false,"description":"A super light and fast circular JSON parser.","devDependencies":{"@babel/core":"^7.16.0","@babel/preset-env":"^7.16.0","@ungap/structured-clone":"^0.3.4","ascjs":"^5.0.1","c8":"^7.10.0","circular-json":"^0.5.9","circular-json-es6":"^2.0.2","drop-babel-typeof":"^1.0.3","jsan":"^3.1.13","rollup":"^2.59.0","rollup-plugin-babel":"^4.4.0","rollup-plugin-node-resolve":"^5.2.0","rollup-plugin-terser":"^7.0.2","terser":"^5.9.0"},"exports":{"import":"./esm/index.js","default":"./cjs/index.js"},"homepage":"https://github.com/WebReflection/flatted#readme","keywords":["circular","JSON","fast","parser","minimal"],"license":"ISC","main":"./cjs/index.js","module":"./esm/index.js","name":"flatted","repository":{"type":"git","url":"git+https://github.com/WebReflection/flatted.git"},"scripts":{"build":"npm run cjs && npm run rollup:es && npm run rollup:babel && npm run min && npm run test && npm run size","cjs":"ascjs esm cjs","coverage":"mkdir -p ./coverage; c8 report --reporter=text-lcov > ./coverage/lcov.info","min":"terser index.js -c -m -o min.js","rollup:babel":"rollup --config rollup/babel.config.js && sed -i.bck \'s/^var /self./\' index.js && rm -rf index.js.bck && drop-babel-typeof index.js","rollup:es":"rollup --config rollup/es.config.js && sed -i.bck \'s/^var /self./\' es.js && rm -rf es.js.bck","size":"cat index.js | wc -c;cat min.js | wc -c;gzip -c9 min.js | wc -c;cat min.js | brotli | wc -c; cat es.js | brotli | wc -c","test":"c8 node test/index.js","test:php":"php php/test.php"},"type":"module","types":"types.d.ts","unpkg":"min.js","version":"3.2.4"}');

/***/ }),

/***/ 93685:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"for-in@^1.0.2","_id":"for-in@1.0.2","_inBundle":false,"_integrity":"sha1-gQaNKVqBQuwKxybG4iAMMPttXoA=","_location":"/for-in","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"for-in@^1.0.2","name":"for-in","escapedName":"for-in","rawSpec":"^1.0.2","saveSpec":null,"fetchSpec":"^1.0.2"},"_requiredBy":["/mixin-deep"],"_resolved":"https://registry.npmjs.org/for-in/-/for-in-1.0.2.tgz","_shasum":"81068d295a8142ec0ac726c6e2200c30fb6d5e80","_spec":"for-in@^1.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/mixin-deep","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/for-in/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"},{"name":"Paul Irish","url":"http://paulirish.com"}],"deprecated":false,"description":"Iterate over the own and inherited enumerable properties of an object, and return an object with properties that evaluate to true from the callback. Exit early by returning `false`. JavaScript/Node.js","devDependencies":{"gulp-format-md":"^0.1.11","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/for-in","keywords":["for","for-in","for-own","has","has-own","hasOwn","in","key","keys","object","own","value"],"license":"MIT","main":"index.js","name":"for-in","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/for-in.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["arr-flatten","collection-map","for-own"]},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"1.0.2"}');

/***/ }),

/***/ 23624:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"fragment-cache@^0.2.1","_id":"fragment-cache@0.2.1","_inBundle":false,"_integrity":"sha1-QpD60n8T6Jvn8zeZxrxaCr//DRk=","_location":"/fragment-cache","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"fragment-cache@^0.2.1","name":"fragment-cache","escapedName":"fragment-cache","rawSpec":"^0.2.1","saveSpec":null,"fetchSpec":"^0.2.1"},"_requiredBy":["/cpy/micromatch","/extglob","/nanomatch"],"_resolved":"https://registry.npmjs.org/fragment-cache/-/fragment-cache-0.2.1.tgz","_shasum":"4290fad27f13e89be7f33799c6bc5a0abfff0d19","_spec":"fragment-cache@^0.2.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/fragment-cache/issues"},"bundleDependencies":false,"dependencies":{"map-cache":"^0.2.2"},"deprecated":false,"description":"A cache for managing namespaced sub-caches","devDependencies":{"gulp":"^3.9.1","gulp-eslint":"^3.0.1","gulp-format-md":"^0.1.11","gulp-istanbul":"^1.1.1","gulp-mocha":"^3.0.1","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/fragment-cache","keywords":["cache","fragment"],"license":"MIT","main":"index.js","name":"fragment-cache","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/fragment-cache.git"},"scripts":{"test":"mocha"},"verb":{"plugins":["gulp-format-md"],"reflinks":["map-cache","verb"],"related":{"list":["base","map-cache"]},"layout":"default","toc":false,"tasks":["readme"],"lint":{"reflinks":true}},"version":"0.2.1"}');

/***/ }),

/***/ 66287:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"fs-extra@^8.1.0","_id":"fs-extra@8.1.0","_inBundle":false,"_integrity":"sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==","_location":"/fs-extra","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"fs-extra@^8.1.0","name":"fs-extra","escapedName":"fs-extra","rawSpec":"^8.1.0","saveSpec":null,"fetchSpec":"^8.1.0"},"_requiredBy":["/gh-pages"],"_resolved":"https://registry.npmjs.org/fs-extra/-/fs-extra-8.1.0.tgz","_shasum":"49d43c45a88cd9677668cb7be1b46efdb8d2e1c0","_spec":"fs-extra@^8.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/gh-pages","author":{"name":"JP Richardson","email":"jprichardson@gmail.com"},"bugs":{"url":"https://github.com/jprichardson/node-fs-extra/issues"},"bundleDependencies":false,"dependencies":{"graceful-fs":"^4.2.0","jsonfile":"^4.0.0","universalify":"^0.1.0"},"deprecated":false,"description":"fs-extra contains methods that aren\'t included in the vanilla Node.js fs package. Such as mkdir -p, cp -r, and rm -rf.","devDependencies":{"coveralls":"^3.0.0","istanbul":"^0.4.5","klaw":"^2.1.1","klaw-sync":"^3.0.2","minimist":"^1.1.1","mocha":"^5.0.5","proxyquire":"^2.0.1","read-dir-files":"^0.1.1","semver":"^5.3.0","standard":"^12.0.1"},"engines":{"node":">=6 <7 || >=8"},"files":["lib/","!lib/**/__tests__/"],"homepage":"https://github.com/jprichardson/node-fs-extra","keywords":["fs","file","file system","copy","directory","extra","mkdirp","mkdir","mkdirs","recursive","json","read","write","extra","delete","remove","touch","create","text","output","move"],"license":"MIT","main":"./lib/index.js","name":"fs-extra","repository":{"type":"git","url":"git+https://github.com/jprichardson/node-fs-extra.git"},"scripts":{"coverage":"istanbul cover -i \'lib/**\' -x \'**/__tests__/**\' test.js","coveralls":"coveralls < coverage/lcov.info","full-ci":"npm run lint && npm run coverage","lint":"standard","test":"npm run lint && npm run unit","test-find":"find ./lib/**/__tests__ -name *.test.js | xargs mocha","unit":"node test.js"},"version":"8.1.0"}');

/***/ }),

/***/ 23342:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["fs.realpath@1.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"fs.realpath@1.0.0","_id":"fs.realpath@1.0.0","_inBundle":false,"_integrity":"sha1-FQStJSMVjKpA20onh8sBQRmU6k8=","_location":"/fs.realpath","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"fs.realpath@1.0.0","name":"fs.realpath","escapedName":"fs.realpath","rawSpec":"1.0.0","saveSpec":null,"fetchSpec":"1.0.0"},"_requiredBy":["/glob"],"_resolved":"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz","_spec":"1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/fs.realpath/issues"},"dependencies":{},"description":"Use node\'s fs.realpath, but fall back to the JS implementation if the native one fails","devDependencies":{},"files":["old.js","index.js"],"homepage":"https://github.com/isaacs/fs.realpath#readme","keywords":["realpath","fs","polyfill"],"license":"ISC","main":"index.js","name":"fs.realpath","repository":{"type":"git","url":"git+https://github.com/isaacs/fs.realpath.git"},"scripts":{"test":"tap test/*.js --cov"},"version":"1.0.0"}');

/***/ }),

/***/ 80694:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"function-bind@^1.1.1","_id":"function-bind@1.1.1","_inBundle":false,"_integrity":"sha512-yIovAzMX49sF8Yl58fSCWJ5svSLuaibPxXQJFLmBObTuCr0Mf1KiPopGM9NiFjiYBCbfaa2Fh6breQ6ANVTI0A==","_location":"/function-bind","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"function-bind@^1.1.1","name":"function-bind","escapedName":"function-bind","rawSpec":"^1.1.1","saveSpec":null,"fetchSpec":"^1.1.1"},"_requiredBy":["/has"],"_resolved":"https://registry.npmjs.org/function-bind/-/function-bind-1.1.1.tgz","_shasum":"a56899d3ea3c9bab874bb9773b7c5ede92f4895d","_spec":"function-bind@^1.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/has","author":{"name":"Raynos","email":"raynos2@gmail.com"},"bugs":{"url":"https://github.com/Raynos/function-bind/issues","email":"raynos2@gmail.com"},"bundleDependencies":false,"contributors":[{"name":"Raynos"},{"name":"Jordan Harband","url":"https://github.com/ljharb"}],"dependencies":{},"deprecated":false,"description":"Implementation of Function.prototype.bind","devDependencies":{"@ljharb/eslint-config":"^12.2.1","covert":"^1.1.0","eslint":"^4.5.0","jscs":"^3.0.7","tape":"^4.8.0"},"homepage":"https://github.com/Raynos/function-bind","keywords":["function","bind","shim","es5"],"license":"MIT","main":"index","name":"function-bind","repository":{"type":"git","url":"git://github.com/Raynos/function-bind.git"},"scripts":{"coverage":"covert test/*.js","eslint":"eslint *.js */*.js","jscs":"jscs *.js */*.js","lint":"npm run jscs && npm run eslint","posttest":"npm run coverage -- --quiet","pretest":"npm run lint","test":"npm run tests-only","tests-only":"node test"},"testling":{"files":"test/index.js","browsers":["ie/8..latest","firefox/16..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"version":"1.1.1"}');

/***/ }),

/***/ 16638:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["functional-red-black-tree@1.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"functional-red-black-tree@1.0.1","_id":"functional-red-black-tree@1.0.1","_inBundle":false,"_integrity":"sha1-GwqzvVU7Kg1jmdKcDj6gslIHgyc=","_location":"/functional-red-black-tree","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"functional-red-black-tree@1.0.1","name":"functional-red-black-tree","escapedName":"functional-red-black-tree","rawSpec":"1.0.1","saveSpec":null,"fetchSpec":"1.0.1"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/functional-red-black-tree/-/functional-red-black-tree-1.0.1.tgz","_spec":"1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Mikola Lysenko"},"bugs":{"url":"https://github.com/mikolalysenko/functional-red-black-tree/issues"},"dependencies":{},"description":"A fully persistent balanced binary search tree","devDependencies":{"iota-array":"^0.0.1","tape":"^2.12.0"},"directories":{"test":"test"},"homepage":"https://github.com/mikolalysenko/functional-red-black-tree#readme","keywords":["functional","red","black","tree","binary","search","balance","persistent","fully","dynamic","data","structure"],"license":"MIT","main":"rbtree.js","name":"functional-red-black-tree","repository":{"type":"git","url":"git://github.com/mikolalysenko/functional-red-black-tree.git"},"scripts":{"test":"tape test/*.js"},"version":"1.0.1"}');

/***/ }),

/***/ 68834:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"get-caller-file@^2.0.1","_id":"get-caller-file@2.0.5","_inBundle":false,"_integrity":"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==","_location":"/get-caller-file","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"get-caller-file@^2.0.1","name":"get-caller-file","escapedName":"get-caller-file","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz","_shasum":"4f94412a82db32f36e3b0b9741f8a97feb031f7e","_spec":"get-caller-file@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Stefan Penner"},"bugs":{"url":"https://github.com/stefanpenner/get-caller-file/issues"},"bundleDependencies":false,"deprecated":false,"description":"[![Build Status](https://travis-ci.org/stefanpenner/get-caller-file.svg?branch=master)](https://travis-ci.org/stefanpenner/get-caller-file) [![Build status](https://ci.appveyor.com/api/projects/status/ol2q94g1932cy14a/branch/master?svg=true)](https://ci.appveyor.com/project/embercli/get-caller-file/branch/master)","devDependencies":{"@types/chai":"^4.1.7","@types/ensure-posix-path":"^1.0.0","@types/mocha":"^5.2.6","@types/node":"^11.10.5","chai":"^4.1.2","ensure-posix-path":"^1.0.1","mocha":"^5.2.0","typescript":"^3.3.3333"},"directories":{"test":"tests"},"engines":{"node":"6.* || 8.* || >= 10.*"},"files":["index.js","index.js.map","index.d.ts"],"homepage":"https://github.com/stefanpenner/get-caller-file#readme","license":"ISC","main":"index.js","name":"get-caller-file","repository":{"type":"git","url":"git+https://github.com/stefanpenner/get-caller-file.git"},"scripts":{"prepare":"tsc","test":"mocha test","test:debug":"mocha test"},"version":"2.0.5"}');

/***/ }),

/***/ 66418:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"get-stream@^5.1.0","_id":"get-stream@5.2.0","_inBundle":false,"_integrity":"sha512-nBF+F1rAZVCu/p7rjzgA+Yb4lfYXrpl7a6VmJrU8wF9I1CKvP/QwPNZHnOlwbTkY6dvtFIzFMSyQXbLoTQPRpA==","_location":"/get-stream","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"get-stream@^5.1.0","name":"get-stream","escapedName":"get-stream","rawSpec":"^5.1.0","saveSpec":null,"fetchSpec":"^5.1.0"},"_requiredBy":["/cacheable-request"],"_resolved":"https://registry.npmjs.org/get-stream/-/get-stream-5.2.0.tgz","_shasum":"4966a1795ee5ace65e706c4b7beb71257d6e22d3","_spec":"get-stream@^5.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cacheable-request","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/get-stream/issues"},"bundleDependencies":false,"dependencies":{"pump":"^3.0.0"},"deprecated":false,"description":"Get a stream as a string, buffer, or array","devDependencies":{"@types/node":"^12.0.7","ava":"^2.0.0","into-stream":"^5.0.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts","buffer-stream.js"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/get-stream#readme","keywords":["get","stream","promise","concat","string","text","buffer","read","data","consume","readable","readablestream","array","object"],"license":"MIT","name":"get-stream","repository":{"type":"git","url":"git+https://github.com/sindresorhus/get-stream.git"},"scripts":{"test":"xo && ava && tsd"},"version":"5.2.0"}');

/***/ }),

/***/ 50348:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"get-value@^2.0.6","_id":"get-value@2.0.6","_inBundle":false,"_integrity":"sha1-3BXKHGcjh8p2vTesCjlbogQqLCg=","_location":"/get-value","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"get-value@^2.0.6","name":"get-value","escapedName":"get-value","rawSpec":"^2.0.6","saveSpec":null,"fetchSpec":"^2.0.6"},"_requiredBy":["/cache-base","/has-value","/union-value","/unset-value/has-value"],"_resolved":"https://registry.npmjs.org/get-value/-/get-value-2.0.6.tgz","_shasum":"dc15ca1c672387ca76bd37ac0a395ba2042a2c28","_spec":"get-value@^2.0.6","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cache-base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/get-value/issues"},"bundleDependencies":false,"deprecated":false,"description":"Use property paths (`a.b.c`) to get a nested value from an object.","devDependencies":{"ansi-bold":"^0.1.1","arr-reduce":"^1.0.1","benchmarked":"^0.1.4","dot-prop":"^2.2.0","getobject":"^0.1.0","gulp":"^3.9.0","gulp-eslint":"^1.1.1","gulp-format-md":"^0.1.5","gulp-istanbul":"^0.10.2","gulp-mocha":"^2.1.3","isobject":"^2.0.0","matched":"^0.3.2","minimist":"^1.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/get-value","keywords":["get","key","nested","object","path","paths","prop","properties","property","props","segment","value","values"],"license":"MIT","main":"index.js","name":"get-value","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/get-value.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["has-any","has-any-deep","has-value","set-value","unset-value"]},"reflinks":["verb","verb-readme-generator"],"lint":{"reflinks":true}},"version":"2.0.6"}');

/***/ }),

/***/ 90601:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"gh-pages","_id":"gh-pages@3.2.3","_inBundle":false,"_integrity":"sha512-jA1PbapQ1jqzacECfjUaO9gV8uBgU6XNMV0oXLtfCX3haGLe5Atq8BxlrADhbD6/UdG9j6tZLWAkAybndOXTJg==","_location":"/gh-pages","_phantomChildren":{},"_requested":{"type":"tag","registry":true,"raw":"gh-pages","name":"gh-pages","escapedName":"gh-pages","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/gh-pages/-/gh-pages-3.2.3.tgz","_shasum":"897e5f15e111f42af57d21d430b83e5cdf29472c","_spec":"gh-pages","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Tim Schaub","url":"http://tschaub.net/"},"bin":{"gh-pages":"bin/gh-pages.js","gh-pages-clean":"bin/gh-pages-clean.js"},"bugs":{"url":"https://github.com/tschaub/gh-pages/issues"},"bundleDependencies":false,"dependencies":{"async":"^2.6.1","commander":"^2.18.0","email-addresses":"^3.0.1","filenamify":"^4.3.0","find-cache-dir":"^3.3.1","fs-extra":"^8.1.0","globby":"^6.1.0"},"deprecated":false,"description":"Publish to a gh-pages branch on GitHub (or any other branch on any other remote)","devDependencies":{"chai":"^4.3.4","dir-compare":"^1.8.0","eslint":"^7.27.0","eslint-config-tschaub":"^13.1.0","mocha":"^8.4.0","sinon":"^10.0.0","tmp":"^0.2.1"},"engines":{"node":">=10"},"eslintConfig":{"extends":"tschaub"},"files":["lib","bin"],"homepage":"https://github.com/tschaub/gh-pages","keywords":["git","gh-pages","github"],"license":"MIT","main":"lib/index.js","name":"gh-pages","repository":{"type":"git","url":"git://github.com/tschaub/gh-pages.git"},"scripts":{"lint":"eslint lib test bin plugin.js","pretest":"npm run lint","test":"mocha --recursive test"},"version":"3.2.3"}');

/***/ }),

/***/ 7770:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["glob-parent@5.1.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"glob-parent@5.1.2","_id":"glob-parent@5.1.2","_inBundle":false,"_integrity":"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==","_location":"/glob-parent","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"glob-parent@5.1.2","name":"glob-parent","escapedName":"glob-parent","rawSpec":"5.1.2","saveSpec":null,"fetchSpec":"5.1.2"},"_requiredBy":["/eslint","/fast-glob"],"_resolved":"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz","_spec":"5.1.2","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Gulp Team","email":"team@gulpjs.com","url":"https://gulpjs.com/"},"bugs":{"url":"https://github.com/gulpjs/glob-parent/issues"},"contributors":[{"name":"Elan Shanker","url":"https://github.com/es128"},{"name":"Blaine Bublitz","email":"blaine.bublitz@gmail.com"}],"dependencies":{"is-glob":"^4.0.1"},"description":"Extract the non-magic parent path from a glob string.","devDependencies":{"coveralls":"^3.0.11","eslint":"^2.13.1","eslint-config-gulp":"^3.0.1","expect":"^1.20.2","mocha":"^6.0.2","nyc":"^13.3.0"},"engines":{"node":">= 6"},"files":["LICENSE","index.js"],"homepage":"https://github.com/gulpjs/glob-parent#readme","keywords":["glob","parent","strip","path","dirname","directory","base","wildcard"],"license":"ISC","main":"index.js","name":"glob-parent","repository":{"type":"git","url":"git+https://github.com/gulpjs/glob-parent.git"},"scripts":{"azure-pipelines":"nyc mocha --async-only --reporter xunit -O output=test.xunit","coveralls":"nyc report --reporter=text-lcov | coveralls","lint":"eslint .","pretest":"npm run lint","test":"nyc mocha --async-only"},"version":"5.1.2"}');

/***/ }),

/***/ 48893:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"glob-to-regexp@^0.3.0","_id":"glob-to-regexp@0.3.0","_inBundle":false,"_integrity":"sha1-jFoUlNIGbFcMw7/kSWF1rMTVAqs=","_location":"/glob-to-regexp","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"glob-to-regexp@^0.3.0","name":"glob-to-regexp","escapedName":"glob-to-regexp","rawSpec":"^0.3.0","saveSpec":null,"fetchSpec":"^0.3.0"},"_requiredBy":["/@mrmlnc/readdir-enhanced"],"_resolved":"https://registry.npmjs.org/glob-to-regexp/-/glob-to-regexp-0.3.0.tgz","_shasum":"8c5a1494d2066c570cc3bfe4496175acc4d502ab","_spec":"glob-to-regexp@^0.3.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@mrmlnc/readdir-enhanced","author":{"name":"Nick Fitzgerald","email":"fitzgen@gmail.com"},"bugs":{"url":"https://github.com/fitzgen/glob-to-regexp/issues"},"bundleDependencies":false,"deprecated":false,"description":"Convert globs to regular expressions","homepage":"https://github.com/fitzgen/glob-to-regexp#readme","keywords":["regexp","glob","regexps","regular expressions","regular expression","wildcard"],"license":"BSD","main":"index.js","name":"glob-to-regexp","repository":{"type":"git","url":"git+https://github.com/fitzgen/glob-to-regexp.git"},"scripts":{"test":"node test.js"},"version":"0.3.0"}');

/***/ }),

/***/ 90388:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["glob@7.1.6","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"glob@7.1.6","_id":"glob@7.1.6","_inBundle":false,"_integrity":"sha512-LwaxwyZ72Lk7vZINtNNrywX0ZuLyStrdDtabefZKAY5ZGJhVtgdznluResxNmPitE0SAO+O26sWTHeKSI2wMBA==","_location":"/glob","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"glob@7.1.6","name":"glob","escapedName":"glob","rawSpec":"7.1.6","saveSpec":null,"fetchSpec":"7.1.6"},"_requiredBy":["/rimraf"],"_resolved":"https://registry.npmjs.org/glob/-/glob-7.1.6.tgz","_spec":"7.1.6","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/node-glob/issues"},"dependencies":{"fs.realpath":"^1.0.0","inflight":"^1.0.4","inherits":"2","minimatch":"^3.0.4","once":"^1.3.0","path-is-absolute":"^1.0.0"},"description":"a little globber","devDependencies":{"mkdirp":"0","rimraf":"^2.2.8","tap":"^12.0.1","tick":"0.0.6"},"engines":{"node":"*"},"files":["glob.js","sync.js","common.js"],"funding":{"url":"https://github.com/sponsors/isaacs"},"homepage":"https://github.com/isaacs/node-glob#readme","license":"ISC","main":"glob.js","name":"glob","repository":{"type":"git","url":"git://github.com/isaacs/node-glob.git"},"scripts":{"bench":"bash benchmark.sh","benchclean":"node benchclean.js","prepublish":"npm run benchclean","prof":"bash prof.sh && cat profile.txt","profclean":"rm -f v8.log profile.txt","test":"tap test/*.js --cov","test-regen":"npm run profclean && TEST_REGEN=1 node test/00-setup.js"},"version":"7.1.6"}');

/***/ }),

/***/ 24709:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"globals@^13.6.0","_id":"globals@13.12.0","_inBundle":false,"_integrity":"sha512-uS8X6lSKN2JumVoXrbUz+uG4BYG+eiawqm3qFcT7ammfbUHeCBoJMlHcec/S3krSk73/AE/f0szYFmgAA3kYZg==","_location":"/globals","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"globals@^13.6.0","name":"globals","escapedName":"globals","rawSpec":"^13.6.0","saveSpec":null,"fetchSpec":"^13.6.0"},"_requiredBy":["/@eslint/eslintrc","/eslint"],"_resolved":"https://registry.npmjs.org/globals/-/globals-13.12.0.tgz","_shasum":"4d733760304230a0082ed96e21e5c565f898089e","_spec":"globals@^13.6.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/globals/issues"},"bundleDependencies":false,"dependencies":{"type-fest":"^0.20.2"},"deprecated":false,"description":"Global identifiers from different JavaScript environments","devDependencies":{"ava":"^2.4.0","tsd":"^0.14.0","xo":"^0.36.1"},"engines":{"node":">=8"},"files":["index.js","index.d.ts","globals.json"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/globals#readme","keywords":["globals","global","identifiers","variables","vars","jshint","eslint","environments"],"license":"MIT","name":"globals","repository":{"type":"git","url":"git+https://github.com/sindresorhus/globals.git"},"scripts":{"test":"xo && ava"},"tsd":{"compilerOptions":{"resolveJsonModule":true}},"version":"13.12.0","xo":{"ignores":["get-browser-globals.js"],"rules":{"node/no-unsupported-features/es-syntax":"off"}}}');

/***/ }),

/***/ 7180:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"globby@^6.1.0","_id":"globby@6.1.0","_inBundle":false,"_integrity":"sha1-9abXDoOV4hyFj7BInWTfAkJNUGw=","_location":"/globby","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"globby@^6.1.0","name":"globby","escapedName":"globby","rawSpec":"^6.1.0","saveSpec":null,"fetchSpec":"^6.1.0"},"_requiredBy":["/gh-pages"],"_resolved":"https://registry.npmjs.org/globby/-/globby-6.1.0.tgz","_shasum":"f5a6d70e8395e21c858fb0489d64df02424d506c","_spec":"globby@^6.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/gh-pages","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/globby/issues"},"bundleDependencies":false,"dependencies":{"array-union":"^1.0.1","glob":"^7.0.3","object-assign":"^4.0.1","pify":"^2.0.0","pinkie-promise":"^2.0.0"},"deprecated":false,"description":"Extends `glob` with support for multiple patterns and exposes a Promise API","devDependencies":{"ava":"*","glob-stream":"github:gulpjs/glob-stream#master","globby":"github:sindresorhus/globby#master","matcha":"^0.7.0","rimraf":"^2.2.8","xo":"^0.16.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/globby#readme","keywords":["all","array","directories","dirs","expand","files","filesystem","filter","find","fnmatch","folders","fs","glob","globbing","globs","gulpfriendly","match","matcher","minimatch","multi","multiple","paths","pattern","patterns","traverse","util","utility","wildcard","wildcards","promise"],"license":"MIT","name":"globby","repository":{"type":"git","url":"git+https://github.com/sindresorhus/globby.git"},"scripts":{"bench":"npm update glob-stream && matcha bench.js","test":"xo && ava"},"version":"6.1.0"}');

/***/ }),

/***/ 9248:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"got","_id":"got@11.8.2","_inBundle":false,"_integrity":"sha512-D0QywKgIe30ODs+fm8wMZiAcZjypcCodPNuMz5H9Mny7RJ+IjJ10BdmGW7OM7fHXP+O7r6ZwapQ/YQmMSvB0UQ==","_location":"/got","_phantomChildren":{},"_requested":{"type":"tag","registry":true,"raw":"got","name":"got","escapedName":"got","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/got/-/got-11.8.2.tgz","_shasum":"7abb3959ea28c31f3576f1576c1effce23f33599","_spec":"got","_where":"/Users/brian.kimball/Github/bump-and-release","ava":{"files":["test/*"],"timeout":"1m","typescript":{"rewritePaths":{"test/":"dist/test/"}}},"bugs":{"url":"https://github.com/sindresorhus/got/issues"},"bundleDependencies":false,"dependencies":{"@sindresorhus/is":"^4.0.0","@szmarczak/http-timer":"^4.0.5","@types/cacheable-request":"^6.0.1","@types/responselike":"^1.0.0","cacheable-lookup":"^5.0.3","cacheable-request":"^7.0.1","decompress-response":"^6.0.0","http2-wrapper":"^1.0.0-beta.5.2","lowercase-keys":"^2.0.0","p-cancelable":"^2.0.0","responselike":"^2.0.0"},"deprecated":false,"description":"Human-friendly and powerful HTTP request library for Node.js","devDependencies":{"@ava/typescript":"^1.1.1","@sindresorhus/tsconfig":"^0.7.0","@sinonjs/fake-timers":"^6.0.1","@types/benchmark":"^1.0.33","@types/express":"^4.17.7","@types/node":"^14.14.0","@types/node-fetch":"^2.5.7","@types/pem":"^1.9.5","@types/pify":"^3.0.2","@types/request":"^2.48.5","@types/sinon":"^9.0.5","@types/tough-cookie":"^4.0.0","ava":"^3.11.1","axios":"^0.20.0","benchmark":"^2.1.4","coveralls":"^3.1.0","create-test-server":"^3.0.1","del-cli":"^3.0.1","delay":"^4.4.0","express":"^4.17.1","form-data":"^3.0.0","get-stream":"^6.0.0","nock":"^13.0.4","node-fetch":"^2.6.0","np":"^6.4.0","nyc":"^15.1.0","p-event":"^4.2.0","pem":"^1.14.4","pify":"^5.0.0","sinon":"^9.0.3","slow-stream":"0.0.4","tempy":"^1.0.0","to-readable-stream":"^2.1.0","tough-cookie":"^4.0.0","typescript":"4.0.3","xo":"^0.34.1"},"engines":{"node":">=10.19.0"},"files":["dist/source"],"funding":"https://github.com/sindresorhus/got?sponsor=1","homepage":"https://github.com/sindresorhus/got#readme","keywords":["http","https","http2","get","got","url","uri","request","simple","curl","wget","fetch","net","network","gzip","brotli","requests","human-friendly","axios","superagent","node-fetch","ky"],"license":"MIT","main":"dist/source","name":"got","nyc":{"extension":[".ts"],"exclude":["**/test/**"]},"repository":{"type":"git","url":"git+https://github.com/sindresorhus/got.git"},"runkitExampleFilename":"./documentation/examples/runkit-example.js","scripts":{"build":"del-cli dist && tsc","prepare":"npm run build","release":"np","test":"xo && npm run build && nyc --reporter=html --reporter=text ava"},"sideEffects":false,"types":"dist/source","version":"11.8.2","xo":{"ignores":["documentation/examples/*"],"rules":{"@typescript-eslint/no-empty-function":"off","node/prefer-global/url":"off","node/prefer-global/url-search-params":"off","import/no-anonymous-default-export":"off","@typescript-eslint/no-implicit-any-catch":"off"}}}');

/***/ }),

/***/ 84952:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"graceful-fs@^4.2.0","_id":"graceful-fs@4.2.8","_inBundle":false,"_integrity":"sha512-qkIilPUYcNhJpd33n0GBXTB1MMPp14TxEsEs0pTrsSVucApsYzW5V+Q8Qxhik6KU3evy+qkAAowTByymK0avdg==","_location":"/graceful-fs","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"graceful-fs@^4.2.0","name":"graceful-fs","escapedName":"graceful-fs","rawSpec":"^4.2.0","saveSpec":null,"fetchSpec":"^4.2.0"},"_requiredBy":["/fs-extra","/jsonfile"],"_resolved":"https://registry.npmjs.org/graceful-fs/-/graceful-fs-4.2.8.tgz","_shasum":"e412b8d33f5e006593cbd3cee6df9f2cebbe802a","_spec":"graceful-fs@^4.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fs-extra","bugs":{"url":"https://github.com/isaacs/node-graceful-fs/issues"},"bundleDependencies":false,"deprecated":false,"description":"A drop-in replacement for fs, making various improvements.","devDependencies":{"import-fresh":"^2.0.0","mkdirp":"^0.5.0","rimraf":"^2.2.8","tap":"^12.7.0"},"directories":{"test":"test"},"files":["fs.js","graceful-fs.js","legacy-streams.js","polyfills.js","clone.js"],"homepage":"https://github.com/isaacs/node-graceful-fs#readme","keywords":["fs","module","reading","retry","retries","queue","error","errors","handling","EMFILE","EAGAIN","EINVAL","EPERM","EACCESS"],"license":"ISC","main":"graceful-fs.js","name":"graceful-fs","repository":{"type":"git","url":"git+https://github.com/isaacs/node-graceful-fs.git"},"scripts":{"postpublish":"git push origin --follow-tags","posttest":"nyc report","postversion":"npm publish","preversion":"npm test","test":"nyc --silent node test.js | tap -c -"},"version":"4.2.8"}');

/***/ }),

/***/ 91413:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"hard-rejection@^2.1.0","_id":"hard-rejection@2.1.0","_inBundle":false,"_integrity":"sha512-VIZB+ibDhx7ObhAe7OVtoEbuP4h/MuOTHJ+J8h/eBXotJYl0fBgR72xDFCKgIh22OJZIOVNxBMWuhAr10r8HdA==","_location":"/hard-rejection","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"hard-rejection@^2.1.0","name":"hard-rejection","escapedName":"hard-rejection","rawSpec":"^2.1.0","saveSpec":null,"fetchSpec":"^2.1.0"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/hard-rejection/-/hard-rejection-2.1.0.tgz","_shasum":"1c6eda5c1685c63942766d79bb40ae773cecd883","_spec":"hard-rejection@^2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/hard-rejection/issues"},"bundleDependencies":false,"deprecated":false,"description":"Make unhandled promise rejections fail hard right away instead of the default silent fail","devDependencies":{"ava":"^1.4.1","execa":"^1.0.0","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts","register.js"],"homepage":"https://github.com/sindresorhus/hard-rejection#readme","keywords":["promise","promises","unhandled","uncaught","rejection","hard","fail","catch","throw","handler","exit","debug","debugging","verbose","immediate","immediately"],"license":"MIT","name":"hard-rejection","repository":{"type":"git","url":"git+https://github.com/sindresorhus/hard-rejection.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.1.0"}');

/***/ }),

/***/ 99317:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["has-flag@3.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"has-flag@3.0.0","_id":"has-flag@3.0.0","_inBundle":false,"_integrity":"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=","_location":"/has-flag","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"has-flag@3.0.0","name":"has-flag","escapedName":"has-flag","rawSpec":"3.0.0","saveSpec":null,"fetchSpec":"3.0.0"},"_requiredBy":["/supports-color"],"_resolved":"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz","_spec":"3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/has-flag/issues"},"description":"Check if argv has a specific flag","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/has-flag#readme","keywords":["has","check","detect","contains","find","flag","cli","command-line","argv","process","arg","args","argument","arguments","getopt","minimist","optimist"],"license":"MIT","name":"has-flag","repository":{"type":"git","url":"git+https://github.com/sindresorhus/has-flag.git"},"scripts":{"test":"xo && ava"},"version":"3.0.0"}');

/***/ }),

/***/ 366:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-glob@^3.0.0","_id":"is-glob@3.1.0","_inBundle":false,"_integrity":"sha1-e6WuJCF4BKxwcHuWkiVnSGzD6Eo=","_location":"/has-glob/is-glob","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-glob@^3.0.0","name":"is-glob","escapedName":"is-glob","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/has-glob"],"_resolved":"https://registry.npmjs.org/is-glob/-/is-glob-3.1.0.tgz","_shasum":"7ba5ae24217804ac70707b96922567486cc3e84a","_spec":"is-glob@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/has-glob","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-glob/issues"},"bundleDependencies":false,"contributors":[{"name":"Daniel Perez","email":"daniel@claudetech.com","url":"http://tuvistavie.com"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"is-extglob":"^2.1.0"},"deprecated":false,"description":"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.","devDependencies":{"gulp-format-md":"^0.1.10","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-glob","keywords":["bash","braces","check","exec","expression","extglob","glob","globbing","globstar","is","match","matches","pattern","regex","regular","string","test"],"license":"MIT","main":"index.js","name":"is-glob","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-glob.git"},"scripts":{"test":"mocha"},"verb":{"layout":"default","plugins":["gulp-format-md"],"related":{"list":["assemble","base","update","verb"]},"reflinks":["assemble","bach","base","composer","gulp","has-glob","is-valid-glob","micromatch","npm","scaffold","verb","vinyl"]},"version":"3.1.0"}');

/***/ }),

/***/ 30840:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"has-glob@^1.0.0","_id":"has-glob@1.0.0","_inBundle":false,"_integrity":"sha1-mqqe7b/7G6OZCnsAEPtnjuAIEgc=","_location":"/has-glob","_phantomChildren":{"is-extglob":"2.1.1"},"_requested":{"type":"range","registry":true,"raw":"has-glob@^1.0.0","name":"has-glob","escapedName":"has-glob","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/has-glob/-/has-glob-1.0.0.tgz","_shasum":"9aaa9eedbffb1ba3990a7b0010fb678ee0081207","_spec":"has-glob@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/has-glob/issues"},"bundleDependencies":false,"dependencies":{"is-glob":"^3.0.0"},"deprecated":false,"description":"Returns `true` if an array has a glob pattern.","devDependencies":{"gulp-format-md":"^0.1.10","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/has-glob","keywords":["bash","braces","check","exec","expression","extglob","glob","globbing","globstar","has","match","matches","pattern","regex","regular","string","test"],"license":"MIT","main":"index.js","name":"has-glob","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-glob.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["has-glob","is-glob","is-negated-glob","is-valid-glob","micromatch"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb","verb-generate-readme"]},"version":"1.0.0"}');

/***/ }),

/***/ 75754:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"has-value@^1.0.0","_id":"has-value@1.0.0","_inBundle":false,"_integrity":"sha1-GLKB2lhbHFxR3vJMkw7SmgvmsXc=","_location":"/has-value","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"has-value@^1.0.0","name":"has-value","escapedName":"has-value","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/cache-base"],"_resolved":"https://registry.npmjs.org/has-value/-/has-value-1.0.0.tgz","_shasum":"18b281da585b1c5c51def24c930ed29a0be6b177","_spec":"has-value@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cache-base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/has-value/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ryan M Harrison","url":"https://linkedin.com/in/harrisonrm"}],"dependencies":{"get-value":"^2.0.6","has-values":"^1.0.0","isobject":"^3.0.0"},"deprecated":false,"description":"Returns true if a value exists, false if empty. Works with deeply nested values using object paths.","devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.4.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/has-value","keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value"],"license":"MIT","main":"index.js","name":"has-value","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-value.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["define-property","get-value","set-value","unset-value"]},"reflinks":[],"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 43461:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^3.0.2","_id":"kind-of@3.2.2","_inBundle":false,"_integrity":"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=","_location":"/has-values/is-number/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^3.0.2","name":"kind-of","escapedName":"kind-of","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/has-values/is-number"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz","_shasum":"31ea21a734bab9bbb0f32466d893aea51e4a3c64","_spec":"kind-of@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/has-values/node_modules/is-number","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.0.0","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.3.0","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.2.2"}');

/***/ }),

/***/ 81752:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-number@^3.0.0","_id":"is-number@3.0.0","_inBundle":false,"_integrity":"sha1-JP1iAaR4LPUFYcgQJ2r8fRLXEZU=","_location":"/has-values/is-number","_phantomChildren":{"is-buffer":"1.1.6"},"_requested":{"type":"range","registry":true,"raw":"is-number@^3.0.0","name":"is-number","escapedName":"is-number","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/has-values"],"_resolved":"https://registry.npmjs.org/is-number/-/is-number-3.0.0.tgz","_shasum":"24fd6201a4782cf50561c810276afc7d12d71195","_spec":"is-number@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/has-values","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-number/issues"},"bundleDependencies":false,"contributors":[{"name":"Charlike Mike Reagent","url":"http://www.tunnckocore.tk"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"kind-of":"^3.0.2"},"deprecated":false,"description":"Returns true if the value is a number. comprehensive tests.","devDependencies":{"benchmarked":"^0.2.5","chalk":"^1.1.3","gulp-format-md":"^0.1.10","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-number","keywords":["check","coerce","coercion","integer","is","is-nan","is-num","is-number","istype","kind","math","nan","num","number","numeric","test","type","typeof","value"],"license":"MIT","main":"index.js","name":"is-number","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-number.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["even","is-even","is-odd","is-primitive","kind-of","odd"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb","verb-generate-readme"]},"version":"3.0.0"}');

/***/ }),

/***/ 56457:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^4.0.0","_id":"kind-of@4.0.0","_inBundle":false,"_integrity":"sha1-IIE989cSkosgc3hpGkUGb65y3Vc=","_location":"/has-values/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^4.0.0","name":"kind-of","escapedName":"kind-of","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/has-values"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-4.0.0.tgz","_shasum":"20813df3d712928b207378691a45066fae72dd57","_spec":"kind-of@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/has-values","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.1.1","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.4.1","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"4.0.0"}');

/***/ }),

/***/ 63352:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"has-values@^1.0.0","_id":"has-values@1.0.0","_inBundle":false,"_integrity":"sha1-lbC2P+whRmGab+V/51Yo1aOe/k8=","_location":"/has-values","_phantomChildren":{"is-buffer":"1.1.6"},"_requested":{"type":"range","registry":true,"raw":"has-values@^1.0.0","name":"has-values","escapedName":"has-values","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/has-value"],"_resolved":"https://registry.npmjs.org/has-values/-/has-values-1.0.0.tgz","_shasum":"95b0b63fec2146619a6fe57fe75628d5a39efe4f","_spec":"has-values@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/has-value","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"bundleDependencies":false,"dependencies":{"is-number":"^3.0.0","kind-of":"^4.0.0"},"deprecated":false,"description":"Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ","devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.4.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/has-values","keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value","values"],"license":"MIT","main":"index.js","name":"has-values","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-values.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["has-value","kind-of","is-number","is-plain-object","isobject"]},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 60936:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"has@^1.0.3","_id":"has@1.0.3","_inBundle":false,"_integrity":"sha512-f2dvO0VU6Oej7RkWJGrehjbzMAjFp5/VKPp5tTpWIV4JHHZK1/BxbFRtf/siA2SWTe09caDmVtYYzWEIbBS4zw==","_location":"/has","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"has@^1.0.3","name":"has","escapedName":"has","rawSpec":"^1.0.3","saveSpec":null,"fetchSpec":"^1.0.3"},"_requiredBy":["/is-core-module"],"_resolved":"https://registry.npmjs.org/has/-/has-1.0.3.tgz","_shasum":"722d7cbfc1f6aa8241f16dd814e011e1f41e8796","_spec":"has@^1.0.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/is-core-module","author":{"name":"Thiago de Arruda","email":"tpadilha84@gmail.com"},"bugs":{"url":"https://github.com/tarruda/has/issues"},"bundleDependencies":false,"contributors":[{"name":"Jordan Harband","email":"ljharb@gmail.com","url":"http://ljharb.codes"}],"dependencies":{"function-bind":"^1.1.1"},"deprecated":false,"description":"Object.prototype.hasOwnProperty.call shortcut","devDependencies":{"@ljharb/eslint-config":"^12.2.1","eslint":"^4.19.1","tape":"^4.9.0"},"engines":{"node":">= 0.4.0"},"homepage":"https://github.com/tarruda/has","license":"MIT","licenses":[{"type":"MIT","url":"https://github.com/tarruda/has/blob/master/LICENSE-MIT"}],"main":"./src","name":"has","repository":{"type":"git","url":"git://github.com/tarruda/has.git"},"scripts":{"lint":"eslint .","pretest":"npm run lint","test":"tape test"},"version":"1.0.3"}');

/***/ }),

/***/ 57972:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"hosted-git-info@^2.1.4","_id":"hosted-git-info@2.8.9","_inBundle":false,"_integrity":"sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==","_location":"/hosted-git-info","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"hosted-git-info@^2.1.4","name":"hosted-git-info","escapedName":"hosted-git-info","rawSpec":"^2.1.4","saveSpec":null,"fetchSpec":"^2.1.4"},"_requiredBy":["/normalize-package-data"],"_resolved":"https://registry.npmjs.org/hosted-git-info/-/hosted-git-info-2.8.9.tgz","_shasum":"dffc0bf9a21c02209090f2aa69429e1414daf3f9","_spec":"hosted-git-info@^2.1.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/normalize-package-data","author":{"name":"Rebecca Turner","email":"me@re-becca.org","url":"http://re-becca.org"},"bugs":{"url":"https://github.com/npm/hosted-git-info/issues"},"bundleDependencies":false,"deprecated":false,"description":"Provides metadata and conversions from repository urls for Github, Bitbucket and Gitlab","devDependencies":{"standard":"^11.0.1","standard-version":"^4.4.0","tap":"^12.7.0"},"files":["index.js","git-host.js","git-host-info.js"],"homepage":"https://github.com/npm/hosted-git-info","keywords":["git","github","bitbucket","gitlab"],"license":"ISC","main":"index.js","name":"hosted-git-info","repository":{"type":"git","url":"git+https://github.com/npm/hosted-git-info.git"},"scripts":{"postrelease":"npm publish --tag=ancient-legacy-fixes && git push --follow-tags","posttest":"standard","prerelease":"npm t","release":"standard-version -s","test":"tap -J --coverage=90 --no-esm test/*.js","test:coverage":"tap --coverage-report=html -J --coverage=90 --no-esm test/*.js"},"version":"2.8.9"}');

/***/ }),

/***/ 17666:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"http-cache-semantics@^4.0.0","_id":"http-cache-semantics@4.1.0","_inBundle":false,"_integrity":"sha512-carPklcUh7ROWRK7Cv27RPtdhYhUsela/ue5/jKzjegVvXDqM2ILE9Q2BGn9JZJh1g87cp56su/FgQSzcWS8cQ==","_location":"/http-cache-semantics","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"http-cache-semantics@^4.0.0","name":"http-cache-semantics","escapedName":"http-cache-semantics","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/cacheable-request"],"_resolved":"https://registry.npmjs.org/http-cache-semantics/-/http-cache-semantics-4.1.0.tgz","_shasum":"49e91c5cbf36c9b94bcfcd71c23d5249ec74e390","_spec":"http-cache-semantics@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cacheable-request","author":{"name":"Kornel Lesiński","email":"kornel@geekhood.net","url":"https://kornel.ski/"},"bugs":{"url":"https://github.com/kornelski/http-cache-semantics/issues"},"bundleDependencies":false,"deprecated":false,"description":"Parses Cache-Control and other headers. Helps building correct HTTP caches and proxies","devDependencies":{"eslint":"^5.13.0","eslint-plugin-prettier":"^3.0.1","husky":"^0.14.3","lint-staged":"^8.1.3","mocha":"^5.1.0","prettier":"^1.14.3","prettier-eslint-cli":"^4.7.1"},"files":["index.js"],"homepage":"https://github.com/kornelski/http-cache-semantics#readme","license":"BSD-2-Clause","main":"index.js","name":"http-cache-semantics","repository":{"type":"git","url":"git+https://github.com/kornelski/http-cache-semantics.git"},"scripts":{"test":"mocha"},"version":"4.1.0"}');

/***/ }),

/***/ 30375:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"http2-wrapper@^1.0.0-beta.5.2","_id":"http2-wrapper@1.0.3","_inBundle":false,"_integrity":"sha512-V+23sDMr12Wnz7iTcDeJr3O6AIxlnvT/bmaAAAP/Xda35C90p9599p0F1eHR/N1KILWSoWVAiOMFjBBXaXSMxg==","_location":"/http2-wrapper","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"http2-wrapper@^1.0.0-beta.5.2","name":"http2-wrapper","escapedName":"http2-wrapper","rawSpec":"^1.0.0-beta.5.2","saveSpec":null,"fetchSpec":"^1.0.0-beta.5.2"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/http2-wrapper/-/http2-wrapper-1.0.3.tgz","_shasum":"b8f55e0c1f25d4ebd08b3b0c2c079f9590800b3d","_spec":"http2-wrapper@^1.0.0-beta.5.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Szymon Marczak"},"ava":{"timeout":"2m"},"bugs":{"url":"https://github.com/szmarczak/http2-wrapper/issues"},"bundleDependencies":false,"dependencies":{"quick-lru":"^5.1.1","resolve-alpn":"^1.0.0"},"deprecated":false,"description":"HTTP2 client, just with the familiar `https` API","devDependencies":{"@sindresorhus/is":"^3.0.0","ava":"^3.10.1","benchmark":"^2.1.4","get-stream":"^5.1.0","got":"^11.5.0","http2-proxy":"^5.0.51","lolex":"^6.0.0","many-keys-map":"^1.0.2","nyc":"^15.1.0","p-event":"^4.2.0","tempy":"^0.5.0","to-readable-stream":"^2.1.0","tsd":"^0.13.1","xo":"^0.32.1"},"engines":{"node":">=10.19.0"},"files":["source"],"homepage":"https://github.com/szmarczak/http2-wrapper#readme","keywords":["http2","https","http","request"],"license":"MIT","main":"source","name":"http2-wrapper","repository":{"type":"git","url":"git+https://github.com/szmarczak/http2-wrapper.git"},"scripts":{"test":"xo && nyc --reporter=lcovonly --reporter=text --reporter=html ava"},"version":"1.0.3"}');

/***/ }),

/***/ 73548:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ignore@4.0.6","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ignore@4.0.6","_id":"ignore@4.0.6","_inBundle":false,"_integrity":"sha512-cyFDKrqc/YdcWFniJhzI42+AzS+gNwmUzOSFcRCQYwySuBBBy/KjuxWLZ/FHEH6Moq1NizMOBWyTcv8O4OZIMg==","_location":"/ignore","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ignore@4.0.6","name":"ignore","escapedName":"ignore","rawSpec":"4.0.6","saveSpec":null,"fetchSpec":"4.0.6"},"_requiredBy":["/@eslint/eslintrc","/eslint"],"_resolved":"https://registry.npmjs.org/ignore/-/ignore-4.0.6.tgz","_spec":"4.0.6","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"kael"},"bugs":{"url":"https://github.com/kaelzhang/node-ignore/issues"},"description":"Ignore is a manager and filter for .gitignore rules.","devDependencies":{"babel-cli":"^6.26.0","babel-preset-env":"^1.7.0","codecov":"^3.0.4","eslint":"^5.3.0","eslint-config-ostai":"^1.3.2","eslint-plugin-import":"^2.13.0","mkdirp":"^0.5.1","pre-suf":"^1.1.0","rimraf":"^2.6.2","spawn-sync":"^2.0.0","tap":"^12.0.1","tmp":"0.0.33","typescript":"^3.0.1"},"engines":{"node":">= 4"},"files":["legacy.js","index.js","index.d.ts","LICENSE-MIT"],"homepage":"https://github.com/kaelzhang/node-ignore#readme","keywords":["ignore",".gitignore","gitignore","npmignore","rules","manager","filter","regexp","regex","fnmatch","glob","asterisks","regular-expression"],"license":"MIT","name":"ignore","repository":{"type":"git","url":"git+ssh://git@github.com/kaelzhang/node-ignore.git"},"scripts":{"build":"babel -o legacy.js index.js","posttest":"tap --coverage-report=html && codecov","prepublish":"npm run build","test":"npm run test-no-cov","test-no-cov":"npm run test:lint && npm run test:tsc && tap test/*.js --coverage","test:git":"tap test/git-check-ignore.js","test:ignore":"tap test/ignore.js --coverage","test:lint":"eslint .","test:tsc":"tsc ./test/ts/simple.ts"},"version":"4.0.6"}');

/***/ }),

/***/ 50886:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["import-fresh@3.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"import-fresh@3.3.0","_id":"import-fresh@3.3.0","_inBundle":false,"_integrity":"sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==","_location":"/import-fresh","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"import-fresh@3.3.0","name":"import-fresh","escapedName":"import-fresh","rawSpec":"3.3.0","saveSpec":null,"fetchSpec":"3.3.0"},"_requiredBy":["/@eslint/eslintrc","/eslint"],"_resolved":"https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz","_spec":"3.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/import-fresh/issues"},"dependencies":{"parent-module":"^1.0.0","resolve-from":"^4.0.0"},"description":"Import a module while bypassing the cache","devDependencies":{"ava":"^1.0.1","heapdump":"^0.3.12","tsd":"^0.7.3","xo":"^0.23.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/import-fresh#readme","keywords":["require","cache","uncache","uncached","module","fresh","bypass"],"license":"MIT","name":"import-fresh","repository":{"type":"git","url":"git+https://github.com/sindresorhus/import-fresh.git"},"scripts":{"heapdump":"node heapdump.js","test":"xo && ava && tsd"},"version":"3.3.0"}');

/***/ }),

/***/ 48528:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["imurmurhash@0.1.4","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"imurmurhash@0.1.4","_id":"imurmurhash@0.1.4","_inBundle":false,"_integrity":"sha1-khi5srkoojixPcT7a21XbyMUU+o=","_location":"/imurmurhash","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"imurmurhash@0.1.4","name":"imurmurhash","escapedName":"imurmurhash","rawSpec":"0.1.4","saveSpec":null,"fetchSpec":"0.1.4"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz","_spec":"0.1.4","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Jens Taylor","email":"jensyt@gmail.com","url":"https://github.com/homebrewing"},"bugs":{"url":"https://github.com/jensyt/imurmurhash-js/issues"},"dependencies":{},"description":"An incremental implementation of MurmurHash3","devDependencies":{},"engines":{"node":">=0.8.19"},"files":["imurmurhash.js","imurmurhash.min.js","package.json","README.md"],"homepage":"https://github.com/jensyt/imurmurhash-js","keywords":["murmur","murmurhash","murmurhash3","hash","incremental"],"license":"MIT","main":"imurmurhash.js","name":"imurmurhash","repository":{"type":"git","url":"git+https://github.com/jensyt/imurmurhash-js.git"},"version":"0.1.4"}');

/***/ }),

/***/ 41925:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"indent-string@^4.0.0","_id":"indent-string@4.0.0","_inBundle":false,"_integrity":"sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==","_location":"/indent-string","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"indent-string@^4.0.0","name":"indent-string","escapedName":"indent-string","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/aggregate-error","/redent"],"_resolved":"https://registry.npmjs.org/indent-string/-/indent-string-4.0.0.tgz","_shasum":"624f8f4497d619b2d9768531d58f4122854d7251","_spec":"indent-string@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/aggregate-error","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/indent-string/issues"},"bundleDependencies":false,"deprecated":false,"description":"Indent each line in a string","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/indent-string#readme","keywords":["indent","string","pad","align","line","text","each","every"],"license":"MIT","name":"indent-string","repository":{"type":"git","url":"git+https://github.com/sindresorhus/indent-string.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.0.0"}');

/***/ }),

/***/ 8755:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["inflight@1.0.6","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"inflight@1.0.6","_id":"inflight@1.0.6","_inBundle":false,"_integrity":"sha1-Sb1jMdfQLQwJvJEKEHW6gWW1bfk=","_location":"/inflight","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"inflight@1.0.6","name":"inflight","escapedName":"inflight","rawSpec":"1.0.6","saveSpec":null,"fetchSpec":"1.0.6"},"_requiredBy":["/glob"],"_resolved":"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz","_spec":"1.0.6","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/inflight/issues"},"dependencies":{"once":"^1.3.0","wrappy":"1"},"description":"Add callbacks to requests in flight to avoid async duplication","devDependencies":{"tap":"^7.1.2"},"files":["inflight.js"],"homepage":"https://github.com/isaacs/inflight","license":"ISC","main":"inflight.js","name":"inflight","repository":{"type":"git","url":"git+https://github.com/npm/inflight.git"},"scripts":{"test":"tap test.js --100"},"version":"1.0.6"}');

/***/ }),

/***/ 79394:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["inherits@2.0.4","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"inherits@2.0.4","_id":"inherits@2.0.4","_inBundle":false,"_integrity":"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==","_location":"/inherits","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"inherits@2.0.4","name":"inherits","escapedName":"inherits","rawSpec":"2.0.4","saveSpec":null,"fetchSpec":"2.0.4"},"_requiredBy":["/glob"],"_resolved":"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz","_spec":"2.0.4","_where":"/Users/brian.kimball/Github/bump-and-release","browser":"./inherits_browser.js","bugs":{"url":"https://github.com/isaacs/inherits/issues"},"description":"Browser-friendly inheritance fully compatible with standard node.js inherits()","devDependencies":{"tap":"^14.2.4"},"files":["inherits.js","inherits_browser.js"],"homepage":"https://github.com/isaacs/inherits#readme","keywords":["inheritance","class","klass","oop","object-oriented","inherits","browser","browserify"],"license":"ISC","main":"./inherits.js","name":"inherits","repository":{"type":"git","url":"git://github.com/isaacs/inherits.git"},"scripts":{"test":"tap"},"version":"2.0.4"}');

/***/ }),

/***/ 56637:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^3.0.2","_id":"kind-of@3.2.2","_inBundle":false,"_integrity":"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=","_location":"/is-accessor-descriptor/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^3.0.2","name":"kind-of","escapedName":"kind-of","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/is-accessor-descriptor"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz","_shasum":"31ea21a734bab9bbb0f32466d893aea51e4a3c64","_spec":"kind-of@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/is-accessor-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.0.0","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.3.0","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.2.2"}');

/***/ }),

/***/ 48246:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-accessor-descriptor@^0.1.6","_id":"is-accessor-descriptor@0.1.6","_inBundle":false,"_integrity":"sha1-qeEss66Nh2cn7u84Q/igiXtcmNY=","_location":"/is-accessor-descriptor","_phantomChildren":{"is-buffer":"1.1.6"},"_requested":{"type":"range","registry":true,"raw":"is-accessor-descriptor@^0.1.6","name":"is-accessor-descriptor","escapedName":"is-accessor-descriptor","rawSpec":"^0.1.6","saveSpec":null,"fetchSpec":"^0.1.6"},"_requiredBy":["/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-0.1.6.tgz","_shasum":"a9e12cb3ae8d876727eeef3843f8a0897b5c98d6","_spec":"is-accessor-descriptor@^0.1.6","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-accessor-descriptor/issues"},"bundleDependencies":false,"dependencies":{"kind-of":"^3.0.2"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.","devDependencies":{"mocha":"*","should":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-accessor-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-accessor-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-accessor-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"plugins":["gulp-format-md"],"layout":"default"},"version":"0.1.6"}');

/***/ }),

/***/ 4266:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-arrayish@^0.2.1","_id":"is-arrayish@0.2.1","_inBundle":false,"_integrity":"sha1-d8mYQFJ6qOyxqLppe4BkWnqSap0=","_location":"/is-arrayish","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-arrayish@^0.2.1","name":"is-arrayish","escapedName":"is-arrayish","rawSpec":"^0.2.1","saveSpec":null,"fetchSpec":"^0.2.1"},"_requiredBy":["/error-ex"],"_resolved":"https://registry.npmjs.org/is-arrayish/-/is-arrayish-0.2.1.tgz","_shasum":"77c99840527aa8ecb1a8ba697b80645a7a926a9d","_spec":"is-arrayish@^0.2.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/error-ex","author":{"name":"Qix","url":"http://github.com/qix-"},"bugs":{"url":"https://github.com/qix-/node-is-arrayish/issues"},"bundleDependencies":false,"deprecated":false,"description":"Determines if an object can be used as an array","devDependencies":{"coffee-script":"^1.9.3","coveralls":"^2.11.2","istanbul":"^0.3.17","mocha":"^2.2.5","should":"^7.0.1","xo":"^0.6.1"},"homepage":"https://github.com/qix-/node-is-arrayish#readme","keywords":["is","array","duck","type","arrayish","similar","proto","prototype","type"],"license":"MIT","name":"is-arrayish","repository":{"type":"git","url":"git+https://github.com/qix-/node-is-arrayish.git"},"scripts":{"pretest":"xo","test":"mocha --compilers coffee:coffee-script/register"},"version":"0.2.1"}');

/***/ }),

/***/ 97281:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-buffer@^1.1.5","_id":"is-buffer@1.1.6","_inBundle":false,"_integrity":"sha512-NcdALwpXkTm5Zvvbk7owOUSvVvBKDgKP5/ewfXEznmQFfs4ZRmanOeKBTjRVjka3QFoN6XJ+9F3USqfHqTaU5w==","_location":"/is-buffer","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-buffer@^1.1.5","name":"is-buffer","escapedName":"is-buffer","rawSpec":"^1.1.5","saveSpec":null,"fetchSpec":"^1.1.5"},"_requiredBy":["/cpy/is-number/kind-of","/has-values/is-number/kind-of","/has-values/kind-of","/is-accessor-descriptor/kind-of","/is-data-descriptor/kind-of","/object-copy/kind-of","/snapdragon-util/kind-of","/to-object-path/kind-of"],"_resolved":"https://registry.npmjs.org/is-buffer/-/is-buffer-1.1.6.tgz","_shasum":"efaa2ea9daa0d7ab2ea13a97b2b8ad51fefbe8be","_spec":"is-buffer@^1.1.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/is-number/node_modules/kind-of","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"http://feross.org/"},"bugs":{"url":"https://github.com/feross/is-buffer/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Determine if an object is a Buffer","devDependencies":{"standard":"*","tape":"^4.0.0","zuul":"^3.0.0"},"homepage":"https://github.com/feross/is-buffer#readme","keywords":["buffer","buffers","type","core buffer","browser buffer","browserify","typed array","uint32array","int16array","int32array","float32array","float64array","browser","arraybuffer","dataview"],"license":"MIT","main":"index.js","name":"is-buffer","repository":{"type":"git","url":"git://github.com/feross/is-buffer.git"},"scripts":{"test":"standard && npm run test-node && npm run test-browser","test-browser":"zuul -- test/*.js","test-browser-local":"zuul --local -- test/*.js","test-node":"tape test/*.js"},"testling":{"files":"test/*.js"},"version":"1.1.6"}');

/***/ }),

/***/ 35419:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-core-module@^2.2.0","_id":"is-core-module@2.8.0","_inBundle":false,"_integrity":"sha512-vd15qHsaqrRL7dtH6QNuy0ndJmRDrS9HAM1CAiSifNUFv4x1a0CCVsj18hJ1mShxIG6T2i1sO78MkP56r0nYRw==","_location":"/is-core-module","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-core-module@^2.2.0","name":"is-core-module","escapedName":"is-core-module","rawSpec":"^2.2.0","saveSpec":null,"fetchSpec":"^2.2.0"},"_requiredBy":["/resolve"],"_resolved":"https://registry.npmjs.org/is-core-module/-/is-core-module-2.8.0.tgz","_shasum":"0321336c3d0925e497fd97f5d95cb114a5ccd548","_spec":"is-core-module@^2.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/resolve","author":{"name":"Jordan Harband","email":"ljharb@gmail.com"},"auto-changelog":{"output":"CHANGELOG.md","template":"keepachangelog","unreleased":false,"commitLimit":false,"backfillLimit":false,"hideCredit":true},"bugs":{"url":"https://github.com/inspect-js/is-core-module/issues"},"bundleDependencies":false,"dependencies":{"has":"^1.0.3"},"deprecated":false,"description":"Is this specifier a node.js core module?","devDependencies":{"@ljharb/eslint-config":"^18.0.0","aud":"^1.1.5","auto-changelog":"^2.3.0","eslint":"^7.32.0","nyc":"^10.3.2","safe-publish-latest":"^1.1.4","semver":"^6.3.0","tape":"^5.3.1"},"exports":{".":[{"default":"./index.js"},"./index.js"],"./package.json":"./package.json"},"funding":{"url":"https://github.com/sponsors/ljharb"},"homepage":"https://github.com/inspect-js/is-core-module","keywords":["core","modules","module","npm","node","dependencies"],"license":"MIT","main":"index.js","name":"is-core-module","repository":{"type":"git","url":"git+https://github.com/inspect-js/is-core-module.git"},"scripts":{"lint":"eslint .","posttest":"aud --production","postversion":"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\"v$(node -e \\"console.log(require(\'./package.json\').version)\\")\\"","prepublish":"not-in-publish || npm run prepublishOnly","prepublishOnly":"safe-publish-latest","pretest":"npm run lint","test":"nyc npm run tests-only","tests-only":"tape \'test/**/*.js\'","version":"auto-changelog && git add CHANGELOG.md"},"sideEffects":false,"version":"2.8.0"}');

/***/ }),

/***/ 81043:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^3.0.2","_id":"kind-of@3.2.2","_inBundle":false,"_integrity":"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=","_location":"/is-data-descriptor/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^3.0.2","name":"kind-of","escapedName":"kind-of","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/is-data-descriptor"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz","_shasum":"31ea21a734bab9bbb0f32466d893aea51e4a3c64","_spec":"kind-of@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/is-data-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.0.0","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.3.0","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.2.2"}');

/***/ }),

/***/ 52757:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-data-descriptor@^0.1.4","_id":"is-data-descriptor@0.1.4","_inBundle":false,"_integrity":"sha1-C17mSDiOLIYCgueT8YVv7D8wG1Y=","_location":"/is-data-descriptor","_phantomChildren":{"is-buffer":"1.1.6"},"_requested":{"type":"range","registry":true,"raw":"is-data-descriptor@^0.1.4","name":"is-data-descriptor","escapedName":"is-data-descriptor","rawSpec":"^0.1.4","saveSpec":null,"fetchSpec":"^0.1.4"},"_requiredBy":["/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-0.1.4.tgz","_shasum":"0b5ee648388e2c860282e793f1856fec3f301b56","_spec":"is-data-descriptor@^0.1.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-data-descriptor/issues"},"bundleDependencies":false,"dependencies":{"kind-of":"^3.0.2"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript data descriptor.","devDependencies":{"mocha":"*","should":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-data-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-data-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-data-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"plugins":["gulp-format-md"]},"version":"0.1.4"}');

/***/ }),

/***/ 53222:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^5.0.0","_id":"kind-of@5.1.0","_inBundle":false,"_integrity":"sha512-NGEErnH6F2vUuXDh+OlbcKW7/wOcfdRHaZ7VWtqCztfHri/++YKmP51OdWeGPuqCOba6kk2OTe5d02VmTB80Pw==","_location":"/is-descriptor/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^5.0.0","name":"kind-of","escapedName":"kind-of","rawSpec":"^5.0.0","saveSpec":null,"fetchSpec":"^5.0.0"},"_requiredBy":["/is-descriptor"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-5.1.0.tgz","_shasum":"729c91e2d857b7a419a1f9aa65685c4c33f5845d","_spec":"kind-of@^5.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"James","url":"https://twitter.com/aretecode"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"},{"name":"tunnckoCore","url":"https://i.am.charlike.online"}],"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.1.1","browserify":"^14.4.0","gulp-format-md":"^0.1.12","matched":"^0.4.4","mocha":"^3.4.2","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["type-of","typeof","verb"]},"version":"5.1.0"}');

/***/ }),

/***/ 95896:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-descriptor@^0.1.0","_id":"is-descriptor@0.1.6","_inBundle":false,"_integrity":"sha512-avDYr0SB3DwO9zsMov0gKCESFYqCnE4hq/4z3TdUlukEy5t9C0YRq7HLrsN52NAcqXKaepeCD0n+B0arnVG3Hg==","_location":"/is-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-descriptor@^0.1.0","name":"is-descriptor","escapedName":"is-descriptor","rawSpec":"^0.1.0","saveSpec":null,"fetchSpec":"^0.1.0"},"_requiredBy":["/class-utils/define-property","/expand-brackets/define-property","/object-copy/define-property","/snapdragon/define-property","/static-extend/define-property"],"_resolved":"https://registry.npmjs.org/is-descriptor/-/is-descriptor-0.1.6.tgz","_shasum":"366d8240dde487ca51823b1ab9f07a10a78251ca","_spec":"is-descriptor@^0.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/class-utils/node_modules/define-property","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"is-accessor-descriptor":"^0.1.6","is-data-descriptor":"^0.1.4","kind-of":"^5.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.4.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"plugins":["gulp-format-md"],"toc":false,"layout":"default","tasks":["readme"],"lint":{"reflinks":true}},"version":"0.1.6"}');

/***/ }),

/***/ 8331:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-extendable@^0.1.0","_id":"is-extendable@0.1.1","_inBundle":false,"_integrity":"sha1-YrEQ4omkcUGOPsNqYX1HLjAd/Ik=","_location":"/is-extendable","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-extendable@^0.1.0","name":"is-extendable","escapedName":"is-extendable","rawSpec":"^0.1.0","saveSpec":null,"fetchSpec":"^0.1.0"},"_requiredBy":["/cpy/braces/extend-shallow","/cpy/fill-range/extend-shallow","/expand-brackets/extend-shallow","/extglob/extend-shallow","/set-value","/set-value/extend-shallow","/snapdragon/extend-shallow","/union-value"],"_resolved":"https://registry.npmjs.org/is-extendable/-/is-extendable-0.1.1.tgz","_shasum":"62b110e289a471418e3ec36a617d472e301dfc89","_spec":"is-extendable@^0.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces/node_modules/extend-shallow","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-extendable/issues"},"bundleDependencies":false,"deprecated":false,"description":"Returns true if a value is any of the object types: array, regexp, plain object, function or date. This is useful for determining if a value can be extended, e.g. \\"can the value have keys?\\"","devDependencies":{"mocha":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-extendable","keywords":["array","assign","check","date","extend","extensible","function","is","object","regex","test"],"license":"MIT","main":"index.js","name":"is-extendable","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-extendable.git"},"scripts":{"test":"mocha"},"verbiage":{"related":{"list":["isobject","is-plain-object","kind-of","is-extendable","is-equal-shallow","extend-shallow","assign-deep"]}},"version":"0.1.1"}');

/***/ }),

/***/ 48434:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["is-extglob@2.1.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"is-extglob@2.1.1","_id":"is-extglob@2.1.1","_inBundle":false,"_integrity":"sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=","_location":"/is-extglob","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"is-extglob@2.1.1","name":"is-extglob","escapedName":"is-extglob","rawSpec":"2.1.1","saveSpec":null,"fetchSpec":"2.1.1"},"_requiredBy":["/is-glob"],"_resolved":"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz","_spec":"2.1.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-extglob/issues"},"description":"Returns true if a string has an extglob.","devDependencies":{"gulp-format-md":"^0.1.10","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-extglob","keywords":["bash","braces","check","exec","expression","extglob","glob","globbing","globstar","is","match","matches","pattern","regex","regular","string","test"],"license":"MIT","main":"index.js","name":"is-extglob","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-extglob.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["has-glob","is-glob","micromatch"]},"reflinks":["verb","verb-generate-readme"],"lint":{"reflinks":true}},"version":"2.1.1"}');

/***/ }),

/***/ 69458:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["is-fullwidth-code-point@3.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"is-fullwidth-code-point@3.0.0","_id":"is-fullwidth-code-point@3.0.0","_inBundle":false,"_integrity":"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==","_location":"/is-fullwidth-code-point","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"is-fullwidth-code-point@3.0.0","name":"is-fullwidth-code-point","escapedName":"is-fullwidth-code-point","rawSpec":"3.0.0","saveSpec":null,"fetchSpec":"3.0.0"},"_requiredBy":["/slice-ansi","/string-width"],"_resolved":"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz","_spec":"3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/is-fullwidth-code-point/issues"},"description":"Check if the character represented by a given Unicode code point is fullwidth","devDependencies":{"ava":"^1.3.1","tsd-check":"^0.5.0","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/is-fullwidth-code-point#readme","keywords":["fullwidth","full-width","full","width","unicode","character","string","codepoint","code","point","is","detect","check"],"license":"MIT","name":"is-fullwidth-code-point","repository":{"type":"git","url":"git+https://github.com/sindresorhus/is-fullwidth-code-point.git"},"scripts":{"test":"xo && ava && tsd-check"},"version":"3.0.0"}');

/***/ }),

/***/ 65646:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["is-glob@4.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"is-glob@4.0.1","_id":"is-glob@4.0.1","_inBundle":false,"_integrity":"sha512-5G0tKtBTFImOqDnLB2hG6Bp2qcKEFduo4tZu9MT/H6NQv/ghhy30o55ufafxJ/LdH79LLs2Kfrn85TLKyA7BUg==","_location":"/is-glob","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"is-glob@4.0.1","name":"is-glob","escapedName":"is-glob","rawSpec":"4.0.1","saveSpec":null,"fetchSpec":"4.0.1"},"_requiredBy":["/eslint","/glob-parent"],"_resolved":"https://registry.npmjs.org/is-glob/-/is-glob-4.0.1.tgz","_spec":"4.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/is-glob/issues"},"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Daniel Perez","url":"https://tuvistavie.com"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"is-extglob":"^2.1.1"},"description":"Returns `true` if the given string looks like a glob pattern or an extglob pattern. This makes it easy to create code that only uses external modules like node-glob when necessary, resulting in much faster code execution and initialization time, and a better user experience.","devDependencies":{"gulp-format-md":"^0.1.10","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/micromatch/is-glob","keywords":["bash","braces","check","exec","expression","extglob","glob","globbing","globstar","is","match","matches","pattern","regex","regular","string","test"],"license":"MIT","main":"index.js","name":"is-glob","repository":{"type":"git","url":"git+https://github.com/micromatch/is-glob.git"},"scripts":{"test":"mocha"},"verb":{"layout":"default","plugins":["gulp-format-md"],"related":{"list":["assemble","base","update","verb"]},"reflinks":["assemble","bach","base","composer","gulp","has-glob","is-valid-glob","micromatch","npm","scaffold","verb","vinyl"]},"version":"4.0.1"}');

/***/ }),

/***/ 34278:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-number@^7.0.0","_id":"is-number@7.0.0","_inBundle":false,"_integrity":"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==","_location":"/is-number","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-number@^7.0.0","name":"is-number","escapedName":"is-number","rawSpec":"^7.0.0","saveSpec":null,"fetchSpec":"^7.0.0"},"_requiredBy":["/to-regex-range"],"_resolved":"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz","_shasum":"7535345b896734d5f80c4d06c50955527a14f12b","_spec":"is-number@^7.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/to-regex-range","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-number/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Olsten Larck","url":"https://i.am.charlike.online"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"deprecated":false,"description":"Returns true if a number or string value is a finite number. Useful for regex matches, parsing, user input, etc.","devDependencies":{"ansi":"^0.3.1","benchmark":"^2.1.4","gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.12.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-number","keywords":["cast","check","coerce","coercion","finite","integer","is","isnan","is-nan","is-num","is-number","isnumber","isfinite","istype","kind","math","nan","num","number","numeric","parseFloat","parseInt","test","type","typeof","value"],"license":"MIT","main":"index.js","name":"is-number","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-number.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"related":{"list":["is-plain-object","is-primitive","isobject","kind-of"]},"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"7.0.0"}');

/***/ }),

/***/ 7309:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-plain-obj@^1.1.0","_id":"is-plain-obj@1.1.0","_inBundle":false,"_integrity":"sha1-caUMhCnfync8kqOQpKA7OfzVHT4=","_location":"/is-plain-obj","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-plain-obj@^1.1.0","name":"is-plain-obj","escapedName":"is-plain-obj","rawSpec":"^1.1.0","saveSpec":null,"fetchSpec":"^1.1.0"},"_requiredBy":["/minimist-options"],"_resolved":"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-1.1.0.tgz","_shasum":"71a50c8429dfca773c92a390a4a03b39fcd51d3e","_spec":"is-plain-obj@^1.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/minimist-options","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/is-plain-obj/issues"},"bundleDependencies":false,"deprecated":false,"description":"Check if a value is a plain object","devDependencies":{"ava":"0.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/is-plain-obj#readme","keywords":["obj","object","is","check","test","type","plain","vanilla","pure","simple"],"license":"MIT","name":"is-plain-obj","repository":{"type":"git","url":"git+https://github.com/sindresorhus/is-plain-obj.git"},"scripts":{"test":"node test.js"},"version":"1.1.0"}');

/***/ }),

/***/ 69991:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-plain-object@^2.0.3","_id":"is-plain-object@2.0.4","_inBundle":false,"_integrity":"sha512-h5PpgXkWitc38BBMYawTYMWJHFZJVnBquFE57xFpjB8pJFiF6gZ+bU+WyI/yqXiFR5mdLsgYNaPe8uao6Uv9Og==","_location":"/is-plain-object","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-plain-object@^2.0.3","name":"is-plain-object","escapedName":"is-plain-object","rawSpec":"^2.0.3","saveSpec":null,"fetchSpec":"^2.0.3"},"_requiredBy":["/extend-shallow/is-extendable","/mixin-deep/is-extendable","/set-value"],"_resolved":"https://registry.npmjs.org/is-plain-object/-/is-plain-object-2.0.4.tgz","_shasum":"2c163b3fafb1b606d9d17928f05c2a1c38e07677","_spec":"is-plain-object@^2.0.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/set-value","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-plain-object/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Osman Nuri Okumuş","url":"http://onokumus.com"},{"name":"Steven Vachon","url":"https://svachon.com"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"isobject":"^3.0.1"},"deprecated":false,"description":"Returns true if an object was created by the `Object` constructor.","devDependencies":{"browserify":"^14.4.0","chai":"^4.0.2","gulp-format-md":"^1.0.0","mocha":"^3.4.2","mocha-phantomjs":"^4.1.0","phantomjs":"^2.1.7","uglify-js":"^3.0.24"},"engines":{"node":">=0.10.0"},"files":["index.d.ts","index.js"],"homepage":"https://github.com/jonschlinkert/is-plain-object","keywords":["check","is","is-object","isobject","javascript","kind","kind-of","object","plain","type","typeof","value"],"license":"MIT","main":"index.js","name":"is-plain-object","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-plain-object.git"},"scripts":{"browserify":"browserify index.js --standalone isPlainObject | uglifyjs --compress --mangle -o browser/is-plain-object.js","test":"npm run test_node && npm run browserify && npm run test_browser","test_browser":"mocha-phantomjs test/browser.html","test_node":"mocha"},"types":"index.d.ts","verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-number","isobject","kind-of"]},"lint":{"reflinks":true}},"version":"2.0.4"}');

/***/ }),

/***/ 81150:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-windows@^1.0.2","_id":"is-windows@1.0.2","_inBundle":false,"_integrity":"sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==","_location":"/is-windows","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-windows@^1.0.2","name":"is-windows","escapedName":"is-windows","rawSpec":"^1.0.2","saveSpec":null,"fetchSpec":"^1.0.2"},"_requiredBy":["/nanomatch"],"_resolved":"https://registry.npmjs.org/is-windows/-/is-windows-1.0.2.tgz","_shasum":"d1850eb9791ecd18e6182ce12a30f396634bb19d","_spec":"is-windows@^1.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/nanomatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-windows/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Simen Bekkhus","url":"https://github.com/SimenB"},{"name":"刘祺","url":"gucong.co.cc"}],"deprecated":false,"description":"Returns true if the platform is windows. UMD module, works with node.js, commonjs, browser, AMD, electron, etc.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-windows","keywords":["check","cywin","is","is-windows","nix","operating system","os","platform","process","unix","win","win32","windows"],"license":"MIT","main":"index.js","name":"is-windows","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-windows.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-absolute","is-glob","is-relative","isobject","window-size"]},"lint":{"reflinks":true},"reflinks":["verb"]},"version":"1.0.2"}');

/***/ }),

/***/ 86962:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"isarray@1.0.0","_id":"isarray@1.0.0","_inBundle":false,"_integrity":"sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE=","_location":"/isarray","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"isarray@1.0.0","name":"isarray","escapedName":"isarray","rawSpec":"1.0.0","saveSpec":null,"fetchSpec":"1.0.0"},"_requiredBy":["/unset-value/has-value/isobject"],"_resolved":"https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz","_shasum":"bb935d48582cba168c06834957a54a3e07124f11","_spec":"isarray@1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/unset-value/node_modules/has-value/node_modules/isobject","author":{"name":"Julian Gruber","email":"mail@juliangruber.com","url":"http://juliangruber.com"},"bugs":{"url":"https://github.com/juliangruber/isarray/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Array#isArray for older browsers","devDependencies":{"tape":"~2.13.4"},"homepage":"https://github.com/juliangruber/isarray","keywords":["browser","isarray","array"],"license":"MIT","main":"index.js","name":"isarray","repository":{"type":"git","url":"git://github.com/juliangruber/isarray.git"},"scripts":{"test":"tape test.js"},"testling":{"files":"test.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"version":"1.0.0"}');

/***/ }),

/***/ 17938:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["isexe@2.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"isexe@2.0.0","_id":"isexe@2.0.0","_inBundle":false,"_integrity":"sha1-6PvzdNxVb/iUehDcsFctYz8s+hA=","_location":"/isexe","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"isexe@2.0.0","name":"isexe","escapedName":"isexe","rawSpec":"2.0.0","saveSpec":null,"fetchSpec":"2.0.0"},"_requiredBy":["/child-process-promise/which","/which"],"_resolved":"https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz","_spec":"2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/isexe/issues"},"description":"Minimal module to check if a file is executable.","devDependencies":{"mkdirp":"^0.5.1","rimraf":"^2.5.0","tap":"^10.3.0"},"directories":{"test":"test"},"homepage":"https://github.com/isaacs/isexe#readme","keywords":[],"license":"ISC","main":"index.js","name":"isexe","repository":{"type":"git","url":"git+https://github.com/isaacs/isexe.git"},"scripts":{"postpublish":"git push origin --all; git push origin --tags","postversion":"npm publish","preversion":"npm test","test":"tap test/*.js --100"},"version":"2.0.0"}');

/***/ }),

/***/ 89921:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"isobject@^3.0.1","_id":"isobject@3.0.1","_inBundle":false,"_integrity":"sha1-TkMekrEalzFjaqH5yNHMvP2reN8=","_location":"/isobject","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"isobject@^3.0.1","name":"isobject","escapedName":"isobject","rawSpec":"^3.0.1","saveSpec":null,"fetchSpec":"^3.0.1"},"_requiredBy":["/base","/cache-base","/class-utils","/cpy/braces","/define-property","/has-value","/is-plain-object","/object-visit","/object.pick","/snapdragon-node","/unset-value"],"_resolved":"https://registry.npmjs.org/isobject/-/isobject-3.0.1.tgz","_shasum":"4e431e92b11a9731636aa1f9c8d1ccbcfdab78df","_spec":"isobject@^3.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/isobject/issues"},"bundleDependencies":false,"contributors":[{"url":"https://github.com/LeSuisse"},{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Magnús Dæhlen","url":"https://github.com/magnudae"},{"name":"Tom MacWright","url":"https://macwright.org"}],"dependencies":{},"deprecated":false,"description":"Returns true if the value is an object and not an array or null.","devDependencies":{"gulp-format-md":"^0.1.9","mocha":"^2.4.5"},"engines":{"node":">=0.10.0"},"files":["index.d.ts","index.js"],"homepage":"https://github.com/jonschlinkert/isobject","keywords":["check","is","is-object","isobject","kind","kind-of","kindof","native","object","type","typeof","value"],"license":"MIT","main":"index.js","name":"isobject","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/isobject.git"},"scripts":{"test":"mocha"},"types":"index.d.ts","verb":{"related":{"list":["extend-shallow","is-plain-object","kind-of","merge-deep"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.0.1"}');

/***/ }),

/***/ 96399:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["js-tokens@4.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"js-tokens@4.0.0","_id":"js-tokens@4.0.0","_inBundle":false,"_integrity":"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==","_location":"/js-tokens","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"js-tokens@4.0.0","name":"js-tokens","escapedName":"js-tokens","rawSpec":"4.0.0","saveSpec":null,"fetchSpec":"4.0.0"},"_requiredBy":["/@babel/highlight"],"_resolved":"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz","_spec":"4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Simon Lydell"},"bugs":{"url":"https://github.com/lydell/js-tokens/issues"},"description":"A regex that tokenizes JavaScript.","devDependencies":{"coffeescript":"2.1.1","esprima":"4.0.0","everything.js":"1.0.3","mocha":"5.0.0"},"files":["index.js"],"homepage":"https://github.com/lydell/js-tokens#readme","keywords":["JavaScript","js","token","tokenize","regex"],"license":"MIT","name":"js-tokens","repository":{"type":"git","url":"git+https://github.com/lydell/js-tokens.git"},"scripts":{"build":"node generate-index.js","dev":"npm run build && npm test","esprima-compare":"node esprima-compare ./index.js everything.js/es5.js","test":"mocha --ui tdd"},"version":"4.0.0"}');

/***/ }),

/***/ 11080:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["js-yaml@3.14.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"js-yaml@3.14.1","_id":"js-yaml@3.14.1","_inBundle":false,"_integrity":"sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==","_location":"/js-yaml","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"js-yaml@3.14.1","name":"js-yaml","escapedName":"js-yaml","rawSpec":"3.14.1","saveSpec":null,"fetchSpec":"3.14.1"},"_requiredBy":["/@eslint/eslintrc","/eslint"],"_resolved":"https://registry.npmjs.org/js-yaml/-/js-yaml-3.14.1.tgz","_spec":"3.14.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Vladimir Zapparov","email":"dervus.grim@gmail.com"},"bin":{"js-yaml":"bin/js-yaml.js"},"bugs":{"url":"https://github.com/nodeca/js-yaml/issues"},"contributors":[{"name":"Aleksey V Zapparov","email":"ixti@member.fsf.org","url":"http://www.ixti.net/"},{"name":"Vitaly Puzrin","email":"vitaly@rcdesign.ru","url":"https://github.com/puzrin"},{"name":"Martin Grenfell","email":"martin.grenfell@gmail.com","url":"http://got-ravings.blogspot.com"}],"dependencies":{"argparse":"^1.0.7","esprima":"^4.0.0"},"description":"YAML 1.2 parser and serializer","devDependencies":{"ansi":"^0.3.1","benchmark":"^2.1.4","browserify":"^16.2.2","codemirror":"^5.13.4","eslint":"^7.0.0","fast-check":"^1.24.2","istanbul":"^0.4.5","mocha":"^7.1.2","uglify-js":"^3.0.1"},"files":["index.js","lib/","bin/","dist/"],"homepage":"https://github.com/nodeca/js-yaml","jsdelivr":"dist/js-yaml.min.js","keywords":["yaml","parser","serializer","pyyaml"],"license":"MIT","name":"js-yaml","repository":{"type":"git","url":"git+https://github.com/nodeca/js-yaml.git"},"scripts":{"test":"make test"},"unpkg":"dist/js-yaml.min.js","version":"3.14.1"}');

/***/ }),

/***/ 31158:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"json-buffer@3.0.1","_id":"json-buffer@3.0.1","_inBundle":false,"_integrity":"sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==","_location":"/json-buffer","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"json-buffer@3.0.1","name":"json-buffer","escapedName":"json-buffer","rawSpec":"3.0.1","saveSpec":null,"fetchSpec":"3.0.1"},"_requiredBy":["/keyv"],"_resolved":"https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz","_shasum":"9338802a30d3b6605fbe0613e094008ca8c05a13","_spec":"json-buffer@3.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/keyv","author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"http://dominictarr.com"},"bugs":{"url":"https://github.com/dominictarr/json-buffer/issues"},"bundleDependencies":false,"deprecated":false,"description":"JSON parse & stringify that supports binary via bops & base64","devDependencies":{"tape":"^4.6.3"},"homepage":"https://github.com/dominictarr/json-buffer","license":"MIT","name":"json-buffer","repository":{"type":"git","url":"git://github.com/dominictarr/json-buffer.git"},"scripts":{"test":"set -e; for t in test/*.js; do node $t; done"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"version":"3.0.1"}');

/***/ }),

/***/ 81784:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"json-parse-even-better-errors@^2.3.0","_id":"json-parse-even-better-errors@2.3.1","_inBundle":false,"_integrity":"sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==","_location":"/json-parse-even-better-errors","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"json-parse-even-better-errors@^2.3.0","name":"json-parse-even-better-errors","escapedName":"json-parse-even-better-errors","rawSpec":"^2.3.0","saveSpec":null,"fetchSpec":"^2.3.0"},"_requiredBy":["/parse-json"],"_resolved":"https://registry.npmjs.org/json-parse-even-better-errors/-/json-parse-even-better-errors-2.3.1.tgz","_shasum":"7c47805a94319928e05777405dc12e1f7a4ee02d","_spec":"json-parse-even-better-errors@^2.3.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/parse-json","author":{"name":"Kat Marchán","email":"kzm@zkat.tech"},"bugs":{"url":"https://github.com/npm/json-parse-even-better-errors/issues"},"bundleDependencies":false,"deprecated":false,"description":"JSON.parse with context information on error","devDependencies":{"tap":"^14.6.5"},"files":["*.js"],"homepage":"https://github.com/npm/json-parse-even-better-errors#readme","keywords":["JSON","parser"],"license":"MIT","main":"index.js","name":"json-parse-even-better-errors","repository":{"type":"git","url":"git+https://github.com/npm/json-parse-even-better-errors.git"},"scripts":{"postversion":"npm publish","prepublishOnly":"git push --follow-tags","preversion":"npm t","snap":"tap","test":"tap"},"tap":{"check-coverage":true},"version":"2.3.1"}');

/***/ }),

/***/ 12371:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["json-schema-traverse@0.4.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"json-schema-traverse@0.4.1","_id":"json-schema-traverse@0.4.1","_inBundle":false,"_integrity":"sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==","_location":"/json-schema-traverse","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"json-schema-traverse@0.4.1","name":"json-schema-traverse","escapedName":"json-schema-traverse","rawSpec":"0.4.1","saveSpec":null,"fetchSpec":"0.4.1"},"_requiredBy":["/ajv"],"_resolved":"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz","_spec":"0.4.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Evgeny Poberezkin"},"bugs":{"url":"https://github.com/epoberezkin/json-schema-traverse/issues"},"description":"Traverse JSON Schema passing each schema object to callback","devDependencies":{"coveralls":"^2.13.1","eslint":"^3.19.0","mocha":"^3.4.2","nyc":"^11.0.2","pre-commit":"^1.2.2"},"homepage":"https://github.com/epoberezkin/json-schema-traverse#readme","keywords":["JSON-Schema","traverse","iterate"],"license":"MIT","main":"index.js","name":"json-schema-traverse","nyc":{"exclude":["**/spec/**","node_modules"],"reporter":["lcov","text-summary"]},"repository":{"type":"git","url":"git+https://github.com/epoberezkin/json-schema-traverse.git"},"scripts":{"eslint":"eslint index.js spec","test":"npm run eslint && nyc npm run test-spec","test-spec":"mocha spec -R spec"},"version":"0.4.1"}');

/***/ }),

/***/ 72709:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["json-stable-stringify-without-jsonify@1.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"json-stable-stringify-without-jsonify@1.0.1","_id":"json-stable-stringify-without-jsonify@1.0.1","_inBundle":false,"_integrity":"sha1-nbe1lJatPzz+8wp1FC0tkwrXJlE=","_location":"/json-stable-stringify-without-jsonify","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"json-stable-stringify-without-jsonify@1.0.1","name":"json-stable-stringify-without-jsonify","escapedName":"json-stable-stringify-without-jsonify","rawSpec":"1.0.1","saveSpec":null,"fetchSpec":"1.0.1"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz","_spec":"1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/samn/json-stable-stringify/issues"},"dependencies":{},"description":"deterministic JSON.stringify() with custom sorting to get deterministic hashes from stringified results, with no public domain dependencies","devDependencies":{"tape":"~1.0.4"},"homepage":"https://github.com/samn/json-stable-stringify","keywords":["json","stringify","deterministic","hash","sort","stable"],"license":"MIT","main":"index.js","name":"json-stable-stringify-without-jsonify","repository":{"type":"git","url":"git://github.com/samn/json-stable-stringify.git"},"scripts":{"test":"tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","ff/5","ff/latest","chrome/15","chrome/latest","safari/latest","opera/latest"]},"version":"1.0.1"}');

/***/ }),

/***/ 19419:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"jsonfile@^4.0.0","_id":"jsonfile@4.0.0","_inBundle":false,"_integrity":"sha1-h3Gq4HmbZAdrdmQPygWPnBDjPss=","_location":"/jsonfile","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"jsonfile@^4.0.0","name":"jsonfile","escapedName":"jsonfile","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/fs-extra"],"_resolved":"https://registry.npmjs.org/jsonfile/-/jsonfile-4.0.0.tgz","_shasum":"8771aae0799b64076b76640fca058f9c10e33ecb","_spec":"jsonfile@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fs-extra","author":{"name":"JP Richardson","email":"jprichardson@gmail.com"},"bugs":{"url":"https://github.com/jprichardson/node-jsonfile/issues"},"bundleDependencies":false,"dependencies":{"graceful-fs":"^4.1.6"},"deprecated":false,"description":"Easily read/write JSON files.","devDependencies":{"mocha":"2.x","rimraf":"^2.4.0","standard":"^10.0.3"},"files":["index.js"],"homepage":"https://github.com/jprichardson/node-jsonfile#readme","keywords":["read","write","file","json","fs","fs-extra"],"license":"MIT","main":"index.js","name":"jsonfile","optionalDependencies":{"graceful-fs":"^4.1.6"},"repository":{"type":"git","url":"git+ssh://git@github.com/jprichardson/node-jsonfile.git"},"scripts":{"lint":"standard","test":"npm run lint && npm run unit","unit":"mocha"},"version":"4.0.0"}');

/***/ }),

/***/ 64952:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"junk@^3.1.0","_id":"junk@3.1.0","_inBundle":false,"_integrity":"sha512-pBxcB3LFc8QVgdggvZWyeys+hnrNWg4OcZIU/1X59k5jQdLBlCsYGRQaz234SqoRLTCgMH00fY0xRJH+F9METQ==","_location":"/junk","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"junk@^3.1.0","name":"junk","escapedName":"junk","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/junk/-/junk-3.1.0.tgz","_shasum":"31499098d902b7e98c5d9b9c80f43457a88abfa1","_spec":"junk@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/junk/issues"},"bundleDependencies":false,"deprecated":false,"description":"Filter out system junk files like .DS_Store and Thumbs.db","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/junk#readme","keywords":["junk","trash","garbage","files","os","ignore","exclude","filter","temp","tmp","system","clean","cleanup"],"license":"MIT","name":"junk","repository":{"type":"git","url":"git+https://github.com/sindresorhus/junk.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.1.0"}');

/***/ }),

/***/ 42440:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"keyv@^4.0.0","_id":"keyv@4.0.4","_inBundle":false,"_integrity":"sha512-vqNHbAc8BBsxk+7QBYLW0Y219rWcClspR6WSeoHYKG5mnsSoOH+BL1pWq02DDCVdvvuUny5rkBlzMRzoqc+GIg==","_location":"/keyv","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"keyv@^4.0.0","name":"keyv","escapedName":"keyv","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/cacheable-request"],"_resolved":"https://registry.npmjs.org/keyv/-/keyv-4.0.4.tgz","_shasum":"f040b236ea2b06ed15ed86fbef8407e1a1c8e376","_spec":"keyv@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cacheable-request","author":{"name":"Jared Wray","email":"me@jaredwray.com","url":"http://jaredwray.com"},"bugs":{"url":"https://github.com/jaredwray/keyv/issues"},"bundleDependencies":false,"dependencies":{"json-buffer":"3.0.1"},"deprecated":false,"description":"Simple key-value storage with support for multiple backends","devDependencies":{"@keyv/mongo":"*","@keyv/mysql":"*","@keyv/postgres":"*","@keyv/redis":"*","@keyv/sqlite":"*","@keyv/test-suite":"*","ava":"^3.15.0","codecov":"^3.8.3","eslint-config-xo-lukechilds":"^1.0.0","nyc":"^15.1.0","this":"^1.0.2","timekeeper":"^2.0.0","xo":"^0.46.3"},"homepage":"https://github.com/jaredwray/keyv","keywords":["key","value","store","cache","ttl"],"license":"MIT","main":"src/index.js","name":"keyv","repository":{"type":"git","url":"git+https://github.com/jaredwray/keyv.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov > coverage.lcov","test":"xo && nyc ava test/keyv.js","test:full":"xo && nyc ava --serial","test:services:start":"docker-compose -f ./test/storage-adapters/services-compose.yaml up -d","test:services:stop":"docker-compose -f ./test/storage-adapters/services-compose.yaml down -v"},"version":"4.0.4","xo":{"extends":"xo-lukechilds","rules":{"unicorn/prefer-module":0}}}');

/***/ }),

/***/ 20589:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^6.0.2","_id":"kind-of@6.0.3","_inBundle":false,"_integrity":"sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==","_location":"/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^6.0.2","name":"kind-of","escapedName":"kind-of","rawSpec":"^6.0.2","saveSpec":null,"fetchSpec":"^6.0.2"},"_requiredBy":["/base/is-accessor-descriptor","/base/is-data-descriptor","/base/is-descriptor","/cpy/micromatch","/define-property/is-accessor-descriptor","/define-property/is-data-descriptor","/define-property/is-descriptor","/extglob/is-accessor-descriptor","/extglob/is-data-descriptor","/extglob/is-descriptor","/minimist-options","/nanomatch","/snapdragon-node/is-accessor-descriptor","/snapdragon-node/is-data-descriptor","/snapdragon-node/is-descriptor"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-6.0.3.tgz","_shasum":"07c05034a6c349fa06e24fa35aa76db4580ce4dd","_spec":"kind-of@^6.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"James","url":"https://twitter.com/aretecode"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"},{"name":"tunnckoCore","url":"https://i.am.charlike.online"}],"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"benchmarked":"^2.0.0","browserify":"^14.4.0","gulp-format-md":"^1.0.0","mocha":"^4.0.1","write":"^1.0.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"related":{"list":["is-glob","is-number","is-primitive"]},"reflinks":["type-of","typeof","verb"]},"version":"6.0.3"}');

/***/ }),

/***/ 57265:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["levn@0.4.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"levn@0.4.1","_id":"levn@0.4.1","_inBundle":false,"_integrity":"sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==","_location":"/levn","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"levn@0.4.1","name":"levn","escapedName":"levn","rawSpec":"0.4.1","saveSpec":null,"fetchSpec":"0.4.1"},"_requiredBy":["/eslint","/optionator"],"_resolved":"https://registry.npmjs.org/levn/-/levn-0.4.1.tgz","_spec":"0.4.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"George Zahariev","email":"z@georgezahariev.com"},"bugs":{"url":"https://github.com/gkz/levn/issues"},"dependencies":{"prelude-ls":"^1.2.1","type-check":"~0.4.0"},"description":"Light ECMAScript (JavaScript) Value Notation - human written, concise, typed, flexible","devDependencies":{"livescript":"^1.6.0","mocha":"^7.1.1"},"engines":{"node":">= 0.8.0"},"files":["lib","README.md","LICENSE"],"homepage":"https://github.com/gkz/levn","keywords":["levn","light","ecmascript","value","notation","json","typed","human","concise","typed","flexible"],"license":"MIT","main":"./lib/","name":"levn","repository":{"type":"git","url":"git://github.com/gkz/levn.git"},"scripts":{"test":"make test"},"version":"0.4.1"}');

/***/ }),

/***/ 95492:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"lines-and-columns@^1.1.6","_id":"lines-and-columns@1.1.6","_inBundle":false,"_integrity":"sha1-HADHQ7QzzQpOgHWPe2SldEDZ/wA=","_location":"/lines-and-columns","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"lines-and-columns@^1.1.6","name":"lines-and-columns","escapedName":"lines-and-columns","rawSpec":"^1.1.6","saveSpec":null,"fetchSpec":"^1.1.6"},"_requiredBy":["/parse-json"],"_resolved":"https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.1.6.tgz","_shasum":"1c00c743b433cd0a4e80758f7b64a57440d9ff00","_spec":"lines-and-columns@^1.1.6","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/parse-json","author":{"name":"Brian Donovan","email":"me@brian-donovan.com"},"bugs":{"url":"https://github.com/eventualbuddha/lines-and-columns/issues"},"bundleDependencies":false,"deprecated":false,"description":"Maps lines and columns to character offsets and back.","devDependencies":{"@types/mocha":"^2.2.34","@types/node":"^6.0.52","mocha":"^3.2.0","semantic-release":"^6.3.2","ts-node":"^1.7.2","tslint":"^4.1.1","typescript":"^2.1.4"},"files":["dist"],"homepage":"https://github.com/eventualbuddha/lines-and-columns#readme","keywords":["lines","columns","parser"],"license":"MIT","main":"dist/index.js","module":"dist/index.mjs","name":"lines-and-columns","repository":{"type":"git","url":"git+https://github.com/eventualbuddha/lines-and-columns.git"},"scripts":{"build":"./script/build","lint":"tslint --config tslint.json --project tsconfig.json --type-check","lint-fix":"tslint --config tslint.json --project tsconfig.json --type-check --fix","prebuild":"rm -rf dist","prepublish":"npm run lint && npm run build","pretest":"npm run build","semantic-release":"semantic-release pre && npm publish && semantic-release post","test":"mocha"},"types":"dist/index.d.ts","version":"1.1.6"}');

/***/ }),

/***/ 70555:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"locate-path@^5.0.0","_id":"locate-path@5.0.0","_inBundle":false,"_integrity":"sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==","_location":"/locate-path","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"locate-path@^5.0.0","name":"locate-path","escapedName":"locate-path","rawSpec":"^5.0.0","saveSpec":null,"fetchSpec":"^5.0.0"},"_requiredBy":["/find-up"],"_resolved":"https://registry.npmjs.org/locate-path/-/locate-path-5.0.0.tgz","_shasum":"1afba396afd676a6d42504d0a67a3a7eb9f62aa0","_spec":"locate-path@^5.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/find-up","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/locate-path/issues"},"bundleDependencies":false,"dependencies":{"p-locate":"^4.1.0"},"deprecated":false,"description":"Get the first path that exists on disk of multiple paths","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/locate-path#readme","keywords":["locate","path","paths","file","files","exists","find","finder","search","searcher","array","iterable","iterator"],"license":"MIT","name":"locate-path","repository":{"type":"git","url":"git+https://github.com/sindresorhus/locate-path.git"},"scripts":{"test":"xo && ava && tsd"},"version":"5.0.0"}');

/***/ }),

/***/ 26421:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"lodash.merge@^4.6.2","_id":"lodash.merge@4.6.2","_inBundle":false,"_integrity":"sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==","_location":"/lodash.merge","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"lodash.merge@^4.6.2","name":"lodash.merge","escapedName":"lodash.merge","rawSpec":"^4.6.2","saveSpec":null,"fetchSpec":"^4.6.2"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz","_shasum":"558aa53b43b661e1925a0afdfa36a9a1085fe57a","_spec":"lodash.merge@^4.6.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"John-David Dalton","email":"john.david.dalton@gmail.com"},"bugs":{"url":"https://github.com/lodash/lodash/issues"},"bundleDependencies":false,"contributors":[{"name":"John-David Dalton","email":"john.david.dalton@gmail.com"},{"name":"Mathias Bynens","email":"mathias@qiwi.be"}],"deprecated":false,"description":"The Lodash method `_.merge` exported as a module.","homepage":"https://lodash.com/","icon":"https://lodash.com/icon.svg","keywords":["lodash-modularized","merge"],"license":"MIT","name":"lodash.merge","repository":{"type":"git","url":"git+https://github.com/lodash/lodash.git"},"scripts":{"test":"echo \\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\""},"version":"4.6.2"}');

/***/ }),

/***/ 78889:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"lodash.truncate@^4.4.2","_id":"lodash.truncate@4.4.2","_inBundle":false,"_integrity":"sha1-WjUNoLERO4N+z//VgSy+WNbq4ZM=","_location":"/lodash.truncate","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"lodash.truncate@^4.4.2","name":"lodash.truncate","escapedName":"lodash.truncate","rawSpec":"^4.4.2","saveSpec":null,"fetchSpec":"^4.4.2"},"_requiredBy":["/table"],"_resolved":"https://registry.npmjs.org/lodash.truncate/-/lodash.truncate-4.4.2.tgz","_shasum":"5a350da0b1113b837ecfffd5812cbe58d6eae193","_spec":"lodash.truncate@^4.4.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/table","author":{"name":"John-David Dalton","email":"john.david.dalton@gmail.com","url":"http://allyoucanleet.com/"},"bugs":{"url":"https://github.com/lodash/lodash/issues"},"bundleDependencies":false,"contributors":[{"name":"John-David Dalton","email":"john.david.dalton@gmail.com","url":"http://allyoucanleet.com/"},{"name":"Blaine Bublitz","email":"blaine.bublitz@gmail.com","url":"https://github.com/phated"},{"name":"Mathias Bynens","email":"mathias@qiwi.be","url":"https://mathiasbynens.be/"}],"deprecated":false,"description":"The lodash method `_.truncate` exported as a module.","homepage":"https://lodash.com/","icon":"https://lodash.com/icon.svg","keywords":["lodash-modularized","truncate"],"license":"MIT","name":"lodash.truncate","repository":{"type":"git","url":"git+https://github.com/lodash/lodash.git"},"scripts":{"test":"echo \\"See https://travis-ci.org/lodash/lodash-cli for testing details.\\""},"version":"4.4.2"}');

/***/ }),

/***/ 23235:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["lodash@4.17.21","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"lodash@4.17.21","_id":"lodash@4.17.21","_inBundle":false,"_integrity":"sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==","_location":"/lodash","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"lodash@4.17.21","name":"lodash","escapedName":"lodash","rawSpec":"4.17.21","saveSpec":null,"fetchSpec":"4.17.21"},"_requiredBy":["/eslint","/table"],"_resolved":"https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz","_spec":"4.17.21","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"John-David Dalton","email":"john.david.dalton@gmail.com"},"bugs":{"url":"https://github.com/lodash/lodash/issues"},"contributors":[{"name":"John-David Dalton","email":"john.david.dalton@gmail.com"},{"name":"Mathias Bynens","email":"mathias@qiwi.be"}],"description":"Lodash modular utilities.","homepage":"https://lodash.com/","icon":"https://lodash.com/icon.svg","keywords":["modules","stdlib","util"],"license":"MIT","main":"lodash.js","name":"lodash","repository":{"type":"git","url":"git+https://github.com/lodash/lodash.git"},"scripts":{"test":"echo \\"See https://travis-ci.org/lodash-archive/lodash-cli for testing details.\\""},"version":"4.17.21"}');

/***/ }),

/***/ 24666:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"lowercase-keys@^2.0.0","_id":"lowercase-keys@2.0.0","_inBundle":false,"_integrity":"sha512-tqNXrS78oMOE73NMxK4EMLQsQowWf8jKooH9g7xPavRT706R6bkQJ6DY2Te7QukaZsulxa30wQ7bk0pm4XiHmA==","_location":"/lowercase-keys","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"lowercase-keys@^2.0.0","name":"lowercase-keys","escapedName":"lowercase-keys","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/cacheable-request","/got","/responselike"],"_resolved":"https://registry.npmjs.org/lowercase-keys/-/lowercase-keys-2.0.0.tgz","_shasum":"2603e78b7b4b0006cbca2fbcc8a3202558ac9479","_spec":"lowercase-keys@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/lowercase-keys/issues"},"bundleDependencies":false,"deprecated":false,"description":"Lowercase the keys of an object","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/lowercase-keys#readme","keywords":["object","assign","extend","properties","lowercase","lower-case","case","keys","key"],"license":"MIT","name":"lowercase-keys","repository":{"type":"git","url":"git+https://github.com/sindresorhus/lowercase-keys.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.0.0"}');

/***/ }),

/***/ 91410:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"lru-cache@^4.0.1","_id":"lru-cache@4.1.5","_inBundle":false,"_integrity":"sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==","_location":"/lru-cache","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"lru-cache@^4.0.1","name":"lru-cache","escapedName":"lru-cache","rawSpec":"^4.0.1","saveSpec":null,"fetchSpec":"^4.0.1"},"_requiredBy":["/child-process-promise/cross-spawn"],"_resolved":"https://registry.npmjs.org/lru-cache/-/lru-cache-4.1.5.tgz","_shasum":"8bbe50ea85bed59bc9e33dcab8235ee9bcf443cd","_spec":"lru-cache@^4.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/child-process-promise/node_modules/cross-spawn","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me"},"bugs":{"url":"https://github.com/isaacs/node-lru-cache/issues"},"bundleDependencies":false,"dependencies":{"pseudomap":"^1.0.2","yallist":"^2.1.2"},"deprecated":false,"description":"A cache object that deletes the least-recently-used items.","devDependencies":{"benchmark":"^2.1.4","standard":"^12.0.1","tap":"^12.1.0"},"files":["index.js"],"homepage":"https://github.com/isaacs/node-lru-cache#readme","keywords":["mru","lru","cache"],"license":"ISC","main":"index.js","name":"lru-cache","repository":{"type":"git","url":"git://github.com/isaacs/node-lru-cache.git"},"scripts":{"coveragerport":"tap --coverage-report=html","lintfix":"standard --fix test/*.js index.js","postpublish":"git push origin --all; git push origin --tags","posttest":"standard test/*.js index.js","postversion":"npm publish --tag=legacy","preversion":"npm test","snap":"TAP_SNAPSHOT=1 tap test/*.js -J","test":"tap test/*.js --100 -J"},"version":"4.1.5"}');

/***/ }),

/***/ 60801:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"semver@^6.0.0","_id":"semver@6.3.0","_inBundle":false,"_integrity":"sha512-b39TBaTSfV6yBrapU89p5fKekE2m/NwnDocOVruQFS1/veMgdzuPcnOM34M6CwxW8jH/lxEa5rBoDeUwu5HHTw==","_location":"/make-dir/semver","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"semver@^6.0.0","name":"semver","escapedName":"semver","rawSpec":"^6.0.0","saveSpec":null,"fetchSpec":"^6.0.0"},"_requiredBy":["/make-dir"],"_resolved":"https://registry.npmjs.org/semver/-/semver-6.3.0.tgz","_shasum":"ee0a64c8af5e8ceea67687b133761e1becbd1d3d","_spec":"semver@^6.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/make-dir","bin":{"semver":"bin/semver.js"},"bugs":{"url":"https://github.com/npm/node-semver/issues"},"bundleDependencies":false,"deprecated":false,"description":"The semantic version parser used by npm.","devDependencies":{"tap":"^14.3.1"},"files":["bin","range.bnf","semver.js"],"homepage":"https://github.com/npm/node-semver#readme","license":"ISC","main":"semver.js","name":"semver","repository":{"type":"git","url":"git+https://github.com/npm/node-semver.git"},"scripts":{"postpublish":"git push origin --follow-tags","postversion":"npm publish","preversion":"npm test","test":"tap"},"tap":{"check-coverage":true},"version":"6.3.0"}');

/***/ }),

/***/ 66736:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"make-dir@^3.0.2","_id":"make-dir@3.1.0","_inBundle":false,"_integrity":"sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==","_location":"/make-dir","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"make-dir@^3.0.2","name":"make-dir","escapedName":"make-dir","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/find-cache-dir"],"_resolved":"https://registry.npmjs.org/make-dir/-/make-dir-3.1.0.tgz","_shasum":"415e967046b3a7f1d185277d84aa58203726a13f","_spec":"make-dir@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/find-cache-dir","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/make-dir/issues"},"bundleDependencies":false,"dependencies":{"semver":"^6.0.0"},"deprecated":false,"description":"Make a directory and its parents if needed - Think `mkdir -p`","devDependencies":{"@types/graceful-fs":"^4.1.3","@types/node":"^13.7.1","ava":"^1.4.0","codecov":"^3.2.0","graceful-fs":"^4.1.15","nyc":"^15.0.0","path-type":"^4.0.0","tempy":"^0.2.1","tsd":"^0.11.0","xo":"^0.25.4"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/make-dir#readme","keywords":["mkdir","mkdirp","make","directories","dir","dirs","folders","directory","folder","path","parent","parents","intermediate","recursively","recursive","create","fs","filesystem","file-system"],"license":"MIT","name":"make-dir","repository":{"type":"git","url":"git+https://github.com/sindresorhus/make-dir.git"},"scripts":{"test":"xo && nyc ava && tsd"},"version":"3.1.0"}');

/***/ }),

/***/ 24510:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"map-cache@^0.2.2","_id":"map-cache@0.2.2","_inBundle":false,"_integrity":"sha1-wyq9C9ZSXZsFFkW7TyasXcmKDb8=","_location":"/map-cache","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"map-cache@^0.2.2","name":"map-cache","escapedName":"map-cache","rawSpec":"^0.2.2","saveSpec":null,"fetchSpec":"^0.2.2"},"_requiredBy":["/fragment-cache","/snapdragon"],"_resolved":"https://registry.npmjs.org/map-cache/-/map-cache-0.2.2.tgz","_shasum":"c32abd0bd6525d9b051645bb4f26ac5dc98a0dbf","_spec":"map-cache@^0.2.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/map-cache/issues"},"bundleDependencies":false,"deprecated":false,"description":"Basic cache object for storing key-value pairs.","devDependencies":{"gulp-format-md":"^0.1.9","should":"^8.3.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/map-cache","keywords":["cache","get","has","object","set","storage","store"],"license":"MIT","main":"index.js","name":"map-cache","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/map-cache.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["config-cache","option-cache","cache-base"]},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"0.2.2"}');

/***/ }),

/***/ 44649:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"map-obj@^4.0.0","_id":"map-obj@4.3.0","_inBundle":false,"_integrity":"sha512-hdN1wVrZbb29eBGiGjJbeP8JbKjq1urkHJ/LIP/NY48MZ1QVXUsQBV1G1zvYFHn1XE06cwjBsOI2K3Ulnj1YXQ==","_location":"/map-obj","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"map-obj@^4.0.0","name":"map-obj","escapedName":"map-obj","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/camelcase-keys"],"_resolved":"https://registry.npmjs.org/map-obj/-/map-obj-4.3.0.tgz","_shasum":"9304f906e93faae70880da102a9f1df0ea8bb05a","_spec":"map-obj@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/camelcase-keys","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/map-obj/issues"},"bundleDependencies":false,"deprecated":false,"description":"Map object keys and values into a new object","devDependencies":{"ava":"^2.0.0","tsd":"^0.14.0","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/map-obj#readme","keywords":["map","object","key","keys","value","values","iterate","iterator","rename","modify","deep","recurse","recursive"],"license":"MIT","name":"map-obj","repository":{"type":"git","url":"git+https://github.com/sindresorhus/map-obj.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.3.0"}');

/***/ }),

/***/ 43574:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"map-visit@^1.0.0","_id":"map-visit@1.0.0","_inBundle":false,"_integrity":"sha1-7Nyo8TFE5mDxtb1B8S80edmN+48=","_location":"/map-visit","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"map-visit@^1.0.0","name":"map-visit","escapedName":"map-visit","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/collection-visit"],"_resolved":"https://registry.npmjs.org/map-visit/-/map-visit-1.0.0.tgz","_shasum":"ecdca8f13144e660f1b5bd41f12f3479d98dfb8f","_spec":"map-visit@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/collection-visit","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/map-visit/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","email":"brian.woodward@gmail.com","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"object-visit":"^1.0.0"},"deprecated":false,"description":"Map `visit` over an array of objects.","devDependencies":{"clone-deep":"^0.2.4","extend-shallow":"^2.0.1","gulp-format-md":"^0.1.12","lodash":"^4.17.4","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/map-visit","keywords":["array","arrays","function","helper","invoke","key","map","method","object","objects","value","visit","visitor"],"license":"MIT","main":"index.js","name":"map-visit","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/map-visit.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"related":{"list":["collection-visit","object-visit"]},"reflinks":["verb","verb-generate-readme"]},"version":"1.0.0"}');

/***/ }),

/***/ 14982:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"type-fest@^0.13.1","_id":"type-fest@0.13.1","_inBundle":false,"_integrity":"sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==","_location":"/meow/type-fest","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"type-fest@^0.13.1","name":"type-fest","escapedName":"type-fest","rawSpec":"^0.13.1","saveSpec":null,"fetchSpec":"^0.13.1"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/type-fest/-/type-fest-0.13.1.tgz","_shasum":"0172cb5bce80b0bd542ea348db50c7e21834d934","_spec":"type-fest@^0.13.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/type-fest/issues"},"bundleDependencies":false,"deprecated":false,"description":"A collection of essential TypeScript types","devDependencies":{"tsd":"^0.11.0","xo":"^0.28.2"},"engines":{"node":">=10"},"files":["index.d.ts","source"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/type-fest#readme","keywords":["typescript","ts","types","utility","util","utilities","omit","merge","json"],"license":"(MIT OR CC0-1.0)","name":"type-fest","repository":{"type":"git","url":"git+https://github.com/sindresorhus/type-fest.git"},"scripts":{"test":"xo && tsd"},"types":"index.d.ts","version":"0.13.1","xo":{"rules":{"@typescript-eslint/indent":"off","func-call-spacing":"off"}}}');

/***/ }),

/***/ 32067:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"meow@^6.1.1","_id":"meow@6.1.1","_inBundle":false,"_integrity":"sha512-3YffViIt2QWgTy6Pale5QpopX/IvU3LPL03jOTqp6pGj3VjesdO/U8CuHMKpnQr4shCNCM5fd5XFFvIIl6JBHg==","_location":"/meow","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"meow@^6.1.1","name":"meow","escapedName":"meow","rawSpec":"^6.1.1","saveSpec":null,"fetchSpec":"^6.1.1"},"_requiredBy":["/cpy-cli"],"_resolved":"https://registry.npmjs.org/meow/-/meow-6.1.1.tgz","_shasum":"1ad64c4b76b2a24dfb2f635fddcadf320d251467","_spec":"meow@^6.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy-cli","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/meow/issues"},"bundleDependencies":false,"dependencies":{"@types/minimist":"^1.2.0","camelcase-keys":"^6.2.2","decamelize-keys":"^1.1.0","hard-rejection":"^2.1.0","minimist-options":"^4.0.2","normalize-package-data":"^2.5.0","read-pkg-up":"^7.0.1","redent":"^3.0.0","trim-newlines":"^3.0.0","type-fest":"^0.13.1","yargs-parser":"^18.1.3"},"deprecated":false,"description":"CLI app helper","devDependencies":{"ava":"^2.4.0","execa":"^4.0.0","indent-string":"^4.0.0","tsd":"^0.11.0","xo":"^0.30.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/meow#readme","keywords":["cli","bin","util","utility","helper","argv","command","line","meow","cat","kitten","parser","option","flags","input","cmd","console"],"license":"MIT","name":"meow","repository":{"type":"git","url":"git+https://github.com/sindresorhus/meow.git"},"scripts":{"test":"xo && ava && tsd"},"version":"6.1.1","xo":{"rules":{"unicorn/no-process-exit":"off","node/no-unsupported-features/es-syntax":"off"}}}');

/***/ }),

/***/ 93121:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"merge2@^1.3.0","_id":"merge2@1.4.1","_inBundle":false,"_integrity":"sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==","_location":"/merge2","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"merge2@^1.3.0","name":"merge2","escapedName":"merge2","rawSpec":"^1.3.0","saveSpec":null,"fetchSpec":"^1.3.0"},"_requiredBy":["/fast-glob"],"_resolved":"https://registry.npmjs.org/merge2/-/merge2-1.4.1.tgz","_shasum":"4368892f885e907455a6fd7dc55c0c9d404990ae","_spec":"merge2@^1.3.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fast-glob","authors":["Yan Qing <admin@zensh.com>"],"bugs":{"url":"https://github.com/teambition/merge2/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Merge multiple streams into one stream in sequence or parallel.","devDependencies":{"standard":"^14.3.4","through2":"^3.0.1","thunks":"^4.9.6","tman":"^1.10.0","to-through":"^2.0.0"},"engines":{"node":">= 8"},"files":["README.md","index.js"],"homepage":"https://github.com/teambition/merge2","keywords":["merge2","multiple","sequence","parallel","merge","stream","merge stream","sync"],"license":"MIT","main":"./index.js","name":"merge2","repository":{"type":"git","url":"git+ssh://git@github.com/teambition/merge2.git"},"scripts":{"test":"standard && tman"},"version":"1.4.1"}');

/***/ }),

/***/ 34266:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"micromatch@^4.0.4","_id":"micromatch@4.0.4","_inBundle":false,"_integrity":"sha512-pRmzw/XUcwXGpD9aI9q/0XOwLNygjETJ8y0ao0wdqprrzDa4YnxLcz7fQRZr8voh8V10kGhABbNcHVk5wHgWwg==","_location":"/micromatch","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"micromatch@^4.0.4","name":"micromatch","escapedName":"micromatch","rawSpec":"^4.0.4","saveSpec":null,"fetchSpec":"^4.0.4"},"_requiredBy":["/fast-glob"],"_resolved":"https://registry.npmjs.org/micromatch/-/micromatch-4.0.4.tgz","_shasum":"896d519dfe9db25fce94ceb7a500919bf881ebf9","_spec":"micromatch@^4.0.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fast-glob","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/micromatch/issues"},"bundleDependencies":false,"contributors":[{"url":"https://github.com/DianeLooney"},{"name":"Amila Welihinda","url":"amilajack.com"},{"name":"Bogdan Chadkin","url":"https://github.com/TrySound"},{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Devon Govett","url":"http://badassjs.com"},{"name":"Elan Shanker","url":"https://github.com/es128"},{"name":"Fabrício Matté","url":"https://ultcombo.js.org"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Martin Kolárik","url":"https://kolarik.sk"},{"name":"Olsten Larck","url":"https://i.am.charlike.online"},{"name":"Paul Miller","url":"paulmillr.com"},{"name":"Tom Byrer","url":"https://github.com/tomByrer"},{"name":"Tyler Akins","url":"http://rumkin.com"},{"name":"Peter Bright","email":"drpizza@quiscalusmexicanus.org","url":"https://github.com/drpizza"},{"name":"Kuba Juszczyk","url":"https://github.com/ku8ar"}],"dependencies":{"braces":"^3.0.1","picomatch":"^2.2.3"},"deprecated":false,"description":"Glob matching for javascript/node.js. A replacement and faster alternative to minimatch and multimatch.","devDependencies":{"fill-range":"^7.0.1","gulp-format-md":"^2.0.0","minimatch":"^3.0.4","mocha":"^7.2.0","time-require":"github:jonschlinkert/time-require"},"engines":{"node":">=8.6"},"files":["index.js"],"homepage":"https://github.com/micromatch/micromatch","keywords":["bash","bracket","character-class","expand","expansion","expression","extglob","extglobs","file","files","filter","find","glob","globbing","globs","globstar","lookahead","lookaround","lookbehind","match","matcher","matches","matching","micromatch","minimatch","multimatch","negate","negation","path","pattern","patterns","posix","regex","regexp","regular","shell","star","wildcard"],"license":"MIT","main":"index.js","name":"micromatch","repository":{"type":"git","url":"git+https://github.com/micromatch/micromatch.git"},"scripts":{"test":"mocha"},"verb":{"toc":"collapsible","layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"related":{"list":["braces","expand-brackets","extglob","fill-range","nanomatch"]},"reflinks":["extglob","fill-range","glob-object","minimatch","multimatch"]},"version":"4.0.4"}');

/***/ }),

/***/ 59404:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"mimic-response@^1.0.0","_id":"mimic-response@1.0.1","_inBundle":false,"_integrity":"sha512-j5EctnkH7amfV/q5Hgmoal1g2QHFJRraOtmx0JpIqkxhBhI/lJSl1nMpQ45hVarwNETOoWEimndZ4QK0RHxuxQ==","_location":"/mimic-response","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"mimic-response@^1.0.0","name":"mimic-response","escapedName":"mimic-response","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/clone-response"],"_resolved":"https://registry.npmjs.org/mimic-response/-/mimic-response-1.0.1.tgz","_shasum":"4923538878eef42063cb8a3e3b0798781487ab1b","_spec":"mimic-response@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/clone-response","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/mimic-response/issues"},"bundleDependencies":false,"deprecated":false,"description":"Mimic a Node.js HTTP response stream","devDependencies":{"ava":"*","create-test-server":"^0.1.0","pify":"^3.0.0","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/mimic-response#readme","keywords":["mimic","response","stream","http","https","request","get","core"],"license":"MIT","name":"mimic-response","repository":{"type":"git","url":"git+https://github.com/sindresorhus/mimic-response.git"},"scripts":{"test":"xo && ava"},"version":"1.0.1"}');

/***/ }),

/***/ 88283:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"min-indent@^1.0.0","_id":"min-indent@1.0.1","_inBundle":false,"_integrity":"sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==","_location":"/min-indent","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"min-indent@^1.0.0","name":"min-indent","escapedName":"min-indent","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/strip-indent"],"_resolved":"https://registry.npmjs.org/min-indent/-/min-indent-1.0.1.tgz","_shasum":"a63f681673b30571fbe8bc25686ae746eefa9869","_spec":"min-indent@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/strip-indent","author":{"name":"James Kyle","email":"me@thejameskyle.com","url":"thejameskyle.com"},"bugs":{"url":"https://github.com/thejameskyle/min-indent/issues"},"bundleDependencies":false,"deprecated":false,"description":"Get the shortest leading whitespace from lines in a string","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/thejameskyle/min-indent#readme","keywords":["indent","indentation","normalize","whitespace","space","tab","string","str","min","minimum"],"license":"MIT","main":"index.js","name":"min-indent","repository":{"type":"git","url":"git+https://github.com/thejameskyle/min-indent.git"},"scripts":{"test":"xo && ava"},"version":"1.0.1"}');

/***/ }),

/***/ 68442:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["minimatch@3.0.4","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"minimatch@3.0.4","_id":"minimatch@3.0.4","_inBundle":false,"_integrity":"sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==","_location":"/minimatch","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"minimatch@3.0.4","name":"minimatch","escapedName":"minimatch","rawSpec":"3.0.4","saveSpec":null,"fetchSpec":"3.0.4"},"_requiredBy":["/@eslint/eslintrc","/eslint","/glob","/replace"],"_resolved":"https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz","_spec":"3.0.4","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me"},"bugs":{"url":"https://github.com/isaacs/minimatch/issues"},"dependencies":{"brace-expansion":"^1.1.7"},"description":"a glob matcher in javascript","devDependencies":{"tap":"^10.3.2"},"engines":{"node":"*"},"files":["minimatch.js"],"homepage":"https://github.com/isaacs/minimatch#readme","license":"ISC","main":"minimatch.js","name":"minimatch","repository":{"type":"git","url":"git://github.com/isaacs/minimatch.git"},"scripts":{"postpublish":"git push origin --all; git push origin --tags","postversion":"npm publish","preversion":"npm test","test":"tap test/*.js --cov"},"version":"3.0.4"}');

/***/ }),

/***/ 58559:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"arrify@^1.0.1","_id":"arrify@1.0.1","_inBundle":false,"_integrity":"sha1-iYUI2iIm84DfkEcoRWhJwVAaSw0=","_location":"/minimist-options/arrify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"arrify@^1.0.1","name":"arrify","escapedName":"arrify","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/minimist-options"],"_resolved":"https://registry.npmjs.org/arrify/-/arrify-1.0.1.tgz","_shasum":"898508da2226f380df904728456849c1501a4b0d","_spec":"arrify@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/minimist-options","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/arrify/issues"},"bundleDependencies":false,"deprecated":false,"description":"Convert a value to an array","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/arrify#readme","keywords":["array","arr","arrify","arrayify","convert","value"],"license":"MIT","name":"arrify","repository":{"type":"git","url":"git+https://github.com/sindresorhus/arrify.git"},"scripts":{"test":"xo && ava"},"version":"1.0.1"}');

/***/ }),

/***/ 28556:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"minimist-options@^4.0.2","_id":"minimist-options@4.1.0","_inBundle":false,"_integrity":"sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A==","_location":"/minimist-options","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"minimist-options@^4.0.2","name":"minimist-options","escapedName":"minimist-options","rawSpec":"^4.0.2","saveSpec":null,"fetchSpec":"^4.0.2"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/minimist-options/-/minimist-options-4.1.0.tgz","_shasum":"c0655713c53a8a2ebd77ffa247d342c40f010619","_spec":"minimist-options@^4.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Vadim Demedes","email":"vdemedes@gmail.com"},"bugs":{"url":"https://github.com/vadimdemedes/minimist-options/issues"},"bundleDependencies":false,"dependencies":{"arrify":"^1.0.1","is-plain-obj":"^1.1.0","kind-of":"^6.0.3"},"deprecated":false,"description":"Pretty options for minimist","devDependencies":{"@types/minimist":"^1.2.0","ava":"^1.0.1","tsd-check":"^0.3.0","xo":"^0.24.0"},"engines":{"node":">= 6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/vadimdemedes/minimist-options#readme","keywords":["minimist","argv","args"],"license":"MIT","name":"minimist-options","repository":{"type":"git","url":"git+https://github.com/vadimdemedes/minimist-options.git"},"scripts":{"test":"xo && ava && tsd-check"},"version":"4.1.0"}');

/***/ }),

/***/ 72535:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-extendable@^1.0.1","_id":"is-extendable@1.0.1","_inBundle":false,"_integrity":"sha512-arnXMxT1hhoKo9k1LZdmlNyJdDDfy2v0fXjFlmok4+i8ul/6WlbVge9bhM74OpNPQPMGUToDtz+KXa1PneJxOA==","_location":"/mixin-deep/is-extendable","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-extendable@^1.0.1","name":"is-extendable","escapedName":"is-extendable","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/mixin-deep"],"_resolved":"https://registry.npmjs.org/is-extendable/-/is-extendable-1.0.1.tgz","_shasum":"a7470f9e426733d81bd81e1155264e3a3507cab4","_spec":"is-extendable@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/mixin-deep","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-extendable/issues"},"bundleDependencies":false,"dependencies":{"is-plain-object":"^2.0.4"},"deprecated":false,"description":"Returns true if a value is a plain object, array or function.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.4.2"},"engines":{"node":">=0.10.0"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/jonschlinkert/is-extendable","keywords":["array","assign","check","date","extend","extendable","extensible","function","is","object","regex","test"],"license":"MIT","main":"index.js","name":"is-extendable","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-extendable.git"},"scripts":{"test":"mocha"},"types":"index.d.ts","verb":{"related":{"list":["assign-deep","is-equal-shallow","is-plain-object","isobject","kind-of"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.1"}');

/***/ }),

/***/ 7897:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"mixin-deep@^1.2.0","_id":"mixin-deep@1.3.2","_inBundle":false,"_integrity":"sha512-WRoDn//mXBiJ1H40rqa3vH0toePwSsGb45iInWlTySa+Uu4k3tYUSxa2v1KqAiLtvlrSzaExqS1gtk96A9zvEA==","_location":"/mixin-deep","_phantomChildren":{"is-plain-object":"2.0.4"},"_requested":{"type":"range","registry":true,"raw":"mixin-deep@^1.2.0","name":"mixin-deep","escapedName":"mixin-deep","rawSpec":"^1.2.0","saveSpec":null,"fetchSpec":"^1.2.0"},"_requiredBy":["/base"],"_resolved":"https://registry.npmjs.org/mixin-deep/-/mixin-deep-1.3.2.tgz","_shasum":"1120b43dc359a785dce65b55b82e257ccf479566","_spec":"mixin-deep@^1.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/mixin-deep/issues"},"bundleDependencies":false,"dependencies":{"for-in":"^1.0.2","is-extendable":"^1.0.1"},"deprecated":false,"description":"Deeply mix the properties of objects into the first object. Like merge-deep, but doesn\'t clone.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3","should":"^13.1.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/mixin-deep","keywords":["deep","extend","key","keys","merge","mixin","object","prop","properties","util","values"],"license":"MIT","main":"index.js","name":"mixin-deep","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/mixin-deep.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["defaults-deep","extend-shallow","merge-deep","mixin-object"]},"lint":{"reflinks":true}},"version":"1.3.2"}');

/***/ }),

/***/ 10317:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ms@2.1.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ms@2.1.2","_id":"ms@2.1.2","_inBundle":false,"_integrity":"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==","_location":"/ms","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ms@2.1.2","name":"ms","escapedName":"ms","rawSpec":"2.1.2","saveSpec":null,"fetchSpec":"2.1.2"},"_requiredBy":["/debug","/simple-git/debug"],"_resolved":"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz","_spec":"2.1.2","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/zeit/ms/issues"},"description":"Tiny millisecond conversion utility","devDependencies":{"eslint":"4.12.1","expect.js":"0.3.1","husky":"0.14.3","lint-staged":"5.0.0","mocha":"4.0.1"},"eslintConfig":{"extends":"eslint:recommended","env":{"node":true,"es6":true}},"files":["index.js"],"homepage":"https://github.com/zeit/ms#readme","license":"MIT","lint-staged":{"*.js":["npm run lint","prettier --single-quote --write","git add"]},"main":"./index","name":"ms","repository":{"type":"git","url":"git+https://github.com/zeit/ms.git"},"scripts":{"lint":"eslint lib/* bin/*","precommit":"lint-staged","test":"mocha tests.js"},"version":"2.1.2"}');

/***/ }),

/***/ 31522:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"nanomatch@^1.2.9","_id":"nanomatch@1.2.13","_inBundle":false,"_integrity":"sha512-fpoe2T0RbHwBTBUOftAfBPaDEi06ufaUai0mE6Yn1kacc3SnTErfb/h+X94VXzI64rKFHYImXSvdwGGCmwOqCA==","_location":"/nanomatch","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"nanomatch@^1.2.9","name":"nanomatch","escapedName":"nanomatch","rawSpec":"^1.2.9","saveSpec":null,"fetchSpec":"^1.2.9"},"_requiredBy":["/cpy/micromatch"],"_resolved":"https://registry.npmjs.org/nanomatch/-/nanomatch-1.2.13.tgz","_shasum":"b87a8aa4fc0de8fe6be88895b38983ff265bd119","_spec":"nanomatch@^1.2.9","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/nanomatch/issues"},"bundleDependencies":false,"contributors":[{"name":"Devon Govett","url":"http://badassjs.com"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"arr-diff":"^4.0.0","array-unique":"^0.3.2","define-property":"^2.0.2","extend-shallow":"^3.0.2","fragment-cache":"^0.2.1","is-windows":"^1.0.2","kind-of":"^6.0.2","object.pick":"^1.3.0","regex-not":"^1.0.0","snapdragon":"^0.8.1","to-regex":"^3.0.1"},"deprecated":false,"description":"Fast, minimal glob matcher for node.js. Similar to micromatch, minimatch and multimatch, but complete Bash 4.3 wildcard support only (no support for exglobs, posix brackets or braces)","devDependencies":{"bash-match":"^1.0.2","for-own":"^1.0.0","gulp":"^3.9.1","gulp-format-md":"^1.0.0","gulp-istanbul":"^1.1.3","gulp-mocha":"^5.0.0","helper-changelog":"^0.3.0","minimatch":"^3.0.4","minimist":"^1.2.0","mocha":"^3.5.3","multimatch":"^2.1.0"},"engines":{"node":">=0.10.0"},"files":["index.js","lib"],"homepage":"https://github.com/micromatch/nanomatch","keywords":["bash","expand","expansion","expression","file","files","filter","find","glob","globbing","globs","globstar","match","matcher","matches","matching","micromatch","minimatch","multimatch","nanomatch","path","pattern","patterns","regex","regexp","regular","shell","wildcard"],"license":"MIT","lintDeps":{"dependencies":{"options":{"lock":{"snapdragon":"^0.8.1"}}},"devDependencies":{"files":{"options":{"ignore":["benchmark/**"]}}}},"main":"index.js","name":"nanomatch","repository":{"type":"git","url":"git+https://github.com/micromatch/nanomatch.git"},"scripts":{"test":"mocha"},"verb":{"toc":"collapsible","layout":"default","tasks":["readme"],"helpers":["helper-changelog"],"plugins":["gulp-format-md"],"related":{"list":["extglob","is-extglob","is-glob","micromatch"]},"reflinks":["expand-brackets","expand-tilde","glob-object","micromatch","minimatch","options","snapdragon"],"lint":{"reflinks":true}},"version":"1.2.13"}');

/***/ }),

/***/ 17503:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["natural-compare@1.4.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"natural-compare@1.4.0","_id":"natural-compare@1.4.0","_inBundle":false,"_integrity":"sha1-Sr6/7tdUHywnrPspvbvRXI1bpPc=","_location":"/natural-compare","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"natural-compare@1.4.0","name":"natural-compare","escapedName":"natural-compare","rawSpec":"1.4.0","saveSpec":null,"fetchSpec":"1.4.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz","_spec":"1.4.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Lauri Rooden","url":"https://github.com/litejs/natural-compare-lite"},"bugs":{"url":"https://github.com/litejs/natural-compare-lite/issues"},"buildman":{"dist/index-min.js":{"banner":"/*! litejs.com/MIT-LICENSE.txt */","input":"index.js"}},"description":"Compare strings containing a mix of letters and numbers in the way a human being would in sort order.","devDependencies":{"buildman":"*","testman":"*"},"files":["index.js"],"homepage":"https://github.com/litejs/natural-compare-lite#readme","keywords":["string","natural","order","sort","natsort","natcmp","compare","alphanum","litejs"],"license":"MIT","main":"index.js","name":"natural-compare","repository":{"type":"git","url":"git://github.com/litejs/natural-compare-lite.git"},"scripts":{"build":"node node_modules/buildman/index.js --all","test":"node tests/index.js"},"stability":3,"version":"1.4.0"}');

/***/ }),

/***/ 97256:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"nested-error-stacks@^2.1.0","_id":"nested-error-stacks@2.1.0","_inBundle":false,"_integrity":"sha512-AO81vsIO1k1sM4Zrd6Hu7regmJN1NSiAja10gc4bX3F0wd+9rQmcuHQaHVQCYIEC8iFXnE+mavh23GOt7wBgug==","_location":"/nested-error-stacks","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"nested-error-stacks@^2.1.0","name":"nested-error-stacks","escapedName":"nested-error-stacks","rawSpec":"^2.1.0","saveSpec":null,"fetchSpec":"^2.1.0"},"_requiredBy":["/cp-file","/cpy"],"_resolved":"https://registry.npmjs.org/nested-error-stacks/-/nested-error-stacks-2.1.0.tgz","_shasum":"0fbdcf3e13fe4994781280524f8b96b0cdff9c61","_spec":"nested-error-stacks@^2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Matt Lavin","email":"matt.lavin@gmail.com"},"bugs":{"url":"https://github.com/mdlavin/nested-error-stacks/issues"},"bundleDependencies":false,"deprecated":false,"description":"An Error subclass that will chain nested Errors and dump nested stacktraces","devDependencies":{"chai":"^3.5.0","eslint":"^3.9.1","mocha":"^3.1.2","uuid":"^2.0.3"},"files":["index.js","LICENSE"],"homepage":"https://github.com/mdlavin/nested-error-stacks#readme","keywords":["error","nested","stack"],"license":"MIT","main":"index.js","name":"nested-error-stacks","repository":{"type":"git","url":"git+https://github.com/mdlavin/nested-error-stacks.git"},"scripts":{"test":"if node --version | grep -vE \'v(0|3)\' > /dev/null 2>&1; then eslint . || exit -1; fi; if [ \\"$RUN_ZUUL\\" != \\"true\\" ]; then node_modules/.bin/mocha; else npm install zuul && node_modules/.bin/zuul -- test.js; fi"},"version":"2.1.0"}');

/***/ }),

/***/ 18044:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"node-version@^1.0.0","_id":"node-version@1.2.0","_inBundle":false,"_integrity":"sha512-ma6oU4Sk0qOoKEAymVoTvk8EdXEobdS7m/mAGhDJ8Rouugho48crHBORAmy5BoOcv8wraPM6xumapQp5hl4iIQ==","_location":"/node-version","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"node-version@^1.0.0","name":"node-version","escapedName":"node-version","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/child-process-promise"],"_resolved":"https://registry.npmjs.org/node-version/-/node-version-1.2.0.tgz","_shasum":"34fde3ffa8e1149bd323983479dda620e1b5060d","_spec":"node-version@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/child-process-promise","author":{"name":"Rodolphe Stoclin","email":"rodolphe@2clics.net","url":"http://2clics.net"},"bugs":{"url":"https://github.com/srod/node-version/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Get Node current version","devDependencies":{"codecov":"3.0.2","eslint":"4.19.1","jest":"23.1.0"},"engines":{"node":">=6.0.0"},"homepage":"https://github.com/srod/node-version","jest":{"notify":true,"verbose":true,"testEnvironment":"node","coverageDirectory":"./coverage/","collectCoverage":true,"testPathIgnorePatterns":["/node_modules/",".history"]},"keywords":["node","version"],"license":"MIT","main":"./index.js","name":"node-version","repository":{"type":"git","url":"git+https://github.com/srod/node-version.git"},"scripts":{"eslint":"eslint index.js || true","pretest":"npm run eslint","publish-beta":"npm publish --tag beta","publish-latest":"npm publish","release-major":"npm version major -m \'Bump %s\' && git push --tags origin HEAD:master","release-minor":"npm version minor -m \'Bump %s\' && git push --tags origin HEAD:master","release-patch":"npm version patch -m \'Bump %s\' && git push --tags origin HEAD:master","test":"jest"},"version":"1.2.0"}');

/***/ }),

/***/ 678:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"semver@2 || 3 || 4 || 5","_id":"semver@5.7.1","_inBundle":false,"_integrity":"sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==","_location":"/normalize-package-data/semver","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"semver@2 || 3 || 4 || 5","name":"semver","escapedName":"semver","rawSpec":"2 || 3 || 4 || 5","saveSpec":null,"fetchSpec":"2 || 3 || 4 || 5"},"_requiredBy":["/normalize-package-data"],"_resolved":"https://registry.npmjs.org/semver/-/semver-5.7.1.tgz","_shasum":"a954f931aeba508d307bbf069eff0c01c96116f7","_spec":"semver@2 || 3 || 4 || 5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/normalize-package-data","bin":{"semver":"bin/semver"},"bugs":{"url":"https://github.com/npm/node-semver/issues"},"bundleDependencies":false,"deprecated":false,"description":"The semantic version parser used by npm.","devDependencies":{"tap":"^13.0.0-rc.18"},"files":["bin","range.bnf","semver.js"],"homepage":"https://github.com/npm/node-semver#readme","license":"ISC","main":"semver.js","name":"semver","repository":{"type":"git","url":"git+https://github.com/npm/node-semver.git"},"scripts":{"postpublish":"git push origin --all; git push origin --tags","postversion":"npm publish","preversion":"npm test","test":"tap"},"tap":{"check-coverage":true},"version":"5.7.1"}');

/***/ }),

/***/ 19472:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"normalize-package-data@^2.5.0","_id":"normalize-package-data@2.5.0","_inBundle":false,"_integrity":"sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==","_location":"/normalize-package-data","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"normalize-package-data@^2.5.0","name":"normalize-package-data","escapedName":"normalize-package-data","rawSpec":"^2.5.0","saveSpec":null,"fetchSpec":"^2.5.0"},"_requiredBy":["/meow","/read-pkg"],"_resolved":"https://registry.npmjs.org/normalize-package-data/-/normalize-package-data-2.5.0.tgz","_shasum":"e66db1838b200c1dfc233225d12cb36520e234a8","_spec":"normalize-package-data@^2.5.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Meryn Stol","email":"merynstol@gmail.com"},"bugs":{"url":"https://github.com/npm/normalize-package-data/issues"},"bundleDependencies":false,"contributors":[{"name":"Isaac Z. Schlueter","email":"i@izs.me"},{"name":"Meryn Stol","email":"merynstol@gmail.com"},{"name":"Robert Kowalski","email":"rok@kowalski.gd"}],"dependencies":{"hosted-git-info":"^2.1.4","resolve":"^1.10.0","semver":"2 || 3 || 4 || 5","validate-npm-package-license":"^3.0.1"},"deprecated":false,"description":"Normalizes data that can be found in package.json files.","devDependencies":{"async":"^2.6.1","tap":"^12.4.0","underscore":"^1.8.3"},"files":["lib/*.js","lib/*.json","AUTHORS"],"homepage":"https://github.com/npm/normalize-package-data#readme","license":"BSD-2-Clause","main":"lib/normalize.js","name":"normalize-package-data","repository":{"type":"git","url":"git://github.com/npm/normalize-package-data.git"},"scripts":{"test":"tap test/*.js"},"version":"2.5.0"}');

/***/ }),

/***/ 53969:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"normalize-url@^6.0.1","_id":"normalize-url@6.1.0","_inBundle":false,"_integrity":"sha512-DlL+XwOy3NxAQ8xuC0okPgK46iuVNAK01YN7RueYBqqFeGsBjV9XmCAzAdgt+667bCl5kPh9EqKKDwnaPG1I7A==","_location":"/normalize-url","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"normalize-url@^6.0.1","name":"normalize-url","escapedName":"normalize-url","rawSpec":"^6.0.1","saveSpec":null,"fetchSpec":"^6.0.1"},"_requiredBy":["/cacheable-request"],"_resolved":"https://registry.npmjs.org/normalize-url/-/normalize-url-6.1.0.tgz","_shasum":"40d0885b535deffe3f3147bec877d05fe4c5668a","_spec":"normalize-url@^6.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cacheable-request","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/normalize-url/issues"},"bundleDependencies":false,"deprecated":false,"description":"Normalize a URL","devDependencies":{"ava":"^2.4.0","nyc":"^15.0.0","tsd":"^0.11.0","xo":"^0.25.3"},"engines":{"node":">=10"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/normalize-url#readme","keywords":["normalize","url","uri","address","string","normalization","normalisation","query","querystring","simplify","strip","trim","canonical"],"license":"MIT","name":"normalize-url","nyc":{"reporter":["text","lcov"]},"repository":{"type":"git","url":"git+https://github.com/sindresorhus/normalize-url.git"},"scripts":{"test":"xo && nyc ava && tsd"},"version":"6.1.0"}');

/***/ }),

/***/ 41516:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"object-assign@^4.0.1","_id":"object-assign@4.1.1","_inBundle":false,"_integrity":"sha1-IQmtx5ZYh8/AXLvUQsrIv7s2CGM=","_location":"/object-assign","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"object-assign@^4.0.1","name":"object-assign","escapedName":"object-assign","rawSpec":"^4.0.1","saveSpec":null,"fetchSpec":"^4.0.1"},"_requiredBy":["/globby"],"_resolved":"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz","_shasum":"2109adc7965887cfc05cbbd442cac8bfbb360863","_spec":"object-assign@^4.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/globby","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/object-assign/issues"},"bundleDependencies":false,"deprecated":false,"description":"ES2015 `Object.assign()` ponyfill","devDependencies":{"ava":"^0.16.0","lodash":"^4.16.4","matcha":"^0.7.0","xo":"^0.16.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/object-assign#readme","keywords":["object","assign","extend","properties","es2015","ecmascript","harmony","ponyfill","prollyfill","polyfill","shim","browser"],"license":"MIT","name":"object-assign","repository":{"type":"git","url":"git+https://github.com/sindresorhus/object-assign.git"},"scripts":{"bench":"matcha bench.js","test":"xo && ava"},"version":"4.1.1"}');

/***/ }),

/***/ 95185:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^0.2.5","_id":"define-property@0.2.5","_inBundle":false,"_integrity":"sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=","_location":"/object-copy/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^0.2.5","name":"define-property","escapedName":"define-property","rawSpec":"^0.2.5","saveSpec":null,"fetchSpec":"^0.2.5"},"_requiredBy":["/object-copy"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz","_shasum":"c35b1ef918ec3c990f9a5bc57be04aacec5c8116","_spec":"define-property@^0.2.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/object-copy","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^0.1.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"mocha":"*","should":"^7.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["mixin-deep","mixin-object","delegate-object","forward-object"]}},"version":"0.2.5"}');

/***/ }),

/***/ 17079:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^3.0.3","_id":"kind-of@3.2.2","_inBundle":false,"_integrity":"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=","_location":"/object-copy/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^3.0.3","name":"kind-of","escapedName":"kind-of","rawSpec":"^3.0.3","saveSpec":null,"fetchSpec":"^3.0.3"},"_requiredBy":["/object-copy"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz","_shasum":"31ea21a734bab9bbb0f32466d893aea51e4a3c64","_spec":"kind-of@^3.0.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/object-copy","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.0.0","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.3.0","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.2.2"}');

/***/ }),

/***/ 64504:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"object-copy@^0.1.0","_id":"object-copy@0.1.0","_inBundle":false,"_integrity":"sha1-fn2Fi3gb18mRpBupde04EnVOmYw=","_location":"/object-copy","_phantomChildren":{"is-buffer":"1.1.6","is-descriptor":"0.1.6"},"_requested":{"type":"range","registry":true,"raw":"object-copy@^0.1.0","name":"object-copy","escapedName":"object-copy","rawSpec":"^0.1.0","saveSpec":null,"fetchSpec":"^0.1.0"},"_requiredBy":["/static-extend"],"_resolved":"https://registry.npmjs.org/object-copy/-/object-copy-0.1.0.tgz","_shasum":"7e7d858b781bd7c991a41ba975ed3812754e998c","_spec":"object-copy@^0.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/static-extend","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/object-copy/issues"},"bundleDependencies":false,"dependencies":{"copy-descriptor":"^0.1.0","define-property":"^0.2.5","kind-of":"^3.0.3"},"deprecated":false,"description":"Copy static properties, prototype properties, and descriptors from one object to another.","devDependencies":{"gulp-format-md":"*","mocha":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/object-copy","keywords":["copy","object"],"license":"MIT","main":"index.js","name":"object-copy","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/object-copy.git"},"scripts":{"test":"mocha"},"verb":{"layout":"default","plugins":["gulp-format-md"],"related":{"list":[]},"reflinks":["verb"]},"version":"0.1.0"}');

/***/ }),

/***/ 80250:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"object-visit@^1.0.0","_id":"object-visit@1.0.1","_inBundle":false,"_integrity":"sha1-95xEk68MU3e1n+OdOV5BBC3QRbs=","_location":"/object-visit","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"object-visit@^1.0.0","name":"object-visit","escapedName":"object-visit","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/collection-visit","/map-visit"],"_resolved":"https://registry.npmjs.org/object-visit/-/object-visit-1.0.1.tgz","_shasum":"f79c4493af0c5377b59fe39d395e41042dd045bb","_spec":"object-visit@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/collection-visit","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/object-visit/issues"},"bundleDependencies":false,"dependencies":{"isobject":"^3.0.0"},"deprecated":false,"description":"Call a specified method on each value in the given object.","devDependencies":{"gulp":"^3.9.1","gulp-eslint":"^3.0.1","gulp-format-md":"^0.1.12","gulp-istanbul":"^1.1.1","gulp-mocha":"^3.0.0","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/object-visit","keywords":["context","function","helper","key","method","object","value","visit","visitor"],"license":"MIT","main":"index.js","name":"object-visit","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/object-visit.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["base-methods","collection-visit","define-property","map-visit"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.1"}');

/***/ }),

/***/ 3083:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"object.pick@^1.3.0","_id":"object.pick@1.3.0","_inBundle":false,"_integrity":"sha1-h6EKxMFpS9Lhy/U1kaZhQftd10c=","_location":"/object.pick","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"object.pick@^1.3.0","name":"object.pick","escapedName":"object.pick","rawSpec":"^1.3.0","saveSpec":null,"fetchSpec":"^1.3.0"},"_requiredBy":["/cpy/micromatch","/nanomatch"],"_resolved":"https://registry.npmjs.org/object.pick/-/object.pick-1.3.0.tgz","_shasum":"87a10ac4c1694bd2e1cbf53591a66141fb5dd747","_spec":"object.pick@^1.3.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/object.pick/issues"},"bundleDependencies":false,"dependencies":{"isobject":"^3.0.1"},"deprecated":false,"description":"Returns a filtered copy of an object with only the specified keys, similar to `_.pick` from lodash / underscore.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.1.2","vinyl":"^2.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/object.pick","keywords":["object","pick"],"license":"MIT","main":"index.js","name":"object.pick","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/object.pick.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["extend-shallow","get-value","mixin-deep","set-value"],"highlight":"object.omit"},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"1.3.0"}');

/***/ }),

/***/ 67376:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["once@1.4.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"once@1.4.0","_id":"once@1.4.0","_inBundle":false,"_integrity":"sha1-WDsap3WWHUsROsF9nFC6753Xa9E=","_location":"/once","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"once@1.4.0","name":"once","escapedName":"once","rawSpec":"1.4.0","saveSpec":null,"fetchSpec":"1.4.0"},"_requiredBy":["/end-of-stream","/glob","/inflight","/pump"],"_resolved":"https://registry.npmjs.org/once/-/once-1.4.0.tgz","_spec":"1.4.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/once/issues"},"dependencies":{"wrappy":"1"},"description":"Run a function exactly one time","devDependencies":{"tap":"^7.0.1"},"directories":{"test":"test"},"files":["once.js"],"homepage":"https://github.com/isaacs/once#readme","keywords":["once","function","one","single"],"license":"ISC","main":"once.js","name":"once","repository":{"type":"git","url":"git://github.com/isaacs/once.git"},"scripts":{"test":"tap test/*.js"},"version":"1.4.0"}');

/***/ }),

/***/ 79026:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["optionator@0.9.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"optionator@0.9.1","_id":"optionator@0.9.1","_inBundle":false,"_integrity":"sha512-74RlY5FCnhq4jRxVUPKDaRwrVNXMqsGsiW6AJw4XK8hmtm10wC0ypZBLw5IIp85NZMr91+qd1RvvENwg7jjRFw==","_location":"/optionator","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"optionator@0.9.1","name":"optionator","escapedName":"optionator","rawSpec":"0.9.1","saveSpec":null,"fetchSpec":"0.9.1"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/optionator/-/optionator-0.9.1.tgz","_spec":"0.9.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"George Zahariev","email":"z@georgezahariev.com"},"bugs":{"url":"https://github.com/gkz/optionator/issues"},"dependencies":{"deep-is":"^0.1.3","fast-levenshtein":"^2.0.6","levn":"^0.4.1","prelude-ls":"^1.2.1","type-check":"^0.4.0","word-wrap":"^1.2.3"},"description":"option parsing and help generation","devDependencies":{"livescript":"^1.6.0","mocha":"^7.1.1"},"engines":{"node":">= 0.8.0"},"files":["lib","README.md","LICENSE"],"homepage":"https://github.com/gkz/optionator","keywords":["options","flags","option parsing","cli"],"license":"MIT","main":"./lib/","name":"optionator","repository":{"type":"git","url":"git://github.com/gkz/optionator.git"},"scripts":{"test":"make test"},"version":"0.9.1"}');

/***/ }),

/***/ 36304:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-map@^2.0.0","_id":"p-map@2.1.0","_inBundle":false,"_integrity":"sha512-y3b8Kpd8OAN444hxfBbFfj1FY/RjtTd8tzYwhUqNYXx0fXx2iX4maP4Qr6qhIKbQXI02wTLAda4fYUbDagTUFw==","_location":"/p-all/p-map","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-map@^2.0.0","name":"p-map","escapedName":"p-map","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/p-all"],"_resolved":"https://registry.npmjs.org/p-map/-/p-map-2.1.0.tgz","_shasum":"310928feef9c9ecc65b68b17693018a665cea175","_spec":"p-map@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/p-all","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-map/issues"},"bundleDependencies":false,"deprecated":false,"description":"Map over promises concurrently","devDependencies":{"ava":"^1.4.1","delay":"^4.1.0","in-range":"^1.0.0","random-int":"^1.0.0","time-span":"^3.1.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-map#readme","keywords":["promise","map","resolved","wait","collection","iterable","iterator","race","fulfilled","async","await","promises","concurrently","concurrency","parallel","bluebird"],"license":"MIT","name":"p-map","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-map.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.1.0"}');

/***/ }),

/***/ 50523:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-all@^2.1.0","_id":"p-all@2.1.0","_inBundle":false,"_integrity":"sha512-HbZxz5FONzz/z2gJfk6bFca0BCiSRF8jU3yCsWOen/vR6lZjfPOu/e7L3uFzTW1i0H8TlC3vqQstEJPQL4/uLA==","_location":"/p-all","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-all@^2.1.0","name":"p-all","escapedName":"p-all","rawSpec":"^2.1.0","saveSpec":null,"fetchSpec":"^2.1.0"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/p-all/-/p-all-2.1.0.tgz","_shasum":"91419be56b7dee8fe4c5db875d55e0da084244a0","_spec":"p-all@^2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-all/issues"},"bundleDependencies":false,"dependencies":{"p-map":"^2.0.0"},"deprecated":false,"description":"Run promise-returning & async functions concurrently with optional limited concurrency","devDependencies":{"ava":"^1.4.1","delay":"^4.1.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-all#readme","keywords":["promise","all","function","func","fn","limited","limit","control","rate","collection","iterable","iterator","fulfilled","async","await","promises","concurrent","concurrently","concurrency","parallel","bluebird"],"license":"MIT","name":"p-all","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-all.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.1.0"}');

/***/ }),

/***/ 20650:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-cancelable@^2.0.0","_id":"p-cancelable@2.1.1","_inBundle":false,"_integrity":"sha512-BZOr3nRQHOntUjTrH8+Lh54smKHoHyur8We1V8DSMVrl5A2malOOwuJRnKRDjSnkoeBh4at6BwEnb5I7Jl31wg==","_location":"/p-cancelable","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-cancelable@^2.0.0","name":"p-cancelable","escapedName":"p-cancelable","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/got"],"_resolved":"https://registry.npmjs.org/p-cancelable/-/p-cancelable-2.1.1.tgz","_shasum":"aab7fbd416582fa32a3db49859c122487c5ed2cf","_spec":"p-cancelable@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-cancelable/issues"},"bundleDependencies":false,"deprecated":false,"description":"Create a promise that can be canceled","devDependencies":{"ava":"^1.4.1","delay":"^4.1.0","promise.prototype.finally":"^3.1.0","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-cancelable#readme","keywords":["promise","cancelable","cancel","canceled","canceling","cancellable","cancellation","abort","abortable","aborting","cleanup","task","token","async","function","await","promises","bluebird"],"license":"MIT","name":"p-cancelable","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-cancelable.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.1.1"}');

/***/ }),

/***/ 18719:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-event@^4.1.0","_id":"p-event@4.2.0","_inBundle":false,"_integrity":"sha512-KXatOjCRXXkSePPb1Nbi0p0m+gQAwdlbhi4wQKJPI1HsMQS9g+Sqp2o+QHziPr7eYJyOZet836KoHEVM1mwOrQ==","_location":"/p-event","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-event@^4.1.0","name":"p-event","escapedName":"p-event","rawSpec":"^4.1.0","saveSpec":null,"fetchSpec":"^4.1.0"},"_requiredBy":["/cp-file"],"_resolved":"https://registry.npmjs.org/p-event/-/p-event-4.2.0.tgz","_shasum":"af4b049c8acd91ae81083ebd1e6f5cae2044c1b5","_spec":"p-event@^4.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cp-file","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-event/issues"},"bundleDependencies":false,"dependencies":{"p-timeout":"^3.1.0"},"deprecated":false,"description":"Promisify an event by waiting for it to be emitted","devDependencies":{"@types/node":"^12.0.2","ava":"^1.4.1","delay":"^4.1.0","tsd":"^0.11.0","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/p-event#readme","keywords":["promise","events","event","emitter","eventemitter","event-emitter","emit","emits","listener","promisify","addlistener","addeventlistener","wait","waits","on","browser","dom","async","await","promises","bluebird"],"license":"MIT","name":"p-event","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-event.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.2.0"}');

/***/ }),

/***/ 42198:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-map@^2.0.0","_id":"p-map@2.1.0","_inBundle":false,"_integrity":"sha512-y3b8Kpd8OAN444hxfBbFfj1FY/RjtTd8tzYwhUqNYXx0fXx2iX4maP4Qr6qhIKbQXI02wTLAda4fYUbDagTUFw==","_location":"/p-filter/p-map","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-map@^2.0.0","name":"p-map","escapedName":"p-map","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/p-filter"],"_resolved":"https://registry.npmjs.org/p-map/-/p-map-2.1.0.tgz","_shasum":"310928feef9c9ecc65b68b17693018a665cea175","_spec":"p-map@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/p-filter","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-map/issues"},"bundleDependencies":false,"deprecated":false,"description":"Map over promises concurrently","devDependencies":{"ava":"^1.4.1","delay":"^4.1.0","in-range":"^1.0.0","random-int":"^1.0.0","time-span":"^3.1.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-map#readme","keywords":["promise","map","resolved","wait","collection","iterable","iterator","race","fulfilled","async","await","promises","concurrently","concurrency","parallel","bluebird"],"license":"MIT","name":"p-map","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-map.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.1.0"}');

/***/ }),

/***/ 71523:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-filter@^2.1.0","_id":"p-filter@2.1.0","_inBundle":false,"_integrity":"sha512-ZBxxZ5sL2HghephhpGAQdoskxplTwr7ICaehZwLIlfL6acuVgZPm8yBNuRAFBGEqtD/hmUeq9eqLg2ys9Xr/yw==","_location":"/p-filter","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-filter@^2.1.0","name":"p-filter","escapedName":"p-filter","rawSpec":"^2.1.0","saveSpec":null,"fetchSpec":"^2.1.0"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/p-filter/-/p-filter-2.1.0.tgz","_shasum":"1b1472562ae7a0f742f0f3d3d3718ea66ff9c09c","_spec":"p-filter@^2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-filter/issues"},"bundleDependencies":false,"dependencies":{"p-map":"^2.0.0"},"deprecated":false,"description":"Filter promises concurrently","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-filter#readme","keywords":["promise","filter","collection","iterable","iterator","fulfilled","async","await","promises","concurrently","concurrency","parallel","bluebird"],"license":"MIT","name":"p-filter","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-filter.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.1.0"}');

/***/ }),

/***/ 66128:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-finally@^1.0.0","_id":"p-finally@1.0.0","_inBundle":false,"_integrity":"sha1-P7z7FbiZpEEjs0ttzBi3JDNqLK4=","_location":"/p-finally","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-finally@^1.0.0","name":"p-finally","escapedName":"p-finally","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/p-timeout"],"_resolved":"https://registry.npmjs.org/p-finally/-/p-finally-1.0.0.tgz","_shasum":"3fbcfb15b899a44123b34b6dcc18b724336a2cae","_spec":"p-finally@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/p-timeout","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-finally/issues"},"bundleDependencies":false,"deprecated":false,"description":"`Promise#finally()` ponyfill - Invoked when the promise is settled regardless of outcome","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/p-finally#readme","keywords":["promise","finally","handler","function","async","await","promises","settled","ponyfill","polyfill","shim","bluebird"],"license":"MIT","name":"p-finally","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-finally.git"},"scripts":{"test":"xo && ava"},"version":"1.0.0","xo":{"esnext":true}}');

/***/ }),

/***/ 19446:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-limit@^2.2.0","_id":"p-limit@2.3.0","_inBundle":false,"_integrity":"sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==","_location":"/p-limit","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-limit@^2.2.0","name":"p-limit","escapedName":"p-limit","rawSpec":"^2.2.0","saveSpec":null,"fetchSpec":"^2.2.0"},"_requiredBy":["/p-locate"],"_resolved":"https://registry.npmjs.org/p-limit/-/p-limit-2.3.0.tgz","_shasum":"3dd33c647a214fdfffd835933eb086da0dc21db1","_spec":"p-limit@^2.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/p-locate","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-limit/issues"},"bundleDependencies":false,"dependencies":{"p-try":"^2.0.0"},"deprecated":false,"description":"Run multiple promise-returning & async functions with limited concurrency","devDependencies":{"ava":"^1.2.1","delay":"^4.1.0","in-range":"^1.0.0","random-int":"^1.0.0","time-span":"^2.0.0","tsd-check":"^0.3.0","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/p-limit#readme","keywords":["promise","limit","limited","concurrency","throttle","throat","rate","batch","ratelimit","task","queue","async","await","promises","bluebird"],"license":"MIT","name":"p-limit","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-limit.git"},"scripts":{"test":"xo && ava && tsd-check"},"version":"2.3.0"}');

/***/ }),

/***/ 25593:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-locate@^4.1.0","_id":"p-locate@4.1.0","_inBundle":false,"_integrity":"sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==","_location":"/p-locate","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-locate@^4.1.0","name":"p-locate","escapedName":"p-locate","rawSpec":"^4.1.0","saveSpec":null,"fetchSpec":"^4.1.0"},"_requiredBy":["/locate-path"],"_resolved":"https://registry.npmjs.org/p-locate/-/p-locate-4.1.0.tgz","_shasum":"a3428bb7088b3a60292f66919278b7c297ad4f07","_spec":"p-locate@^4.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/locate-path","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-locate/issues"},"bundleDependencies":false,"dependencies":{"p-limit":"^2.2.0"},"deprecated":false,"description":"Get the first fulfilled promise that satisfies the provided testing function","devDependencies":{"ava":"^1.4.1","delay":"^4.1.0","in-range":"^1.0.0","time-span":"^3.0.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-locate#readme","keywords":["promise","locate","find","finder","search","searcher","test","array","collection","iterable","iterator","race","fulfilled","fastest","async","await","promises","bluebird"],"license":"MIT","name":"p-locate","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-locate.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.1.0"}');

/***/ }),

/***/ 87341:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-map@^3.0.0","_id":"p-map@3.0.0","_inBundle":false,"_integrity":"sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==","_location":"/p-map","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-map@^3.0.0","name":"p-map","escapedName":"p-map","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/cpy"],"_resolved":"https://registry.npmjs.org/p-map/-/p-map-3.0.0.tgz","_shasum":"d704d9af8a2ba684e2600d9a215983d4141a979d","_spec":"p-map@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-map/issues"},"bundleDependencies":false,"dependencies":{"aggregate-error":"^3.0.0"},"deprecated":false,"description":"Map over promises concurrently","devDependencies":{"ava":"^2.2.0","delay":"^4.1.0","in-range":"^2.0.0","random-int":"^2.0.0","time-span":"^3.1.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-map#readme","keywords":["promise","map","resolved","wait","collection","iterable","iterator","race","fulfilled","async","await","promises","concurrently","concurrency","parallel","bluebird"],"license":"MIT","name":"p-map","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-map.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.0.0"}');

/***/ }),

/***/ 87620:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-timeout@^3.1.0","_id":"p-timeout@3.2.0","_inBundle":false,"_integrity":"sha512-rhIwUycgwwKcP9yTOOFK/AKsAopjjCakVqLHePO3CC6Mir1Z99xT+R63jZxAT5lFZLa2inS5h+ZS2GvR99/FBg==","_location":"/p-timeout","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-timeout@^3.1.0","name":"p-timeout","escapedName":"p-timeout","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/p-event"],"_resolved":"https://registry.npmjs.org/p-timeout/-/p-timeout-3.2.0.tgz","_shasum":"c7e17abc971d2a7962ef83626b35d635acf23dfe","_spec":"p-timeout@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/p-event","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-timeout/issues"},"bundleDependencies":false,"dependencies":{"p-finally":"^1.0.0"},"deprecated":false,"description":"Timeout a promise after a specified amount of time","devDependencies":{"ava":"^1.4.1","delay":"^4.1.0","p-cancelable":"^2.0.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-timeout#readme","keywords":["promise","timeout","error","invalidate","async","await","promises","time","out","cancel","bluebird"],"license":"MIT","name":"p-timeout","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-timeout.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.2.0"}');

/***/ }),

/***/ 3794:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"p-try@^2.0.0","_id":"p-try@2.2.0","_inBundle":false,"_integrity":"sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==","_location":"/p-try","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"p-try@^2.0.0","name":"p-try","escapedName":"p-try","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/p-limit"],"_resolved":"https://registry.npmjs.org/p-try/-/p-try-2.2.0.tgz","_shasum":"cb2868540e313d61de58fafbe35ce9004d5540e6","_spec":"p-try@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/p-limit","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/p-try/issues"},"bundleDependencies":false,"deprecated":false,"description":"`Start a promise chain","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/p-try#readme","keywords":["promise","try","resolve","function","catch","async","await","promises","settled","ponyfill","polyfill","shim","bluebird"],"license":"MIT","name":"p-try","repository":{"type":"git","url":"git+https://github.com/sindresorhus/p-try.git"},"scripts":{"test":"xo && ava && tsd"},"version":"2.2.0"}');

/***/ }),

/***/ 82802:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["parent-module@1.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"parent-module@1.0.1","_id":"parent-module@1.0.1","_inBundle":false,"_integrity":"sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==","_location":"/parent-module","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"parent-module@1.0.1","name":"parent-module","escapedName":"parent-module","rawSpec":"1.0.1","saveSpec":null,"fetchSpec":"1.0.1"},"_requiredBy":["/import-fresh"],"_resolved":"https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz","_spec":"1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/parent-module/issues"},"dependencies":{"callsites":"^3.0.0"},"description":"Get the path of the parent module","devDependencies":{"ava":"^1.4.1","execa":"^1.0.0","xo":"^0.24.0"},"engines":{"node":">=6"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/parent-module#readme","keywords":["parent","module","package","pkg","caller","calling","module","path","callsites","callsite","stacktrace","stack","trace","function","file"],"license":"MIT","name":"parent-module","repository":{"type":"git","url":"git+https://github.com/sindresorhus/parent-module.git"},"scripts":{"test":"xo && ava"},"version":"1.0.1"}');

/***/ }),

/***/ 93570:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"parse-json@^5.0.0","_id":"parse-json@5.2.0","_inBundle":false,"_integrity":"sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==","_location":"/parse-json","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"parse-json@^5.0.0","name":"parse-json","escapedName":"parse-json","rawSpec":"^5.0.0","saveSpec":null,"fetchSpec":"^5.0.0"},"_requiredBy":["/read-pkg"],"_resolved":"https://registry.npmjs.org/parse-json/-/parse-json-5.2.0.tgz","_shasum":"c76fc66dee54231c962b22bcc8a72cf2f99753cd","_spec":"parse-json@^5.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/read-pkg","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/parse-json/issues"},"bundleDependencies":false,"dependencies":{"@babel/code-frame":"^7.0.0","error-ex":"^1.3.1","json-parse-even-better-errors":"^2.3.0","lines-and-columns":"^1.1.6"},"deprecated":false,"description":"Parse JSON with more helpful errors","devDependencies":{"ava":"^1.4.1","nyc":"^14.1.1","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","vendor"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/parse-json#readme","keywords":["parse","json","graceful","error","message","humanize","friendly","helpful","string"],"license":"MIT","name":"parse-json","repository":{"type":"git","url":"git+https://github.com/sindresorhus/parse-json.git"},"scripts":{"test":"xo && nyc ava"},"version":"5.2.0"}');

/***/ }),

/***/ 41430:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pascalcase@^0.1.1","_id":"pascalcase@0.1.1","_inBundle":false,"_integrity":"sha1-s2PlXoAGym/iF4TS2yK9FdeRfxQ=","_location":"/pascalcase","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pascalcase@^0.1.1","name":"pascalcase","escapedName":"pascalcase","rawSpec":"^0.1.1","saveSpec":null,"fetchSpec":"^0.1.1"},"_requiredBy":["/base"],"_resolved":"https://registry.npmjs.org/pascalcase/-/pascalcase-0.1.1.tgz","_shasum":"b363e55e8006ca6fe21784d2db22bd15d7917f14","_spec":"pascalcase@^0.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/pascalcase/issues"},"bundleDependencies":false,"deprecated":false,"description":"Convert a string to pascal-case.","devDependencies":{"mocha":"*","should":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/pascalcase","keywords":["camelcase","case","casing","pascal","pascal-case","pascalcase","string"],"license":"MIT","main":"index.js","name":"pascalcase","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/pascalcase.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["pad-left","pad-right","word-wrap","repeat-string","justified"]}},"version":"0.1.1"}');

/***/ }),

/***/ 62581:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"path-dirname@^1.0.0","_id":"path-dirname@1.0.2","_inBundle":false,"_integrity":"sha1-zDPSTVJeCZpTiMAzbG4yuRYGCeA=","_location":"/path-dirname","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"path-dirname@^1.0.0","name":"path-dirname","escapedName":"path-dirname","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/cpy/glob-parent"],"_resolved":"https://registry.npmjs.org/path-dirname/-/path-dirname-1.0.2.tgz","_shasum":"cc33d24d525e099a5388c0336c6e32b9160609e0","_spec":"path-dirname@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/glob-parent","author":{"name":"Elan Shanker"},"bugs":{"url":"https://github.com/es128/path-dirname/issues"},"bundleDependencies":false,"deprecated":false,"description":"Node.js path.dirname() ponyfill","files":["index.js"],"homepage":"https://github.com/es128/path-dirname#readme","keywords":["dirname","dir","path","paths","file","built-in","util","utils","core","stdlib","ponyfill","polyfill","shim"],"license":"MIT","name":"path-dirname","repository":{"type":"git","url":"git+https://github.com/es128/path-dirname.git"},"scripts":{"test":"node test.js"},"version":"1.0.2"}');

/***/ }),

/***/ 84799:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"path-exists@^4.0.0","_id":"path-exists@4.0.0","_inBundle":false,"_integrity":"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==","_location":"/path-exists","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"path-exists@^4.0.0","name":"path-exists","escapedName":"path-exists","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/find-up"],"_resolved":"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz","_shasum":"513bdbe2d3b95d7762e8c1137efa195c6c61b5b3","_spec":"path-exists@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/find-up","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/path-exists/issues"},"bundleDependencies":false,"deprecated":false,"description":"Check if a path exists","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/path-exists#readme","keywords":["path","exists","exist","file","filepath","fs","filesystem","file-system","access","stat"],"license":"MIT","name":"path-exists","repository":{"type":"git","url":"git+https://github.com/sindresorhus/path-exists.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.0.0"}');

/***/ }),

/***/ 95418:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["path-is-absolute@1.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"path-is-absolute@1.0.1","_id":"path-is-absolute@1.0.1","_inBundle":false,"_integrity":"sha1-F0uSaHNVNP+8es5r9TpanhtcX18=","_location":"/path-is-absolute","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"path-is-absolute@1.0.1","name":"path-is-absolute","escapedName":"path-is-absolute","rawSpec":"1.0.1","saveSpec":null,"fetchSpec":"1.0.1"},"_requiredBy":["/glob"],"_resolved":"https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz","_spec":"1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/path-is-absolute/issues"},"description":"Node.js 0.12 path.isAbsolute() ponyfill","devDependencies":{"xo":"^0.16.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/path-is-absolute#readme","keywords":["path","paths","file","dir","absolute","isabsolute","is-absolute","built-in","util","utils","core","ponyfill","polyfill","shim","is","detect","check"],"license":"MIT","name":"path-is-absolute","repository":{"type":"git","url":"git+https://github.com/sindresorhus/path-is-absolute.git"},"scripts":{"test":"xo && node test.js"},"version":"1.0.1"}');

/***/ }),

/***/ 78664:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["path-key@3.1.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"path-key@3.1.1","_id":"path-key@3.1.1","_inBundle":false,"_integrity":"sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==","_location":"/path-key","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"path-key@3.1.1","name":"path-key","escapedName":"path-key","rawSpec":"3.1.1","saveSpec":null,"fetchSpec":"3.1.1"},"_requiredBy":["/cross-spawn"],"_resolved":"https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz","_spec":"3.1.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/path-key/issues"},"description":"Get the PATH environment variable key cross-platform","devDependencies":{"@types/node":"^11.13.0","ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/path-key#readme","keywords":["path","key","environment","env","variable","var","get","cross-platform","windows"],"license":"MIT","name":"path-key","repository":{"type":"git","url":"git+https://github.com/sindresorhus/path-key.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.1.1"}');

/***/ }),

/***/ 5992:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"path-parse@^1.0.6","_id":"path-parse@1.0.7","_inBundle":false,"_integrity":"sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==","_location":"/path-parse","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"path-parse@^1.0.6","name":"path-parse","escapedName":"path-parse","rawSpec":"^1.0.6","saveSpec":null,"fetchSpec":"^1.0.6"},"_requiredBy":["/resolve"],"_resolved":"https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz","_shasum":"fbc114b60ca42b30d9daf5858e4bd68bbedb6735","_spec":"path-parse@^1.0.6","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/resolve","author":{"name":"Javier Blanco","email":"http://jbgutierrez.info"},"bugs":{"url":"https://github.com/jbgutierrez/path-parse/issues"},"bundleDependencies":false,"deprecated":false,"description":"Node.js path.parse() ponyfill","homepage":"https://github.com/jbgutierrez/path-parse#readme","keywords":["path","paths","file","dir","parse","built-in","util","utils","core","ponyfill","polyfill","shim"],"license":"MIT","main":"index.js","name":"path-parse","repository":{"type":"git","url":"git+https://github.com/jbgutierrez/path-parse.git"},"scripts":{"test":"node test.js"},"version":"1.0.7"}');

/***/ }),

/***/ 12624:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pify@^3.0.0","_id":"pify@3.0.0","_inBundle":false,"_integrity":"sha1-5aSs0sEB/fPZpNB/DbxNtJ3SgXY=","_location":"/path-type/pify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pify@^3.0.0","name":"pify","escapedName":"pify","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/path-type"],"_resolved":"https://registry.npmjs.org/pify/-/pify-3.0.0.tgz","_shasum":"e5a4acd2c101fdf3d9a4d07f0dbc4db49dd28176","_spec":"pify@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/path-type","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/pify/issues"},"bundleDependencies":false,"deprecated":false,"description":"Promisify a callback-style function","devDependencies":{"ava":"*","pinkie-promise":"^2.0.0","v8-natives":"^1.0.0","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/pify#readme","keywords":["promise","promises","promisify","all","denodify","denodeify","callback","cb","node","then","thenify","convert","transform","wrap","wrapper","bind","to","async","await","es2015","bluebird"],"license":"MIT","name":"pify","repository":{"type":"git","url":"git+https://github.com/sindresorhus/pify.git"},"scripts":{"optimization-test":"node --allow-natives-syntax optimization-test.js","test":"xo && ava && npm run optimization-test"},"version":"3.0.0"}');

/***/ }),

/***/ 18042:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"path-type@^3.0.0","_id":"path-type@3.0.0","_inBundle":false,"_integrity":"sha512-T2ZUsdZFHgA3u4e5PfPbjd7HDDpxPnQb5jN0SrDsjNSuVXHJqtwTnWqG0B1jZrgmJ/7lj1EmVIByWt1gxGkWvg==","_location":"/path-type","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"path-type@^3.0.0","name":"path-type","escapedName":"path-type","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/dir-glob"],"_resolved":"https://registry.npmjs.org/path-type/-/path-type-3.0.0.tgz","_shasum":"cef31dc8e0a1a3bb0d105c0cd97cf3bf47f4e36f","_spec":"path-type@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/dir-glob","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/path-type/issues"},"bundleDependencies":false,"dependencies":{"pify":"^3.0.0"},"deprecated":false,"description":"Check if a path is a file, directory, or symlink","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/path-type#readme","keywords":["path","fs","type","is","check","directory","dir","file","filepath","symlink","symbolic","link","stat","stats","filesystem"],"license":"MIT","name":"path-type","repository":{"type":"git","url":"git+https://github.com/sindresorhus/path-type.git"},"scripts":{"test":"xo && ava"},"version":"3.0.0"}');

/***/ }),

/***/ 45202:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"picomatch@^2.2.3","_id":"picomatch@2.3.0","_inBundle":false,"_integrity":"sha512-lY1Q/PiJGC2zOv/z391WOTD+Z02bCgsFfvxoXXf6h7kv9o+WmsmzYqrAwY63sNgOxE4xEdq0WyUnXfKeBrSvYw==","_location":"/picomatch","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"picomatch@^2.2.3","name":"picomatch","escapedName":"picomatch","rawSpec":"^2.2.3","saveSpec":null,"fetchSpec":"^2.2.3"},"_requiredBy":["/micromatch"],"_resolved":"https://registry.npmjs.org/picomatch/-/picomatch-2.3.0.tgz","_shasum":"f1f061de8f6a4bf022892e2d128234fb98302972","_spec":"picomatch@^2.2.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/picomatch/issues"},"bundleDependencies":false,"deprecated":false,"description":"Blazing fast and accurate glob matcher written in JavaScript, with no dependencies and full support for standard and extended Bash glob features, including braces, extglobs, POSIX brackets, and regular expressions.","devDependencies":{"eslint":"^6.8.0","fill-range":"^7.0.1","gulp-format-md":"^2.0.0","mocha":"^6.2.2","nyc":"^15.0.0","time-require":"github:jonschlinkert/time-require"},"engines":{"node":">=8.6"},"files":["index.js","lib"],"funding":"https://github.com/sponsors/jonschlinkert","homepage":"https://github.com/micromatch/picomatch","keywords":["glob","match","picomatch"],"license":"MIT","main":"index.js","name":"picomatch","nyc":{"reporter":["html","lcov","text-summary"]},"repository":{"type":"git","url":"git+https://github.com/micromatch/picomatch.git"},"scripts":{"lint":"eslint --cache --cache-location node_modules/.cache/.eslintcache --report-unused-disable-directives --ignore-path .gitignore .","mocha":"mocha --reporter dot","test":"npm run lint && npm run mocha","test:ci":"npm run test:cover","test:cover":"nyc npm run mocha"},"verb":{"toc":{"render":true,"method":"preWrite","maxdepth":3},"layout":"empty","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"related":{"list":["braces","micromatch"]},"reflinks":["braces","expand-brackets","extglob","fill-range","micromatch","minimatch","nanomatch","picomatch"]},"version":"2.3.0"}');

/***/ }),

/***/ 61499:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pify@^2.0.0","_id":"pify@2.3.0","_inBundle":false,"_integrity":"sha1-7RQaasBDqEnqWISY59yosVMw6Qw=","_location":"/pify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pify@^2.0.0","name":"pify","escapedName":"pify","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/globby"],"_resolved":"https://registry.npmjs.org/pify/-/pify-2.3.0.tgz","_shasum":"ed141a6ac043a849ea588498e7dca8b15330e90c","_spec":"pify@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/globby","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/pify/issues"},"bundleDependencies":false,"deprecated":false,"description":"Promisify a callback-style function","devDependencies":{"ava":"*","pinkie-promise":"^1.0.0","v8-natives":"0.0.2","xo":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/pify#readme","keywords":["promise","promises","promisify","denodify","denodeify","callback","cb","node","then","thenify","convert","transform","wrap","wrapper","bind","to","async","es2015"],"license":"MIT","name":"pify","repository":{"type":"git","url":"git+https://github.com/sindresorhus/pify.git"},"scripts":{"optimization-test":"node --allow-natives-syntax optimization-test.js","test":"xo && ava && npm run optimization-test"},"version":"2.3.0"}');

/***/ }),

/***/ 37271:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pinkie-promise@^2.0.0","_id":"pinkie-promise@2.0.1","_inBundle":false,"_integrity":"sha1-ITXW36ejWMBprJsXh3YogihFD/o=","_location":"/pinkie-promise","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pinkie-promise@^2.0.0","name":"pinkie-promise","escapedName":"pinkie-promise","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/globby"],"_resolved":"https://registry.npmjs.org/pinkie-promise/-/pinkie-promise-2.0.1.tgz","_shasum":"2135d6dfa7a358c069ac9b178776288228450ffa","_spec":"pinkie-promise@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/globby","author":{"name":"Vsevolod Strukchinsky","email":"floatdrop@gmail.com","url":"github.com/floatdrop"},"bugs":{"url":"https://github.com/floatdrop/pinkie-promise/issues"},"bundleDependencies":false,"dependencies":{"pinkie":"^2.0.0"},"deprecated":false,"description":"ES2015 Promise ponyfill","devDependencies":{"mocha":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/floatdrop/pinkie-promise#readme","keywords":["promise","promises","es2015","es6","polyfill","ponyfill"],"license":"MIT","name":"pinkie-promise","repository":{"type":"git","url":"git+https://github.com/floatdrop/pinkie-promise.git"},"scripts":{"test":"mocha"},"version":"2.0.1"}');

/***/ }),

/***/ 14538:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pinkie@^2.0.0","_id":"pinkie@2.0.4","_inBundle":false,"_integrity":"sha1-clVrgM+g1IqXToDnckjoDtT3+HA=","_location":"/pinkie","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pinkie@^2.0.0","name":"pinkie","escapedName":"pinkie","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/pinkie-promise"],"_resolved":"https://registry.npmjs.org/pinkie/-/pinkie-2.0.4.tgz","_shasum":"72556b80cfa0d48a974e80e77248e80ed4f7f870","_spec":"pinkie@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/pinkie-promise","author":{"name":"Vsevolod Strukchinsky","email":"floatdrop@gmail.com","url":"github.com/floatdrop"},"bugs":{"url":"https://github.com/floatdrop/pinkie/issues"},"bundleDependencies":false,"deprecated":false,"description":"Itty bitty little widdle twinkie pinkie ES2015 Promise implementation","devDependencies":{"core-assert":"^0.1.1","coveralls":"^2.11.4","mocha":"*","nyc":"^3.2.2","promises-aplus-tests":"*","xo":"^0.10.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/floatdrop/pinkie#readme","keywords":["promise","promises","es2015","es6"],"license":"MIT","name":"pinkie","repository":{"type":"git","url":"git+https://github.com/floatdrop/pinkie.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","test":"xo && nyc mocha"},"version":"2.0.4"}');

/***/ }),

/***/ 62098:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pkg-dir@^4.1.0","_id":"pkg-dir@4.2.0","_inBundle":false,"_integrity":"sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==","_location":"/pkg-dir","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pkg-dir@^4.1.0","name":"pkg-dir","escapedName":"pkg-dir","rawSpec":"^4.1.0","saveSpec":null,"fetchSpec":"^4.1.0"},"_requiredBy":["/find-cache-dir"],"_resolved":"https://registry.npmjs.org/pkg-dir/-/pkg-dir-4.2.0.tgz","_shasum":"f099133df7ede422e81d1d8448270eeb3e4261f3","_spec":"pkg-dir@^4.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/find-cache-dir","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/pkg-dir/issues"},"bundleDependencies":false,"dependencies":{"find-up":"^4.0.0"},"deprecated":false,"description":"Find the root directory of a Node.js project or npm package","devDependencies":{"ava":"^1.4.1","tempy":"^0.3.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/pkg-dir#readme","keywords":["package","json","root","npm","entry","find","up","find-up","findup","look-up","look","file","search","match","resolve","parent","parents","folder","directory","dir","walk","walking","path"],"license":"MIT","name":"pkg-dir","repository":{"type":"git","url":"git+https://github.com/sindresorhus/pkg-dir.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.2.0"}');

/***/ }),

/***/ 2377:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"posix-character-classes@^0.1.0","_id":"posix-character-classes@0.1.1","_inBundle":false,"_integrity":"sha1-AerA/jta9xoqbAL+q7jB/vfgDqs=","_location":"/posix-character-classes","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"posix-character-classes@^0.1.0","name":"posix-character-classes","escapedName":"posix-character-classes","rawSpec":"^0.1.0","saveSpec":null,"fetchSpec":"^0.1.0"},"_requiredBy":["/expand-brackets"],"_resolved":"https://registry.npmjs.org/posix-character-classes/-/posix-character-classes-0.1.1.tgz","_shasum":"01eac0fe3b5af71a2a6c02feabb8c1fef7e00eab","_spec":"posix-character-classes@^0.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/expand-brackets","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/posix-character-classes/issues"},"bundleDependencies":false,"deprecated":false,"description":"POSIX character classes for creating regular expressions.","devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/posix-character-classes","keywords":["character","classes","posix"],"license":"MIT","main":"index.js","name":"posix-character-classes","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/posix-character-classes.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"reflinks":["verb","verb-generate-readme"],"lint":{"reflinks":true},"related-list":["micromatch","nanomatch","extglob","expand-brackets"]},"version":"0.1.1"}');

/***/ }),

/***/ 52546:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["prelude-ls@1.2.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"prelude-ls@1.2.1","_id":"prelude-ls@1.2.1","_inBundle":false,"_integrity":"sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==","_location":"/prelude-ls","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"prelude-ls@1.2.1","name":"prelude-ls","escapedName":"prelude-ls","rawSpec":"1.2.1","saveSpec":null,"fetchSpec":"1.2.1"},"_requiredBy":["/levn","/optionator","/type-check"],"_resolved":"https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz","_spec":"1.2.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"George Zahariev","email":"z@georgezahariev.com"},"bugs":{"url":"https://github.com/gkz/prelude-ls/issues"},"description":"prelude.ls is a functionally oriented utility library. It is powerful and flexible. Almost all of its functions are curried. It is written in, and is the recommended base library for, LiveScript.","devDependencies":{"browserify":"^16.5.1","livescript":"^1.6.0","mocha":"^7.1.1","sinon":"~8.0.1","uglify-js":"^3.8.1"},"engines":{"node":">= 0.8.0"},"files":["lib/","README.md","LICENSE"],"homepage":"http://preludels.com","keywords":["prelude","livescript","utility","ls","coffeescript","javascript","library","functional","array","list","object","string"],"license":"MIT","main":"lib/","name":"prelude-ls","repository":{"type":"git","url":"git://github.com/gkz/prelude-ls.git"},"scripts":{"test":"make test"},"version":"1.2.1"}');

/***/ }),

/***/ 94493:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["progress@2.0.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"progress@2.0.3","_id":"progress@2.0.3","_inBundle":false,"_integrity":"sha512-7PiHtLll5LdnKIMw100I+8xJXR5gW2QwWYkT6iJva0bXitZKa/XMrSbdmg3r2Xnaidz9Qumd0VPaMrZlF9V9sA==","_location":"/progress","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"progress@2.0.3","name":"progress","escapedName":"progress","rawSpec":"2.0.3","saveSpec":null,"fetchSpec":"2.0.3"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/progress/-/progress-2.0.3.tgz","_spec":"2.0.3","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"bugs":{"url":"https://github.com/visionmedia/node-progress/issues"},"contributors":[{"name":"Christoffer Hallas","email":"christoffer.hallas@gmail.com"},{"name":"Jordan Scales","email":"scalesjordan@gmail.com"},{"name":"Andrew Rhyne","email":"rhyneandrew@gmail.com"},{"name":"Marco Brack","email":"PapstDonB@Googlemail.com"}],"dependencies":{},"description":"Flexible ascii progress bar","engines":{"node":">=0.4.0"},"homepage":"https://github.com/visionmedia/node-progress#readme","keywords":["cli","progress"],"license":"MIT","main":"./index.js","name":"progress","repository":{"type":"git","url":"git://github.com/visionmedia/node-progress.git"},"version":"2.0.3"}');

/***/ }),

/***/ 44557:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"promise-polyfill@^6.0.1","_id":"promise-polyfill@6.1.0","_inBundle":false,"_integrity":"sha1-36lpQ+qcEh/KTem1hoyznTRy4Fc=","_location":"/promise-polyfill","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"promise-polyfill@^6.0.1","name":"promise-polyfill","escapedName":"promise-polyfill","rawSpec":"^6.0.1","saveSpec":null,"fetchSpec":"^6.0.1"},"_requiredBy":["/child-process-promise"],"_resolved":"https://registry.npmjs.org/promise-polyfill/-/promise-polyfill-6.1.0.tgz","_shasum":"dfa96943ea9c121fca4de9b5868cb39d3472e057","_spec":"promise-polyfill@^6.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/child-process-promise","author":{"name":"Taylor Hakes"},"bugs":{"url":"https://github.com/taylorhakes/promise-polyfill/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Lightweight promise polyfill. A+ compliant","devDependencies":{"eslint":"^2.4.0","karma":"^0.13.19","karma-browserify":"^4.4.2","karma-chrome-launcher":"^0.2.2","karma-mocha":"^0.2.1","mocha":"^2.3.4","promises-aplus-tests":"*","sinon":"^1.17.2","uglify-js":"^2.6.2"},"homepage":"https://github.com/taylorhakes/promise-polyfill","keywords":["promise","promise-polyfill","ES6","promises-aplus"],"license":"MIT","main":"promise.js","name":"promise-polyfill","repository":{"type":"git","url":"git+https://taylorhakes@github.com/taylorhakes/promise-polyfill.git"},"scripts":{"build":"uglifyjs --compress --support-ie8 --mangle -o promise.min.js -- promise.js ","test":"eslint promise.js && mocha && karma start --single-run"},"version":"6.1.0"}');

/***/ }),

/***/ 59878:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pseudomap@^1.0.2","_id":"pseudomap@1.0.2","_inBundle":false,"_integrity":"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=","_location":"/pseudomap","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pseudomap@^1.0.2","name":"pseudomap","escapedName":"pseudomap","rawSpec":"^1.0.2","saveSpec":null,"fetchSpec":"^1.0.2"},"_requiredBy":["/lru-cache"],"_resolved":"https://registry.npmjs.org/pseudomap/-/pseudomap-1.0.2.tgz","_shasum":"f052a28da70e618917ef0a8ac34c1ae5a68286b3","_spec":"pseudomap@^1.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/lru-cache","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/pseudomap/issues"},"bundleDependencies":false,"deprecated":false,"description":"A thing that is a lot like ES6 `Map`, but without iterators, for use in environments where `for..of` syntax and `Map` are not available.","devDependencies":{"tap":"^2.3.1"},"directories":{"test":"test"},"homepage":"https://github.com/isaacs/pseudomap#readme","license":"ISC","main":"map.js","name":"pseudomap","repository":{"type":"git","url":"git+https://github.com/isaacs/pseudomap.git"},"scripts":{"test":"tap test/*.js"},"version":"1.0.2"}');

/***/ }),

/***/ 34144:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"pump@^3.0.0","_id":"pump@3.0.0","_inBundle":false,"_integrity":"sha512-LwZy+p3SFs1Pytd/jYct4wpv49HiYCqd9Rlc5ZVdk0V+8Yzv6jR5Blk3TRmPL1ft69TxP0IMZGJ+WPFU2BFhww==","_location":"/pump","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"pump@^3.0.0","name":"pump","escapedName":"pump","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/get-stream"],"_resolved":"https://registry.npmjs.org/pump/-/pump-3.0.0.tgz","_shasum":"b4a2116815bde2f4e1ea602354e8c75565107a64","_spec":"pump@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/get-stream","author":{"name":"Mathias Buus Madsen","email":"mathiasbuus@gmail.com"},"browser":{"fs":false},"bugs":{"url":"https://github.com/mafintosh/pump/issues"},"bundleDependencies":false,"dependencies":{"end-of-stream":"^1.1.0","once":"^1.3.1"},"deprecated":false,"description":"pipe streams together and close all of them if one of them closes","homepage":"https://github.com/mafintosh/pump#readme","keywords":["streams","pipe","destroy","callback"],"license":"MIT","name":"pump","repository":{"type":"git","url":"git://github.com/mafintosh/pump.git"},"scripts":{"test":"node test-browser.js && node test-node.js"},"version":"3.0.0"}');

/***/ }),

/***/ 39548:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["punycode@2.1.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"punycode@2.1.1","_id":"punycode@2.1.1","_inBundle":false,"_integrity":"sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==","_location":"/punycode","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"punycode@2.1.1","name":"punycode","escapedName":"punycode","rawSpec":"2.1.1","saveSpec":null,"fetchSpec":"2.1.1"},"_requiredBy":["/uri-js"],"_resolved":"https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz","_spec":"2.1.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"},"bugs":{"url":"https://github.com/bestiejs/punycode.js/issues"},"contributors":[{"name":"Mathias Bynens","url":"https://mathiasbynens.be/"}],"description":"A robust Punycode converter that fully complies to RFC 3492 and RFC 5891, and works on nearly all JavaScript platforms.","devDependencies":{"codecov":"^1.0.1","istanbul":"^0.4.1","mocha":"^2.5.3"},"engines":{"node":">=6"},"files":["LICENSE-MIT.txt","punycode.js","punycode.es6.js"],"homepage":"https://mths.be/punycode","jsnext:main":"punycode.es6.js","jspm":{"map":{"./punycode.js":{"node":"@node/punycode"}}},"keywords":["punycode","unicode","idn","idna","dns","url","domain"],"license":"MIT","main":"punycode.js","module":"punycode.es6.js","name":"punycode","repository":{"type":"git","url":"git+https://github.com/bestiejs/punycode.js.git"},"scripts":{"prepublish":"node scripts/prepublish.js","test":"mocha tests"},"version":"2.1.1"}');

/***/ }),

/***/ 26966:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"queue-microtask@^1.2.2","_id":"queue-microtask@1.2.3","_inBundle":false,"_integrity":"sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==","_location":"/queue-microtask","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"queue-microtask@^1.2.2","name":"queue-microtask","escapedName":"queue-microtask","rawSpec":"^1.2.2","saveSpec":null,"fetchSpec":"^1.2.2"},"_requiredBy":["/run-parallel"],"_resolved":"https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz","_shasum":"4929228bbc724dfac43e0efb058caf7b6cfb6243","_spec":"queue-microtask@^1.2.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/run-parallel","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"https://feross.org"},"bugs":{"url":"https://github.com/feross/queue-microtask/issues"},"bundleDependencies":false,"deprecated":false,"description":"fast, tiny `queueMicrotask` shim for modern engines","devDependencies":{"standard":"*","tape":"^5.2.2"},"funding":[{"type":"github","url":"https://github.com/sponsors/feross"},{"type":"patreon","url":"https://www.patreon.com/feross"},{"type":"consulting","url":"https://feross.org/support"}],"homepage":"https://github.com/feross/queue-microtask","keywords":["asap","immediate","micro task","microtask","nextTick","process.nextTick","queue micro task","queue microtask","queue-microtask","queueMicrotask","setImmediate","task"],"license":"MIT","main":"index.js","name":"queue-microtask","repository":{"type":"git","url":"git://github.com/feross/queue-microtask.git"},"scripts":{"test":"standard && tape test/*.js"},"version":"1.2.3"}');

/***/ }),

/***/ 40971:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"quick-lru@^5.1.1","_id":"quick-lru@5.1.1","_inBundle":false,"_integrity":"sha512-WuyALRjWPDGtt/wzJiadO5AXY+8hZ80hVpe6MyivgraREW751X3SbhRvG3eLKOYN+8VEvqLcf3wdnt44Z4S4SA==","_location":"/quick-lru","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"quick-lru@^5.1.1","name":"quick-lru","escapedName":"quick-lru","rawSpec":"^5.1.1","saveSpec":null,"fetchSpec":"^5.1.1"},"_requiredBy":["/http2-wrapper"],"_resolved":"https://registry.npmjs.org/quick-lru/-/quick-lru-5.1.1.tgz","_shasum":"366493e6b3e42a3a6885e2e99d18f80fb7a8c932","_spec":"quick-lru@^5.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/http2-wrapper","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/quick-lru/issues"},"bundleDependencies":false,"deprecated":false,"description":"Simple “Least Recently Used” (LRU) cache","devDependencies":{"ava":"^2.0.0","coveralls":"^3.0.3","nyc":"^15.0.0","tsd":"^0.11.0","xo":"^0.26.0"},"engines":{"node":">=10"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/quick-lru#readme","keywords":["lru","quick","cache","caching","least","recently","used","fast","map","hash","buffer"],"license":"MIT","name":"quick-lru","repository":{"type":"git","url":"git+https://github.com/sindresorhus/quick-lru.git"},"scripts":{"test":"xo && nyc ava && tsd"},"version":"5.1.1"}');

/***/ }),

/***/ 852:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"type-fest@^0.8.1","_id":"type-fest@0.8.1","_inBundle":false,"_integrity":"sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==","_location":"/read-pkg-up/type-fest","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"type-fest@^0.8.1","name":"type-fest","escapedName":"type-fest","rawSpec":"^0.8.1","saveSpec":null,"fetchSpec":"^0.8.1"},"_requiredBy":["/read-pkg-up"],"_resolved":"https://registry.npmjs.org/type-fest/-/type-fest-0.8.1.tgz","_shasum":"09e249ebde851d3b1e48d27c105444667f17b83d","_spec":"type-fest@^0.8.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/read-pkg-up","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/type-fest/issues"},"bundleDependencies":false,"deprecated":false,"description":"A collection of essential TypeScript types","devDependencies":{"@sindresorhus/tsconfig":"^0.4.0","@typescript-eslint/eslint-plugin":"^2.2.0","@typescript-eslint/parser":"^2.2.0","eslint-config-xo-typescript":"^0.18.0","tsd":"^0.7.3","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.d.ts","source"],"homepage":"https://github.com/sindresorhus/type-fest#readme","keywords":["typescript","ts","types","utility","util","utilities","omit","merge","json"],"license":"(MIT OR CC0-1.0)","name":"type-fest","repository":{"type":"git","url":"git+https://github.com/sindresorhus/type-fest.git"},"scripts":{"test":"xo && tsd"},"version":"0.8.1","xo":{"extends":"xo-typescript","extensions":["ts"],"rules":{"import/no-unresolved":"off","@typescript-eslint/indent":"off"}}}');

/***/ }),

/***/ 40529:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"read-pkg-up@^7.0.1","_id":"read-pkg-up@7.0.1","_inBundle":false,"_integrity":"sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg==","_location":"/read-pkg-up","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"read-pkg-up@^7.0.1","name":"read-pkg-up","escapedName":"read-pkg-up","rawSpec":"^7.0.1","saveSpec":null,"fetchSpec":"^7.0.1"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/read-pkg-up/-/read-pkg-up-7.0.1.tgz","_shasum":"f3a6135758459733ae2b95638056e1854e7ef507","_spec":"read-pkg-up@^7.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/read-pkg-up/issues"},"bundleDependencies":false,"dependencies":{"find-up":"^4.1.0","read-pkg":"^5.2.0","type-fest":"^0.8.1"},"deprecated":false,"description":"Read the closest package.json file","devDependencies":{"ava":"^2.4.0","tsd":"^0.9.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/read-pkg-up#readme","keywords":["json","read","parse","file","fs","graceful","load","package","find","up","find-up","findup","look-up","look","search","match","resolve","parent","parents","folder","directory","walk","walking","path"],"license":"MIT","name":"read-pkg-up","repository":{"type":"git","url":"git+https://github.com/sindresorhus/read-pkg-up.git"},"scripts":{"test":"xo && ava && tsd"},"version":"7.0.1"}');

/***/ }),

/***/ 85881:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"type-fest@^0.6.0","_id":"type-fest@0.6.0","_inBundle":false,"_integrity":"sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==","_location":"/read-pkg/type-fest","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"type-fest@^0.6.0","name":"type-fest","escapedName":"type-fest","rawSpec":"^0.6.0","saveSpec":null,"fetchSpec":"^0.6.0"},"_requiredBy":["/read-pkg"],"_resolved":"https://registry.npmjs.org/type-fest/-/type-fest-0.6.0.tgz","_shasum":"8d2a2370d3df886eb5c90ada1c5bf6188acf838b","_spec":"type-fest@^0.6.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/read-pkg","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/type-fest/issues"},"bundleDependencies":false,"deprecated":false,"description":"A collection of essential TypeScript types","devDependencies":{"@sindresorhus/tsconfig":"^0.4.0","@typescript-eslint/eslint-plugin":"^1.9.0","@typescript-eslint/parser":"^1.10.2","eslint-config-xo-typescript":"^0.14.0","tsd":"^0.7.3","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.d.ts","source"],"homepage":"https://github.com/sindresorhus/type-fest#readme","keywords":["typescript","ts","types","utility","util","utilities","omit","merge","json"],"license":"(MIT OR CC0-1.0)","name":"type-fest","repository":{"type":"git","url":"git+https://github.com/sindresorhus/type-fest.git"},"scripts":{"test":"xo && tsd"},"version":"0.6.0","xo":{"extends":"xo-typescript","extensions":["ts"],"rules":{"import/no-unresolved":"off","@typescript-eslint/indent":"off"}}}');

/***/ }),

/***/ 16735:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"read-pkg@^5.2.0","_id":"read-pkg@5.2.0","_inBundle":false,"_integrity":"sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==","_location":"/read-pkg","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"read-pkg@^5.2.0","name":"read-pkg","escapedName":"read-pkg","rawSpec":"^5.2.0","saveSpec":null,"fetchSpec":"^5.2.0"},"_requiredBy":["/read-pkg-up"],"_resolved":"https://registry.npmjs.org/read-pkg/-/read-pkg-5.2.0.tgz","_shasum":"7bf295438ca5a33e56cd30e053b34ee7250c93cc","_spec":"read-pkg@^5.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/read-pkg-up","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/read-pkg/issues"},"bundleDependencies":false,"dependencies":{"@types/normalize-package-data":"^2.4.0","normalize-package-data":"^2.5.0","parse-json":"^5.0.0","type-fest":"^0.6.0"},"deprecated":false,"description":"Read a package.json file","devDependencies":{"ava":"^2.2.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/read-pkg#readme","keywords":["json","read","parse","file","fs","graceful","load","package","normalize"],"license":"MIT","name":"read-pkg","repository":{"type":"git","url":"git+https://github.com/sindresorhus/read-pkg.git"},"scripts":{"test":"xo && ava && tsd"},"version":"5.2.0","xo":{"ignores":["test/test.js"]}}');

/***/ }),

/***/ 47782:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"redent@^3.0.0","_id":"redent@3.0.0","_inBundle":false,"_integrity":"sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==","_location":"/redent","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"redent@^3.0.0","name":"redent","escapedName":"redent","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/redent/-/redent-3.0.0.tgz","_shasum":"e557b7998316bb53c9f1f56fa626352c6963059f","_spec":"redent@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/redent/issues"},"bundleDependencies":false,"dependencies":{"indent-string":"^4.0.0","strip-indent":"^3.0.0"},"deprecated":false,"description":"Strip redundant indentation and indent the string","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/redent#readme","keywords":["string","strip","trim","indent","indentation","add","reindent","normalize","remove","whitespace","space"],"license":"MIT","name":"redent","repository":{"type":"git","url":"git+https://github.com/sindresorhus/redent.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.0.0"}');

/***/ }),

/***/ 55254:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"regex-not@^1.0.0","_id":"regex-not@1.0.2","_inBundle":false,"_integrity":"sha512-J6SDjUgDxQj5NusnOtdFxDwN/+HWykR8GELwctJ7mdqhcyy1xEc4SRFHUXvxTp661YaVKAjfRLZ9cCqS6tn32A==","_location":"/regex-not","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"regex-not@^1.0.0","name":"regex-not","escapedName":"regex-not","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/cpy/micromatch","/expand-brackets","/extglob","/nanomatch","/to-regex"],"_resolved":"https://registry.npmjs.org/regex-not/-/regex-not-1.0.2.tgz","_shasum":"1f4ece27e00b0b65e0247a6810e6a85d83a5752c","_spec":"regex-not@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/regex-not/issues"},"bundleDependencies":false,"dependencies":{"extend-shallow":"^3.0.2","safe-regex":"^1.1.0"},"deprecated":false,"description":"Create a javascript regular expression for matching everything except for the given string.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/regex-not","keywords":["exec","match","negate","negation","not","regex","regular expression","test"],"license":"MIT","main":"index.js","name":"regex-not","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/regex-not.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["regex-cache","to-regex"]},"reflinks":["verb","verb-generate-readme"],"lint":{"reflinks":true}},"version":"1.0.2"}');

/***/ }),

/***/ 49263:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"regexpp@^3.1.0","_id":"regexpp@3.2.0","_inBundle":false,"_integrity":"sha512-pq2bWo9mVD43nbts2wGv17XLiNLya+GklZ8kaDLV2Z08gDCsGpnKn9BFMepvWuHCbyVvY7J5o5+BVvoQbmlJLg==","_location":"/regexpp","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"regexpp@^3.1.0","name":"regexpp","escapedName":"regexpp","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/regexpp/-/regexpp-3.2.0.tgz","_shasum":"0425a2768d8f23bad70ca4b90461fa2f1213e1b2","_spec":"regexpp@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"Toru Nagashima","url":"https://github.com/mysticatea"},"bugs":{"url":"https://github.com/mysticatea/regexpp/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Regular expression parser for ECMAScript.","devDependencies":{"@mysticatea/eslint-plugin":"^11.0.0","@types/eslint":"^4.16.2","@types/jsdom":"^12.2.4","@types/mocha":"^5.2.2","@types/node":"^12.6.8","codecov":"^3.5.0","dts-bundle":"^0.7.3","eslint":"^6.1.0","jsdom":"^15.1.1","mocha":"^6.2.0","npm-run-all":"^4.1.5","nyc":"^14.1.1","rimraf":"^2.6.2","rollup":"^1.17.0","rollup-plugin-node-resolve":"^5.2.0","rollup-plugin-sourcemaps":"^0.4.2","ts-node":"^8.3.0","typescript":"^3.5.3"},"engines":{"node":">=8"},"exports":{".":{"import":"./index.mjs","default":"./index.js"},"./package.json":"./package.json"},"files":["index.*"],"funding":"https://github.com/sponsors/mysticatea","homepage":"https://github.com/mysticatea/regexpp#readme","keywords":["regexp","regular","expression","parser","validator","ast","abstract","syntax","tree","ecmascript","es2015","es2016","es2017","es2018","es2019","es2020","annexB"],"license":"MIT","main":"index","name":"regexpp","repository":{"type":"git","url":"git+https://github.com/mysticatea/regexpp.git"},"scripts":{"build":"run-s build:*","build:dts":"dts-bundle --name regexpp --main .temp/index.d.ts --out ../index.d.ts","build:rollup":"rollup -c","build:tsc":"tsc --module es2015","clean":"rimraf .temp index.*","codecov":"nyc report -r lcovonly && codecov -t ${CODECOV_TOKEN} --disable=gcov","lint":"eslint scripts src test --ext .ts","postversion":"git push && git push --tags","prebuild":"npm run -s clean","pretest":"run-s build lint","preversion":"npm test","prewatch":"npm run -s clean","test":"nyc _mocha \\"test/*.ts\\" --reporter dot --timeout 10000","update:test":"ts-node scripts/update-fixtures.ts","update:unicode":"run-s update:unicode:*","update:unicode:ids":"ts-node scripts/update-unicode-ids.ts","update:unicode:props":"ts-node scripts/update-unicode-properties.ts","version":"npm run -s build","watch":"_mocha \\"test/*.ts\\" --require ts-node/register --reporter dot --timeout 10000 --watch-extensions ts --watch --growl"},"version":"3.2.0"}');

/***/ }),

/***/ 19964:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"repeat-element@^1.1.2","_id":"repeat-element@1.1.4","_inBundle":false,"_integrity":"sha512-LFiNfRcSu7KK3evMyYOuCzv3L10TW7yC1G2/+StMjK8Y6Vqd2MG7r/Qjw4ghtuCOjFvlnms/iMmLqpvW/ES/WQ==","_location":"/repeat-element","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"repeat-element@^1.1.2","name":"repeat-element","escapedName":"repeat-element","rawSpec":"^1.1.2","saveSpec":null,"fetchSpec":"^1.1.2"},"_requiredBy":["/cpy/braces"],"_resolved":"https://registry.npmjs.org/repeat-element/-/repeat-element-1.1.4.tgz","_shasum":"be681520847ab58c7568ac75fbfad28ed42d39e9","_spec":"repeat-element@^1.1.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/repeat-element/issues"},"bundleDependencies":false,"deprecated":false,"description":"Create an array by repeating the given value n times.","devDependencies":{"benchmarked":"^2.0.0","chalk":"^2.4.1","glob":"^7.1.2","gulp-format-md":"^1.0.0","minimist":"^1.2.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/repeat-element","keywords":["array","element","repeat","string"],"license":"MIT","main":"index.js","name":"repeat-element","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/repeat-element.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.1.4"}');

/***/ }),

/***/ 38309:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"repeat-string@^1.6.1","_id":"repeat-string@1.6.1","_inBundle":false,"_integrity":"sha1-jcrkcOHIirwtYA//Sndihtp15jc=","_location":"/repeat-string","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"repeat-string@^1.6.1","name":"repeat-string","escapedName":"repeat-string","rawSpec":"^1.6.1","saveSpec":null,"fetchSpec":"^1.6.1"},"_requiredBy":["/cpy/fill-range","/cpy/to-regex-range"],"_resolved":"https://registry.npmjs.org/repeat-string/-/repeat-string-1.6.1.tgz","_shasum":"8dcae470e1c88abc2d600fff4a776286da75e637","_spec":"repeat-string@^1.6.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/fill-range","author":{"name":"Jon Schlinkert","url":"http://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/repeat-string/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","email":"brian.woodward@gmail.com","url":"https://github.com/doowb"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"},{"name":"Linus Unnebäck","email":"linus@folkdatorn.se","url":"http://linus.unnebäck.se"},{"name":"Thijs Busser","email":"tbusser@gmail.com","url":"http://tbusser.net"},{"name":"Titus","email":"tituswormer@gmail.com","url":"wooorm.com"}],"deprecated":false,"description":"Repeat the given string n times. Fastest implementation for repeating a string.","devDependencies":{"ansi-cyan":"^0.1.1","benchmarked":"^0.2.5","gulp-format-md":"^0.1.11","isobject":"^2.1.0","mocha":"^3.1.2","repeating":"^3.0.0","text-table":"^0.2.0","yargs-parser":"^4.0.2"},"engines":{"node":">=0.10"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/repeat-string","keywords":["fast","fastest","fill","left","left-pad","multiple","pad","padding","repeat","repeating","repetition","right","right-pad","string","times"],"license":"MIT","main":"index.js","name":"repeat-string","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/repeat-string.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["repeat-element"]},"helpers":["./benchmark/helper.js"],"reflinks":["verb"]},"version":"1.6.1"}');

/***/ }),

/***/ 21509:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"chalk@2.4.2","_id":"chalk@2.4.2","_inBundle":false,"_integrity":"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==","_location":"/replace/chalk","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"chalk@2.4.2","name":"chalk","escapedName":"chalk","rawSpec":"2.4.2","saveSpec":null,"fetchSpec":"2.4.2"},"_requiredBy":["/replace"],"_resolved":"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz","_shasum":"cd42541677a54333cf541a49108c1432b44c9424","_spec":"chalk@2.4.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/replace","bugs":{"url":"https://github.com/chalk/chalk/issues"},"bundleDependencies":false,"dependencies":{"ansi-styles":"^3.2.1","escape-string-regexp":"^1.0.5","supports-color":"^5.3.0"},"deprecated":false,"description":"Terminal string styling done right","devDependencies":{"ava":"*","coveralls":"^3.0.0","execa":"^0.9.0","flow-bin":"^0.68.0","import-fresh":"^2.0.0","matcha":"^0.7.0","nyc":"^11.0.2","resolve-from":"^4.0.0","typescript":"^2.5.3","xo":"*"},"engines":{"node":">=4"},"files":["index.js","templates.js","types/index.d.ts","index.js.flow"],"homepage":"https://github.com/chalk/chalk#readme","keywords":["color","colour","colors","terminal","console","cli","string","str","ansi","style","styles","tty","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"chalk","repository":{"type":"git","url":"git+https://github.com/chalk/chalk.git"},"scripts":{"bench":"matcha benchmark.js","coveralls":"nyc report --reporter=text-lcov | coveralls","test":"xo && tsc --project types && flow --max-warnings=0 && nyc ava"},"types":"types/index.d.ts","version":"2.4.2","xo":{"envs":["node","mocha"],"ignores":["test/_flow.js"]}}');

/***/ }),

/***/ 75114:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"replace","_id":"replace@1.2.1","_inBundle":false,"_integrity":"sha512-KZCBe/tPanwBlbjSMQby4l+zjSiFi3CLEP/6VLClnRYgJ46DZ5u9tmA6ceWeFS8coaUnU4ZdGNb/puUGMHNSRg==","_location":"/replace","_phantomChildren":{"ansi-styles":"3.2.1","escape-string-regexp":"1.0.5","supports-color":"5.5.0"},"_requested":{"type":"tag","registry":true,"raw":"replace","name":"replace","escapedName":"replace","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/replace/-/replace-1.2.1.tgz","_shasum":"e6e28db8dc7dcfa2a6c0b99c8922360570f1aead","_spec":"replace","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Alessandro Maclaine","email":"almaclaine@gmail.com"},"bin":{"replace":"bin/replace.js","search":"bin/search.js"},"bugs":{"url":"https://github.com/ALMaclaine/replace/issues"},"bundleDependencies":false,"dependencies":{"chalk":"2.4.2","minimatch":"3.0.4","yargs":"^15.3.1"},"deprecated":false,"description":"Command line search and replace utility","devDependencies":{"tape":"4.11.0"},"engines":{"node":">= 6"},"homepage":"https://github.com/ALMaclaine/replace#readme","keywords":["sed","grep","search","replace"],"license":"MIT","main":"replace.js","name":"replace","repository":{"type":"git","url":"git+https://github.com/ALMaclaine/replace.git"},"scripts":{"test":"node test"},"version":"1.2.1"}');

/***/ }),

/***/ 10332:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"require-directory@^2.1.1","_id":"require-directory@2.1.1","_inBundle":false,"_integrity":"sha1-jGStX9MNqxyXbiNE/+f3kqam30I=","_location":"/require-directory","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"require-directory@^2.1.1","name":"require-directory","escapedName":"require-directory","rawSpec":"^2.1.1","saveSpec":null,"fetchSpec":"^2.1.1"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz","_shasum":"8c64ad5fd30dab1c976e2344ffe7f792a6a6df42","_spec":"require-directory@^2.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Troy Goode","email":"troygoode@gmail.com","url":"http://github.com/troygoode/"},"bugs":{"url":"http://github.com/troygoode/node-require-directory/issues/"},"bundleDependencies":false,"contributors":[{"name":"Troy Goode","email":"troygoode@gmail.com","url":"http://github.com/troygoode/"}],"deprecated":false,"description":"Recursively iterates over specified directory, require()\'ing each file, and returning a nested hash structure containing those modules.","devDependencies":{"jshint":"^2.6.0","mocha":"^2.1.0"},"engines":{"node":">=0.10.0"},"homepage":"https://github.com/troygoode/node-require-directory/","keywords":["require","directory","library","recursive"],"license":"MIT","main":"index.js","name":"require-directory","repository":{"type":"git","url":"git://github.com/troygoode/node-require-directory.git"},"scripts":{"lint":"jshint index.js test/test.js","test":"mocha"},"version":"2.1.1"}');

/***/ }),

/***/ 59643:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["require-from-string@2.0.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"require-from-string@2.0.2","_id":"require-from-string@2.0.2","_inBundle":false,"_integrity":"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==","_location":"/require-from-string","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"require-from-string@2.0.2","name":"require-from-string","escapedName":"require-from-string","rawSpec":"2.0.2","saveSpec":null,"fetchSpec":"2.0.2"},"_requiredBy":["/table/ajv"],"_resolved":"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz","_spec":"2.0.2","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Vsevolod Strukchinsky","email":"floatdrop@gmail.com","url":"github.com/floatdrop"},"bugs":{"url":"https://github.com/floatdrop/require-from-string/issues"},"dependencies":{},"description":"Require module from string","devDependencies":{"mocha":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/floatdrop/require-from-string#readme","keywords":[],"license":"MIT","name":"require-from-string","repository":{"type":"git","url":"git+https://github.com/floatdrop/require-from-string.git"},"scripts":{"test":"mocha"},"version":"2.0.2"}');

/***/ }),

/***/ 58421:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"require-main-filename@^2.0.0","_id":"require-main-filename@2.0.0","_inBundle":false,"_integrity":"sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==","_location":"/require-main-filename","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"require-main-filename@^2.0.0","name":"require-main-filename","escapedName":"require-main-filename","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/require-main-filename/-/require-main-filename-2.0.0.tgz","_shasum":"d0b329ecc7cc0f61649f62215be69af54aa8989b","_spec":"require-main-filename@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Ben Coe","email":"ben@npmjs.com"},"bugs":{"url":"https://github.com/yargs/require-main-filename/issues"},"bundleDependencies":false,"deprecated":false,"description":"shim for require.main.filename() that works in as many environments as possible","devDependencies":{"chai":"^4.0.0","standard":"^10.0.3","standard-version":"^4.0.0","tap":"^11.0.0"},"files":["index.js"],"homepage":"https://github.com/yargs/require-main-filename#readme","keywords":["require","shim","iisnode"],"license":"ISC","main":"index.js","name":"require-main-filename","repository":{"type":"git","url":"git+ssh://git@github.com/yargs/require-main-filename.git"},"scripts":{"pretest":"standard","release":"standard-version","test":"tap --coverage test.js"},"version":"2.0.0"}');

/***/ }),

/***/ 38456:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"resolve-alpn@^1.0.0","_id":"resolve-alpn@1.2.1","_inBundle":false,"_integrity":"sha512-0a1F4l73/ZFZOakJnQ3FvkJ2+gSTQWz/r2KE5OdDY0TxPm5h4GkqkWWfM47T7HsbnOtcJVEF4epCVy6u7Q3K+g==","_location":"/resolve-alpn","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"resolve-alpn@^1.0.0","name":"resolve-alpn","escapedName":"resolve-alpn","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/http2-wrapper"],"_resolved":"https://registry.npmjs.org/resolve-alpn/-/resolve-alpn-1.2.1.tgz","_shasum":"b7adbdac3546aaaec20b45e7d8265927072726f9","_spec":"resolve-alpn@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/http2-wrapper","author":{"name":"Szymon Marczak"},"bugs":{"url":"https://github.com/szmarczak/resolve-alpn/issues"},"bundleDependencies":false,"deprecated":false,"description":"Detects the ALPN protocol","devDependencies":{"ava":"^3.15.0","nyc":"^15.1.0","pem":"1.14.3","xo":"^0.38.2"},"files":["index.js"],"homepage":"https://github.com/szmarczak/resolve-alpn#readme","keywords":["alpn","tls","socket","http2"],"license":"MIT","main":"index.js","name":"resolve-alpn","repository":{"type":"git","url":"git+https://github.com/szmarczak/resolve-alpn.git"},"scripts":{"test":"xo && nyc --reporter=lcovonly --reporter=text --reporter=html ava"},"version":"1.2.1"}');

/***/ }),

/***/ 98659:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["resolve-from@4.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"resolve-from@4.0.0","_id":"resolve-from@4.0.0","_inBundle":false,"_integrity":"sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==","_location":"/resolve-from","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"resolve-from@4.0.0","name":"resolve-from","escapedName":"resolve-from","rawSpec":"4.0.0","saveSpec":null,"fetchSpec":"4.0.0"},"_requiredBy":["/import-fresh"],"_resolved":"https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz","_spec":"4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/resolve-from/issues"},"description":"Resolve the path of a module like `require.resolve()` but from a given path","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=4"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/resolve-from#readme","keywords":["require","resolve","path","module","from","like","import"],"license":"MIT","name":"resolve-from","repository":{"type":"git","url":"git+https://github.com/sindresorhus/resolve-from.git"},"scripts":{"test":"xo && ava"},"version":"4.0.0"}');

/***/ }),

/***/ 44859:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"resolve-url@^0.2.1","_id":"resolve-url@0.2.1","_inBundle":false,"_integrity":"sha1-LGN/53yJOv0qZj/iGqkIAGjiBSo=","_location":"/resolve-url","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"resolve-url@^0.2.1","name":"resolve-url","escapedName":"resolve-url","rawSpec":"^0.2.1","saveSpec":null,"fetchSpec":"^0.2.1"},"_requiredBy":["/source-map-resolve"],"_resolved":"https://registry.npmjs.org/resolve-url/-/resolve-url-0.2.1.tgz","_shasum":"2c637fe77c893afd2a663fe21aa9080068e2052a","_spec":"resolve-url@^0.2.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/source-map-resolve","author":{"name":"Simon Lydell"},"bugs":{"url":"https://github.com/lydell/resolve-url/issues"},"bundleDependencies":false,"deprecated":"https://github.com/lydell/resolve-url#deprecated","description":"Like Node.js’ `path.resolve`/`url.resolve` for the browser.","devDependencies":{"jshint":"~2.4.3","tape":"~2.5.0","testling":"~1.6.0"},"homepage":"https://github.com/lydell/resolve-url#readme","keywords":["resolve","url"],"license":"MIT","main":"resolve-url.js","name":"resolve-url","repository":{"type":"git","url":"git+https://github.com/lydell/resolve-url.git"},"scripts":{"test":"jshint resolve-url.js test/ && testling -u"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","chrome/latest","firefox/latest","opera/12","opera/latest","safari/5","iphone/6","android-browser/4"]},"version":"0.2.1"}');

/***/ }),

/***/ 39795:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"resolve@^1.10.0","_id":"resolve@1.20.0","_inBundle":false,"_integrity":"sha512-wENBPt4ySzg4ybFQW2TT1zMQucPK95HSh/nq2CFTZVOGut2+pQvSsgtda4d26YrYcr067wjbmzOG8byDPBX63A==","_location":"/resolve","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"resolve@^1.10.0","name":"resolve","escapedName":"resolve","rawSpec":"^1.10.0","saveSpec":null,"fetchSpec":"^1.10.0"},"_requiredBy":["/normalize-package-data"],"_resolved":"https://registry.npmjs.org/resolve/-/resolve-1.20.0.tgz","_shasum":"629a013fb3f70755d6f0b7935cc1c2c5378b1975","_spec":"resolve@^1.10.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/normalize-package-data","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/browserify/resolve/issues"},"bundleDependencies":false,"dependencies":{"is-core-module":"^2.2.0","path-parse":"^1.0.6"},"deprecated":false,"description":"resolve like require.resolve() on behalf of files asynchronously and synchronously","devDependencies":{"@ljharb/eslint-config":"^17.5.1","array.prototype.map":"^1.0.3","aud":"^1.1.4","eclint":"^2.8.1","eslint":"^7.19.0","object-keys":"^1.1.1","safe-publish-latest":"^1.1.4","tap":"0.4.13","tape":"^5.1.1"},"funding":{"url":"https://github.com/sponsors/ljharb"},"homepage":"https://github.com/browserify/resolve#readme","keywords":["resolve","require","node","module"],"license":"MIT","main":"index.js","name":"resolve","repository":{"type":"git","url":"git://github.com/browserify/resolve.git"},"scripts":{"lint":"eslint --ext=js,mjs .","posttest":"npm run test:multirepo && aud --production","prelint":"eclint check \'**/*\'","prepublish":"safe-publish-latest && cp node_modules/is-core-module/core.json ./lib/ ||:","pretest":"npm run lint","pretests-only":"cd ./test/resolver/nested_symlinks && node mylib/sync && node mylib/async","test":"npm run --silent tests-only","test:multirepo":"cd ./test/resolver/multirepo && npm install && npm test","tests-only":"tape test/*.js"},"version":"1.20.0"}');

/***/ }),

/***/ 79519:
/***/ ((module) => {

"use strict";
module.exports = {"main":"main.js"};

/***/ }),

/***/ 82329:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"baz","main":"quux.js"}');

/***/ }),

/***/ 49038:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"browser_field","main":"a","browser":"b"}');

/***/ }),

/***/ 66312:
/***/ ((module) => {

"use strict";
module.exports = {"main":"."};

/***/ }),

/***/ 62075:
/***/ ((module) => {

"use strict";
module.exports = {"main":"./"};

/***/ }),

/***/ 89129:
/***/ ((module) => {

"use strict";
module.exports = {"main":"wrong.js"};

/***/ }),

/***/ 4777:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"invalid main","main":["why is this a thing","srsly omg wtf"]}');

/***/ }),

/***/ 42752:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"monorepo-symlink-test","private":true,"version":"0.0.0","description":"","main":"index.js","scripts":{"postinstall":"lerna bootstrap","test":"node packages/package-a"},"author":"","license":"MIT","dependencies":{"jquery":"^3.3.1","resolve":"../../../"},"devDependencies":{"lerna":"^3.4.3"}}');

/***/ }),

/***/ 85192:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"@my-scope/package-a","version":"0.0.0","private":true,"description":"","license":"MIT","main":"index.js","scripts":{"test":"echo \\"Error: run tests from root\\" && exit 1"},"dependencies":{"@my-scope/package-b":"^0.0.0"}}');

/***/ }),

/***/ 39063:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"@my-scope/package-b","private":true,"version":"0.0.0","description":"","license":"MIT","main":"index.js","scripts":{"test":"echo \\"Error: run tests from root\\" && exit 1"},"dependencies":{"@my-scope/package-a":"^0.0.0"}}');

/***/ }),

/***/ 8102:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"mylib","version":"0.0.0","description":"","private":true,"scripts":{"test":"echo \\"Error: no test specified\\" && exit 1"},"keywords":[],"author":"","license":"ISC","dependencies":{"buffer":"*"}}');

/***/ }),

/***/ 91074:
/***/ ((module) => {

"use strict";
module.exports = {"main":"bar.js"};

/***/ }),

/***/ 82435:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"responselike@^2.0.0","_id":"responselike@2.0.0","_inBundle":false,"_integrity":"sha512-xH48u3FTB9VsZw7R+vvgaKeLKzT6jOogbQhEe/jewwnZgzPcnyWui2Av6JpoYZF/91uueC+lqhWqeURw5/qhCw==","_location":"/responselike","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"responselike@^2.0.0","name":"responselike","escapedName":"responselike","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/cacheable-request","/got"],"_resolved":"https://registry.npmjs.org/responselike/-/responselike-2.0.0.tgz","_shasum":"26391bcc3174f750f9a79eacc40a12a5c42d7723","_spec":"responselike@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/got","author":{"name":"lukechilds"},"bugs":{"url":"https://github.com/lukechilds/responselike/issues"},"bundleDependencies":false,"dependencies":{"lowercase-keys":"^2.0.0"},"deprecated":false,"description":"A response-like object for mocking a Node.js HTTP response stream","devDependencies":{"ava":"^0.25.0","coveralls":"^3.0.0","eslint-config-xo-lukechilds":"^1.0.0","get-stream":"^3.0.0","nyc":"^11.8.0","xo":"^0.19.0"},"homepage":"https://github.com/lukechilds/responselike#readme","keywords":["http","https","response","mock","request","responselike"],"license":"MIT","main":"src/index.js","name":"responselike","repository":{"type":"git","url":"git+https://github.com/lukechilds/responselike.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","test":"xo && nyc ava"},"version":"2.0.0","xo":{"extends":"xo-lukechilds"}}');

/***/ }),

/***/ 81533:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"ret@~0.1.10","_id":"ret@0.1.15","_inBundle":false,"_integrity":"sha512-TTlYpa+OL+vMMNG24xSlQGEJ3B/RzEfUlLct7b5G/ytav+wPrplCpVMFuwzXbkecJrb6IYo1iFb0S9v37754mg==","_location":"/ret","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"ret@~0.1.10","name":"ret","escapedName":"ret","rawSpec":"~0.1.10","saveSpec":null,"fetchSpec":"~0.1.10"},"_requiredBy":["/safe-regex"],"_resolved":"https://registry.npmjs.org/ret/-/ret-0.1.15.tgz","_shasum":"b8a4825d5bdb1fc3f6f53c2bc33f81388681c7bc","_spec":"ret@~0.1.10","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/safe-regex","author":{"name":"Roly Fentanes","url":"https://github.com/fent"},"bugs":{"url":"https://github.com/fent/ret.js/issues"},"bundleDependencies":false,"deprecated":false,"description":"Tokenizes a string that represents a regular expression.","devDependencies":{"istanbul":"*","vows":"*"},"directories":{"lib":"./lib"},"engines":{"node":">=0.12"},"files":["lib"],"homepage":"https://github.com/fent/ret.js#readme","keywords":["regex","regexp","regular expression","parser","tokenizer"],"license":"MIT","main":"./lib/index.js","name":"ret","repository":{"type":"git","url":"git://github.com/fent/ret.js.git"},"scripts":{"test":"istanbul cover vows -- --spec test/*-test.js"},"version":"0.1.15"}');

/***/ }),

/***/ 37263:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"reusify@^1.0.4","_id":"reusify@1.0.4","_inBundle":false,"_integrity":"sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==","_location":"/reusify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"reusify@^1.0.4","name":"reusify","escapedName":"reusify","rawSpec":"^1.0.4","saveSpec":null,"fetchSpec":"^1.0.4"},"_requiredBy":["/fastq"],"_resolved":"https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz","_shasum":"90da382b1e126efc02146e90845a88db12925d76","_spec":"reusify@^1.0.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fastq","author":{"name":"Matteo Collina","email":"hello@matteocollina.com"},"bugs":{"url":"https://github.com/mcollina/reusify/issues"},"bundleDependencies":false,"deprecated":false,"description":"Reuse objects and functions with style","devDependencies":{"coveralls":"^2.13.3","faucet":"0.0.1","istanbul":"^0.4.5","pre-commit":"^1.2.2","standard":"^10.0.3","tape":"^4.8.0"},"engines":{"iojs":">=1.0.0","node":">=0.10.0"},"homepage":"https://github.com/mcollina/reusify#readme","keywords":["reuse","object","performance","function","fast"],"license":"MIT","main":"reusify.js","name":"reusify","pre-commit":["lint","test"],"repository":{"type":"git","url":"git+https://github.com/mcollina/reusify.git"},"scripts":{"coverage":"npm run istanbul; cat coverage/lcov.info | coveralls","istanbul":"istanbul cover tape test.js","lint":"standard","test":"tape test.js | faucet"},"version":"1.0.4"}');

/***/ }),

/***/ 95817:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["rimraf@3.0.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"rimraf@3.0.2","_id":"rimraf@3.0.2","_inBundle":false,"_integrity":"sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==","_location":"/rimraf","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"rimraf@3.0.2","name":"rimraf","escapedName":"rimraf","rawSpec":"3.0.2","saveSpec":null,"fetchSpec":"3.0.2"},"_requiredBy":["/flat-cache"],"_resolved":"https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz","_spec":"3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bin":{"rimraf":"bin.js"},"bugs":{"url":"https://github.com/isaacs/rimraf/issues"},"dependencies":{"glob":"^7.1.3"},"description":"A deep deletion module for node (like `rm -rf`)","devDependencies":{"mkdirp":"^0.5.1","tap":"^12.1.1"},"files":["LICENSE","README.md","bin.js","rimraf.js"],"funding":{"url":"https://github.com/sponsors/isaacs"},"homepage":"https://github.com/isaacs/rimraf#readme","license":"ISC","main":"rimraf.js","name":"rimraf","repository":{"type":"git","url":"git://github.com/isaacs/rimraf.git"},"scripts":{"postpublish":"git push origin --follow-tags","postversion":"npm publish","preversion":"npm test","test":"tap test/*.js"},"version":"3.0.2"}');

/***/ }),

/***/ 32186:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"run-parallel@^1.1.9","_id":"run-parallel@1.2.0","_inBundle":false,"_integrity":"sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==","_location":"/run-parallel","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"run-parallel@^1.1.9","name":"run-parallel","escapedName":"run-parallel","rawSpec":"^1.1.9","saveSpec":null,"fetchSpec":"^1.1.9"},"_requiredBy":["/@nodelib/fs.scandir"],"_resolved":"https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz","_shasum":"66d1368da7bdf921eb9d95bd1a9229e7f21a43ee","_spec":"run-parallel@^1.1.9","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@nodelib/fs.scandir","author":{"name":"Feross Aboukhadijeh","email":"feross@feross.org","url":"https://feross.org"},"bugs":{"url":"https://github.com/feross/run-parallel/issues"},"bundleDependencies":false,"dependencies":{"queue-microtask":"^1.2.2"},"deprecated":false,"description":"Run an array of functions in parallel","devDependencies":{"airtap":"^3.0.0","standard":"*","tape":"^5.0.1"},"funding":[{"type":"github","url":"https://github.com/sponsors/feross"},{"type":"patreon","url":"https://www.patreon.com/feross"},{"type":"consulting","url":"https://feross.org/support"}],"homepage":"https://github.com/feross/run-parallel","keywords":["parallel","async","function","callback","asynchronous","run","array","run parallel"],"license":"MIT","main":"index.js","name":"run-parallel","repository":{"type":"git","url":"git://github.com/feross/run-parallel.git"},"scripts":{"test":"standard && npm run test-node && npm run test-browser","test-browser":"airtap -- test/*.js","test-browser-local":"airtap --local -- test/*.js","test-node":"tape test/*.js"},"version":"1.2.0"}');

/***/ }),

/***/ 72712:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"safe-regex@^1.1.0","_id":"safe-regex@1.1.0","_inBundle":false,"_integrity":"sha1-QKNmnzsHfR6UPURinhV91IAjvy4=","_location":"/safe-regex","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"safe-regex@^1.1.0","name":"safe-regex","escapedName":"safe-regex","rawSpec":"^1.1.0","saveSpec":null,"fetchSpec":"^1.1.0"},"_requiredBy":["/regex-not","/to-regex"],"_resolved":"https://registry.npmjs.org/safe-regex/-/safe-regex-1.1.0.tgz","_shasum":"40a3669f3b077d1e943d44629e157dd48023bf2e","_spec":"safe-regex@^1.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/to-regex","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/safe-regex/issues"},"bundleDependencies":false,"dependencies":{"ret":"~0.1.10"},"deprecated":false,"description":"detect possibly catastrophic, exponential-time regular expressions","devDependencies":{"tape":"^3.5.0"},"homepage":"https://github.com/substack/safe-regex","keywords":["catastrophic","exponential","regex","safe","sandbox"],"license":"MIT","main":"index.js","name":"safe-regex","repository":{"type":"git","url":"git://github.com/substack/safe-regex.git"},"scripts":{"test":"tape test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/8","ie/9","ie/10","firefox/latest","chrome/latest","opera/latest","safari/latest"]},"version":"1.1.0"}');

/***/ }),

/***/ 26259:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"lru-cache@^6.0.0","_id":"lru-cache@6.0.0","_inBundle":false,"_integrity":"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==","_location":"/semver/lru-cache","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"lru-cache@^6.0.0","name":"lru-cache","escapedName":"lru-cache","rawSpec":"^6.0.0","saveSpec":null,"fetchSpec":"^6.0.0"},"_requiredBy":["/semver"],"_resolved":"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz","_shasum":"6d6fe6570ebd96aaf90fcad1dafa3b2566db3a94","_spec":"lru-cache@^6.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/semver","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me"},"bugs":{"url":"https://github.com/isaacs/node-lru-cache/issues"},"bundleDependencies":false,"dependencies":{"yallist":"^4.0.0"},"deprecated":false,"description":"A cache object that deletes the least-recently-used items.","devDependencies":{"benchmark":"^2.1.4","tap":"^14.10.7"},"engines":{"node":">=10"},"files":["index.js"],"homepage":"https://github.com/isaacs/node-lru-cache#readme","keywords":["mru","lru","cache"],"license":"ISC","main":"index.js","name":"lru-cache","repository":{"type":"git","url":"git://github.com/isaacs/node-lru-cache.git"},"scripts":{"postversion":"npm publish","prepublishOnly":"git push origin --follow-tags","preversion":"npm test","snap":"tap","test":"tap"},"version":"6.0.0"}');

/***/ }),

/***/ 47905:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"yallist@^4.0.0","_id":"yallist@4.0.0","_inBundle":false,"_integrity":"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==","_location":"/semver/yallist","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"yallist@^4.0.0","name":"yallist","escapedName":"yallist","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/semver/lru-cache"],"_resolved":"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz","_shasum":"9bb92790d9c0effec63be73519e11a35019a3a72","_spec":"yallist@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/semver/node_modules/lru-cache","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/yallist/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Yet Another Linked List","devDependencies":{"tap":"^12.1.0"},"directories":{"test":"test"},"files":["yallist.js","iterator.js"],"homepage":"https://github.com/isaacs/yallist#readme","license":"ISC","main":"yallist.js","name":"yallist","repository":{"type":"git","url":"git+https://github.com/isaacs/yallist.git"},"scripts":{"postpublish":"git push origin --all; git push origin --tags","postversion":"npm publish","preversion":"npm test","test":"tap test/*.js --100"},"version":"4.0.0"}');

/***/ }),

/***/ 15543:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"semver","_id":"semver@7.3.5","_inBundle":false,"_integrity":"sha512-PoeGJYh8HK4BTO/a9Tf6ZG3veo/A7ZVsYrSA6J8ny9nb3B1VrpkuN+z9OE5wfE5p6H4LchYZsegiQgbJD94ZFQ==","_location":"/semver","_phantomChildren":{},"_requested":{"type":"tag","registry":true,"raw":"semver","name":"semver","escapedName":"semver","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/","/eslint"],"_resolved":"https://registry.npmjs.org/semver/-/semver-7.3.5.tgz","_shasum":"0b621c879348d8998e4b0e4be94b3f12e6018ef7","_spec":"semver","_where":"/Users/brian.kimball/Github/bump-and-release","bin":{"semver":"bin/semver.js"},"bugs":{"url":"https://github.com/npm/node-semver/issues"},"bundleDependencies":false,"dependencies":{"lru-cache":"^6.0.0"},"deprecated":false,"description":"The semantic version parser used by npm.","devDependencies":{"tap":"^14.10.7"},"engines":{"node":">=10"},"files":["bin/**/*.js","range.bnf","classes/**/*.js","functions/**/*.js","internal/**/*.js","ranges/**/*.js","index.js","preload.js"],"homepage":"https://github.com/npm/node-semver#readme","license":"ISC","main":"index.js","name":"semver","repository":{"type":"git","url":"git+https://github.com/npm/node-semver.git"},"scripts":{"postpublish":"git push origin --follow-tags","postversion":"npm publish","preversion":"npm test","snap":"tap","test":"tap"},"tap":{"check-coverage":true,"coverage-map":"map.js"},"version":"7.3.5"}');

/***/ }),

/***/ 5649:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"set-blocking@^2.0.0","_id":"set-blocking@2.0.0","_inBundle":false,"_integrity":"sha1-BF+XgtARrppoA93TgrJDkrPYkPc=","_location":"/set-blocking","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"set-blocking@^2.0.0","name":"set-blocking","escapedName":"set-blocking","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/set-blocking/-/set-blocking-2.0.0.tgz","_shasum":"045f9782d011ae9a6803ddd382b24392b3d890f7","_spec":"set-blocking@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Ben Coe","email":"ben@npmjs.com"},"bugs":{"url":"https://github.com/yargs/set-blocking/issues"},"bundleDependencies":false,"deprecated":false,"description":"set blocking stdio and stderr ensuring that terminal output does not truncate","devDependencies":{"chai":"^3.5.0","coveralls":"^2.11.9","mocha":"^2.4.5","nyc":"^6.4.4","standard":"^7.0.1","standard-version":"^2.2.1"},"files":["index.js","LICENSE.txt"],"homepage":"https://github.com/yargs/set-blocking#readme","keywords":["flush","terminal","blocking","shim","stdio","stderr"],"license":"ISC","main":"index.js","name":"set-blocking","repository":{"type":"git","url":"git+https://github.com/yargs/set-blocking.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","pretest":"standard","test":"nyc mocha ./test/*.js","version":"standard-version"},"version":"2.0.0"}');

/***/ }),

/***/ 95074:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extend-shallow@^2.0.1","_id":"extend-shallow@2.0.1","_inBundle":false,"_integrity":"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=","_location":"/set-value/extend-shallow","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"extend-shallow@^2.0.1","name":"extend-shallow","escapedName":"extend-shallow","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/set-value"],"_resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz","_shasum":"51af7d614ad9a9f610ea1bafbb989d6b1c56890f","_spec":"extend-shallow@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/set-value","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/extend-shallow/issues"},"bundleDependencies":false,"dependencies":{"is-extendable":"^0.1.0"},"deprecated":false,"description":"Extend an object with the properties of additional objects. node.js/javascript util.","devDependencies":{"array-slice":"^0.2.3","benchmarked":"^0.1.4","chalk":"^1.0.0","for-own":"^0.1.3","glob":"^5.0.12","is-plain-object":"^2.0.1","kind-of":"^2.0.0","minimist":"^1.1.1","mocha":"^2.2.5","should":"^7.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/extend-shallow","keywords":["assign","extend","javascript","js","keys","merge","obj","object","prop","properties","property","props","shallow","util","utility","utils","value"],"license":"MIT","main":"index.js","name":"extend-shallow","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/extend-shallow.git"},"scripts":{"test":"mocha"},"version":"2.0.1"}');

/***/ }),

/***/ 6800:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"set-value@^2.0.0","_id":"set-value@2.0.1","_inBundle":false,"_integrity":"sha512-JxHc1weCN68wRY0fhCoXpyK55m/XPHafOmK4UWD7m2CI14GMcFypt4w/0+NV5f/ZMby2F6S2wwA7fgynh9gWSw==","_location":"/set-value","_phantomChildren":{"is-extendable":"0.1.1"},"_requested":{"type":"range","registry":true,"raw":"set-value@^2.0.0","name":"set-value","escapedName":"set-value","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/cache-base","/union-value"],"_resolved":"https://registry.npmjs.org/set-value/-/set-value-2.0.1.tgz","_shasum":"a18d40530e6f07de4228c7defe4227af8cad005b","_spec":"set-value@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cache-base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/set-value/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"},{"name":"Vadim Demedes","url":"https://vadimdemedes.com"}],"dependencies":{"extend-shallow":"^2.0.1","is-extendable":"^0.1.1","is-plain-object":"^2.0.3","split-string":"^3.0.1"},"deprecated":false,"description":"Create nested values and any intermediaries using dot notation (`\'a.b.c\'`) paths.","devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.4.2"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/set-value","keywords":["get","has","hasown","key","keys","nested","notation","object","prop","properties","property","props","set","value","values"],"license":"MIT","main":"index.js","name":"set-value","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/set-value.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["assign-value","get-value","has-value","merge-value","omit-value","set-value","union-value","unset-value"]},"lint":{"reflinks":true}},"version":"2.0.1"}');

/***/ }),

/***/ 16457:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["shebang-command@2.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"shebang-command@2.0.0","_id":"shebang-command@2.0.0","_inBundle":false,"_integrity":"sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==","_location":"/shebang-command","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"shebang-command@2.0.0","name":"shebang-command","escapedName":"shebang-command","rawSpec":"2.0.0","saveSpec":null,"fetchSpec":"2.0.0"},"_requiredBy":["/cross-spawn"],"_resolved":"https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz","_spec":"2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Kevin Mårtensson","email":"kevinmartensson@gmail.com","url":"github.com/kevva"},"bugs":{"url":"https://github.com/kevva/shebang-command/issues"},"dependencies":{"shebang-regex":"^3.0.0"},"description":"Get the command from a shebang","devDependencies":{"ava":"^2.3.0","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js"],"homepage":"https://github.com/kevva/shebang-command#readme","keywords":["cmd","command","parse","shebang"],"license":"MIT","name":"shebang-command","repository":{"type":"git","url":"git+https://github.com/kevva/shebang-command.git"},"scripts":{"test":"xo && ava"},"version":"2.0.0"}');

/***/ }),

/***/ 84217:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["shebang-regex@3.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"shebang-regex@3.0.0","_id":"shebang-regex@3.0.0","_inBundle":false,"_integrity":"sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==","_location":"/shebang-regex","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"shebang-regex@3.0.0","name":"shebang-regex","escapedName":"shebang-regex","rawSpec":"3.0.0","saveSpec":null,"fetchSpec":"3.0.0"},"_requiredBy":["/shebang-command"],"_resolved":"https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz","_spec":"3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/shebang-regex/issues"},"description":"Regular expression for matching a shebang line","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/shebang-regex#readme","keywords":["regex","regexp","shebang","match","test","line"],"license":"MIT","name":"shebang-regex","repository":{"type":"git","url":"git+https://github.com/sindresorhus/shebang-regex.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.0.0"}');

/***/ }),

/***/ 39793:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"debug@^4.3.2","_id":"debug@4.3.2","_inBundle":false,"_integrity":"sha512-mOp8wKcvj7XxC78zLgw/ZA+6TSgkoE2C/ienthhRD298T7UNwAg9diBpLRxC0mOezLl4B0xV7M0cCO6P/O0Xhw==","_location":"/simple-git/debug","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"debug@^4.3.2","name":"debug","escapedName":"debug","rawSpec":"^4.3.2","saveSpec":null,"fetchSpec":"^4.3.2"},"_requiredBy":["/simple-git"],"_resolved":"https://registry.npmjs.org/debug/-/debug-4.3.2.tgz","_shasum":"f0a49c18ac8779e31d4a0c6029dfb76873c7428b","_spec":"debug@^4.3.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/simple-git","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"browser":"./src/browser.js","bugs":{"url":"https://github.com/visionmedia/debug/issues"},"bundleDependencies":false,"contributors":[{"name":"Nathan Rajlich","email":"nathan@tootallnate.net","url":"http://n8.io"},{"name":"Andrew Rhyne","email":"rhyneandrew@gmail.com"},{"name":"Josh Junon","email":"josh@junon.me"}],"dependencies":{"ms":"2.1.2"},"deprecated":false,"description":"small debugging utility","devDependencies":{"brfs":"^2.0.1","browserify":"^16.2.3","coveralls":"^3.0.2","istanbul":"^0.4.5","karma":"^3.1.4","karma-browserify":"^6.0.0","karma-chrome-launcher":"^2.2.0","karma-mocha":"^1.3.0","mocha":"^5.2.0","mocha-lcov-reporter":"^1.2.0","xo":"^0.23.0"},"engines":{"node":">=6.0"},"files":["src","LICENSE","README.md"],"homepage":"https://github.com/visionmedia/debug#readme","keywords":["debug","log","debugger"],"license":"MIT","main":"./src/index.js","name":"debug","peerDependenciesMeta":{"supports-color":{"optional":true}},"repository":{"type":"git","url":"git://github.com/visionmedia/debug.git"},"scripts":{"lint":"xo","test":"npm run test:node && npm run test:browser && npm run lint","test:browser":"karma start --single-run","test:coverage":"cat ./coverage/lcov.info | coveralls","test:node":"istanbul cover _mocha -- test.js"},"version":"4.3.2"}');

/***/ }),

/***/ 86570:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"simple-git","_id":"simple-git@2.47.0","_inBundle":false,"_integrity":"sha512-+HfCpqPBEZTPWiW9fPdbiPJDslM22MLqrktfzNKyI2pWaJa6DhfNVx4Mds04KZzVv5vjC9/ksw3y5gVf8ECWDg==","_location":"/simple-git","_phantomChildren":{"ms":"2.1.2"},"_requested":{"type":"tag","registry":true,"raw":"simple-git","name":"simple-git","escapedName":"simple-git","rawSpec":"","saveSpec":null,"fetchSpec":"latest"},"_requiredBy":["#USER","/"],"_resolved":"https://registry.npmjs.org/simple-git/-/simple-git-2.47.0.tgz","_shasum":"9693b471de7911901f703b4c403fc3e8774cd9be","_spec":"simple-git","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Steve King","email":"steve@mydev.co"},"bugs":{"url":"https://github.com/steveukx/git-js/issues"},"bundleDependencies":false,"contributors":[{"name":"Steve King","email":"steve@mydev.co"}],"dependencies":{"@kwsites/file-exists":"^1.1.1","@kwsites/promise-deferred":"^1.1.1","debug":"^4.3.2"},"deprecated":false,"description":"Simple GIT interface for node.js","devDependencies":{"@babel/core":"^7.12.9","@babel/preset-env":"^7.12.7","@babel/preset-typescript":"^7.12.7","@kwsites/promise-result":"^1.1.0","@types/debug":"^4.1.5","@types/jest":"^26.0.15","@types/node":"^14.14.10","babel-jest":"^26.6.3","babel-plugin-module-resolver":"^4.0.0","jest":"^26.6.3","ts-node":"^9.0.0","typescript":"^4.1.2"},"files":["promise.js","promise.d.ts","src/**/*.d.ts","src/**/*.js","src/**/*.js.map","typings/"],"homepage":"https://github.com/steveukx/git-js#readme","keywords":["git","source control","vcs"],"license":"MIT","main":"./src/index.js","name":"simple-git","repository":{"type":"git","url":"git://github.com/steveukx/git-js.git"},"scripts":{"build":"tsc --build","build:clean":"yarn clean && yarn build","build:release":"tsc -p tsconfig.release.json","clean":"git clean -fxd -e .idea -e node_modules","postversion":"npm publish && git push && git push --tags","preversion":"yarn clean && yarn test && yarn build:release","test":"yarn test:consumer && yarn test:jest","test:consumer":"tsc -p test/consumer/tsconfig-standard.json && tsc -p test/consumer/tsconfig-promise.json","test:jest":"jest --coverage","tsc":"tsc"},"types":"./typings/index.d.ts","version":"2.47.0"}');

/***/ }),

/***/ 12:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"slash@^2.0.0","_id":"slash@2.0.0","_inBundle":false,"_integrity":"sha512-ZYKh3Wh2z1PpEXWr0MpSBZ0V6mZHAQfYevttO11c51CaWjGTaadiKZ+wVt1PbMlDV5qhMFslpZCemhwOK7C89A==","_location":"/slash","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"slash@^2.0.0","name":"slash","escapedName":"slash","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/cpy/globby"],"_resolved":"https://registry.npmjs.org/slash/-/slash-2.0.0.tgz","_shasum":"de552851a1759df3a8f206535442f5ec4ddeab44","_spec":"slash@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/globby","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/slash/issues"},"bundleDependencies":false,"deprecated":false,"description":"Convert Windows backslash paths to slash paths","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=6"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/slash#readme","keywords":["path","seperator","sep","slash","backslash","windows","win"],"license":"MIT","name":"slash","repository":{"type":"git","url":"git+https://github.com/sindresorhus/slash.git"},"scripts":{"test":"xo && ava"},"version":"2.0.0"}');

/***/ }),

/***/ 24760:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["ansi-styles@4.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"ansi-styles@4.3.0","_id":"ansi-styles@4.3.0","_inBundle":false,"_integrity":"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==","_location":"/slice-ansi/ansi-styles","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ansi-styles@4.3.0","name":"ansi-styles","escapedName":"ansi-styles","rawSpec":"4.3.0","saveSpec":null,"fetchSpec":"4.3.0"},"_requiredBy":["/slice-ansi"],"_resolved":"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz","_spec":"4.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/ansi-styles/issues"},"dependencies":{"color-convert":"^2.0.1"},"description":"ANSI escape codes for styling strings in the terminal","devDependencies":{"@types/color-convert":"^1.9.0","ava":"^2.3.0","svg-term-cli":"^2.1.1","tsd":"^0.11.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/chalk/ansi-styles?sponsor=1","homepage":"https://github.com/chalk/ansi-styles#readme","keywords":["ansi","styles","color","colour","colors","terminal","console","cli","string","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"ansi-styles","repository":{"type":"git","url":"git+https://github.com/chalk/ansi-styles.git"},"scripts":{"screenshot":"svg-term --command=\'node screenshot\' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor","test":"xo && ava && tsd"},"version":"4.3.0"}');

/***/ }),

/***/ 98891:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["color-convert@2.0.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"color-convert@2.0.1","_id":"color-convert@2.0.1","_inBundle":false,"_integrity":"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==","_location":"/slice-ansi/color-convert","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"color-convert@2.0.1","name":"color-convert","escapedName":"color-convert","rawSpec":"2.0.1","saveSpec":null,"fetchSpec":"2.0.1"},"_requiredBy":["/slice-ansi/ansi-styles"],"_resolved":"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz","_spec":"2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"bugs":{"url":"https://github.com/Qix-/color-convert/issues"},"dependencies":{"color-name":"~1.1.4"},"description":"Plain color conversion functions","devDependencies":{"chalk":"^2.4.2","xo":"^0.24.0"},"engines":{"node":">=7.0.0"},"files":["index.js","conversions.js","route.js"],"homepage":"https://github.com/Qix-/color-convert#readme","keywords":["color","colour","convert","converter","conversion","rgb","hsl","hsv","hwb","cmyk","ansi","ansi16"],"license":"MIT","name":"color-convert","repository":{"type":"git","url":"git+https://github.com/Qix-/color-convert.git"},"scripts":{"pretest":"xo","test":"node test/basic.js"},"version":"2.0.1","xo":{"rules":{"default-case":0,"no-inline-comments":0,"operator-linebreak":0}}}');

/***/ }),

/***/ 78229:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["color-name@1.1.4","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"color-name@1.1.4","_id":"color-name@1.1.4","_inBundle":false,"_integrity":"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==","_location":"/slice-ansi/color-name","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"color-name@1.1.4","name":"color-name","escapedName":"color-name","rawSpec":"1.1.4","saveSpec":null,"fetchSpec":"1.1.4"},"_requiredBy":["/slice-ansi/color-convert"],"_resolved":"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz","_spec":"1.1.4","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"DY","email":"dfcreative@gmail.com"},"bugs":{"url":"https://github.com/colorjs/color-name/issues"},"description":"A list of color names and its values","files":["index.js"],"homepage":"https://github.com/colorjs/color-name","keywords":["color-name","color","color-keyword","keyword"],"license":"MIT","main":"index.js","name":"color-name","repository":{"type":"git","url":"git+ssh://git@github.com/colorjs/color-name.git"},"scripts":{"test":"node test.js"},"version":"1.1.4"}');

/***/ }),

/***/ 3781:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["slice-ansi@4.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"slice-ansi@4.0.0","_id":"slice-ansi@4.0.0","_inBundle":false,"_integrity":"sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==","_location":"/slice-ansi","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"slice-ansi@4.0.0","name":"slice-ansi","escapedName":"slice-ansi","rawSpec":"4.0.0","saveSpec":null,"fetchSpec":"4.0.0"},"_requiredBy":["/table"],"_resolved":"https://registry.npmjs.org/slice-ansi/-/slice-ansi-4.0.0.tgz","_spec":"4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","bugs":{"url":"https://github.com/chalk/slice-ansi/issues"},"dependencies":{"ansi-styles":"^4.0.0","astral-regex":"^2.0.0","is-fullwidth-code-point":"^3.0.0"},"description":"Slice a string with ANSI escape codes","devDependencies":{"ava":"^2.1.0","chalk":"^3.0.0","random-item":"^3.0.0","strip-ansi":"^6.0.0","xo":"^0.26.1"},"engines":{"node":">=10"},"files":["index.js"],"funding":"https://github.com/chalk/slice-ansi?sponsor=1","homepage":"https://github.com/chalk/slice-ansi#readme","keywords":["slice","string","ansi","styles","color","colour","colors","terminal","console","cli","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"slice-ansi","repository":{"type":"git","url":"git+https://github.com/chalk/slice-ansi.git"},"scripts":{"test":"xo && ava"},"version":"4.0.0"}');

/***/ }),

/***/ 75031:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^1.0.0","_id":"define-property@1.0.0","_inBundle":false,"_integrity":"sha1-dp66rz9KY6rTr56NMEybvnm/sOY=","_location":"/snapdragon-node/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^1.0.0","name":"define-property","escapedName":"define-property","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/snapdragon-node"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-1.0.0.tgz","_shasum":"769ebaaf3f4a63aad3af9e8d304c9bbe79bfb0e6","_spec":"define-property@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon-node","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^1.0.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"gulp-format-md":"^0.1.12","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["extend-shallow","merge-deep","assign-deep","mixin-deep"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 1362:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-accessor-descriptor@^1.0.0","_id":"is-accessor-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-m5hnHTkcVsPfqx3AKlyttIPb7J+XykHvJP2B9bZDjlhLIoEq4XoK64Vg7boZlVWYK6LUY94dYPEE7Lh0ZkZKcQ==","_location":"/snapdragon-node/is-accessor-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-accessor-descriptor@^1.0.0","name":"is-accessor-descriptor","escapedName":"is-accessor-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/snapdragon-node/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-accessor-descriptor/-/is-accessor-descriptor-1.0.0.tgz","_shasum":"169c2f6d3df1f992618072365c9b0ea1f6878656","_spec":"is-accessor-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon-node/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-accessor-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript accessor descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-accessor-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-accessor-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-accessor-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","is-plain-object","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 76983:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-data-descriptor@^1.0.0","_id":"is-data-descriptor@1.0.0","_inBundle":false,"_integrity":"sha512-jbRXy1FmtAoCjQkVmIVYwuuqDFUbaOeDjmed1tOGPrsMhtJA4rD9tkgA0F1qJ3gRFRXcHYVkdeaP50Q5rE/jLQ==","_location":"/snapdragon-node/is-data-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-data-descriptor@^1.0.0","name":"is-data-descriptor","escapedName":"is-data-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/snapdragon-node/is-descriptor"],"_resolved":"https://registry.npmjs.org/is-data-descriptor/-/is-data-descriptor-1.0.0.tgz","_shasum":"d84876321d0e7add03990406abbbbd36ba9268c7","_spec":"is-data-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon-node/node_modules/is-descriptor","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-data-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"kind-of":"^6.0.0"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript data descriptor.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-data-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-data-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-data-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 25099:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"is-descriptor@^1.0.0","_id":"is-descriptor@1.0.2","_inBundle":false,"_integrity":"sha512-2eis5WqQGV7peooDyLmNEPUrps9+SXX5c9pL3xEB+4e9HnGuDa7mB7kHxHw4CbqS9k1T2hOH3miL8n8WtiYVtg==","_location":"/snapdragon-node/is-descriptor","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"is-descriptor@^1.0.0","name":"is-descriptor","escapedName":"is-descriptor","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/snapdragon-node/define-property"],"_resolved":"https://registry.npmjs.org/is-descriptor/-/is-descriptor-1.0.2.tgz","_shasum":"3b159746a66604b04f8c81524ba365c5f14d86ec","_spec":"is-descriptor@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon-node/node_modules/define-property","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/is-descriptor/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"dependencies":{"is-accessor-descriptor":"^1.0.0","is-data-descriptor":"^1.0.0","kind-of":"^6.0.2"},"deprecated":false,"description":"Returns true if a value has the characteristics of a valid JavaScript descriptor. Works for data descriptors and accessor descriptors.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/is-descriptor","keywords":["accessor","check","data","descriptor","get","getter","is","keys","object","properties","property","set","setter","type","valid","value"],"license":"MIT","main":"index.js","name":"is-descriptor","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/is-descriptor.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["is-accessor-descriptor","is-data-descriptor","is-descriptor","isobject"]},"plugins":["gulp-format-md"],"toc":false,"layout":"default","tasks":["readme"],"lint":{"reflinks":true}},"version":"1.0.2"}');

/***/ }),

/***/ 20879:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"snapdragon-node@^2.0.1","_id":"snapdragon-node@2.1.1","_inBundle":false,"_integrity":"sha512-O27l4xaMYt/RSQ5TR3vpWCAB5Kb/czIcqUFOM/C4fYcLnbZUc1PkjTAMjof2pBWaSTwOUd6qUHcFGVGj7aIwnw==","_location":"/snapdragon-node","_phantomChildren":{"kind-of":"6.0.3"},"_requested":{"type":"range","registry":true,"raw":"snapdragon-node@^2.0.1","name":"snapdragon-node","escapedName":"snapdragon-node","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/cpy/braces"],"_resolved":"https://registry.npmjs.org/snapdragon-node/-/snapdragon-node-2.1.1.tgz","_shasum":"6c175f86ff14bdb0724563e8f3c1b021a286853b","_spec":"snapdragon-node@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/snapdragon-node/issues"},"bundleDependencies":false,"dependencies":{"define-property":"^1.0.0","isobject":"^3.0.0","snapdragon-util":"^3.0.1"},"deprecated":false,"description":"Snapdragon utility for creating a new AST node in custom code, such as plugins.","devDependencies":{"gulp":"^3.9.1","gulp-eslint":"^4.0.0","gulp-format-md":"^0.1.12","gulp-istanbul":"^1.1.2","gulp-mocha":"^3.0.1","mocha":"^3.4.2","snapdragon":"^0.11.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/snapdragon-node","keywords":["ast","compile","compiler","convert","node","parse","parser","plugin","render","snapdragon","snapdragonplugin","token","transform"],"license":"MIT","main":"index.js","name":"snapdragon-node","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/snapdragon-node.git"},"scripts":{"test":"mocha"},"verb":{"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["breakdance","snapdragon","snapdragon-capture","snapdragon-cheerio","snapdragon-util"]},"reflinks":["verb","verb-generate-readme"],"lint":{"reflinks":true}},"version":"2.1.1"}');

/***/ }),

/***/ 26408:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^3.2.0","_id":"kind-of@3.2.2","_inBundle":false,"_integrity":"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=","_location":"/snapdragon-util/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^3.2.0","name":"kind-of","escapedName":"kind-of","rawSpec":"^3.2.0","saveSpec":null,"fetchSpec":"^3.2.0"},"_requiredBy":["/snapdragon-util"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz","_shasum":"31ea21a734bab9bbb0f32466d893aea51e4a3c64","_spec":"kind-of@^3.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon-util","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.0.0","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.3.0","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.2.2"}');

/***/ }),

/***/ 21115:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"snapdragon-util@^3.0.1","_id":"snapdragon-util@3.0.1","_inBundle":false,"_integrity":"sha512-mbKkMdQKsjX4BAL4bRYTj21edOf8cN7XHdYUJEe+Zn99hVEYcMvKPct1IqNe7+AZPirn8BCDOQBHQZknqmKlZQ==","_location":"/snapdragon-util","_phantomChildren":{"is-buffer":"1.1.6"},"_requested":{"type":"range","registry":true,"raw":"snapdragon-util@^3.0.1","name":"snapdragon-util","escapedName":"snapdragon-util","rawSpec":"^3.0.1","saveSpec":null,"fetchSpec":"^3.0.1"},"_requiredBy":["/snapdragon-node"],"_resolved":"https://registry.npmjs.org/snapdragon-util/-/snapdragon-util-3.0.1.tgz","_shasum":"f956479486f2acd79700693f6f7b805e45ab56e2","_spec":"snapdragon-util@^3.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon-node","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/snapdragon-util/issues"},"bundleDependencies":false,"dependencies":{"kind-of":"^3.2.0"},"deprecated":false,"description":"Utilities for the snapdragon parser/compiler.","devDependencies":{"define-property":"^1.0.0","gulp":"^3.9.1","gulp-eslint":"^3.0.1","gulp-format-md":"^0.1.12","gulp-istanbul":"^1.1.1","gulp-mocha":"^3.0.0","isobject":"^3.0.0","mocha":"^3.3.0","snapdragon":"^0.11.0","snapdragon-node":"^1.0.6"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/snapdragon-util","keywords":["capture","compile","compiler","convert","match","parse","parser","plugin","render","snapdragon","snapdragonplugin","transform","util"],"license":"MIT","main":"index.js","name":"snapdragon-util","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/snapdragon-util.git"},"scripts":{"test":"mocha"},"verb":{"toc":"collapsible","layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"3.0.1"}');

/***/ }),

/***/ 4249:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"debug@^2.2.0","_id":"debug@2.6.9","_inBundle":false,"_integrity":"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==","_location":"/snapdragon/debug","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"debug@^2.2.0","name":"debug","escapedName":"debug","rawSpec":"^2.2.0","saveSpec":null,"fetchSpec":"^2.2.0"},"_requiredBy":["/snapdragon"],"_resolved":"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz","_shasum":"5d128515df134ff327e90a4c93f4e077a536341f","_spec":"debug@^2.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"TJ Holowaychuk","email":"tj@vision-media.ca"},"browser":"./src/browser.js","bugs":{"url":"https://github.com/visionmedia/debug/issues"},"bundleDependencies":false,"component":{"scripts":{"debug/index.js":"browser.js","debug/debug.js":"debug.js"}},"contributors":[{"name":"Nathan Rajlich","email":"nathan@tootallnate.net","url":"http://n8.io"},{"name":"Andrew Rhyne","email":"rhyneandrew@gmail.com"}],"dependencies":{"ms":"2.0.0"},"deprecated":false,"description":"small debugging utility","devDependencies":{"browserify":"9.0.3","chai":"^3.5.0","concurrently":"^3.1.0","coveralls":"^2.11.15","eslint":"^3.12.1","istanbul":"^0.4.5","karma":"^1.3.0","karma-chai":"^0.1.0","karma-mocha":"^1.3.0","karma-phantomjs-launcher":"^1.0.2","karma-sinon":"^1.0.5","mocha":"^3.2.0","mocha-lcov-reporter":"^1.2.0","rimraf":"^2.5.4","sinon":"^1.17.6","sinon-chai":"^2.8.0"},"homepage":"https://github.com/visionmedia/debug#readme","keywords":["debug","log","debugger"],"license":"MIT","main":"./src/index.js","name":"debug","repository":{"type":"git","url":"git://github.com/visionmedia/debug.git"},"version":"2.6.9"}');

/***/ }),

/***/ 47109:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^0.2.5","_id":"define-property@0.2.5","_inBundle":false,"_integrity":"sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=","_location":"/snapdragon/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^0.2.5","name":"define-property","escapedName":"define-property","rawSpec":"^0.2.5","saveSpec":null,"fetchSpec":"^0.2.5"},"_requiredBy":["/snapdragon"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz","_shasum":"c35b1ef918ec3c990f9a5bc57be04aacec5c8116","_spec":"define-property@^0.2.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^0.1.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"mocha":"*","should":"^7.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["mixin-deep","mixin-object","delegate-object","forward-object"]}},"version":"0.2.5"}');

/***/ }),

/***/ 31905:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"extend-shallow@^2.0.1","_id":"extend-shallow@2.0.1","_inBundle":false,"_integrity":"sha1-Ua99YUrZqfYQ6huvu5idaxxWiQ8=","_location":"/snapdragon/extend-shallow","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"extend-shallow@^2.0.1","name":"extend-shallow","escapedName":"extend-shallow","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/snapdragon"],"_resolved":"https://registry.npmjs.org/extend-shallow/-/extend-shallow-2.0.1.tgz","_shasum":"51af7d614ad9a9f610ea1bafbb989d6b1c56890f","_spec":"extend-shallow@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/extend-shallow/issues"},"bundleDependencies":false,"dependencies":{"is-extendable":"^0.1.0"},"deprecated":false,"description":"Extend an object with the properties of additional objects. node.js/javascript util.","devDependencies":{"array-slice":"^0.2.3","benchmarked":"^0.1.4","chalk":"^1.0.0","for-own":"^0.1.3","glob":"^5.0.12","is-plain-object":"^2.0.1","kind-of":"^2.0.0","minimist":"^1.1.1","mocha":"^2.2.5","should":"^7.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/extend-shallow","keywords":["assign","extend","javascript","js","keys","merge","obj","object","prop","properties","property","props","shallow","util","utility","utils","value"],"license":"MIT","main":"index.js","name":"extend-shallow","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/extend-shallow.git"},"scripts":{"test":"mocha"},"version":"2.0.1"}');

/***/ }),

/***/ 86681:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"ms@2.0.0","_id":"ms@2.0.0","_inBundle":false,"_integrity":"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=","_location":"/snapdragon/ms","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"ms@2.0.0","name":"ms","escapedName":"ms","rawSpec":"2.0.0","saveSpec":null,"fetchSpec":"2.0.0"},"_requiredBy":["/snapdragon/debug"],"_resolved":"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz","_shasum":"5608aeadfc00be6c2901df5f9861788de0d597c8","_spec":"ms@2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon/node_modules/debug","bugs":{"url":"https://github.com/zeit/ms/issues"},"bundleDependencies":false,"deprecated":false,"description":"Tiny milisecond conversion utility","devDependencies":{"eslint":"3.19.0","expect.js":"0.3.1","husky":"0.13.3","lint-staged":"3.4.1","mocha":"3.4.1"},"eslintConfig":{"extends":"eslint:recommended","env":{"node":true,"es6":true}},"files":["index.js"],"homepage":"https://github.com/zeit/ms#readme","license":"MIT","lint-staged":{"*.js":["npm run lint","prettier --single-quote --write","git add"]},"main":"./index","name":"ms","repository":{"type":"git","url":"git+https://github.com/zeit/ms.git"},"scripts":{"lint":"eslint lib/* bin/*","precommit":"lint-staged","test":"mocha tests.js"},"version":"2.0.0"}');

/***/ }),

/***/ 60315:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"snapdragon@^0.8.1","_id":"snapdragon@0.8.2","_inBundle":false,"_integrity":"sha512-FtyOnWN/wCHTVXOMwvSv26d+ko5vWlIDD6zoUJ7LW8vh+ZBC8QdljveRP+crNrtBwioEUWy/4dMtbBjA4ioNlg==","_location":"/snapdragon","_phantomChildren":{"is-descriptor":"0.1.6","is-extendable":"0.1.1"},"_requested":{"type":"range","registry":true,"raw":"snapdragon@^0.8.1","name":"snapdragon","escapedName":"snapdragon","rawSpec":"^0.8.1","saveSpec":null,"fetchSpec":"^0.8.1"},"_requiredBy":["/cpy/braces","/cpy/micromatch","/expand-brackets","/extglob","/nanomatch"],"_resolved":"https://registry.npmjs.org/snapdragon/-/snapdragon-0.8.2.tgz","_shasum":"64922e7c565b0e14204ba1aa7d6964278d25182d","_spec":"snapdragon@^0.8.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/snapdragon/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Edward Betts","url":"http://edwardbetts.com"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"base":"^0.11.1","debug":"^2.2.0","define-property":"^0.2.5","extend-shallow":"^2.0.1","map-cache":"^0.2.2","source-map":"^0.5.6","source-map-resolve":"^0.5.0","use":"^3.1.0"},"deprecated":false,"description":"Fast, pluggable and easy-to-use parser-renderer factory.","devDependencies":{"gulp":"^3.9.1","gulp-eslint":"^3.0.1","gulp-format-md":"^0.1.10","gulp-istanbul":"^1.1.1","gulp-mocha":"^3.0.1","gulp-unused":"^0.2.0","mocha":"^3.0.2"},"engines":{"node":">=0.10.0"},"files":["index.js","lib"],"homepage":"https://github.com/jonschlinkert/snapdragon","keywords":["lexer","snapdragon"],"license":"MIT","main":"index.js","name":"snapdragon","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/snapdragon.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"description":"These libraries use snapdragon:","list":["braces","expand-brackets","extglob","micromatch"]},"reflinks":["css","pug","verb","verb-generate-readme"],"lint":{"reflinks":true}},"version":"0.8.2"}');

/***/ }),

/***/ 17701:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"source-map-resolve@^0.5.0","_id":"source-map-resolve@0.5.3","_inBundle":false,"_integrity":"sha512-Htz+RnsXWk5+P2slx5Jh3Q66vhQj1Cllm0zvnaY98+NFx+Dv2CF/f5O/t8x+KaNdrdIAsruNzoh/KpialbqAnw==","_location":"/source-map-resolve","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"source-map-resolve@^0.5.0","name":"source-map-resolve","escapedName":"source-map-resolve","rawSpec":"^0.5.0","saveSpec":null,"fetchSpec":"^0.5.0"},"_requiredBy":["/snapdragon"],"_resolved":"https://registry.npmjs.org/source-map-resolve/-/source-map-resolve-0.5.3.tgz","_shasum":"190866bece7553e1f8f267a2ee82c606b5509a1a","_spec":"source-map-resolve@^0.5.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"Simon Lydell"},"browser":"source-map-resolve.js","bugs":{"url":"https://github.com/lydell/source-map-resolve/issues"},"bundleDependencies":false,"dependencies":{"atob":"^2.1.2","decode-uri-component":"^0.2.0","resolve-url":"^0.2.1","source-map-url":"^0.4.0","urix":"^0.1.0"},"deprecated":false,"description":"Resolve the source map and/or sources for a generated file.","devDependencies":{"Base64":"1.1.0","jshint":"2.10.3","setimmediate":"1.0.5","simple-asyncify":"1.0.0","tape":"4.12.1"},"files":["lib","source-map-resolve.js"],"homepage":"https://github.com/lydell/source-map-resolve#readme","keywords":["source map","sourcemap","source","map","sourceMappingURL","resolve","resolver","locate","locator","find","finder"],"license":"MIT","main":"lib/source-map-resolve-node.js","name":"source-map-resolve","repository":{"type":"git","url":"git+https://github.com/lydell/source-map-resolve.git"},"scripts":{"build":"node generate-source-map-resolve.js","lint":"jshint lib/ test/","test":"npm run lint && npm run unit","unit":"node test/source-map-resolve.js && node test/windows.js"},"version":"0.5.3"}');

/***/ }),

/***/ 12688:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"source-map-url@^0.4.0","_id":"source-map-url@0.4.1","_inBundle":false,"_integrity":"sha512-cPiFOTLUKvJFIg4SKVScy4ilPPW6rFgMgfuZJPNoDuMs3nC1HbMUycBoJw77xFIp6z1UJQJOfx6C9GMH80DiTw==","_location":"/source-map-url","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"source-map-url@^0.4.0","name":"source-map-url","escapedName":"source-map-url","rawSpec":"^0.4.0","saveSpec":null,"fetchSpec":"^0.4.0"},"_requiredBy":["/source-map-resolve"],"_resolved":"https://registry.npmjs.org/source-map-url/-/source-map-url-0.4.1.tgz","_shasum":"0af66605a745a5a2f91cf1bbf8a7afbc283dec56","_spec":"source-map-url@^0.4.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/source-map-resolve","author":{"name":"Simon Lydell"},"bugs":{"url":"https://github.com/lydell/source-map-url/issues"},"bundleDependencies":false,"deprecated":false,"description":"Tools for working with sourceMappingURL comments.","devDependencies":{"expect.js":"~0.3.1","jshint":"~2.4.3","mocha":"~1.17.1"},"homepage":"https://github.com/lydell/source-map-url#readme","keywords":["source map","sourceMappingURL","comment","annotation"],"license":"MIT","main":"source-map-url.js","name":"source-map-url","repository":{"type":"git","url":"git+https://github.com/lydell/source-map-url.git"},"scripts":{"lint":"jshint source-map-url.js test/ ","test":"npm run lint && npm run unit","unit":"mocha"},"testling":{"harness":"mocha","files":"test/*.js","browsers":["ie/8..latest","chrome/latest","firefox/latest","opera/12","opera/latest","safari/5","iphone/6","android-browser/4"]},"version":"0.4.1"}');

/***/ }),

/***/ 4671:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"source-map@^0.5.6","_id":"source-map@0.5.7","_inBundle":false,"_integrity":"sha1-igOdLRAh0i0eoUyA2OpGi6LvP8w=","_location":"/source-map","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"source-map@^0.5.6","name":"source-map","escapedName":"source-map","rawSpec":"^0.5.6","saveSpec":null,"fetchSpec":"^0.5.6"},"_requiredBy":["/snapdragon"],"_resolved":"https://registry.npmjs.org/source-map/-/source-map-0.5.7.tgz","_shasum":"8a039d2d1021d22d1ea14c80d8ea468ba2ef3fcc","_spec":"source-map@^0.5.6","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"bugs":{"url":"https://github.com/mozilla/source-map/issues"},"bundleDependencies":false,"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"},{"name":"Heather Arthur","email":"fayearthur@gmail.com"},{"name":"Hugh Kennedy","email":"hughskennedy@gmail.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Simon Lydell","email":"simon.lydell@gmail.com"},{"name":"Jmeas Smith","email":"jellyes2@gmail.com"},{"name":"Michael Z Goddard","email":"mzgoddard@gmail.com"},{"name":"azu","email":"azu@users.noreply.github.com"},{"name":"John Gozde","email":"john@gozde.ca"},{"name":"Adam Kirkton","email":"akirkton@truefitinnovation.com"},{"name":"Chris Montgomery","email":"christopher.montgomery@dowjones.com"},{"name":"J. Ryan Stinnett","email":"jryans@gmail.com"},{"name":"Jack Herrington","email":"jherrington@walmartlabs.com"},{"name":"Chris Truter","email":"jeffpalentine@gmail.com"},{"name":"Daniel Espeset","email":"daniel@danielespeset.com"},{"name":"Jamie Wong","email":"jamie.lf.wong@gmail.com"},{"name":"Eddy Bruël","email":"ejpbruel@mozilla.com"},{"name":"Hawken Rives","email":"hawkrives@gmail.com"},{"name":"Gilad Peleg","email":"giladp007@gmail.com"},{"name":"djchie","email":"djchie.dev@gmail.com"},{"name":"Gary Ye","email":"garysye@gmail.com"},{"name":"Nicolas Lalevée","email":"nicolas.lalevee@hibnet.org"}],"deprecated":false,"description":"Generates and consumes source maps","devDependencies":{"doctoc":"^0.15.0","webpack":"^1.12.0"},"engines":{"node":">=0.10.0"},"files":["source-map.js","lib/","dist/source-map.debug.js","dist/source-map.js","dist/source-map.min.js","dist/source-map.min.js.map"],"homepage":"https://github.com/mozilla/source-map","license":"BSD-3-Clause","main":"./source-map.js","name":"source-map","repository":{"type":"git","url":"git+ssh://git@github.com/mozilla/source-map.git"},"scripts":{"build":"webpack --color","test":"npm run build && node test/run-tests.js","toc":"doctoc --title \'## Table of Contents\' README.md && doctoc --title \'## Table of Contents\' CONTRIBUTING.md"},"typings":"source-map","version":"0.5.7"}');

/***/ }),

/***/ 74424:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"spdx-correct@^3.0.0","_id":"spdx-correct@3.1.1","_inBundle":false,"_integrity":"sha512-cOYcUWwhCuHCXi49RhFRCyJEK3iPj1Ziz9DpViV3tbZOwXD49QzIN3MpOLJNxh2qwq2lJJZaKMVw9qNi4jTC0w==","_location":"/spdx-correct","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"spdx-correct@^3.0.0","name":"spdx-correct","escapedName":"spdx-correct","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/validate-npm-package-license"],"_resolved":"https://registry.npmjs.org/spdx-correct/-/spdx-correct-3.1.1.tgz","_shasum":"dece81ac9c1e6713e5f7d1b6f17d468fa53d89a9","_spec":"spdx-correct@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/validate-npm-package-license","author":{"name":"Kyle E. Mitchell","email":"kyle@kemitchell.com","url":"https://kemitchell.com"},"bugs":{"url":"https://github.com/jslicense/spdx-correct.js/issues"},"bundleDependencies":false,"contributors":[{"name":"Kyle E. Mitchell","email":"kyle@kemitchell.com","url":"https://kemitchell.com"},{"name":"Christian Zommerfelds","email":"aero_super@yahoo.com"},{"name":"Tal Einat","email":"taleinat@gmail.com"},{"name":"Dan Butvinik","email":"butvinik@outlook.com"}],"dependencies":{"spdx-expression-parse":"^3.0.0","spdx-license-ids":"^3.0.0"},"deprecated":false,"description":"correct invalid SPDX expressions","devDependencies":{"defence-cli":"^2.0.1","replace-require-self":"^1.0.0","standard":"^11.0.0","standard-markdown":"^4.0.2","tape":"^4.9.0"},"files":["index.js"],"homepage":"https://github.com/jslicense/spdx-correct.js#readme","keywords":["SPDX","law","legal","license","metadata"],"license":"Apache-2.0","name":"spdx-correct","repository":{"type":"git","url":"git+https://github.com/jslicense/spdx-correct.js.git"},"scripts":{"lint":"standard && standard-markdown README.md","test":"defence README.md | replace-require-self | node && node test.js"},"version":"3.1.1"}');

/***/ }),

/***/ 29882:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"spdx-exceptions@^2.1.0","_id":"spdx-exceptions@2.3.0","_inBundle":false,"_integrity":"sha512-/tTrYOC7PPI1nUAgx34hUpqXuyJG+DTHJTnIULG4rDygi4xu/tfgmq1e1cIRwRzwZgo4NLySi+ricLkZkw4i5A==","_location":"/spdx-exceptions","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"spdx-exceptions@^2.1.0","name":"spdx-exceptions","escapedName":"spdx-exceptions","rawSpec":"^2.1.0","saveSpec":null,"fetchSpec":"^2.1.0"},"_requiredBy":["/spdx-expression-parse"],"_resolved":"https://registry.npmjs.org/spdx-exceptions/-/spdx-exceptions-2.3.0.tgz","_shasum":"3f28ce1a77a00372683eade4a433183527a2163d","_spec":"spdx-exceptions@^2.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/spdx-expression-parse","author":{"name":"The Linux Foundation"},"bugs":{"url":"https://github.com/kemitchell/spdx-exceptions.json/issues"},"bundleDependencies":false,"contributors":[{"name":"Kyle E. Mitchell","email":"kyle@kemitchell.com","url":"https://kemitchell.com/"}],"deprecated":false,"description":"list of SPDX standard license exceptions","files":["index.json"],"homepage":"https://github.com/kemitchell/spdx-exceptions.json#readme","license":"CC-BY-3.0","name":"spdx-exceptions","repository":{"type":"git","url":"git+https://github.com/kemitchell/spdx-exceptions.json.git"},"scripts":{"build":"node build.js"},"version":"2.3.0"}');

/***/ }),

/***/ 96115:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"spdx-expression-parse@^3.0.0","_id":"spdx-expression-parse@3.0.1","_inBundle":false,"_integrity":"sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==","_location":"/spdx-expression-parse","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"spdx-expression-parse@^3.0.0","name":"spdx-expression-parse","escapedName":"spdx-expression-parse","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/spdx-correct","/validate-npm-package-license"],"_resolved":"https://registry.npmjs.org/spdx-expression-parse/-/spdx-expression-parse-3.0.1.tgz","_shasum":"cf70f50482eefdc98e3ce0a6833e4a53ceeba679","_spec":"spdx-expression-parse@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/validate-npm-package-license","author":{"name":"Kyle E. Mitchell","email":"kyle@kemitchell.com","url":"https://kemitchell.com"},"bugs":{"url":"https://github.com/jslicense/spdx-expression-parse.js/issues"},"bundleDependencies":false,"contributors":[{"name":"C. Scott Ananian","email":"cscott@cscott.net","url":"http://cscott.net"},{"name":"Kyle E. Mitchell","email":"kyle@kemitchell.com","url":"https://kemitchell.com"},{"name":"Shinnosuke Watanabe","email":"snnskwtnb@gmail.com"},{"name":"Antoine Motet","email":"antoine.motet@gmail.com"}],"dependencies":{"spdx-exceptions":"^2.1.0","spdx-license-ids":"^3.0.0"},"deprecated":false,"description":"parse SPDX license expressions","devDependencies":{"defence-cli":"^3.0.1","replace-require-self":"^1.0.0","standard":"^14.1.0"},"files":["AUTHORS","index.js","parse.js","scan.js"],"homepage":"https://github.com/jslicense/spdx-expression-parse.js#readme","keywords":["SPDX","law","legal","license","metadata","package","package.json","standards"],"license":"MIT","name":"spdx-expression-parse","repository":{"type":"git","url":"git+https://github.com/jslicense/spdx-expression-parse.js.git"},"scripts":{"lint":"standard","test":"npm run test:suite && npm run test:readme","test:readme":"defence -i javascript README.md | replace-require-self | node","test:suite":"node test.js"},"version":"3.0.1"}');

/***/ }),

/***/ 45000:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"spdx-license-ids@^3.0.0","_id":"spdx-license-ids@3.0.11","_inBundle":false,"_integrity":"sha512-Ctl2BrFiM0X3MANYgj3CkygxhRmr9mi6xhejbdO960nF6EDJApTYpn0BQnDKlnNBULKiCN1n3w9EBkHK8ZWg+g==","_location":"/spdx-license-ids","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"spdx-license-ids@^3.0.0","name":"spdx-license-ids","escapedName":"spdx-license-ids","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/spdx-correct","/spdx-expression-parse"],"_resolved":"https://registry.npmjs.org/spdx-license-ids/-/spdx-license-ids-3.0.11.tgz","_shasum":"50c0d8c40a14ec1bf449bae69a0ea4685a9d9f95","_spec":"spdx-license-ids@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/spdx-correct","author":{"name":"Shinnosuke Watanabe","url":"https://github.com/shinnn"},"bugs":{"url":"https://github.com/jslicense/spdx-license-ids/issues"},"bundleDependencies":false,"deprecated":false,"description":"A list of SPDX license identifiers","devDependencies":{"@shinnn/eslint-config":"^7.0.0","eslint":"^8.2.0","eslint-formatter-codeframe":"^7.32.1","rmfr":"^2.0.0","tape":"^5.3.1"},"eslintConfig":{"extends":"@shinnn"},"files":["deprecated.json","index.json"],"homepage":"https://github.com/jslicense/spdx-license-ids#readme","keywords":["spdx","license","licenses","id","identifier","identifiers","json","array","oss"],"license":"CC0-1.0","name":"spdx-license-ids","repository":{"type":"git","url":"git+https://github.com/jslicense/spdx-license-ids.git"},"scripts":{"build":"node build.js","latest":"node latest.js","pretest":"eslint .","test":"node test.js"},"version":"3.0.11"}');

/***/ }),

/***/ 99044:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"split-string@^3.0.2","_id":"split-string@3.1.0","_inBundle":false,"_integrity":"sha512-NzNVhJDYpwceVVii8/Hu6DKfD2G+NrQHlS/V/qgv763EYudVwEcMQNxd2lh+0VrUByXN/oJkl5grOhYWvQUYiw==","_location":"/split-string","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"split-string@^3.0.2","name":"split-string","escapedName":"split-string","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/cpy/braces","/set-value"],"_resolved":"https://registry.npmjs.org/split-string/-/split-string-3.1.0.tgz","_shasum":"7cb09dda3a86585705c64b39a6466038682e8fe2","_spec":"split-string@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/braces","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/split-string/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"extend-shallow":"^3.0.0"},"deprecated":false,"description":"Split a string on a character except when the character is escaped.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/split-string","keywords":["character","escape","split","string"],"license":"MIT","main":"index.js","name":"split-string","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/split-string.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","titles":[".","install","Why use this?"],"related":{"list":["deromanize","randomatic","repeat-string","romanize"]},"tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"3.1.0"}');

/***/ }),

/***/ 48204:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["sprintf-js@1.0.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"sprintf-js@1.0.3","_id":"sprintf-js@1.0.3","_inBundle":false,"_integrity":"sha1-BOaSb2YolTVPPdAVIDYzuFcpfiw=","_location":"/sprintf-js","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"sprintf-js@1.0.3","name":"sprintf-js","escapedName":"sprintf-js","rawSpec":"1.0.3","saveSpec":null,"fetchSpec":"1.0.3"},"_requiredBy":["/argparse"],"_resolved":"https://registry.npmjs.org/sprintf-js/-/sprintf-js-1.0.3.tgz","_spec":"1.0.3","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Alexandru Marasteanu","email":"hello@alexei.ro","url":"http://alexei.ro/"},"bugs":{"url":"https://github.com/alexei/sprintf.js/issues"},"description":"JavaScript sprintf implementation","devDependencies":{"grunt":"*","grunt-contrib-uglify":"*","grunt-contrib-watch":"*","mocha":"*"},"homepage":"https://github.com/alexei/sprintf.js#readme","license":"BSD-3-Clause","main":"src/sprintf.js","name":"sprintf-js","repository":{"type":"git","url":"git+https://github.com/alexei/sprintf.js.git"},"scripts":{"test":"mocha test/test.js"},"version":"1.0.3"}');

/***/ }),

/***/ 58469:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"define-property@^0.2.5","_id":"define-property@0.2.5","_inBundle":false,"_integrity":"sha1-w1se+RjsPJkPmlvFe+BKrOxcgRY=","_location":"/static-extend/define-property","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"define-property@^0.2.5","name":"define-property","escapedName":"define-property","rawSpec":"^0.2.5","saveSpec":null,"fetchSpec":"^0.2.5"},"_requiredBy":["/static-extend"],"_resolved":"https://registry.npmjs.org/define-property/-/define-property-0.2.5.tgz","_shasum":"c35b1ef918ec3c990f9a5bc57be04aacec5c8116","_spec":"define-property@^0.2.5","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/static-extend","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/define-property/issues"},"bundleDependencies":false,"dependencies":{"is-descriptor":"^0.1.0"},"deprecated":false,"description":"Define a non-enumerable property on an object.","devDependencies":{"mocha":"*","should":"^7.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/define-property","keywords":["define","define-property","enumerable","key","non","non-enumerable","object","prop","property","value"],"license":"MIT","main":"index.js","name":"define-property","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/define-property.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["mixin-deep","mixin-object","delegate-object","forward-object"]}},"version":"0.2.5"}');

/***/ }),

/***/ 3133:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"static-extend@^0.1.1","_id":"static-extend@0.1.2","_inBundle":false,"_integrity":"sha1-YICcOcv/VTNyJv1eC1IPNB8ftcY=","_location":"/static-extend","_phantomChildren":{"is-descriptor":"0.1.6"},"_requested":{"type":"range","registry":true,"raw":"static-extend@^0.1.1","name":"static-extend","escapedName":"static-extend","rawSpec":"^0.1.1","saveSpec":null,"fetchSpec":"^0.1.1"},"_requiredBy":["/class-utils"],"_resolved":"https://registry.npmjs.org/static-extend/-/static-extend-0.1.2.tgz","_shasum":"60809c39cbff55337226fd5e0b520f341f1fb5c6","_spec":"static-extend@^0.1.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/class-utils","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/static-extend/issues"},"bundleDependencies":false,"dependencies":{"define-property":"^0.2.5","object-copy":"^0.1.0"},"deprecated":false,"description":"Adds a static `extend` method to a class, to simplify inheritance. Extends the static properties, prototype properties, and descriptors from a `Parent` constructor onto `Child` constructors.","devDependencies":{"gulp-format-md":"^0.1.9","mocha":"^2.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/static-extend","keywords":["class","ctor","descriptor","extend","extends","inherit","inheritance","merge","method","prop","properties","property","prototype"],"license":"MIT","main":"index.js","name":"static-extend","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/static-extend.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"reflinks":["verb","verb-readme-generator"],"lint":{"reflinks":true}},"version":"0.1.2"}');

/***/ }),

/***/ 97846:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["string-width@4.2.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"string-width@4.2.2","_id":"string-width@4.2.2","_inBundle":false,"_integrity":"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE/xi3vOeA==","_location":"/string-width","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"string-width@4.2.2","name":"string-width","escapedName":"string-width","rawSpec":"4.2.2","saveSpec":null,"fetchSpec":"4.2.2"},"_requiredBy":["/cliui","/table","/wrap-ansi","/yargs"],"_resolved":"https://registry.npmjs.org/string-width/-/string-width-4.2.2.tgz","_spec":"4.2.2","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/string-width/issues"},"dependencies":{"emoji-regex":"^8.0.0","is-fullwidth-code-point":"^3.0.0","strip-ansi":"^6.0.0"},"description":"Get the visual width of a string - the number of columns required to display it","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/string-width#readme","keywords":["string","character","unicode","width","visual","column","columns","fullwidth","full-width","full","ansi","escape","codes","cli","command-line","terminal","console","cjk","chinese","japanese","korean","fixed-width"],"license":"MIT","name":"string-width","repository":{"type":"git","url":"git+https://github.com/sindresorhus/string-width.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.2.2"}');

/***/ }),

/***/ 9725:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["strip-ansi@6.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"strip-ansi@6.0.0","_id":"strip-ansi@6.0.0","_inBundle":false,"_integrity":"sha512-AuvKTrTfQNYNIctbR1K/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==","_location":"/strip-ansi","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"strip-ansi@6.0.0","name":"strip-ansi","escapedName":"strip-ansi","rawSpec":"6.0.0","saveSpec":null,"fetchSpec":"6.0.0"},"_requiredBy":["/cliui","/eslint","/string-width","/wrap-ansi"],"_resolved":"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.0.tgz","_spec":"6.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/strip-ansi/issues"},"dependencies":{"ansi-regex":"^5.0.0"},"description":"Strip ANSI escape codes from a string","devDependencies":{"ava":"^2.4.0","tsd":"^0.10.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/chalk/strip-ansi#readme","keywords":["strip","trim","remove","ansi","styles","color","colour","colors","terminal","console","string","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"strip-ansi","repository":{"type":"git","url":"git+https://github.com/chalk/strip-ansi.git"},"scripts":{"test":"xo && ava && tsd"},"version":"6.0.0"}');

/***/ }),

/***/ 34415:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"strip-indent@^3.0.0","_id":"strip-indent@3.0.0","_inBundle":false,"_integrity":"sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==","_location":"/strip-indent","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"strip-indent@^3.0.0","name":"strip-indent","escapedName":"strip-indent","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/redent"],"_resolved":"https://registry.npmjs.org/strip-indent/-/strip-indent-3.0.0.tgz","_shasum":"c32e1cee940b6b3432c771bc2c54bcce73cd3001","_spec":"strip-indent@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/redent","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/strip-indent/issues"},"bundleDependencies":false,"dependencies":{"min-indent":"^1.0.0"},"deprecated":false,"description":"Strip leading whitespace from each line in a string","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/strip-indent#readme","keywords":["strip","indent","indentation","normalize","remove","delete","whitespace","space","tab","string"],"license":"MIT","name":"strip-indent","repository":{"type":"git","url":"git+https://github.com/sindresorhus/strip-indent.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.0.0"}');

/***/ }),

/***/ 76821:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["strip-json-comments@3.1.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"strip-json-comments@3.1.1","_id":"strip-json-comments@3.1.1","_inBundle":false,"_integrity":"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==","_location":"/strip-json-comments","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"strip-json-comments@3.1.1","name":"strip-json-comments","escapedName":"strip-json-comments","rawSpec":"3.1.1","saveSpec":null,"fetchSpec":"3.1.1"},"_requiredBy":["/@eslint/eslintrc","/eslint"],"_resolved":"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz","_spec":"3.1.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/strip-json-comments/issues"},"description":"Strip comments from JSON. Lets you use comments in your JSON files!","devDependencies":{"ava":"^1.4.1","matcha":"^0.7.0","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/strip-json-comments#readme","keywords":["json","strip","comments","remove","delete","trim","multiline","parse","config","configuration","settings","util","env","environment","jsonc"],"license":"MIT","name":"strip-json-comments","repository":{"type":"git","url":"git+https://github.com/sindresorhus/strip-json-comments.git"},"scripts":{"bench":"matcha benchmark.js","test":"xo && ava && tsd"},"version":"3.1.1"}');

/***/ }),

/***/ 96180:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"strip-outer@^1.0.1","_id":"strip-outer@1.0.1","_inBundle":false,"_integrity":"sha512-k55yxKHwaXnpYGsOzg4Vl8+tDrWylxDEpknGjhTiZB8dFRU5rTo9CAzeycivxV3s+zlTKwrs6WxMxR95n26kwg==","_location":"/strip-outer","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"strip-outer@^1.0.1","name":"strip-outer","escapedName":"strip-outer","rawSpec":"^1.0.1","saveSpec":null,"fetchSpec":"^1.0.1"},"_requiredBy":["/filenamify"],"_resolved":"https://registry.npmjs.org/strip-outer/-/strip-outer-1.0.1.tgz","_shasum":"b2fd2abf6604b9d1e6013057195df836b8a9d631","_spec":"strip-outer@^1.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/filenamify","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/strip-outer/issues"},"bundleDependencies":false,"dependencies":{"escape-string-regexp":"^1.0.2"},"deprecated":false,"description":"Strip a substring from the start/end of a string","devDependencies":{"ava":"*","xo":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/strip-outer#readme","keywords":["strip","trim","remove","outer","str","string","substring","start","end","wrap","leading","trailing","regex","regexp"],"license":"MIT","name":"strip-outer","repository":{"type":"git","url":"git+https://github.com/sindresorhus/strip-outer.git"},"scripts":{"test":"xo && ava"},"version":"1.0.1"}');

/***/ }),

/***/ 5760:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["supports-color@5.5.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"supports-color@5.5.0","_id":"supports-color@5.5.0","_inBundle":false,"_integrity":"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==","_location":"/supports-color","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"supports-color@5.5.0","name":"supports-color","escapedName":"supports-color","rawSpec":"5.5.0","saveSpec":null,"fetchSpec":"5.5.0"},"_requiredBy":["/@babel/highlight/chalk","/replace/chalk"],"_resolved":"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz","_spec":"5.5.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"browser":"browser.js","bugs":{"url":"https://github.com/chalk/supports-color/issues"},"dependencies":{"has-flag":"^3.0.0"},"description":"Detect whether a terminal supports color","devDependencies":{"ava":"^0.25.0","import-fresh":"^2.0.0","xo":"^0.20.0"},"engines":{"node":">=4"},"files":["index.js","browser.js"],"homepage":"https://github.com/chalk/supports-color#readme","keywords":["color","colour","colors","terminal","console","cli","ansi","styles","tty","rgb","256","shell","xterm","command-line","support","supports","capability","detect","truecolor","16m"],"license":"MIT","name":"supports-color","repository":{"type":"git","url":"git+https://github.com/chalk/supports-color.git"},"scripts":{"test":"xo && ava"},"version":"5.5.0"}');

/***/ }),

/***/ 56057:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"ajv@^8.0.1","_id":"ajv@8.8.0","_inBundle":false,"_integrity":"sha512-L+cJ/+pkdICMueKR6wIx3VP2fjIx3yAhuvadUv/osv9yFD7OVZy442xFF+Oeu3ZvmhBGQzoF6mTSt+LUWBmGQg==","_location":"/table/ajv","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"ajv@^8.0.1","name":"ajv","escapedName":"ajv","rawSpec":"^8.0.1","saveSpec":null,"fetchSpec":"^8.0.1"},"_requiredBy":["/table"],"_resolved":"https://registry.npmjs.org/ajv/-/ajv-8.8.0.tgz","_shasum":"c501f10df72914bb77a458919e79fc73e4a2f9ef","_spec":"ajv@^8.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/table","author":{"name":"Evgeny Poberezkin"},"bugs":{"url":"https://github.com/ajv-validator/ajv/issues"},"bundleDependencies":false,"collective":{"type":"opencollective","url":"https://opencollective.com/ajv"},"dependencies":{"fast-deep-equal":"^3.1.1","json-schema-traverse":"^1.0.0","require-from-string":"^2.0.2","uri-js":"^4.2.2"},"deprecated":false,"description":"Another JSON Schema Validator","devDependencies":{"@ajv-validator/config":"^0.3.0","@rollup/plugin-commonjs":"^21.0.0","@rollup/plugin-json":"^4.1.0","@rollup/plugin-node-resolve":"^13.0.0","@rollup/plugin-typescript":"^8.2.1","@types/chai":"^4.2.12","@types/mocha":"^9.0.0","@types/node":"^16.3.2","@types/require-from-string":"^1.2.0","@typescript-eslint/eslint-plugin":"^3.8.0","@typescript-eslint/parser":"^3.8.0","ajv-formats":"^3.0.0-rc.0","browserify":"^17.0.0","chai":"^4.0.1","cross-env":"^7.0.2","dayjs":"^1.10.4","dayjs-plugin-utc":"^0.1.2","eslint":"^7.8.1","eslint-config-prettier":"^7.0.0","glob":"^7.0.0","husky":"^7.0.1","if-node-version":"^1.0.0","jimp":"^0.16.1","js-beautify":"^1.7.3","json-schema-test":"^2.0.0","karma":"^6.0.0","karma-chrome-launcher":"^3.0.0","karma-mocha":"^2.0.0","lint-staged":"^11.0.0","mocha":"^9.0.2","node-fetch":"^3.0.0","nyc":"^15.0.0","prettier":"^2.3.1","re2":"^1.16.0","rollup":"^2.44.0","rollup-plugin-terser":"^7.0.2","ts-node":"^10.0.0","tsify":"^5.0.2","typescript":"^4.2.0"},"files":["lib/","dist/",".runkit_example.js"],"funding":{"type":"github","url":"https://github.com/sponsors/epoberezkin"},"homepage":"https://ajv.js.org","husky":{"hooks":{"pre-commit":"lint-staged && npm test"}},"keywords":["JSON","schema","validator","validation","jsonschema","json-schema","json-schema-validator","json-schema-validation"],"license":"MIT","lint-staged":{"*.{json,yaml,js,ts}":"prettier --write"},"main":"dist/ajv.js","name":"ajv","nyc":{"exclude":["**/spec/**","node_modules"],"reporter":["lcov","text-summary"]},"prettier":"@ajv-validator/config/prettierrc.json","repository":{"type":"git","url":"git+https://github.com/ajv-validator/ajv.git"},"runkitExampleFilename":".runkit_example.js","scripts":{"benchmark":"npm i && npm run build && npm link && cd ./benchmark && npm link --legacy-peer-deps ajv && npm i && node ./jtd","build":"rm -rf dist && tsc && cp -r lib/refs dist && rm dist/refs/json-schema-2019-09/index.ts && rm dist/refs/json-schema-2020-12/index.ts && rm dist/refs/jtd-schema.ts","bundle":"rm -rf bundle && node ./scripts/bundle.js ajv ajv7 ajv7 && node ./scripts/bundle.js 2019 ajv2019 ajv2019 && node ./scripts/bundle.js 2020 ajv2020 ajv2020 && node ./scripts/bundle.js jtd ajvJTD ajvJTD","docs:build":"./scripts/prepare-site && vuepress build docs","docs:dev":"./scripts/prepare-site && vuepress dev docs","eslint":"eslint \\"lib/**/*.ts\\" \\"spec/**/*.*s\\" --ignore-pattern spec/JSON-Schema-Test-Suite","json-tests":"rm -rf spec/_json/*.js && node scripts/jsontests","prepublish":"npm run build","prettier:check":"prettier --list-different \\"./**/*.{json,yaml,js,ts}\\"","prettier:write":"prettier --write \\"./**/*.{json,yaml,js,ts}\\"","rollup":"rm -rf bundle && rollup -c","test":"npm run json-tests && npm run prettier:check && npm run eslint && npm link && npm link --legacy-peer-deps ajv && npm run test-cov","test-all":"npm run test-cov && if-node-version 12 npm run test-browser","test-browser":"rm -rf .browser && npm run bundle && scripts/prepare-tests && karma start","test-ci":"AJV_FULL_TEST=true npm test","test-codegen":"nyc cross-env TS_NODE_PROJECT=spec/tsconfig.json mocha -r ts-node/register \'spec/codegen.spec.ts\' -R spec","test-cov":"nyc npm run test-spec","test-debug":"npm run test-spec -- --inspect-brk","test-karma":"karma start","test-spec":"cross-env TS_NODE_PROJECT=spec/tsconfig.json mocha -r ts-node/register \\"spec/**/*.spec.{ts,js}\\" -R dot"},"types":"dist/ajv.d.ts","version":"8.8.0"}');

/***/ }),

/***/ 10319:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"ansi-regex@^5.0.1","_id":"ansi-regex@5.0.1","_inBundle":false,"_integrity":"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==","_location":"/table/ansi-regex","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"ansi-regex@^5.0.1","name":"ansi-regex","escapedName":"ansi-regex","rawSpec":"^5.0.1","saveSpec":null,"fetchSpec":"^5.0.1"},"_requiredBy":["/table/strip-ansi"],"_resolved":"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz","_shasum":"082cb2c89c9fe8659a311a53bd6a4dc5301db304","_spec":"ansi-regex@^5.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/table/node_modules/strip-ansi","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/ansi-regex/issues"},"bundleDependencies":false,"deprecated":false,"description":"Regular expression for matching ANSI escape codes","devDependencies":{"ava":"^2.4.0","tsd":"^0.9.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/chalk/ansi-regex#readme","keywords":["ansi","styles","color","colour","colors","terminal","console","cli","string","tty","escape","formatting","rgb","256","shell","xterm","command-line","text","regex","regexp","re","match","test","find","pattern"],"license":"MIT","name":"ansi-regex","repository":{"type":"git","url":"git+https://github.com/chalk/ansi-regex.git"},"scripts":{"test":"xo && ava && tsd","view-supported":"node fixtures/view-codes.js"},"version":"5.0.1"}');

/***/ }),

/***/ 53966:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["json-schema-traverse@1.0.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"json-schema-traverse@1.0.0","_id":"json-schema-traverse@1.0.0","_inBundle":false,"_integrity":"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==","_location":"/table/json-schema-traverse","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"json-schema-traverse@1.0.0","name":"json-schema-traverse","escapedName":"json-schema-traverse","rawSpec":"1.0.0","saveSpec":null,"fetchSpec":"1.0.0"},"_requiredBy":["/table/ajv"],"_resolved":"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz","_spec":"1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Evgeny Poberezkin"},"bugs":{"url":"https://github.com/epoberezkin/json-schema-traverse/issues"},"description":"Traverse JSON Schema passing each schema object to callback","devDependencies":{"eslint":"^7.3.1","mocha":"^8.0.1","nyc":"^15.0.0","pre-commit":"^1.2.2"},"homepage":"https://github.com/epoberezkin/json-schema-traverse#readme","keywords":["JSON-Schema","traverse","iterate"],"license":"MIT","main":"index.js","name":"json-schema-traverse","nyc":{"exclude":["**/spec/**","node_modules"],"reporter":["lcov","text-summary"]},"repository":{"type":"git","url":"git+https://github.com/epoberezkin/json-schema-traverse.git"},"scripts":{"eslint":"eslint index.js spec","test":"npm run eslint && nyc npm run test-spec","test-spec":"mocha spec -R spec"},"types":"index.d.ts","version":"1.0.0"}');

/***/ }),

/***/ 20841:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"string-width@^4.2.3","_id":"string-width@4.2.3","_inBundle":false,"_integrity":"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==","_location":"/table/string-width","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"string-width@^4.2.3","name":"string-width","escapedName":"string-width","rawSpec":"^4.2.3","saveSpec":null,"fetchSpec":"^4.2.3"},"_requiredBy":["/table"],"_resolved":"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz","_shasum":"269c7117d27b05ad2e536830a8ec895ef9c6d010","_spec":"string-width@^4.2.3","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/table","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/string-width/issues"},"bundleDependencies":false,"dependencies":{"emoji-regex":"^8.0.0","is-fullwidth-code-point":"^3.0.0","strip-ansi":"^6.0.1"},"deprecated":false,"description":"Get the visual width of a string - the number of columns required to display it","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.1","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/string-width#readme","keywords":["string","character","unicode","width","visual","column","columns","fullwidth","full-width","full","ansi","escape","codes","cli","command-line","terminal","console","cjk","chinese","japanese","korean","fixed-width"],"license":"MIT","name":"string-width","repository":{"type":"git","url":"git+https://github.com/sindresorhus/string-width.git"},"scripts":{"test":"xo && ava && tsd"},"version":"4.2.3"}');

/***/ }),

/***/ 4774:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"strip-ansi@^6.0.1","_id":"strip-ansi@6.0.1","_inBundle":false,"_integrity":"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==","_location":"/table/strip-ansi","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"strip-ansi@^6.0.1","name":"strip-ansi","escapedName":"strip-ansi","rawSpec":"^6.0.1","saveSpec":null,"fetchSpec":"^6.0.1"},"_requiredBy":["/table","/table/string-width"],"_resolved":"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz","_shasum":"9e26c63d30f53443e9489495b2105d37b67a85d9","_spec":"strip-ansi@^6.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/table","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/strip-ansi/issues"},"bundleDependencies":false,"dependencies":{"ansi-regex":"^5.0.1"},"deprecated":false,"description":"Strip ANSI escape codes from a string","devDependencies":{"ava":"^2.4.0","tsd":"^0.10.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/chalk/strip-ansi#readme","keywords":["strip","trim","remove","ansi","styles","color","colour","colors","terminal","console","string","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"strip-ansi","repository":{"type":"git","url":"git+https://github.com/chalk/strip-ansi.git"},"scripts":{"test":"xo && ava && tsd"},"version":"6.0.1"}');

/***/ }),

/***/ 93354:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"table@^6.0.9","_id":"table@6.7.3","_inBundle":false,"_integrity":"sha512-5DkIxeA7XERBqMwJq0aHZOdMadBx4e6eDoFRuyT5VR82J0Ycg2DwM6GfA/EQAhJ+toRTaS1lIdSQCqgrmhPnlw==","_location":"/table","_phantomChildren":{"emoji-regex":"8.0.0","fast-deep-equal":"3.1.3","is-fullwidth-code-point":"3.0.0","require-from-string":"2.0.2","uri-js":"4.4.1"},"_requested":{"type":"range","registry":true,"raw":"table@^6.0.9","name":"table","escapedName":"table","rawSpec":"^6.0.9","saveSpec":null,"fetchSpec":"^6.0.9"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/table/-/table-6.7.3.tgz","_shasum":"255388439715a738391bd2ee4cbca89a4d05a9b7","_spec":"table@^6.0.9","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/eslint","author":{"name":"Gajus Kuizinas","email":"gajus@gajus.com","url":"http://gajus.com"},"bugs":{"url":"https://github.com/gajus/table/issues"},"bundleDependencies":false,"dependencies":{"ajv":"^8.0.1","lodash.truncate":"^4.4.2","slice-ansi":"^4.0.0","string-width":"^4.2.3","strip-ansi":"^6.0.1"},"deprecated":false,"description":"Formats data into a string table.","devDependencies":{"@types/chai":"^4.2.16","@types/lodash.mapvalues":"^4.6.6","@types/lodash.truncate":"^4.4.6","@types/mocha":"^8.2.2","@types/node":"^14.14.37","@types/sinon":"^10.0.0","@types/slice-ansi":"^4.0.0","ajv-cli":"^5.0.0","ajv-keywords":"^5.0.0","chai":"^4.2.0","chalk":"^4.1.0","coveralls":"^3.1.0","eslint":"^7.16.0","eslint-config-canonical":"^25.0.0","gitdown":"^3.1.3","husky":"^4.3.6","js-beautify":"^1.13.0","lodash.mapvalues":"^4.6.0","mkdirp":"^1.0.4","mocha":"^8.2.1","nyc":"^15.1.0","semantic-release":"^17.3.1","sinon":"^9.2.2","ts-node":"^9.1.1","typescript":"4.2.4"},"engines":{"node":">=10.0.0"},"files":["dist/**/*.js","dist/**/*.d.ts"],"homepage":"https://github.com/gajus/table#readme","husky":{"hooks":{"post-commit":"npm run create-readme && git add README.md && git commit -m \'docs: generate docs\' --no-verify","pre-commit":"npm run build && npm run lint && npm run test"}},"keywords":["ascii","text","table","align","ansi"],"license":"BSD-3-Clause","main":"./dist/index.js","name":"table","nyc":{"extensions":[".ts"],"exclude":["src/generated/validators.js","test/**/*.ts"],"reporter":["text-lcov","text"]},"repository":{"type":"git","url":"git+https://github.com/gajus/table.git"},"scripts":{"build":"npm run create-validators && npm run compile","compile":"tsc","create-readme":"gitdown ./.README/README.md --output-file ./README.md","create-validators":"rm -fr ./src/generated && mkdirp ./src/generated && ajv compile --all-errors --inline-refs=false -s src/schemas/config -s src/schemas/streamConfig -r src/schemas/shared -c ajv-keywords/dist/keywords/typeof -o | js-beautify > ./src/generated/validators.js","lint":"eslint --ignore-path .gitignore ./src ./test","prebuild":"rm -fr ./dist && mkdirp dist","test":"npm run create-validators && mocha --require ts-node/register \\"./test/**/*.ts\\""},"version":"6.7.3"}');

/***/ }),

/***/ 85471:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["text-table@0.2.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"text-table@0.2.0","_id":"text-table@0.2.0","_inBundle":false,"_integrity":"sha1-f17oI66AUgfACvLfSoTsP8+lcLQ=","_location":"/text-table","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"text-table@0.2.0","name":"text-table","escapedName":"text-table","rawSpec":"0.2.0","saveSpec":null,"fetchSpec":"0.2.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz","_spec":"0.2.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"James Halliday","email":"mail@substack.net","url":"http://substack.net"},"bugs":{"url":"https://github.com/substack/text-table/issues"},"description":"borderless text tables with alignment","devDependencies":{"cli-color":"~0.2.3","tap":"~0.4.0","tape":"~1.0.2"},"homepage":"https://github.com/substack/text-table","keywords":["text","table","align","ascii","rows","tabular"],"license":"MIT","main":"index.js","name":"text-table","repository":{"type":"git","url":"git://github.com/substack/text-table.git"},"scripts":{"test":"tap test/*.js"},"testling":{"files":"test/*.js","browsers":["ie/6..latest","chrome/20..latest","firefox/10..latest","safari/latest","opera/11.0..latest","iphone/6","ipad/6"]},"version":"0.2.0"}');

/***/ }),

/***/ 49157:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"kind-of@^3.0.2","_id":"kind-of@3.2.2","_inBundle":false,"_integrity":"sha1-MeohpzS6ubuw8yRm2JOupR5KPGQ=","_location":"/to-object-path/kind-of","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"kind-of@^3.0.2","name":"kind-of","escapedName":"kind-of","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/to-object-path"],"_resolved":"https://registry.npmjs.org/kind-of/-/kind-of-3.2.2.tgz","_shasum":"31ea21a734bab9bbb0f32466d893aea51e4a3c64","_spec":"kind-of@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/to-object-path","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/kind-of/issues"},"bundleDependencies":false,"contributors":[{"name":"David Fox-Powell","url":"https://dtothefp.github.io/me"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Ken Sheedlo","url":"kensheedlo.com"},{"name":"laggingreflex","url":"https://github.com/laggingreflex"},{"name":"Miguel Mota","url":"https://miguelmota.com"},{"name":"Peter deHaan","url":"http://about.me/peterdehaan"}],"dependencies":{"is-buffer":"^1.1.5"},"deprecated":false,"description":"Get the native type of a value.","devDependencies":{"ansi-bold":"^0.1.1","benchmarked":"^1.0.0","browserify":"^14.3.0","glob":"^7.1.1","gulp-format-md":"^0.1.12","mocha":"^3.3.0","type-of":"^2.0.1","typeof":"^1.0.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/kind-of","keywords":["arguments","array","boolean","check","date","function","is","is-type","is-type-of","kind","kind-of","number","object","of","regexp","string","test","type","type-of","typeof","types"],"license":"MIT","main":"index.js","name":"kind-of","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/kind-of.git"},"scripts":{"prepublish":"browserify -o browser.js -e index.js -s index --bare","test":"mocha"},"verb":{"related":{"list":["is-glob","is-number","is-primitive"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"3.2.2"}');

/***/ }),

/***/ 91969:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"to-object-path@^0.3.0","_id":"to-object-path@0.3.0","_inBundle":false,"_integrity":"sha1-KXWIt7Dn4KwI4E5nL4XB9JmeF68=","_location":"/to-object-path","_phantomChildren":{"is-buffer":"1.1.6"},"_requested":{"type":"range","registry":true,"raw":"to-object-path@^0.3.0","name":"to-object-path","escapedName":"to-object-path","rawSpec":"^0.3.0","saveSpec":null,"fetchSpec":"^0.3.0"},"_requiredBy":["/cache-base"],"_resolved":"https://registry.npmjs.org/to-object-path/-/to-object-path-0.3.0.tgz","_shasum":"297588b7b0e7e0ac08e04e672f85c1f4999e17af","_spec":"to-object-path@^0.3.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cache-base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/to-object-path/issues"},"bundleDependencies":false,"dependencies":{"kind-of":"^3.0.2"},"deprecated":false,"description":"Create an object path from a list or array of strings.","devDependencies":{"base":"^0.6.7","mocha":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/to-object-path","keywords":["dot","nested","notation","object","path","stringify"],"license":"MIT","main":"index.js","name":"to-object-path","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/to-object-path.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["get-value","set-value","has-value","omit-value","unset-value"]}},"version":"0.3.0"}');

/***/ }),

/***/ 20064:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"to-regex-range@^5.0.1","_id":"to-regex-range@5.0.1","_inBundle":false,"_integrity":"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==","_location":"/to-regex-range","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"to-regex-range@^5.0.1","name":"to-regex-range","escapedName":"to-regex-range","rawSpec":"^5.0.1","saveSpec":null,"fetchSpec":"^5.0.1"},"_requiredBy":["/fill-range"],"_resolved":"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz","_shasum":"1648c44aae7c8d988a326018ed72f5b4dd0392e4","_spec":"to-regex-range@^5.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fill-range","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/micromatch/to-regex-range/issues"},"bundleDependencies":false,"contributors":[{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Rouven Weßling","url":"www.rouvenwessling.de"}],"dependencies":{"is-number":"^7.0.0"},"deprecated":false,"description":"Pass two numbers, get a regex-compatible source string for matching ranges. Validated against more than 2.78 million test assertions.","devDependencies":{"fill-range":"^6.0.0","gulp-format-md":"^2.0.0","mocha":"^6.0.2","text-table":"^0.2.0","time-diff":"^0.3.1"},"engines":{"node":">=8.0"},"files":["index.js"],"homepage":"https://github.com/micromatch/to-regex-range","keywords":["bash","date","expand","expansion","expression","glob","match","match date","match number","match numbers","match year","matches","matching","number","numbers","numerical","range","ranges","regex","regexp","regular","regular expression","sequence"],"license":"MIT","main":"index.js","name":"to-regex-range","repository":{"type":"git","url":"git+https://github.com/micromatch/to-regex-range.git"},"scripts":{"test":"mocha"},"verb":{"layout":"default","toc":false,"tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"helpers":{"examples":{"displayName":"examples"}},"related":{"list":["expand-range","fill-range","micromatch","repeat-element","repeat-string"]}},"version":"5.0.1"}');

/***/ }),

/***/ 10212:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"to-regex@^3.0.2","_id":"to-regex@3.0.2","_inBundle":false,"_integrity":"sha512-FWtleNAtZ/Ki2qtqej2CXTOayOH9bHDQF+Q48VpWyDXjbYxA4Yz8iDB31zXOBUlOHHKidDbqGVrTUvQMPmBGBw==","_location":"/to-regex","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"to-regex@^3.0.2","name":"to-regex","escapedName":"to-regex","rawSpec":"^3.0.2","saveSpec":null,"fetchSpec":"^3.0.2"},"_requiredBy":["/cpy/braces","/cpy/micromatch","/expand-brackets","/extglob","/nanomatch"],"_resolved":"https://registry.npmjs.org/to-regex/-/to-regex-3.0.2.tgz","_shasum":"13cfdd9b336552f30b51f33a8ae1b42a7a7599ce","_spec":"to-regex@^3.0.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cpy/node_modules/micromatch","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/to-regex/issues"},"bundleDependencies":false,"dependencies":{"define-property":"^2.0.2","extend-shallow":"^3.0.2","regex-not":"^1.0.2","safe-regex":"^1.1.0"},"deprecated":false,"description":"Generate a regex from a string or array of strings.","devDependencies":{"gulp-format-md":"^1.0.0","mocha":"^3.5.3"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/to-regex","keywords":["match","regex","regular expression","test","to"],"license":"MIT","main":"index.js","name":"to-regex","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/to-regex.git"},"scripts":{"test":"mocha"},"verb":{"toc":{"method":"preWrite"},"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["has-glob","is-glob","path-regex","to-regex-range"]},"lint":{"reflinks":true}},"version":"3.0.2"}');

/***/ }),

/***/ 93437:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"trim-newlines@^3.0.0","_id":"trim-newlines@3.0.1","_inBundle":false,"_integrity":"sha512-c1PTsA3tYrIsLGkJkzHF+w9F2EyxfXGo4UyJc4pFL++FMjnq0HJS69T3M7d//gKrFKwy429bouPescbjecU+Zw==","_location":"/trim-newlines","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"trim-newlines@^3.0.0","name":"trim-newlines","escapedName":"trim-newlines","rawSpec":"^3.0.0","saveSpec":null,"fetchSpec":"^3.0.0"},"_requiredBy":["/meow"],"_resolved":"https://registry.npmjs.org/trim-newlines/-/trim-newlines-3.0.1.tgz","_shasum":"260a5d962d8b752425b32f3a7db0dcacd176c144","_spec":"trim-newlines@^3.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/meow","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/trim-newlines/issues"},"bundleDependencies":false,"deprecated":false,"description":"Trim newlines from the start and/or end of a string","devDependencies":{"ava":"^1.4.1","tsd":"^0.7.2","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/sindresorhus/trim-newlines#readme","keywords":["trim","newline","newlines","linebreak","lf","crlf","left","right","start","end","string","remove","delete","strip"],"license":"MIT","name":"trim-newlines","repository":{"type":"git","url":"git+https://github.com/sindresorhus/trim-newlines.git"},"scripts":{"test":"xo && ava && tsd"},"version":"3.0.1"}');

/***/ }),

/***/ 4042:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"trim-repeated@^1.0.0","_id":"trim-repeated@1.0.0","_inBundle":false,"_integrity":"sha1-42RqLqTokTEr9+rObPsFOAvAHCE=","_location":"/trim-repeated","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"trim-repeated@^1.0.0","name":"trim-repeated","escapedName":"trim-repeated","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/filenamify"],"_resolved":"https://registry.npmjs.org/trim-repeated/-/trim-repeated-1.0.0.tgz","_shasum":"e3646a2ea4e891312bf7eace6cfb05380bc01c21","_spec":"trim-repeated@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/filenamify","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/trim-repeated/issues"},"bundleDependencies":false,"dependencies":{"escape-string-regexp":"^1.0.2"},"deprecated":false,"description":"Trim a consecutively repeated substring: foo--bar---baz → foo-bar-baz","devDependencies":{"ava":"0.0.4"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/sindresorhus/trim-repeated#readme","keywords":["condense","collapse","compact","consecutive","repeated","string","str","trim","remove","strip","character","char"],"license":"MIT","name":"trim-repeated","repository":{"type":"git","url":"git+https://github.com/sindresorhus/trim-repeated.git"},"scripts":{"test":"node test.js"},"version":"1.0.0"}');

/***/ }),

/***/ 957:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"tunnel@0.0.6","_id":"tunnel@0.0.6","_inBundle":false,"_integrity":"sha512-1h/Lnq9yajKY2PEbBadPXj3VxsDDu844OnaAo52UVmIzIvwwtBPIuNvkjuzBlTWpfJyUbG3ez0KSBibQkj4ojg==","_location":"/tunnel","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"tunnel@0.0.6","name":"tunnel","escapedName":"tunnel","rawSpec":"0.0.6","saveSpec":null,"fetchSpec":"0.0.6"},"_requiredBy":["/@actions/http-client"],"_resolved":"https://registry.npmjs.org/tunnel/-/tunnel-0.0.6.tgz","_shasum":"72f1314b34a5b192db012324df2cc587ca47f92c","_spec":"tunnel@0.0.6","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/@actions/http-client","author":{"name":"Koichi Kobayashi","email":"koichik@improvement.jp"},"bugs":{"url":"https://github.com/koichik/node-tunnel/issues"},"bundleDependencies":false,"deprecated":false,"description":"Node HTTP/HTTPS Agents for tunneling proxies","devDependencies":{"mocha":"^5.2.0","should":"^13.2.3"},"directories":{"lib":"./lib"},"engines":{"node":">=0.6.11 <=0.7.0 || >=0.7.3"},"homepage":"https://github.com/koichik/node-tunnel/","keywords":["http","https","agent","proxy","tunnel"],"license":"MIT","main":"./index.js","name":"tunnel","repository":{"type":"git","url":"git+https://github.com/koichik/node-tunnel.git"},"scripts":{"test":"mocha"},"version":"0.0.6"}');

/***/ }),

/***/ 22935:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["type-check@0.4.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"type-check@0.4.0","_id":"type-check@0.4.0","_inBundle":false,"_integrity":"sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==","_location":"/type-check","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"type-check@0.4.0","name":"type-check","escapedName":"type-check","rawSpec":"0.4.0","saveSpec":null,"fetchSpec":"0.4.0"},"_requiredBy":["/levn","/optionator"],"_resolved":"https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz","_spec":"0.4.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"George Zahariev","email":"z@georgezahariev.com"},"bugs":{"url":"https://github.com/gkz/type-check/issues"},"dependencies":{"prelude-ls":"^1.2.1"},"description":"type-check allows you to check the types of JavaScript values at runtime with a Haskell like type syntax.","devDependencies":{"browserify":"^16.5.1","livescript":"^1.6.0","mocha":"^7.1.1"},"engines":{"node":">= 0.8.0"},"files":["lib","README.md","LICENSE"],"homepage":"https://github.com/gkz/type-check","keywords":["type","check","checking","library"],"license":"MIT","main":"./lib/","name":"type-check","repository":{"type":"git","url":"git://github.com/gkz/type-check.git"},"scripts":{"test":"make test"},"version":"0.4.0"}');

/***/ }),

/***/ 37725:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"type-fest@^0.20.2","_id":"type-fest@0.20.2","_inBundle":false,"_integrity":"sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==","_location":"/type-fest","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"type-fest@^0.20.2","name":"type-fest","escapedName":"type-fest","rawSpec":"^0.20.2","saveSpec":null,"fetchSpec":"^0.20.2"},"_requiredBy":["/globals"],"_resolved":"https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz","_shasum":"1bf207f4b28f91583666cb5fbd327887301cd5f4","_spec":"type-fest@^0.20.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/globals","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"https://sindresorhus.com"},"bugs":{"url":"https://github.com/sindresorhus/type-fest/issues"},"bundleDependencies":false,"deprecated":false,"description":"A collection of essential TypeScript types","devDependencies":{"@sindresorhus/tsconfig":"~0.7.0","tsd":"^0.13.1","typescript":"^4.1.2","xo":"^0.35.0"},"engines":{"node":">=10"},"files":["index.d.ts","base.d.ts","source","ts41"],"funding":"https://github.com/sponsors/sindresorhus","homepage":"https://github.com/sindresorhus/type-fest#readme","keywords":["typescript","ts","types","utility","util","utilities","omit","merge","json"],"license":"(MIT OR CC0-1.0)","name":"type-fest","repository":{"type":"git","url":"git+https://github.com/sindresorhus/type-fest.git"},"scripts":{"//test":"xo && tsd && tsc","test":"xo && tsc"},"types":"./index.d.ts","typesVersions":{">=4.1":{"*":["ts41/*"]}},"version":"0.20.2","xo":{"rules":{"@typescript-eslint/ban-types":"off","@typescript-eslint/indent":"off","node/no-unsupported-features/es-builtins":"off"}}}');

/***/ }),

/***/ 55374:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"union-value@^1.0.0","_id":"union-value@1.0.1","_inBundle":false,"_integrity":"sha512-tJfXmxMeWYnczCVs7XAEvIV7ieppALdyepWMkHkwciRpZraG/xwT+s2JN8+pr1+8jCRf80FFzvr+MpQeeoF4Xg==","_location":"/union-value","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"union-value@^1.0.0","name":"union-value","escapedName":"union-value","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/cache-base"],"_resolved":"https://registry.npmjs.org/union-value/-/union-value-1.0.1.tgz","_shasum":"0b6fe7b835aecda61c6ea4d4f02c14221e109847","_spec":"union-value@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cache-base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/union-value/issues"},"bundleDependencies":false,"dependencies":{"arr-union":"^3.1.0","get-value":"^2.0.6","is-extendable":"^0.1.1","set-value":"^2.0.1"},"deprecated":false,"description":"Set an array of unique values as the property of an object. Supports setting deeply nested properties using using object-paths/dot notation.","devDependencies":{"gulp-format-md":"^0.1.11","mocha":"^3.2.0","should":"^11.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/union-value","keywords":["array","dot","get","has","nested","notation","object","path","prop","property","set","union","value"],"license":"MIT","main":"index.js","name":"union-value","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/union-value.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["assign-value","get-value","has-value","set-value","unset-value"]},"lint":{"reflinks":true}},"version":"1.0.1"}');

/***/ }),

/***/ 23922:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"universalify@^0.1.0","_id":"universalify@0.1.2","_inBundle":false,"_integrity":"sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==","_location":"/universalify","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"universalify@^0.1.0","name":"universalify","escapedName":"universalify","rawSpec":"^0.1.0","saveSpec":null,"fetchSpec":"^0.1.0"},"_requiredBy":["/fs-extra"],"_resolved":"https://registry.npmjs.org/universalify/-/universalify-0.1.2.tgz","_shasum":"b646f69be3942dabcecc9d6639c80dc105efaa66","_spec":"universalify@^0.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/fs-extra","author":{"name":"Ryan Zimmerman","email":"opensrc@ryanzim.com"},"bugs":{"url":"https://github.com/RyanZim/universalify/issues"},"bundleDependencies":false,"deprecated":false,"description":"Make a callback- or promise-based function support both promises and callbacks.","devDependencies":{"colortape":"^0.1.2","coveralls":"^3.0.1","nyc":"^10.2.0","standard":"^10.0.1","tape":"^4.6.3"},"engines":{"node":">= 4.0.0"},"files":["index.js"],"homepage":"https://github.com/RyanZim/universalify#readme","keywords":["callback","native","promise"],"license":"MIT","name":"universalify","repository":{"type":"git","url":"git+https://github.com/RyanZim/universalify.git"},"scripts":{"test":"standard && nyc tape test/*.js | colortape"},"version":"0.1.2"}');

/***/ }),

/***/ 46389:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"isobject@^2.0.0","_id":"isobject@2.1.0","_inBundle":false,"_integrity":"sha1-8GVWEJaj8dou9GJy+BXIQNh+DIk=","_location":"/unset-value/has-value/isobject","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"isobject@^2.0.0","name":"isobject","escapedName":"isobject","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/unset-value/has-value"],"_resolved":"https://registry.npmjs.org/isobject/-/isobject-2.1.0.tgz","_shasum":"f065561096a3f1da2ef46272f815c840d87e0c89","_spec":"isobject@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/unset-value/node_modules/has-value","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/isobject/issues"},"bundleDependencies":false,"dependencies":{"isarray":"1.0.0"},"deprecated":false,"description":"Returns true if the value is an object and not an array or null.","devDependencies":{"gulp-format-md":"^0.1.9","mocha":"^2.4.5"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/isobject","keywords":["check","is","is-object","isobject","kind","kind-of","kindof","native","object","type","typeof","value"],"license":"MIT","main":"index.js","name":"isobject","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/isobject.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["merge-deep","extend-shallow","is-plain-object","kind-of"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"reflinks":["verb"]},"version":"2.1.0"}');

/***/ }),

/***/ 88886:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"has-value@^0.3.1","_id":"has-value@0.3.1","_inBundle":false,"_integrity":"sha1-ex9YutpiyoJ+wKIHgCVlSEWZXh8=","_location":"/unset-value/has-value","_phantomChildren":{"isarray":"1.0.0"},"_requested":{"type":"range","registry":true,"raw":"has-value@^0.3.1","name":"has-value","escapedName":"has-value","rawSpec":"^0.3.1","saveSpec":null,"fetchSpec":"^0.3.1"},"_requiredBy":["/unset-value"],"_resolved":"https://registry.npmjs.org/has-value/-/has-value-0.3.1.tgz","_shasum":"7b1f58bada62ca827ec0a2078025654845995e1f","_spec":"has-value@^0.3.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/unset-value","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/has-value/issues"},"bundleDependencies":false,"dependencies":{"get-value":"^2.0.3","has-values":"^0.1.4","isobject":"^2.0.0"},"deprecated":false,"description":"Returns true if a value exists, false if empty. Works with deeply nested values using object paths.","devDependencies":{"gulp-format-md":"^0.1.7","mocha":"^2.4.5"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/has-value","keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value"],"license":"MIT","main":"index.js","name":"has-value","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-value.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["get-object","get-property","get-value","set-value"]},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"0.3.1"}');

/***/ }),

/***/ 71131:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"has-values@^0.1.4","_id":"has-values@0.1.4","_inBundle":false,"_integrity":"sha1-bWHeldkd/Km5oCCJrThL/49it3E=","_location":"/unset-value/has-values","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"has-values@^0.1.4","name":"has-values","escapedName":"has-values","rawSpec":"^0.1.4","saveSpec":null,"fetchSpec":"^0.1.4"},"_requiredBy":["/unset-value/has-value"],"_resolved":"https://registry.npmjs.org/has-values/-/has-values-0.1.4.tgz","_shasum":"6d61de95d91dfca9b9a02089ad384bff8f62b771","_spec":"has-values@^0.1.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/unset-value/node_modules/has-value","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/has-values/issues"},"bundleDependencies":false,"deprecated":false,"description":"Returns true if any values exist, false if empty. Works for booleans, functions, numbers, strings, nulls, objects and arrays. ","devDependencies":{"gulp-format-md":"^0.1.7","mocha":"^2.4.5"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/has-values","keywords":["array","boolean","empty","find","function","has","hasOwn","javascript","js","key","keys","node.js","null","number","object","properties","property","string","type","util","utilities","utility","value"],"license":"MIT","main":"index.js","name":"has-values","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/has-values.git"},"scripts":{"test":"mocha"},"verb":{"run":true,"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["has-value","isobject","is-plain-object"]},"reflinks":["verb"],"lint":{"reflinks":true}},"version":"0.1.4"}');

/***/ }),

/***/ 2023:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"unset-value@^1.0.0","_id":"unset-value@1.0.0","_inBundle":false,"_integrity":"sha1-g3aHP30jNRef+x5vw6jtDfyKtVk=","_location":"/unset-value","_phantomChildren":{"get-value":"2.0.6","isarray":"1.0.0"},"_requested":{"type":"range","registry":true,"raw":"unset-value@^1.0.0","name":"unset-value","escapedName":"unset-value","rawSpec":"^1.0.0","saveSpec":null,"fetchSpec":"^1.0.0"},"_requiredBy":["/cache-base"],"_resolved":"https://registry.npmjs.org/unset-value/-/unset-value-1.0.0.tgz","_shasum":"8376873f7d2335179ffb1e6fc3a8ed0dfc8ab559","_spec":"unset-value@^1.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cache-base","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/unset-value/issues"},"bundleDependencies":false,"contributors":[{"email":"wtgtybhertgeghgtwtg@gmail.com","url":"https://github.com/wtgtybhertgeghgtwtg"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"}],"dependencies":{"has-value":"^0.3.1","isobject":"^3.0.0"},"deprecated":false,"description":"Delete nested properties from an object using dot notation.","devDependencies":{"gulp-format-md":"^0.1.11","mocha":"*","should":"*"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/unset-value","keywords":["del","delete","key","object","omit","prop","property","remove","unset","value"],"license":"MIT","main":"index.js","name":"unset-value","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/unset-value.git"},"scripts":{"test":"mocha"},"verb":{"related":{"list":["get-value","get-values","omit-value","put-value","set-value","union-value","upsert-value"]},"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true}},"version":"1.0.0"}');

/***/ }),

/***/ 81569:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["uri-js@4.4.1","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"uri-js@4.4.1","_id":"uri-js@4.4.1","_inBundle":false,"_integrity":"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==","_location":"/uri-js","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"uri-js@4.4.1","name":"uri-js","escapedName":"uri-js","rawSpec":"4.4.1","saveSpec":null,"fetchSpec":"4.4.1"},"_requiredBy":["/ajv","/table/ajv"],"_resolved":"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz","_spec":"4.4.1","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Gary Court","email":"gary.court@gmail.com"},"bugs":{"url":"https://github.com/garycourt/uri-js/issues"},"dependencies":{"punycode":"^2.1.0"},"description":"An RFC 3986/3987 compliant, scheme extendable URI/IRI parsing/validating/resolving library for JavaScript.","devDependencies":{"babel-cli":"^6.26.0","babel-plugin-external-helpers":"^6.22.0","babel-preset-latest":"^6.24.1","mocha":"^8.2.1","mocha-qunit-ui":"^0.1.3","rollup":"^0.41.6","rollup-plugin-babel":"^2.7.1","rollup-plugin-node-resolve":"^2.0.0","sorcery":"^0.10.0","typescript":"^2.8.1","uglify-js":"^2.8.14"},"directories":{"test":"tests"},"files":["dist","package.json","yarn.lock","README.md","CHANGELOG","LICENSE"],"homepage":"https://github.com/garycourt/uri-js","keywords":["URI","IRI","IDN","URN","UUID","HTTP","HTTPS","WS","WSS","MAILTO","RFC3986","RFC3987","RFC5891","RFC2616","RFC2818","RFC2141","RFC4122","RFC4291","RFC5952","RFC6068","RFC6455","RFC6874"],"license":"BSD-2-Clause","main":"dist/es5/uri.all.js","name":"uri-js","repository":{"type":"git","url":"git+ssh://git@github.com/garycourt/uri-js.git"},"scripts":{"build":"npm run build:esnext && npm run build:es5 && npm run build:es5:min","build:es5":"rollup -c && cp dist/esnext/uri.d.ts dist/es5/uri.all.d.ts && npm run build:es5:fix-sourcemap","build:es5:fix-sourcemap":"sorcery -i dist/es5/uri.all.js","build:es5:min":"uglifyjs dist/es5/uri.all.js --support-ie8 --output dist/es5/uri.all.min.js --in-source-map dist/es5/uri.all.js.map --source-map uri.all.min.js.map --comments --compress --mangle --pure-funcs merge subexp && mv uri.all.min.js.map dist/es5/ && cp dist/es5/uri.all.d.ts dist/es5/uri.all.min.d.ts","build:esnext":"tsc","clean":"rm -rf dist","test":"mocha -u mocha-qunit-ui dist/es5/uri.all.js tests/tests.js"},"types":"dist/es5/uri.all.d.ts","version":"4.4.1"}');

/***/ }),

/***/ 85086:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"urix@^0.1.0","_id":"urix@0.1.0","_inBundle":false,"_integrity":"sha1-2pN/emLiH+wf0Y1Js1wpNQZ6bHI=","_location":"/urix","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"urix@^0.1.0","name":"urix","escapedName":"urix","rawSpec":"^0.1.0","saveSpec":null,"fetchSpec":"^0.1.0"},"_requiredBy":["/source-map-resolve"],"_resolved":"https://registry.npmjs.org/urix/-/urix-0.1.0.tgz","_shasum":"da937f7a62e21fec1fd18d49b35c2935067a6c72","_spec":"urix@^0.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/source-map-resolve","author":{"name":"Simon Lydell"},"bugs":{"url":"https://github.com/lydell/urix/issues"},"bundleDependencies":false,"deprecated":"Please see https://github.com/lydell/urix#deprecated","description":"Makes Windows-style paths more unix and URI friendly.","devDependencies":{"jshint":"^2.4.4","mocha":"^1.17.1"},"homepage":"https://github.com/lydell/urix#readme","keywords":["path","url","uri","unix","windows","backslash","slash"],"license":"MIT","main":"index.js","name":"urix","repository":{"type":"git","url":"git+https://github.com/lydell/urix.git"},"scripts":{"test":"jshint index.js test/ && mocha"},"version":"0.1.0"}');

/***/ }),

/***/ 72311:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"use@^3.1.0","_id":"use@3.1.1","_inBundle":false,"_integrity":"sha512-cwESVXlO3url9YWlFW/TA9cshCEhtu7IKJ/p5soJ/gGpj7vbvFrAY/eIioQ6Dw23KjZhYgiIo8HOs1nQ2vr/oQ==","_location":"/use","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"use@^3.1.0","name":"use","escapedName":"use","rawSpec":"^3.1.0","saveSpec":null,"fetchSpec":"^3.1.0"},"_requiredBy":["/snapdragon"],"_resolved":"https://registry.npmjs.org/use/-/use-3.1.1.tgz","_shasum":"d50c8cac79a19fbc20f2911f56eb973f4e10070f","_spec":"use@^3.1.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/snapdragon","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/use/issues"},"bundleDependencies":false,"contributors":[{"name":"Brian Woodward","url":"https://twitter.com/doowb"},{"name":"Jon Schlinkert","url":"http://twitter.com/jonschlinkert"},{"name":"Olsten Larck","url":"https://i.am.charlike.online"},{"url":"https://github.com/wtgtybhertgeghgtwtg"}],"deprecated":false,"description":"Easily add plugin support to your node.js application.","devDependencies":{"base-plugins":"^1.0.0","define-property":"^2.0.0","extend-shallow":"^3.0.1","gulp":"^3.9.1","gulp-eslint":"^4.0.0","gulp-format-md":"^1.0.0","gulp-istanbul":"^1.1.2","gulp-mocha":"^3.0.1","mocha":"^4.0.1"},"engines":{"node":">=0.10.0"},"files":["index.js"],"homepage":"https://github.com/jonschlinkert/use","keywords":["use"],"license":"MIT","main":"index.js","name":"use","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/use.git"},"scripts":{"test":"mocha"},"verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"related":{"list":["base","base-plugins","ware"]},"reflinks":["verb","ware"],"lint":{"reflinks":true}},"version":"3.1.1"}');

/***/ }),

/***/ 3733:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["v8-compile-cache@2.3.0","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"v8-compile-cache@2.3.0","_id":"v8-compile-cache@2.3.0","_inBundle":false,"_integrity":"sha512-l8lCEmLcLYZh4nbunNZvQCJc5pv7+RCwa8q/LdUx8u7lsWvPDKmpodJAJNwkAhJC//dFY48KuIEmjtd4RViDrA==","_location":"/v8-compile-cache","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"v8-compile-cache@2.3.0","name":"v8-compile-cache","escapedName":"v8-compile-cache","rawSpec":"2.3.0","saveSpec":null,"fetchSpec":"2.3.0"},"_requiredBy":["/eslint"],"_resolved":"https://registry.npmjs.org/v8-compile-cache/-/v8-compile-cache-2.3.0.tgz","_spec":"2.3.0","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Andres Suarez","email":"zertosh@gmail.com"},"bugs":{"url":"https://github.com/zertosh/v8-compile-cache/issues"},"dependencies":{},"description":"Require hook for automatic V8 compile cache persistence","devDependencies":{"babel-core":"6.26.3","eslint":"^7.12.1","flow-parser":"0.136.0","rimraf":"^2.5.4","rxjs":"6.6.3","semver":"^5.3.0","tap":"^9.0.0","temp":"^0.8.3","yarn":"1.22.10"},"files":["v8-compile-cache.js"],"homepage":"https://github.com/zertosh/v8-compile-cache#readme","license":"MIT","main":"v8-compile-cache.js","name":"v8-compile-cache","repository":{"type":"git","url":"git+https://github.com/zertosh/v8-compile-cache.git"},"scripts":{"bench":"bench/run.sh","eslint":"eslint --max-warnings=0 .","posttest":"npm run eslint","tap":"tap test/*-test.js","test":"npm run tap"},"version":"2.3.0"}');

/***/ }),

/***/ 42500:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"validate-npm-package-license@^3.0.1","_id":"validate-npm-package-license@3.0.4","_inBundle":false,"_integrity":"sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==","_location":"/validate-npm-package-license","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"validate-npm-package-license@^3.0.1","name":"validate-npm-package-license","escapedName":"validate-npm-package-license","rawSpec":"^3.0.1","saveSpec":null,"fetchSpec":"^3.0.1"},"_requiredBy":["/normalize-package-data"],"_resolved":"https://registry.npmjs.org/validate-npm-package-license/-/validate-npm-package-license-3.0.4.tgz","_shasum":"fc91f6b9c7ba15c857f4cb2c5defeec39d4f410a","_spec":"validate-npm-package-license@^3.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/normalize-package-data","author":{"name":"Kyle E. Mitchell","email":"kyle@kemitchell.com","url":"https://kemitchell.com"},"bugs":{"url":"https://github.com/kemitchell/validate-npm-package-license.js/issues"},"bundleDependencies":false,"contributors":[{"name":"Mark Stacey","email":"markjstacey@gmail.com"}],"dependencies":{"spdx-correct":"^3.0.0","spdx-expression-parse":"^3.0.0"},"deprecated":false,"description":"Give me a string and I\'ll tell you if it\'s a valid npm package license string","devDependencies":{"defence-cli":"^2.0.1","replace-require-self":"^1.0.0"},"homepage":"https://github.com/kemitchell/validate-npm-package-license.js#readme","keywords":["license","npm","package","validation"],"license":"Apache-2.0","name":"validate-npm-package-license","repository":{"type":"git","url":"git+https://github.com/kemitchell/validate-npm-package-license.js.git"},"scripts":{"test":"defence README.md | replace-require-self | node"},"version":"3.0.4"}');

/***/ }),

/***/ 18584:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"which-module@^2.0.0","_id":"which-module@2.0.0","_inBundle":false,"_integrity":"sha1-2e8H3Od7mQK4o6j6SzHD4/fm6Ho=","_location":"/which-module","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"which-module@^2.0.0","name":"which-module","escapedName":"which-module","rawSpec":"^2.0.0","saveSpec":null,"fetchSpec":"^2.0.0"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/which-module/-/which-module-2.0.0.tgz","_shasum":"d9ef07dce77b9902b8a3a8fa4b31c3e3f7e6e87a","_spec":"which-module@^2.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"nexdrew"},"bugs":{"url":"https://github.com/nexdrew/which-module/issues"},"bundleDependencies":false,"deprecated":false,"description":"Find the module object for something that was require()d","devDependencies":{"ava":"^0.19.1","coveralls":"^2.13.1","nyc":"^10.3.0","standard":"^10.0.2","standard-version":"^4.0.0"},"files":["index.js"],"homepage":"https://github.com/nexdrew/which-module#readme","keywords":["which","module","exports","filename","require","reverse","lookup"],"license":"ISC","main":"index.js","name":"which-module","repository":{"type":"git","url":"git+https://github.com/nexdrew/which-module.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","pretest":"standard","release":"standard-version","test":"nyc ava"},"version":"2.0.0"}');

/***/ }),

/***/ 75048:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["which@2.0.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"which@2.0.2","_id":"which@2.0.2","_inBundle":false,"_integrity":"sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==","_location":"/which","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"which@2.0.2","name":"which","escapedName":"which","rawSpec":"2.0.2","saveSpec":null,"fetchSpec":"2.0.2"},"_requiredBy":["/cross-spawn"],"_resolved":"https://registry.npmjs.org/which/-/which-2.0.2.tgz","_spec":"2.0.2","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me"},"bin":{"node-which":"bin/node-which"},"bugs":{"url":"https://github.com/isaacs/node-which/issues"},"dependencies":{"isexe":"^2.0.0"},"description":"Like which(1) unix command. Find the first instance of an executable in the PATH.","devDependencies":{"mkdirp":"^0.5.0","rimraf":"^2.6.2","tap":"^14.6.9"},"engines":{"node":">= 8"},"files":["which.js","bin/node-which"],"homepage":"https://github.com/isaacs/node-which#readme","license":"ISC","main":"which.js","name":"which","repository":{"type":"git","url":"git://github.com/isaacs/node-which.git"},"scripts":{"changelog":"git add CHANGELOG.md","postchangelog":"git commit -m \'update changelog - \'${npm_package_version}","postpublish":"git push origin --follow-tags","postversion":"npm publish","prechangelog":"bash gen-changelog.sh","prepublish":"npm run changelog","preversion":"npm test","test":"tap"},"tap":{"check-coverage":true},"version":"2.0.2"}');

/***/ }),

/***/ 56255:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["word-wrap@1.2.3","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"word-wrap@1.2.3","_id":"word-wrap@1.2.3","_inBundle":false,"_integrity":"sha512-Hz/mrNwitNRh/HUAtM/VT/5VH+ygD6DV7mYKZAtHOrbs8U7lvPS6xf7EJKMF0uW1KJCl0H701g3ZGus+muE5vQ==","_location":"/word-wrap","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"word-wrap@1.2.3","name":"word-wrap","escapedName":"word-wrap","rawSpec":"1.2.3","saveSpec":null,"fetchSpec":"1.2.3"},"_requiredBy":["/optionator"],"_resolved":"https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.3.tgz","_spec":"1.2.3","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Jon Schlinkert","url":"https://github.com/jonschlinkert"},"bugs":{"url":"https://github.com/jonschlinkert/word-wrap/issues"},"contributors":[{"name":"Danilo Sampaio","email":"danilo.sampaio@gmail.com","url":"localhost:8080"},{"name":"Fede Ramirez","email":"i@2fd.me","url":"https://2fd.github.io"},{"name":"Joe Hildebrand","email":"joe-github@cursive.net","url":"https://twitter.com/hildjj"},{"name":"Jon Schlinkert","email":"jon.schlinkert@sellside.com","url":"http://twitter.com/jonschlinkert"},{"name":"Todd Kennedy","url":"https://tck.io"},{"name":"Waldemar Reusch","url":"https://github.com/lordvlad"},{"name":"Wolfgang Faust","url":"http://www.linestarve.com"},{"name":"Zach Hale","email":"zachhale@gmail.com","url":"http://zachhale.com"}],"description":"Wrap words to a specified length.","devDependencies":{"gulp-format-md":"^0.1.11","mocha":"^3.2.0"},"engines":{"node":">=0.10.0"},"files":["index.js","index.d.ts"],"homepage":"https://github.com/jonschlinkert/word-wrap","keywords":["break","carriage","line","new-line","newline","return","soft","text","word","word-wrap","words","wrap"],"license":"MIT","main":"index.js","name":"word-wrap","repository":{"type":"git","url":"git+https://github.com/jonschlinkert/word-wrap.git"},"scripts":{"test":"mocha"},"typings":"index.d.ts","verb":{"toc":false,"layout":"default","tasks":["readme"],"plugins":["gulp-format-md"],"lint":{"reflinks":true},"related":{"list":["common-words","shuffle-words","unique-words","wordcount"]},"reflinks":["verb","verb-generate-readme"]},"version":"1.2.3"}');

/***/ }),

/***/ 62909:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"ansi-styles@^4.0.0","_id":"ansi-styles@4.3.0","_inBundle":false,"_integrity":"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==","_location":"/wrap-ansi/ansi-styles","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"ansi-styles@^4.0.0","name":"ansi-styles","escapedName":"ansi-styles","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/wrap-ansi"],"_resolved":"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz","_shasum":"edd803628ae71c04c85ae7a0906edad34b648937","_spec":"ansi-styles@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/wrap-ansi","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/ansi-styles/issues"},"bundleDependencies":false,"dependencies":{"color-convert":"^2.0.1"},"deprecated":false,"description":"ANSI escape codes for styling strings in the terminal","devDependencies":{"@types/color-convert":"^1.9.0","ava":"^2.3.0","svg-term-cli":"^2.1.1","tsd":"^0.11.0","xo":"^0.25.3"},"engines":{"node":">=8"},"files":["index.js","index.d.ts"],"funding":"https://github.com/chalk/ansi-styles?sponsor=1","homepage":"https://github.com/chalk/ansi-styles#readme","keywords":["ansi","styles","color","colour","colors","terminal","console","cli","string","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"ansi-styles","repository":{"type":"git","url":"git+https://github.com/chalk/ansi-styles.git"},"scripts":{"screenshot":"svg-term --command=\'node screenshot\' --out=screenshot.svg --padding=3 --width=55 --height=3 --at=1000 --no-cursor","test":"xo && ava && tsd"},"version":"4.3.0"}');

/***/ }),

/***/ 64754:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"color-convert@^2.0.1","_id":"color-convert@2.0.1","_inBundle":false,"_integrity":"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==","_location":"/wrap-ansi/color-convert","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"color-convert@^2.0.1","name":"color-convert","escapedName":"color-convert","rawSpec":"^2.0.1","saveSpec":null,"fetchSpec":"^2.0.1"},"_requiredBy":["/wrap-ansi/ansi-styles"],"_resolved":"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz","_shasum":"72d3a68d598c9bdb3af2ad1e84f21d896abd4de3","_spec":"color-convert@^2.0.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/wrap-ansi/node_modules/ansi-styles","author":{"name":"Heather Arthur","email":"fayearthur@gmail.com"},"bugs":{"url":"https://github.com/Qix-/color-convert/issues"},"bundleDependencies":false,"dependencies":{"color-name":"~1.1.4"},"deprecated":false,"description":"Plain color conversion functions","devDependencies":{"chalk":"^2.4.2","xo":"^0.24.0"},"engines":{"node":">=7.0.0"},"files":["index.js","conversions.js","route.js"],"homepage":"https://github.com/Qix-/color-convert#readme","keywords":["color","colour","convert","converter","conversion","rgb","hsl","hsv","hwb","cmyk","ansi","ansi16"],"license":"MIT","name":"color-convert","repository":{"type":"git","url":"git+https://github.com/Qix-/color-convert.git"},"scripts":{"pretest":"xo","test":"node test/basic.js"},"version":"2.0.1","xo":{"rules":{"default-case":0,"no-inline-comments":0,"operator-linebreak":0}}}');

/***/ }),

/***/ 56353:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"color-name@~1.1.4","_id":"color-name@1.1.4","_inBundle":false,"_integrity":"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==","_location":"/wrap-ansi/color-name","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"color-name@~1.1.4","name":"color-name","escapedName":"color-name","rawSpec":"~1.1.4","saveSpec":null,"fetchSpec":"~1.1.4"},"_requiredBy":["/wrap-ansi/color-convert"],"_resolved":"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz","_shasum":"c2a09a87acbde69543de6f63fa3995c826c536a2","_spec":"color-name@~1.1.4","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/wrap-ansi/node_modules/color-convert","author":{"name":"DY","email":"dfcreative@gmail.com"},"bugs":{"url":"https://github.com/colorjs/color-name/issues"},"bundleDependencies":false,"deprecated":false,"description":"A list of color names and its values","files":["index.js"],"homepage":"https://github.com/colorjs/color-name","keywords":["color-name","color","color-keyword","keyword"],"license":"MIT","main":"index.js","name":"color-name","repository":{"type":"git","url":"git+ssh://git@github.com/colorjs/color-name.git"},"scripts":{"test":"node test.js"},"version":"1.1.4"}');

/***/ }),

/***/ 54285:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"wrap-ansi@^6.2.0","_id":"wrap-ansi@6.2.0","_inBundle":false,"_integrity":"sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==","_location":"/wrap-ansi","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"wrap-ansi@^6.2.0","name":"wrap-ansi","escapedName":"wrap-ansi","rawSpec":"^6.2.0","saveSpec":null,"fetchSpec":"^6.2.0"},"_requiredBy":["/cliui"],"_resolved":"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-6.2.0.tgz","_shasum":"e9393ba07102e6c91a3b221478f0257cd2856e53","_spec":"wrap-ansi@^6.2.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/cliui","author":{"name":"Sindre Sorhus","email":"sindresorhus@gmail.com","url":"sindresorhus.com"},"bugs":{"url":"https://github.com/chalk/wrap-ansi/issues"},"bundleDependencies":false,"dependencies":{"ansi-styles":"^4.0.0","string-width":"^4.1.0","strip-ansi":"^6.0.0"},"deprecated":false,"description":"Wordwrap a string with ANSI escape codes","devDependencies":{"ava":"^2.1.0","chalk":"^2.4.2","coveralls":"^3.0.3","has-ansi":"^3.0.0","nyc":"^14.1.1","xo":"^0.24.0"},"engines":{"node":">=8"},"files":["index.js"],"homepage":"https://github.com/chalk/wrap-ansi#readme","keywords":["wrap","break","wordwrap","wordbreak","linewrap","ansi","styles","color","colour","colors","terminal","console","cli","string","tty","escape","formatting","rgb","256","shell","xterm","log","logging","command-line","text"],"license":"MIT","name":"wrap-ansi","repository":{"type":"git","url":"git+https://github.com/chalk/wrap-ansi.git"},"scripts":{"test":"xo && nyc ava"},"version":"6.2.0"}');

/***/ }),

/***/ 17603:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_args":[["wrappy@1.0.2","/Users/brian.kimball/Github/bump-and-release"]],"_development":true,"_from":"wrappy@1.0.2","_id":"wrappy@1.0.2","_inBundle":false,"_integrity":"sha1-tSQ9jz7BqjXxNkYFvA0QNuMKtp8=","_location":"/wrappy","_phantomChildren":{},"_requested":{"type":"version","registry":true,"raw":"wrappy@1.0.2","name":"wrappy","escapedName":"wrappy","rawSpec":"1.0.2","saveSpec":null,"fetchSpec":"1.0.2"},"_requiredBy":["/inflight","/once"],"_resolved":"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz","_spec":"1.0.2","_where":"/Users/brian.kimball/Github/bump-and-release","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/npm/wrappy/issues"},"dependencies":{},"description":"Callback wrapping utility","devDependencies":{"tap":"^2.3.1"},"directories":{"test":"test"},"files":["wrappy.js"],"homepage":"https://github.com/npm/wrappy","license":"ISC","main":"wrappy.js","name":"wrappy","repository":{"type":"git","url":"git+https://github.com/npm/wrappy.git"},"scripts":{"test":"tap --coverage test/*.js"},"version":"1.0.2"}');

/***/ }),

/***/ 90057:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"y18n@^4.0.0","_id":"y18n@4.0.3","_inBundle":false,"_integrity":"sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==","_location":"/y18n","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"y18n@^4.0.0","name":"y18n","escapedName":"y18n","rawSpec":"^4.0.0","saveSpec":null,"fetchSpec":"^4.0.0"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/y18n/-/y18n-4.0.3.tgz","_shasum":"b5f259c82cd6e336921efd7bfd8bf560de9eeedf","_spec":"y18n@^4.0.0","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Ben Coe","email":"ben@npmjs.com"},"bugs":{"url":"https://github.com/yargs/y18n/issues"},"bundleDependencies":false,"deprecated":false,"description":"the bare-bones internationalization library used by yargs","devDependencies":{"chai":"^4.0.1","coveralls":"^3.0.0","mocha":"^4.0.1","nyc":"^11.0.1","rimraf":"^2.5.0","standard":"^10.0.0-beta.0","standard-version":"^4.2.0"},"files":["index.js"],"homepage":"https://github.com/yargs/y18n","keywords":["i18n","internationalization","yargs"],"license":"ISC","main":"index.js","name":"y18n","repository":{"type":"git","url":"git+ssh://git@github.com/yargs/y18n.git"},"scripts":{"coverage":"nyc report --reporter=text-lcov | coveralls","pretest":"standard","release":"standard-version","test":"nyc mocha"},"version":"4.0.3"}');

/***/ }),

/***/ 49712:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"yallist@^2.1.2","_id":"yallist@2.1.2","_inBundle":false,"_integrity":"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=","_location":"/yallist","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"yallist@^2.1.2","name":"yallist","escapedName":"yallist","rawSpec":"^2.1.2","saveSpec":null,"fetchSpec":"^2.1.2"},"_requiredBy":["/lru-cache"],"_resolved":"https://registry.npmjs.org/yallist/-/yallist-2.1.2.tgz","_shasum":"1c11f9218f076089a47dd512f93c6699a6a81d52","_spec":"yallist@^2.1.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/lru-cache","author":{"name":"Isaac Z. Schlueter","email":"i@izs.me","url":"http://blog.izs.me/"},"bugs":{"url":"https://github.com/isaacs/yallist/issues"},"bundleDependencies":false,"dependencies":{},"deprecated":false,"description":"Yet Another Linked List","devDependencies":{"tap":"^10.3.0"},"directories":{"test":"test"},"files":["yallist.js","iterator.js"],"homepage":"https://github.com/isaacs/yallist#readme","license":"ISC","main":"yallist.js","name":"yallist","repository":{"type":"git","url":"git+https://github.com/isaacs/yallist.git"},"scripts":{"postpublish":"git push origin --all; git push origin --tags","postversion":"npm publish","preversion":"npm test","test":"tap test/*.js --100"},"version":"2.1.2"}');

/***/ }),

/***/ 50220:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"yargs-parser@^18.1.2","_id":"yargs-parser@18.1.3","_inBundle":false,"_integrity":"sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==","_location":"/yargs-parser","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"yargs-parser@^18.1.2","name":"yargs-parser","escapedName":"yargs-parser","rawSpec":"^18.1.2","saveSpec":null,"fetchSpec":"^18.1.2"},"_requiredBy":["/yargs"],"_resolved":"https://registry.npmjs.org/yargs-parser/-/yargs-parser-18.1.3.tgz","_shasum":"be68c4975c6b2abf469236b0c870362fab09a7b0","_spec":"yargs-parser@^18.1.2","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/yargs","author":{"name":"Ben Coe","email":"ben@npmjs.com"},"bugs":{"url":"https://github.com/yargs/yargs-parser/issues"},"bundleDependencies":false,"dependencies":{"camelcase":"^5.0.0","decamelize":"^1.2.0"},"deprecated":false,"description":"the mighty option parser used by yargs","devDependencies":{"c8":"^7.0.1","chai":"^4.2.0","mocha":"^7.0.0","standard":"^14.3.1"},"engines":{"node":">=6"},"files":["lib","index.js"],"homepage":"https://github.com/yargs/yargs-parser#readme","keywords":["argument","parser","yargs","command","cli","parsing","option","args","argument"],"license":"ISC","main":"index.js","name":"yargs-parser","repository":{"type":"git","url":"git+https://github.com/yargs/yargs-parser.git"},"scripts":{"coverage":"c8 report --check-coverage check-coverage --lines=100 --branches=97 --statements=100","fix":"standard --fix","posttest":"standard","test":"c8 --reporter=text --reporter=html  mocha test/*.js"},"version":"18.1.3"}');

/***/ }),

/***/ 30264:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"_from":"yargs@^15.3.1","_id":"yargs@15.4.1","_inBundle":false,"_integrity":"sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==","_location":"/yargs","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"yargs@^15.3.1","name":"yargs","escapedName":"yargs","rawSpec":"^15.3.1","saveSpec":null,"fetchSpec":"^15.3.1"},"_requiredBy":["/replace"],"_resolved":"https://registry.npmjs.org/yargs/-/yargs-15.4.1.tgz","_shasum":"0d87a16de01aee9d8bec2bfbf74f67851730f4f8","_spec":"yargs@^15.3.1","_where":"/Users/brian.kimball/Github/bump-and-release/node_modules/replace","bugs":{"url":"https://github.com/yargs/yargs/issues"},"bundleDependencies":false,"contributors":[{"name":"Yargs Contributors","url":"https://github.com/yargs/yargs/graphs/contributors"}],"dependencies":{"cliui":"^6.0.0","decamelize":"^1.2.0","find-up":"^4.1.0","get-caller-file":"^2.0.1","require-directory":"^2.1.1","require-main-filename":"^2.0.0","set-blocking":"^2.0.0","string-width":"^4.2.0","which-module":"^2.0.0","y18n":"^4.0.0","yargs-parser":"^18.1.2"},"deprecated":false,"description":"yargs the modern, pirate-themed, successor to optimist.","devDependencies":{"@types/chai":"^4.2.11","@types/decamelize":"^1.2.0","@types/mocha":"^7.0.2","@types/node":"^10.0.3","@typescript-eslint/eslint-plugin":"^3.0.0","@typescript-eslint/parser":"^3.0.0","c8":"^7.0.0","chai":"^4.2.0","chalk":"^4.0.0","coveralls":"^3.0.9","cpr":"^3.0.1","cross-spawn":"^7.0.0","es6-promise":"^4.2.5","eslint":"^6.8.0","eslint-plugin-import":"^2.20.1","eslint-plugin-node":"^11.0.0","gts":"^2.0.0-alpha.4","hashish":"0.0.4","mocha":"^7.0.0","rimraf":"^3.0.2","standardx":"^5.0.0","typescript":"^3.7.0","which":"^2.0.0","yargs-test-extends":"^1.0.1"},"engines":{"node":">=8"},"files":["index.js","yargs.js","build","locales","LICENSE"],"homepage":"https://yargs.js.org/","keywords":["argument","args","option","parser","parsing","cli","command"],"license":"MIT","main":"./index.js","name":"yargs","repository":{"type":"git","url":"git+https://github.com/yargs/yargs.git"},"scripts":{"check":"standardx && standardx **/*.ts","compile":"rimraf build && tsc","coverage":"c8 report --check-coverage","fix":"standardx --fix  && standardx --fix **/*.ts","posttest":"npm run check","prepare":"npm run compile","pretest":"npm run compile -- -p tsconfig.test.json","test":"c8 mocha --require ./test/before.js --timeout=12000 --check-leaks"},"standardx":{"ignore":["build","**/example/**"]},"version":"15.4.1"}');

/***/ }),

/***/ 60306:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"vars":"bump-and-release-github-action","version":"0.0.0","description":"Export branch names as environment variables","main":"index.js","scripts":{"lint":"eslint index.js","package":"ncc build index.js -o dist","test":"eslint index.js && jest","prepublishOnly":"cpy \'package*.json\' dist"},"repository":{"type":"git","url":"git+https://github.com/bvkimball/bump-and-release.git"},"keywords":["GitHub","Actions","JavaScript"],"author":"Brian Kimball<bvkimball@gmail.com>","license":"MIT","bugs":{"url":"https://github.com/bvkimball/bump-and-release/issues"},"homepage":"https://github.com/bvkimball/bump-and-release#readme","dependencies":{"@actions/core":"^1.6.0","child-process-promise":"^2.2.1","fast-glob":"^3.2.7","gh-pages":"^3.2.3","got":"^11.8.2","replace":"^1.2.1","semver":"^7.3.5","simple-git":"^2.47.0"},"devDependencies":{"@vercel/ncc":"^0.31.1","eslint":"^7.32.0","cpy-cli":"3.1.1"}}');

/***/ }),

/***/ 42357:
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ 64293:
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ 63129:
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ 27619:
/***/ ((module) => {

"use strict";
module.exports = require("constants");

/***/ }),

/***/ 40881:
/***/ ((module) => {

"use strict";
module.exports = require("dns");

/***/ }),

/***/ 28614:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 35747:
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ 98605:
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ 97565:
/***/ ((module) => {

"use strict";
module.exports = require("http2");

/***/ }),

/***/ 57211:
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ 11631:
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ 12087:
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ 85622:
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ 92413:
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ 4016:
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ 33867:
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ 78835:
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ 31669:
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ 78761:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__nccwpck_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
function __ncc_wildcard$0 (arg) {
  if (arg === "dist") return __nccwpck_require__(80285);
  else if (arg === "node_modules/@actions/core") return __nccwpck_require__(26981);
  else if (arg === "node_modules/@actions/http-client") return __nccwpck_require__(21768);
  else if (arg === "node_modules/@babel/code-frame") return __nccwpck_require__(23474);
  else if (arg === "node_modules/@babel/helper-validator-identifier") return __nccwpck_require__(93534);
  else if (arg === "node_modules/@babel/highlight/node_modules/chalk") return __nccwpck_require__(3850);
  else if (arg === "node_modules/@babel/highlight") return __nccwpck_require__(98918);
  else if (arg === "node_modules/@eslint/eslintrc") return __nccwpck_require__(42012);
  else if (arg === "node_modules/@humanwhocodes/config-array") return __nccwpck_require__(12170);
  else if (arg === "node_modules/@humanwhocodes/object-schema") return __nccwpck_require__(53233);
  else if (arg === "node_modules/@kwsites/file-exists") return __nccwpck_require__(21028);
  else if (arg === "node_modules/@kwsites/promise-deferred") return __nccwpck_require__(82336);
  else if (arg === "node_modules/@mrmlnc/readdir-enhanced") return __nccwpck_require__(30004);
  else if (arg === "node_modules/@nodelib/fs.scandir") return __nccwpck_require__(72697);
  else if (arg === "node_modules/@nodelib/fs.stat") return __nccwpck_require__(16888);
  else if (arg === "node_modules/@nodelib/fs.walk") return __nccwpck_require__(8900);
  else if (arg === "node_modules/@sindresorhus/is") return __nccwpck_require__(55683);
  else if (arg === "node_modules/@szmarczak/http-timer") return __nccwpck_require__(3579);
  else if (arg === "node_modules/@types/cacheable-request") return __nccwpck_require__(82770);
  else if (arg === "node_modules/@types/glob") return __nccwpck_require__(14739);
  else if (arg === "node_modules/@types/http-cache-semantics") return __nccwpck_require__(60527);
  else if (arg === "node_modules/@types/keyv") return __nccwpck_require__(85975);
  else if (arg === "node_modules/@types/minimatch") return __nccwpck_require__(5518);
  else if (arg === "node_modules/@types/minimist") return __nccwpck_require__(63802);
  else if (arg === "node_modules/@types/node") return __nccwpck_require__(73685);
  else if (arg === "node_modules/@types/normalize-package-data") return __nccwpck_require__(24551);
  else if (arg === "node_modules/@types/responselike") return __nccwpck_require__(15990);
  else if (arg === "node_modules/@vercel/ncc") return __nccwpck_require__(30741);
  else if (arg === "node_modules/acorn-jsx") return __nccwpck_require__(61452);
  else if (arg === "node_modules/acorn") return __nccwpck_require__(62201);
  else if (arg === "node_modules/aggregate-error") return __nccwpck_require__(99765);
  else if (arg === "node_modules/ajv") return __nccwpck_require__(15802);
  else if (arg === "node_modules/ansi-colors") return __nccwpck_require__(7266);
  else if (arg === "node_modules/ansi-regex") return __nccwpck_require__(75090);
  else if (arg === "node_modules/ansi-styles") return __nccwpck_require__(43604);
  else if (arg === "node_modules/argparse") return __nccwpck_require__(61427);
  else if (arg === "node_modules/arr-diff") return __nccwpck_require__(6739);
  else if (arg === "node_modules/arr-flatten") return __nccwpck_require__(96585);
  else if (arg === "node_modules/arr-union") return __nccwpck_require__(3754);
  else if (arg === "node_modules/array-union") return __nccwpck_require__(67980);
  else if (arg === "node_modules/array-uniq") return __nccwpck_require__(40090);
  else if (arg === "node_modules/array-unique") return __nccwpck_require__(66048);
  else if (arg === "node_modules/arrify") return __nccwpck_require__(20552);
  else if (arg === "node_modules/assign-symbols") return __nccwpck_require__(93176);
  else if (arg === "node_modules/astral-regex") return __nccwpck_require__(67573);
  else if (arg === "node_modules/async") return __nccwpck_require__(71744);
  else if (arg === "node_modules/atob") return __nccwpck_require__(84346);
  else if (arg === "node_modules/balanced-match") return __nccwpck_require__(55519);
  else if (arg === "node_modules/base/node_modules/define-property") return __nccwpck_require__(7566);
  else if (arg === "node_modules/base/node_modules/is-accessor-descriptor") return __nccwpck_require__(32039);
  else if (arg === "node_modules/base/node_modules/is-data-descriptor") return __nccwpck_require__(91480);
  else if (arg === "node_modules/base/node_modules/is-descriptor") return __nccwpck_require__(18857);
  else if (arg === "node_modules/base") return __nccwpck_require__(72481);
  else if (arg === "node_modules/brace-expansion") return __nccwpck_require__(72289);
  else if (arg === "node_modules/braces") return __nccwpck_require__(48385);
  else if (arg === "node_modules/cache-base") return __nccwpck_require__(12919);
  else if (arg === "node_modules/cacheable-lookup") return __nccwpck_require__(95138);
  else if (arg === "node_modules/cacheable-request") return __nccwpck_require__(83604);
  else if (arg === "node_modules/call-me-maybe") return __nccwpck_require__(15621);
  else if (arg === "node_modules/callsites") return __nccwpck_require__(28871);
  else if (arg === "node_modules/camelcase-keys/node_modules/quick-lru") return __nccwpck_require__(66069);
  else if (arg === "node_modules/camelcase-keys") return __nccwpck_require__(3718);
  else if (arg === "node_modules/camelcase") return __nccwpck_require__(63466);
  else if (arg === "node_modules/chalk/node_modules/ansi-styles") return __nccwpck_require__(28458);
  else if (arg === "node_modules/chalk/node_modules/color-convert") return __nccwpck_require__(62532);
  else if (arg === "node_modules/chalk/node_modules/color-name") return __nccwpck_require__(61170);
  else if (arg === "node_modules/chalk/node_modules/has-flag") return __nccwpck_require__(97283);
  else if (arg === "node_modules/chalk/node_modules/supports-color") return __nccwpck_require__(22542);
  else if (arg === "node_modules/chalk") return __nccwpck_require__(9680);
  else if (arg === "node_modules/child-process-promise/node_modules/cross-spawn") return __nccwpck_require__(85158);
  else if (arg === "node_modules/child-process-promise/node_modules/which") return __nccwpck_require__(3319);
  else if (arg === "node_modules/child-process-promise") return __nccwpck_require__(24907);
  else if (arg === "node_modules/class-utils/node_modules/define-property") return __nccwpck_require__(28373);
  else if (arg === "node_modules/class-utils") return __nccwpck_require__(14689);
  else if (arg === "node_modules/clean-stack") return __nccwpck_require__(41984);
  else if (arg === "node_modules/cliui") return __nccwpck_require__(51363);
  else if (arg === "node_modules/clone-response") return __nccwpck_require__(98719);
  else if (arg === "node_modules/collection-visit") return __nccwpck_require__(65732);
  else if (arg === "node_modules/color-convert") return __nccwpck_require__(65116);
  else if (arg === "node_modules/color-name") return __nccwpck_require__(19780);
  else if (arg === "node_modules/commander") return __nccwpck_require__(48786);
  else if (arg === "node_modules/commondir") return __nccwpck_require__(80980);
  else if (arg === "node_modules/component-emitter") return __nccwpck_require__(74688);
  else if (arg === "node_modules/concat-map") return __nccwpck_require__(67656);
  else if (arg === "node_modules/copy-descriptor") return __nccwpck_require__(49012);
  else if (arg === "node_modules/cp-file") return __nccwpck_require__(28964);
  else if (arg === "node_modules/cpy-cli") return __nccwpck_require__(23106);
  else if (arg === "node_modules/cpy/node_modules/@nodelib/fs.stat") return __nccwpck_require__(34195);
  else if (arg === "node_modules/cpy/node_modules/braces/node_modules/extend-shallow") return __nccwpck_require__(42996);
  else if (arg === "node_modules/cpy/node_modules/braces") return __nccwpck_require__(31633);
  else if (arg === "node_modules/cpy/node_modules/fast-glob") return __nccwpck_require__(80666);
  else if (arg === "node_modules/cpy/node_modules/fill-range/node_modules/extend-shallow") return __nccwpck_require__(81133);
  else if (arg === "node_modules/cpy/node_modules/fill-range") return __nccwpck_require__(29875);
  else if (arg === "node_modules/cpy/node_modules/glob-parent/node_modules/is-glob") return __nccwpck_require__(3496);
  else if (arg === "node_modules/cpy/node_modules/glob-parent") return __nccwpck_require__(62904);
  else if (arg === "node_modules/cpy/node_modules/globby") return __nccwpck_require__(57638);
  else if (arg === "node_modules/cpy/node_modules/is-number/node_modules/kind-of") return __nccwpck_require__(84944);
  else if (arg === "node_modules/cpy/node_modules/is-number") return __nccwpck_require__(82401);
  else if (arg === "node_modules/cpy/node_modules/micromatch") return __nccwpck_require__(77185);
  else if (arg === "node_modules/cpy/node_modules/pify") return __nccwpck_require__(19550);
  else if (arg === "node_modules/cpy/node_modules/to-regex-range") return __nccwpck_require__(72322);
  else if (arg === "node_modules/cpy") return __nccwpck_require__(153);
  else if (arg === "node_modules/cross-spawn") return __nccwpck_require__(30698);
  else if (arg === "node_modules/debug") return __nccwpck_require__(60442);
  else if (arg === "node_modules/decamelize-keys/node_modules/map-obj") return __nccwpck_require__(44730);
  else if (arg === "node_modules/decamelize-keys") return __nccwpck_require__(95017);
  else if (arg === "node_modules/decamelize") return __nccwpck_require__(35031);
  else if (arg === "node_modules/decode-uri-component") return __nccwpck_require__(73772);
  else if (arg === "node_modules/decompress-response/node_modules/mimic-response") return __nccwpck_require__(92748);
  else if (arg === "node_modules/decompress-response") return __nccwpck_require__(25527);
  else if (arg === "node_modules/deep-is") return __nccwpck_require__(40859);
  else if (arg === "node_modules/defer-to-connect") return __nccwpck_require__(44055);
  else if (arg === "node_modules/define-property/node_modules/is-accessor-descriptor") return __nccwpck_require__(45558);
  else if (arg === "node_modules/define-property/node_modules/is-data-descriptor") return __nccwpck_require__(95206);
  else if (arg === "node_modules/define-property/node_modules/is-descriptor") return __nccwpck_require__(34737);
  else if (arg === "node_modules/define-property") return __nccwpck_require__(74203);
  else if (arg === "node_modules/dir-glob") return __nccwpck_require__(54923);
  else if (arg === "node_modules/doctrine") return __nccwpck_require__(9516);
  else if (arg === "node_modules/email-addresses") return __nccwpck_require__(54937);
  else if (arg === "node_modules/emoji-regex") return __nccwpck_require__(59874);
  else if (arg === "node_modules/end-of-stream") return __nccwpck_require__(39423);
  else if (arg === "node_modules/enquirer") return __nccwpck_require__(27225);
  else if (arg === "node_modules/error-ex") return __nccwpck_require__(20802);
  else if (arg === "node_modules/escape-string-regexp") return __nccwpck_require__(86838);
  else if (arg === "node_modules/eslint-scope") return __nccwpck_require__(42245);
  else if (arg === "node_modules/eslint-utils/node_modules/eslint-visitor-keys") return __nccwpck_require__(22583);
  else if (arg === "node_modules/eslint-utils") return __nccwpck_require__(45002);
  else if (arg === "node_modules/eslint-visitor-keys") return __nccwpck_require__(97491);
  else if (arg === "node_modules/eslint/node_modules/escape-string-regexp") return __nccwpck_require__(34693);
  else if (arg === "node_modules/eslint") return __nccwpck_require__(53269);
  else if (arg === "node_modules/espree/node_modules/eslint-visitor-keys") return __nccwpck_require__(85633);
  else if (arg === "node_modules/espree") return __nccwpck_require__(72598);
  else if (arg === "node_modules/esprima") return __nccwpck_require__(70126);
  else if (arg === "node_modules/esquery/node_modules/estraverse") return __nccwpck_require__(96734);
  else if (arg === "node_modules/esquery") return __nccwpck_require__(1396);
  else if (arg === "node_modules/esrecurse/node_modules/estraverse") return __nccwpck_require__(48376);
  else if (arg === "node_modules/esrecurse") return __nccwpck_require__(18492);
  else if (arg === "node_modules/estraverse") return __nccwpck_require__(82788);
  else if (arg === "node_modules/esutils") return __nccwpck_require__(43744);
  else if (arg === "node_modules/expand-brackets/node_modules/debug") return __nccwpck_require__(17330);
  else if (arg === "node_modules/expand-brackets/node_modules/define-property") return __nccwpck_require__(33606);
  else if (arg === "node_modules/expand-brackets/node_modules/extend-shallow") return __nccwpck_require__(43868);
  else if (arg === "node_modules/expand-brackets/node_modules/ms") return __nccwpck_require__(99078);
  else if (arg === "node_modules/expand-brackets") return __nccwpck_require__(33046);
  else if (arg === "node_modules/extend-shallow/node_modules/is-extendable") return __nccwpck_require__(85527);
  else if (arg === "node_modules/extend-shallow") return __nccwpck_require__(32790);
  else if (arg === "node_modules/extglob/node_modules/define-property") return __nccwpck_require__(86430);
  else if (arg === "node_modules/extglob/node_modules/extend-shallow") return __nccwpck_require__(71107);
  else if (arg === "node_modules/extglob/node_modules/is-accessor-descriptor") return __nccwpck_require__(64090);
  else if (arg === "node_modules/extglob/node_modules/is-data-descriptor") return __nccwpck_require__(60142);
  else if (arg === "node_modules/extglob/node_modules/is-descriptor") return __nccwpck_require__(99220);
  else if (arg === "node_modules/extglob") return __nccwpck_require__(19959);
  else if (arg === "node_modules/fast-deep-equal") return __nccwpck_require__(61470);
  else if (arg === "node_modules/fast-glob") return __nccwpck_require__(36071);
  else if (arg === "node_modules/fast-json-stable-stringify") return __nccwpck_require__(57373);
  else if (arg === "node_modules/fast-levenshtein") return __nccwpck_require__(87749);
  else if (arg === "node_modules/fastq") return __nccwpck_require__(14528);
  else if (arg === "node_modules/file-entry-cache") return __nccwpck_require__(46438);
  else if (arg === "node_modules/filename-reserved-regex") return __nccwpck_require__(15671);
  else if (arg === "node_modules/filenamify") return __nccwpck_require__(43375);
  else if (arg === "node_modules/fill-range") return __nccwpck_require__(50226);
  else if (arg === "node_modules/find-cache-dir") return __nccwpck_require__(98611);
  else if (arg === "node_modules/find-up") return __nccwpck_require__(43682);
  else if (arg === "node_modules/flat-cache") return __nccwpck_require__(50824);
  else if (arg === "node_modules/flatted/cjs") return __nccwpck_require__(21508);
  else if (arg === "node_modules/flatted") return __nccwpck_require__(12737);
  else if (arg === "node_modules/for-in") return __nccwpck_require__(93685);
  else if (arg === "node_modules/fragment-cache") return __nccwpck_require__(23624);
  else if (arg === "node_modules/fs-extra") return __nccwpck_require__(66287);
  else if (arg === "node_modules/fs.realpath") return __nccwpck_require__(23342);
  else if (arg === "node_modules/function-bind") return __nccwpck_require__(80694);
  else if (arg === "node_modules/functional-red-black-tree") return __nccwpck_require__(16638);
  else if (arg === "node_modules/get-caller-file") return __nccwpck_require__(68834);
  else if (arg === "node_modules/get-stream") return __nccwpck_require__(66418);
  else if (arg === "node_modules/get-value") return __nccwpck_require__(50348);
  else if (arg === "node_modules/gh-pages") return __nccwpck_require__(90601);
  else if (arg === "node_modules/glob-parent") return __nccwpck_require__(7770);
  else if (arg === "node_modules/glob-to-regexp") return __nccwpck_require__(48893);
  else if (arg === "node_modules/glob") return __nccwpck_require__(90388);
  else if (arg === "node_modules/globals") return __nccwpck_require__(24709);
  else if (arg === "node_modules/globby") return __nccwpck_require__(7180);
  else if (arg === "node_modules/got") return __nccwpck_require__(9248);
  else if (arg === "node_modules/graceful-fs") return __nccwpck_require__(84952);
  else if (arg === "node_modules/hard-rejection") return __nccwpck_require__(91413);
  else if (arg === "node_modules/has-flag") return __nccwpck_require__(99317);
  else if (arg === "node_modules/has-glob/node_modules/is-glob") return __nccwpck_require__(366);
  else if (arg === "node_modules/has-glob") return __nccwpck_require__(30840);
  else if (arg === "node_modules/has-value") return __nccwpck_require__(75754);
  else if (arg === "node_modules/has-values/node_modules/is-number/node_modules/kind-of") return __nccwpck_require__(43461);
  else if (arg === "node_modules/has-values/node_modules/is-number") return __nccwpck_require__(81752);
  else if (arg === "node_modules/has-values/node_modules/kind-of") return __nccwpck_require__(56457);
  else if (arg === "node_modules/has-values") return __nccwpck_require__(63352);
  else if (arg === "node_modules/has") return __nccwpck_require__(60936);
  else if (arg === "node_modules/hosted-git-info") return __nccwpck_require__(57972);
  else if (arg === "node_modules/http-cache-semantics") return __nccwpck_require__(17666);
  else if (arg === "node_modules/http2-wrapper") return __nccwpck_require__(30375);
  else if (arg === "node_modules/ignore") return __nccwpck_require__(73548);
  else if (arg === "node_modules/import-fresh") return __nccwpck_require__(50886);
  else if (arg === "node_modules/imurmurhash") return __nccwpck_require__(48528);
  else if (arg === "node_modules/indent-string") return __nccwpck_require__(41925);
  else if (arg === "node_modules/inflight") return __nccwpck_require__(8755);
  else if (arg === "node_modules/inherits") return __nccwpck_require__(79394);
  else if (arg === "node_modules/is-accessor-descriptor/node_modules/kind-of") return __nccwpck_require__(56637);
  else if (arg === "node_modules/is-accessor-descriptor") return __nccwpck_require__(48246);
  else if (arg === "node_modules/is-arrayish") return __nccwpck_require__(4266);
  else if (arg === "node_modules/is-buffer") return __nccwpck_require__(97281);
  else if (arg === "node_modules/is-core-module") return __nccwpck_require__(35419);
  else if (arg === "node_modules/is-data-descriptor/node_modules/kind-of") return __nccwpck_require__(81043);
  else if (arg === "node_modules/is-data-descriptor") return __nccwpck_require__(52757);
  else if (arg === "node_modules/is-descriptor/node_modules/kind-of") return __nccwpck_require__(53222);
  else if (arg === "node_modules/is-descriptor") return __nccwpck_require__(95896);
  else if (arg === "node_modules/is-extendable") return __nccwpck_require__(8331);
  else if (arg === "node_modules/is-extglob") return __nccwpck_require__(48434);
  else if (arg === "node_modules/is-fullwidth-code-point") return __nccwpck_require__(69458);
  else if (arg === "node_modules/is-glob") return __nccwpck_require__(65646);
  else if (arg === "node_modules/is-number") return __nccwpck_require__(34278);
  else if (arg === "node_modules/is-plain-obj") return __nccwpck_require__(7309);
  else if (arg === "node_modules/is-plain-object") return __nccwpck_require__(69991);
  else if (arg === "node_modules/is-windows") return __nccwpck_require__(81150);
  else if (arg === "node_modules/isarray") return __nccwpck_require__(86962);
  else if (arg === "node_modules/isexe") return __nccwpck_require__(17938);
  else if (arg === "node_modules/isobject") return __nccwpck_require__(89921);
  else if (arg === "node_modules/js-tokens") return __nccwpck_require__(96399);
  else if (arg === "node_modules/js-yaml") return __nccwpck_require__(11080);
  else if (arg === "node_modules/json-buffer") return __nccwpck_require__(31158);
  else if (arg === "node_modules/json-parse-even-better-errors") return __nccwpck_require__(81784);
  else if (arg === "node_modules/json-schema-traverse") return __nccwpck_require__(12371);
  else if (arg === "node_modules/json-stable-stringify-without-jsonify") return __nccwpck_require__(72709);
  else if (arg === "node_modules/jsonfile") return __nccwpck_require__(19419);
  else if (arg === "node_modules/junk") return __nccwpck_require__(64952);
  else if (arg === "node_modules/keyv") return __nccwpck_require__(42440);
  else if (arg === "node_modules/kind-of") return __nccwpck_require__(20589);
  else if (arg === "node_modules/levn") return __nccwpck_require__(57265);
  else if (arg === "node_modules/lines-and-columns") return __nccwpck_require__(95492);
  else if (arg === "node_modules/locate-path") return __nccwpck_require__(70555);
  else if (arg === "node_modules/lodash.merge") return __nccwpck_require__(26421);
  else if (arg === "node_modules/lodash.truncate") return __nccwpck_require__(78889);
  else if (arg === "node_modules/lodash") return __nccwpck_require__(23235);
  else if (arg === "node_modules/lowercase-keys") return __nccwpck_require__(24666);
  else if (arg === "node_modules/lru-cache") return __nccwpck_require__(91410);
  else if (arg === "node_modules/make-dir/node_modules/semver") return __nccwpck_require__(60801);
  else if (arg === "node_modules/make-dir") return __nccwpck_require__(66736);
  else if (arg === "node_modules/map-cache") return __nccwpck_require__(24510);
  else if (arg === "node_modules/map-obj") return __nccwpck_require__(44649);
  else if (arg === "node_modules/map-visit") return __nccwpck_require__(43574);
  else if (arg === "node_modules/meow/node_modules/type-fest") return __nccwpck_require__(14982);
  else if (arg === "node_modules/meow") return __nccwpck_require__(32067);
  else if (arg === "node_modules/merge2") return __nccwpck_require__(93121);
  else if (arg === "node_modules/micromatch") return __nccwpck_require__(34266);
  else if (arg === "node_modules/mimic-response") return __nccwpck_require__(59404);
  else if (arg === "node_modules/min-indent") return __nccwpck_require__(88283);
  else if (arg === "node_modules/minimatch") return __nccwpck_require__(68442);
  else if (arg === "node_modules/minimist-options/node_modules/arrify") return __nccwpck_require__(58559);
  else if (arg === "node_modules/minimist-options") return __nccwpck_require__(28556);
  else if (arg === "node_modules/mixin-deep/node_modules/is-extendable") return __nccwpck_require__(72535);
  else if (arg === "node_modules/mixin-deep") return __nccwpck_require__(7897);
  else if (arg === "node_modules/ms") return __nccwpck_require__(10317);
  else if (arg === "node_modules/nanomatch") return __nccwpck_require__(31522);
  else if (arg === "node_modules/natural-compare") return __nccwpck_require__(17503);
  else if (arg === "node_modules/nested-error-stacks") return __nccwpck_require__(97256);
  else if (arg === "node_modules/node-version") return __nccwpck_require__(18044);
  else if (arg === "node_modules/normalize-package-data/node_modules/semver") return __nccwpck_require__(678);
  else if (arg === "node_modules/normalize-package-data") return __nccwpck_require__(19472);
  else if (arg === "node_modules/normalize-url") return __nccwpck_require__(53969);
  else if (arg === "node_modules/object-assign") return __nccwpck_require__(41516);
  else if (arg === "node_modules/object-copy/node_modules/define-property") return __nccwpck_require__(95185);
  else if (arg === "node_modules/object-copy/node_modules/kind-of") return __nccwpck_require__(17079);
  else if (arg === "node_modules/object-copy") return __nccwpck_require__(64504);
  else if (arg === "node_modules/object-visit") return __nccwpck_require__(80250);
  else if (arg === "node_modules/object.pick") return __nccwpck_require__(3083);
  else if (arg === "node_modules/once") return __nccwpck_require__(67376);
  else if (arg === "node_modules/optionator") return __nccwpck_require__(79026);
  else if (arg === "node_modules/p-all/node_modules/p-map") return __nccwpck_require__(36304);
  else if (arg === "node_modules/p-all") return __nccwpck_require__(50523);
  else if (arg === "node_modules/p-cancelable") return __nccwpck_require__(20650);
  else if (arg === "node_modules/p-event") return __nccwpck_require__(18719);
  else if (arg === "node_modules/p-filter/node_modules/p-map") return __nccwpck_require__(42198);
  else if (arg === "node_modules/p-filter") return __nccwpck_require__(71523);
  else if (arg === "node_modules/p-finally") return __nccwpck_require__(66128);
  else if (arg === "node_modules/p-limit") return __nccwpck_require__(19446);
  else if (arg === "node_modules/p-locate") return __nccwpck_require__(25593);
  else if (arg === "node_modules/p-map") return __nccwpck_require__(87341);
  else if (arg === "node_modules/p-timeout") return __nccwpck_require__(87620);
  else if (arg === "node_modules/p-try") return __nccwpck_require__(3794);
  else if (arg === "node_modules/parent-module") return __nccwpck_require__(82802);
  else if (arg === "node_modules/parse-json") return __nccwpck_require__(93570);
  else if (arg === "node_modules/pascalcase") return __nccwpck_require__(41430);
  else if (arg === "node_modules/path-dirname") return __nccwpck_require__(62581);
  else if (arg === "node_modules/path-exists") return __nccwpck_require__(84799);
  else if (arg === "node_modules/path-is-absolute") return __nccwpck_require__(95418);
  else if (arg === "node_modules/path-key") return __nccwpck_require__(78664);
  else if (arg === "node_modules/path-parse") return __nccwpck_require__(5992);
  else if (arg === "node_modules/path-type/node_modules/pify") return __nccwpck_require__(12624);
  else if (arg === "node_modules/path-type") return __nccwpck_require__(18042);
  else if (arg === "node_modules/picomatch") return __nccwpck_require__(45202);
  else if (arg === "node_modules/pify") return __nccwpck_require__(61499);
  else if (arg === "node_modules/pinkie-promise") return __nccwpck_require__(37271);
  else if (arg === "node_modules/pinkie") return __nccwpck_require__(14538);
  else if (arg === "node_modules/pkg-dir") return __nccwpck_require__(62098);
  else if (arg === "node_modules/posix-character-classes") return __nccwpck_require__(2377);
  else if (arg === "node_modules/prelude-ls") return __nccwpck_require__(52546);
  else if (arg === "node_modules/progress") return __nccwpck_require__(94493);
  else if (arg === "node_modules/promise-polyfill") return __nccwpck_require__(44557);
  else if (arg === "node_modules/pseudomap") return __nccwpck_require__(59878);
  else if (arg === "node_modules/pump") return __nccwpck_require__(34144);
  else if (arg === "node_modules/punycode") return __nccwpck_require__(39548);
  else if (arg === "node_modules/queue-microtask") return __nccwpck_require__(26966);
  else if (arg === "node_modules/quick-lru") return __nccwpck_require__(40971);
  else if (arg === "node_modules/read-pkg-up/node_modules/type-fest") return __nccwpck_require__(852);
  else if (arg === "node_modules/read-pkg-up") return __nccwpck_require__(40529);
  else if (arg === "node_modules/read-pkg/node_modules/type-fest") return __nccwpck_require__(85881);
  else if (arg === "node_modules/read-pkg") return __nccwpck_require__(16735);
  else if (arg === "node_modules/redent") return __nccwpck_require__(47782);
  else if (arg === "node_modules/regex-not") return __nccwpck_require__(55254);
  else if (arg === "node_modules/regexpp") return __nccwpck_require__(49263);
  else if (arg === "node_modules/repeat-element") return __nccwpck_require__(19964);
  else if (arg === "node_modules/repeat-string") return __nccwpck_require__(38309);
  else if (arg === "node_modules/replace/node_modules/chalk") return __nccwpck_require__(21509);
  else if (arg === "node_modules/replace") return __nccwpck_require__(75114);
  else if (arg === "node_modules/require-directory") return __nccwpck_require__(10332);
  else if (arg === "node_modules/require-from-string") return __nccwpck_require__(59643);
  else if (arg === "node_modules/require-main-filename") return __nccwpck_require__(58421);
  else if (arg === "node_modules/resolve-alpn") return __nccwpck_require__(38456);
  else if (arg === "node_modules/resolve-from") return __nccwpck_require__(98659);
  else if (arg === "node_modules/resolve-url") return __nccwpck_require__(44859);
  else if (arg === "node_modules/resolve") return __nccwpck_require__(39795);
  else if (arg === "node_modules/resolve/test/module_dir/zmodules/bbb") return __nccwpck_require__(79519);
  else if (arg === "node_modules/resolve/test/resolver/baz") return __nccwpck_require__(82329);
  else if (arg === "node_modules/resolve/test/resolver/browser_field") return __nccwpck_require__(49038);
  else if (arg === "node_modules/resolve/test/resolver/dot_main") return __nccwpck_require__(66312);
  else if (arg === "node_modules/resolve/test/resolver/dot_slash_main") return __nccwpck_require__(62075);
  else if (arg === "node_modules/resolve/test/resolver/incorrect_main") return __nccwpck_require__(89129);
  else if (arg === "node_modules/resolve/test/resolver/invalid_main") return __nccwpck_require__(4777);
  else if (arg === "node_modules/resolve/test/resolver/multirepo") return __nccwpck_require__(42752);
  else if (arg === "node_modules/resolve/test/resolver/multirepo/packages/package-a") return __nccwpck_require__(85192);
  else if (arg === "node_modules/resolve/test/resolver/multirepo/packages/package-b") return __nccwpck_require__(39063);
  else if (arg === "node_modules/resolve/test/resolver/nested_symlinks/mylib") return __nccwpck_require__(8102);
  else if (arg === "node_modules/resolve/test/resolver/symlinked/package") return __nccwpck_require__(91074);
  else if (arg === "node_modules/responselike") return __nccwpck_require__(82435);
  else if (arg === "node_modules/ret") return __nccwpck_require__(81533);
  else if (arg === "node_modules/reusify") return __nccwpck_require__(37263);
  else if (arg === "node_modules/rimraf") return __nccwpck_require__(95817);
  else if (arg === "node_modules/run-parallel") return __nccwpck_require__(32186);
  else if (arg === "node_modules/safe-regex") return __nccwpck_require__(72712);
  else if (arg === "node_modules/semver/node_modules/lru-cache") return __nccwpck_require__(26259);
  else if (arg === "node_modules/semver/node_modules/yallist") return __nccwpck_require__(47905);
  else if (arg === "node_modules/semver") return __nccwpck_require__(15543);
  else if (arg === "node_modules/set-blocking") return __nccwpck_require__(5649);
  else if (arg === "node_modules/set-value/node_modules/extend-shallow") return __nccwpck_require__(95074);
  else if (arg === "node_modules/set-value") return __nccwpck_require__(6800);
  else if (arg === "node_modules/shebang-command") return __nccwpck_require__(16457);
  else if (arg === "node_modules/shebang-regex") return __nccwpck_require__(84217);
  else if (arg === "node_modules/simple-git/node_modules/debug") return __nccwpck_require__(39793);
  else if (arg === "node_modules/simple-git") return __nccwpck_require__(86570);
  else if (arg === "node_modules/slash") return __nccwpck_require__(12);
  else if (arg === "node_modules/slice-ansi/node_modules/ansi-styles") return __nccwpck_require__(24760);
  else if (arg === "node_modules/slice-ansi/node_modules/color-convert") return __nccwpck_require__(98891);
  else if (arg === "node_modules/slice-ansi/node_modules/color-name") return __nccwpck_require__(78229);
  else if (arg === "node_modules/slice-ansi") return __nccwpck_require__(3781);
  else if (arg === "node_modules/snapdragon-node/node_modules/define-property") return __nccwpck_require__(75031);
  else if (arg === "node_modules/snapdragon-node/node_modules/is-accessor-descriptor") return __nccwpck_require__(1362);
  else if (arg === "node_modules/snapdragon-node/node_modules/is-data-descriptor") return __nccwpck_require__(76983);
  else if (arg === "node_modules/snapdragon-node/node_modules/is-descriptor") return __nccwpck_require__(25099);
  else if (arg === "node_modules/snapdragon-node") return __nccwpck_require__(20879);
  else if (arg === "node_modules/snapdragon-util/node_modules/kind-of") return __nccwpck_require__(26408);
  else if (arg === "node_modules/snapdragon-util") return __nccwpck_require__(21115);
  else if (arg === "node_modules/snapdragon/node_modules/debug") return __nccwpck_require__(4249);
  else if (arg === "node_modules/snapdragon/node_modules/define-property") return __nccwpck_require__(47109);
  else if (arg === "node_modules/snapdragon/node_modules/extend-shallow") return __nccwpck_require__(31905);
  else if (arg === "node_modules/snapdragon/node_modules/ms") return __nccwpck_require__(86681);
  else if (arg === "node_modules/snapdragon") return __nccwpck_require__(60315);
  else if (arg === "node_modules/source-map-resolve") return __nccwpck_require__(17701);
  else if (arg === "node_modules/source-map-url") return __nccwpck_require__(12688);
  else if (arg === "node_modules/source-map") return __nccwpck_require__(4671);
  else if (arg === "node_modules/spdx-correct") return __nccwpck_require__(74424);
  else if (arg === "node_modules/spdx-exceptions") return __nccwpck_require__(29882);
  else if (arg === "node_modules/spdx-expression-parse") return __nccwpck_require__(96115);
  else if (arg === "node_modules/spdx-license-ids") return __nccwpck_require__(45000);
  else if (arg === "node_modules/split-string") return __nccwpck_require__(99044);
  else if (arg === "node_modules/sprintf-js") return __nccwpck_require__(48204);
  else if (arg === "node_modules/static-extend/node_modules/define-property") return __nccwpck_require__(58469);
  else if (arg === "node_modules/static-extend") return __nccwpck_require__(3133);
  else if (arg === "node_modules/string-width") return __nccwpck_require__(97846);
  else if (arg === "node_modules/strip-ansi") return __nccwpck_require__(9725);
  else if (arg === "node_modules/strip-indent") return __nccwpck_require__(34415);
  else if (arg === "node_modules/strip-json-comments") return __nccwpck_require__(76821);
  else if (arg === "node_modules/strip-outer") return __nccwpck_require__(96180);
  else if (arg === "node_modules/supports-color") return __nccwpck_require__(5760);
  else if (arg === "node_modules/table/node_modules/ajv") return __nccwpck_require__(56057);
  else if (arg === "node_modules/table/node_modules/ansi-regex") return __nccwpck_require__(10319);
  else if (arg === "node_modules/table/node_modules/json-schema-traverse") return __nccwpck_require__(53966);
  else if (arg === "node_modules/table/node_modules/string-width") return __nccwpck_require__(20841);
  else if (arg === "node_modules/table/node_modules/strip-ansi") return __nccwpck_require__(4774);
  else if (arg === "node_modules/table") return __nccwpck_require__(93354);
  else if (arg === "node_modules/text-table") return __nccwpck_require__(85471);
  else if (arg === "node_modules/to-object-path/node_modules/kind-of") return __nccwpck_require__(49157);
  else if (arg === "node_modules/to-object-path") return __nccwpck_require__(91969);
  else if (arg === "node_modules/to-regex-range") return __nccwpck_require__(20064);
  else if (arg === "node_modules/to-regex") return __nccwpck_require__(10212);
  else if (arg === "node_modules/trim-newlines") return __nccwpck_require__(93437);
  else if (arg === "node_modules/trim-repeated") return __nccwpck_require__(4042);
  else if (arg === "node_modules/tunnel") return __nccwpck_require__(957);
  else if (arg === "node_modules/type-check") return __nccwpck_require__(22935);
  else if (arg === "node_modules/type-fest") return __nccwpck_require__(37725);
  else if (arg === "node_modules/union-value") return __nccwpck_require__(55374);
  else if (arg === "node_modules/universalify") return __nccwpck_require__(23922);
  else if (arg === "node_modules/unset-value/node_modules/has-value/node_modules/isobject") return __nccwpck_require__(46389);
  else if (arg === "node_modules/unset-value/node_modules/has-value") return __nccwpck_require__(88886);
  else if (arg === "node_modules/unset-value/node_modules/has-values") return __nccwpck_require__(71131);
  else if (arg === "node_modules/unset-value") return __nccwpck_require__(2023);
  else if (arg === "node_modules/uri-js") return __nccwpck_require__(81569);
  else if (arg === "node_modules/urix") return __nccwpck_require__(85086);
  else if (arg === "node_modules/use") return __nccwpck_require__(72311);
  else if (arg === "node_modules/v8-compile-cache") return __nccwpck_require__(3733);
  else if (arg === "node_modules/validate-npm-package-license") return __nccwpck_require__(42500);
  else if (arg === "node_modules/which-module") return __nccwpck_require__(18584);
  else if (arg === "node_modules/which") return __nccwpck_require__(75048);
  else if (arg === "node_modules/word-wrap") return __nccwpck_require__(56255);
  else if (arg === "node_modules/wrap-ansi/node_modules/ansi-styles") return __nccwpck_require__(62909);
  else if (arg === "node_modules/wrap-ansi/node_modules/color-convert") return __nccwpck_require__(64754);
  else if (arg === "node_modules/wrap-ansi/node_modules/color-name") return __nccwpck_require__(56353);
  else if (arg === "node_modules/wrap-ansi") return __nccwpck_require__(54285);
  else if (arg === "node_modules/wrappy") return __nccwpck_require__(17603);
  else if (arg === "node_modules/y18n") return __nccwpck_require__(90057);
  else if (arg === "node_modules/yallist") return __nccwpck_require__(49712);
  else if (arg === "node_modules/yargs-parser") return __nccwpck_require__(50220);
  else if (arg === "node_modules/yargs") return __nccwpck_require__(30264);
  else if (arg === "/") return __nccwpck_require__(60306);
}
function __ncc_wildcard$1 (arg) {
  if (arg === "/") return __nccwpck_require__(29361);
}
const fs = __nccwpck_require__(35747);
const path = __nccwpck_require__(85622);
const core = __nccwpck_require__(42186);
// const util = require("util");
const replace = __nccwpck_require__(82617);
const semver = __nccwpck_require__(11383);
const got = __nccwpck_require__(93061);
const git = __nccwpck_require__(91477)();
const shell = __nccwpck_require__(64858);
const glob = __nccwpck_require__(43664);
const ghpages = __nccwpck_require__(54290);

const hasEventFile = fs.existsSync("/github/workflow/event.json");
const event = hasEventFile
  ? JSON.parse(fs.readFileSync("/github/workflow/event.json").toString())
  : null;

const root = path.join(process.cwd(), process.env.ROOT_DIR || "./");
const branch = process.env.GITHUB_REF.split("/").slice(2).join("/");
const pkg = __ncc_wildcard$0(root);
const globalConfig = __ncc_wildcard$1(root);

const getBranchConfig = async (config) => {
  const internal = config.branches.find((it) => it.name === branch);
  internal.docs = config.docs ? { ...config.docs, ...internal.docs } : false;
  internal.skipChangeLog = !!internal.skipChangeLog;
  return internal;
};

const getLatestFromNPM = async () => {
  const registry = process.env.NPM_REGISTRY_URL || "https://registry.npmjs.org";
  return await got(`${registry}/${pkg.name}/latest`).json();
};

const recommendVersion = async (latest, type, prerelease) => {
  if (type) {
    return semver.inc(latest.version, type, prerelease);
  }
  return latest.version;
};

const getGitHash = async (latest) => {
  // rev-list -n 1 tags/v5.7.0
  const [hash] = await git.raw([
    "rev-list",
    "-n",
    "1",
    `tags/v${latest.version}`,
  ]);
  return hash;
};

const getReleaseType = async (config, latest) => {
  if (config.prerelease) {
    // Use pkg.version because `latest` wont return prerelease tag
    return "prerelease";
  }
  let releaseType = "patch";
  let messages = [];
  if (latest) {
    const hash = latest.gitHead || (await getGitHash(latest));
    if (hash === process.env.GITHUB_SHA)
      return core.info("SHA matches latest release, skipping.");
    if (hash) {
      try {
        let logs = await getlog({
          from: hash,
          to: process.env.GITHUB_SHA,
        });
        messages = logs.all.map((r) => r.message + "\n" + r.body);
      } catch (e) {
        core.debug("no logs found");
      }
    }
  }
  if (!messages.length > 0 && event) {
    messages = (event.commits || []).map(
      (commit) => commit.message + "\n" + commit.body
    );
  }

  if (
    messages
      .map((it) => it.includes("BREAKING CHANGE") || it.includes("!:"))
      .includes(true)
  ) {
    releaseType = "major";
  } else if (
    messages.map((it) => it.toLowerCase().startsWith("feat")).includes(true)
  ) {
    releaseType = "minor";
  }
  return releaseType;
};

const bump = async (version, bumpFiles) => {
  const packageFiles = await glob(bumpFiles, { dot: true });
  replace({
    regex: /"version": "[^"]+"/m,
    replacement: `"version": "${version}"`,
    paths: packageFiles,
    recursive: false,
  });

  return packageFiles;
};

async function commitVersion(version, changedFiles) {
  core.info("Committing...");
  await git.commit(`chore(release): ${version}`, [...changedFiles]);
  core.info("Tagging...");
  await git.addAnnotatedTag(`v${version}`, "Version release");
  return version;
}

async function publish(version, bundles) {
  core.info("Publishing...");
  try {
    for (let bundle of bundles) {
      const { stdout } = await shell.exec(`npm publish ${bundle}`);
      core.info(stdout);
    }
  } catch (err) {
    core.error("child processes failed with error code: ", err);
  }
  return version;
}

async function push() {
  core.info("Pushing Changes...");
  await git.push("origin", branch);
  core.info("Pushing Tags...");
  await git.pushTags("origin");
}

async function changelog(version, packageFile, changelogFile) {
  await shell.exec(
    `npx conventional-changelog --pkg ${packageFile} -p angular -i ${changelogFile} -s`
  );
  return version;
}

const deployGithubPages = async (version, docs) => {
  if (docs.build && docs.build.preset) {
    switch (docs.build.preset) {
      case "angular":
        await shell.exec(
          `ng build --prod ${docs.app} --base-href /${docs.dest}/ --deploy-url /${docs.dest}/`
        );
        break;
      default:
        throw new Error("Build Command not defined");
    }
  }
  if (docs.build && docs.build.cmd) {
    await shell.exec(docs.build.cmd);
  } else {
    core.info("No build for docs task specified");
  }

  const dir = path.join(root, docs.dir);
  return await new Promise((resolve, reject) => {
    const dest = docs.dest || ".";
    ghpages.publish(
      dir,
      {
        dest,
        ...docs.options,
        remove: `${dest}/**/*`,
        message: "chore(release): v" + version,
      },
      (err) => {
        if (err) {
          core.error("Error while publishing demo.", err);
          reject(err);
        }
        core.info("Demo published!");
        resolve(version);
      }
    );
  });
};

async function run() {
  try {
    core.info("globalConfig is ");
    core.info(JSON.stringify(globalConfig));
    const config = await getBranchConfig(globalConfig);
    const { docs, skipChangeLog } = config;
    if (config) {
      const latest = await getLatestFromNPM();
      const releaseType = await getReleaseType(config, latest);
      const version = await recommendVersion(
        latest,
        releaseType,
        config.prerelease
      );

      const changedFiles = await bump(version, config.bumpFiles);
      if (!skipChangeLog) {
        const changelogFile = path.join(root, "CHANGELOG.md");
        await changelog(version, changedFiles[0], changelogFile);
        changedFiles.push(changelogFile);
      }

      await commitVersion(version, [...changedFiles]);
      await publish(version, globalConfig.bundles);
      await push();

      if (docs) {
        switch (docs.type) {
          case "ghpages":
            await deployGithubPages(version, docs);
            break;
          default:
            core.warning("Documentation Deploy configuration not valid.");
        }
      }
    } else {
      core.info("Skipped Bump And Release: Branch not configured!");
    }
    core.info("Success!");
  } catch (error) {
    git.reset("hard");
    core.setFailed(error.message);
  }
}

run();

})();

module.exports = __webpack_exports__;
/******/ })()
;